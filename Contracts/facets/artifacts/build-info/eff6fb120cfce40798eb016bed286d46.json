{
	"id": "eff6fb120cfce40798eb016bed286d46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/facets/PoolFactoryFacet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title PoolFactoryFacet\n * @notice Allows users to create minimal-proxy ERC20 pools referencing a given implementation \n *         (e.g. a PoolTokenImplementation).\n *\n * Key Points:\n *  1) The user who calls `createPool(...)` is considered the “creator”; your aggregator’s \n *     ERC20 `initialize(...)` function should store that as the pool owner.\n *  2) Optionally charges a creation fee if `ds.poolCreationFee > 0`.\n *  3) If overpayments occur, we refund the user’s extra ETH.\n *  4) The cloned aggregator token is initialized via `initData`, commonly: `initialize(\"MyLP\",\"MLP\",msg.sender)`.\n *  5) We have added extra debug events for more detailed logs.\n */\n\nimport \"../libraries/LibDiamond.sol\";\nimport \"../libraries/LibERC20Factory.sol\";\n\ncontract PoolFactoryFacet {\n    // ------------------------------------------------\n    // Modifiers\n    // ------------------------------------------------\n\n    /**\n     * @dev Reentrancy guard if using Diamond. \n     *      If standalone, remove or replace with your own approach.\n     */\n    modifier nonReentrant() {\n        LibDiamond.nonReentrant();\n        _;\n        LibDiamond.reentrancyGuardExit();\n    }\n\n    /**\n     * @dev Global pause check if using Diamond. \n     *      If standalone, remove or adapt to your own logic.\n     */\n    modifier whenNotPaused() {\n        LibDiamond.enforceNotPaused();\n        _;\n    }\n\n    // ------------------------------------------------\n    // Events\n    // ------------------------------------------------\n\n    /// Emitted when a new minimal-proxy aggregator token is created.\n    event PoolCreated(address indexed poolAddress, address indexed creator);\n\n    /**\n     * @dev Additional debug logs for frontends.\n     *      - step: a short label for the portion of code\n     *      - info: a more descriptive string\n     *      - amount: a numeric value if relevant (like msg.value, refunded, etc.)\n     */\n    event PoolCreateDebug(\n        string indexed step,\n        string info,\n        uint256 amount\n    );\n\n    // ------------------------------------------------\n    // Primary External Function\n    // ------------------------------------------------\n\n    /**\n     * @notice Creates a minimal-proxy clone of `implementation`, then calls `initData` on it \n     *         to initialize the new aggregator ERC20 pool. \n     *         - Potentially charges a creation fee if `ds.poolCreationFee > 0`.\n     *         - No usage-limit checks in this version, so anyone can call.\n     *\n     * @param implementation The aggregator's ERC20 implementation address.\n     * @param initData Calldata for `initialize(...)`, e.g. `initialize(\"MyLP\",\"MLP\",owner)`.\n     * @return clone The address of the newly created aggregator token.\n     */\n    function createPool(\n        address implementation,\n        bytes calldata initData\n    )\n        external\n        payable\n        nonReentrant\n        whenNotPaused\n        returns (address clone)\n    {\n        // Log the caller, initial msg.value, and partial debug info\n        emit PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value);\n\n        // 1) Potential creation fee\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        uint256 fee = ds.poolCreationFee;\n        if (fee > 0) {\n            // Must pay at least 'fee'\n            require(msg.value >= fee, \"Insufficient ETH for pool creation fee\");\n            uint256 refundAmount = msg.value - fee;\n\n            // If user overpays, refund difference\n            if (refundAmount > 0) {\n                (bool refundSuccess, ) = payable(msg.sender).call{value: refundAmount}(\"\");\n                require(refundSuccess, \"Refund failed\");\n                emit PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount);\n            }\n        } else {\n            // If no creation fee is set, ensure no ETH is sent\n            require(msg.value == 0, \"No fee required, so no ETH accepted\");\n        }\n\n        // 2) Confirm `implementation` is actually a contract\n        require(_isContract(implementation), \"Implementation not a contract\");\n        emit PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0);\n\n        // 3) Clone the aggregator token implementation\n        clone = LibERC20Factory.cloneERC20(implementation);\n        require(clone != address(0), \"Clone failed\");\n        emit PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0);\n\n        // 4) Initialize the aggregator\n        (bool callSuccess, bytes memory retData) = clone.call(initData);\n\n        // If initialization fails, the revert reason is parsed below\n        if (!callSuccess) {\n            // parse revert reason\n            string memory failMsg = _decodeAndBubbleUpRetMessages(retData);\n            emit PoolCreateDebug(\"INIT_FAIL\", failMsg, 0);\n            revert(failMsg);\n        }\n        emit PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0);\n\n        // 5) Final event\n        emit PoolCreated(clone, msg.sender);\n        emit PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0);\n\n        return clone;\n    }\n\n    // ------------------------------------------------\n    // Internal Helpers\n    // ------------------------------------------------\n\n    /**\n     * @notice Check if `_addr` has contract code.\n     */\n    function _isContract(address _addr) private view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return (size > 0);\n    }\n\n    /**\n     * @notice Decodes a revert reason from the returned data if the init call fails.\n     */\n    function _decodeAndBubbleUpRetMessages(bytes memory retData)\n        private\n        pure\n        returns (string memory)\n    {\n        if (retData.length < 68) {\n            return \"Pool init failed without reason\";\n        }\n        assembly {\n            retData := add(retData, 0x04)\n        }\n        return abi.decode(retData, (string));\n    }\n}\n"
			},
			"Contracts/libraries/LibERC20Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\n/**\n * @title LibERC20Factory\n * @notice A library providing creation of minimal-proxy (clone) ERC20 tokens (e.g., for pool tokens).\n *         Integrates seamlessly with other Diamond facets that clone an implementation \n *         and then call `initialize(...)` on the clone.\n *         No placeholders remain; logic is fully compatible with the updated system.\n */\nlibrary LibERC20Factory {\n    /**\n     * @notice Creates a minimal proxy clone of the given ERC20 implementation contract.\n     * @param implementation The address of the implementation contract to clone.\n     * @return clone The address of the newly deployed clone.\n     */\n    function cloneERC20(address implementation) internal returns (address) {\n        address clone = Clones.clone(implementation);\n        return clone;\n    }\n\n    /**\n     * @notice Creates a minimal proxy clone deterministically using a provided salt.\n     *         The resulting address can be known in advance via predictDeterministicAddress.\n     * @param implementation The address of the implementation contract to clone.\n     * @param salt A user-supplied salt, ensuring a deterministic clone address.\n     * @return clone The address of the newly deployed deterministic clone.\n     */\n    function cloneERC20Deterministic(address implementation, bytes32 salt) internal returns (address) {\n        address clone = Clones.cloneDeterministic(implementation, salt);\n        return clone;\n    }\n\n    /**\n     * @notice Computes the address for a clone deployed deterministically with `cloneERC20Deterministic`.\n     * @param implementation The address of the implementation contract to clone.\n     * @param salt The salt used in cloneERC20Deterministic.\n     * @param deployer The address that will deploy the clone contract.\n     * @return The predicted address for the deterministic clone.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) \n        internal \n        pure \n        returns (address) \n    {\n        return Clones.predictDeterministicAddress(implementation, salt, deployer);\n    }\n\n    // Typically, an external facet calls cloneERC20 => then calls the clone’s initialize(...) \n    // with initData to configure the newly deployed token.\n}\n"
			},
			"Contracts/libraries/LibDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../interfaces/IDiamondCut.sol\";\n\n/**\n * @title LibDiamond\n * @notice Provides Diamond Storage and core EIP-2535 logic for adding, replacing, or removing facets.\n *         Also includes:\n *         - Contract ownership checks\n *         - Pause/unpause logic\n *         - Reentrancy guard\n *         - multi-owner logic (optional)\n *         - Additional fields like poolCreationFee, nextCallSetId\n *         Updated to allow a special set of DiamondFullCut addresses to also call diamondCut().\n */\nlibrary LibDiamond {\n    /**\n     * @dev The Diamond Storage position key used in assembly to store the data struct.\n     */\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    /**\n     * @dev Stores facet addresses, function selectors, owner address, optional multiOwners array,\n     *      pause states, reentrancy state, and any extra fields.\n     */\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint96 selectorPosition;\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint256 facetAddressPosition;\n    }\n\n    struct DiamondStorage {\n        // Single fallback contract owner\n        address contractOwner;\n\n        // Optional multi-owner array (not used here, but kept for reference)\n        address[] multiOwners;\n\n        // =======================\n        //  NEW FIELD:\n        //  The set of addresses authorized to call diamondCut(...) besides the main owner.\n        // =======================\n        address[] diamondFullCutContracts;\n\n        // Maps function selector => (facet address + position in facetFunctionSelectors array)\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // Each facet address => array of function selectors, plus the position in facetAddresses\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // The list of facet addresses\n        address[] facetAddresses;\n\n        // Reentrancy guard\n        bool _locked;\n\n        // Global pause flag\n        bool paused;\n\n        // System-specific pause mapping (e.g., for token pairs)\n        mapping(bytes32 => bool) systemPaused;\n\n        // Example additional fields\n        uint256 poolCreationFee;\n        uint256 nextCallSetId;\n    }\n\n    /**\n     * @dev Action types for diamondCut operations: Add, Replace, Remove\n     */\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n\n    // -------------------------------------------------------------------------\n    //                Getters/Setters for Diamond Storage\n    // -------------------------------------------------------------------------\n\n    /**\n     * @notice Returns a reference to the DiamondStorage struct for internal usage.\n     */\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    /**\n     * @notice Retrieves the single fallback contract owner address from storage.\n     */\n    function contractOwner() internal view returns (address) {\n        return diamondStorage().contractOwner;\n    }\n\n    /**\n     * @notice Sets the fallback contract owner in storage.\n     * @param _newOwner The address to set as contractOwner.\n     */\n    function setContractOwner(address _newOwner) internal {\n        DiamondStorage storage ds = diamondStorage();\n        ds.contractOwner = _newOwner;\n    }\n\n    // -------------------------------------------------------------------------\n    //        NEW: Add/Remove DiamondFullCut addresses for diamondCut\n    // -------------------------------------------------------------------------\n\n    /**\n     * @notice Sets an **entire array** of addresses that are allowed to call diamondCut, \n     *         in addition to the single contractOwner.\n     * @param _fullCutContracts An array of addresses (like your 0xb971... and 0xbbac...).\n     */\n    function setDiamondFullCutContracts(address[] memory _fullCutContracts) internal {\n        DiamondStorage storage ds = diamondStorage();\n        // Reset the array\n        delete ds.diamondFullCutContracts;\n\n        // Populate new array\n        for (uint256 i = 0; i < _fullCutContracts.length; i++) {\n            require(_fullCutContracts[i] != address(0), \"LibDiamond: fullCut address cannot be zero\");\n            ds.diamondFullCutContracts.push(_fullCutContracts[i]);\n        }\n    }\n\n    /**\n     * @notice Checks if an address is in the diamondFullCutContracts array.\n     * @param _addr The address to check.\n     */\n    function _isInDiamondFullCutContracts(address _addr) private view returns (bool) {\n        DiamondStorage storage ds = diamondStorage();\n        for (uint256 i = 0; i < ds.diamondFullCutContracts.length; i++) {\n            if (ds.diamondFullCutContracts[i] == _addr) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @notice Allows diamondCut calls if msg.sender is EITHER the single contractOwner OR\n     *         one of the diamondFullCutContracts addresses.\n     */\n    function enforceIsAuthorizedForDiamondCut() internal view {\n        DiamondStorage storage ds = diamondStorage();\n\n        if (msg.sender == ds.contractOwner) {\n            return; // msg.sender is the main owner\n        }\n        if (_isInDiamondFullCutContracts(msg.sender)) {\n            return; // msg.sender is in the special diamondFullCut list\n        }\n\n        revert(\"LibDiamond: Must be owner or DiamondFullCut contract\");\n    }\n\n    // -------------------------------------------------------------------------\n    //          Existing Owner Check (unchanged for other flows)\n    // -------------------------------------------------------------------------\n    function enforceIsContractOwner() internal view {\n        require(msg.sender == contractOwner(), \"LibDiamond: Must be contract owner\");\n    }\n\n    // -------------------------------------------------------------------------\n    //             Core diamondCut Implementation\n    // -------------------------------------------------------------------------\n\n    /**\n     * @notice The core diamondCut function implementing EIP-2535 add/replace/remove logic for facets.\n     * @param _diamondCut The array of facet cuts to apply.\n     * @param _init The address of a contract or facet to execute _calldata.\n     * @param _calldata The function call, including function selector/args, to be executed on _init.\n     */\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            FacetCutAction action = _convertAction(_diamondCut[facetIndex].action);\n\n            if (action == FacetCutAction.Add) {\n                _addFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else if (action == FacetCutAction.Replace) {\n                _replaceFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else if (action == FacetCutAction.Remove) {\n                _removeFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else {\n                revert(\"LibDiamond: Incorrect FacetCutAction\");\n            }\n        }\n        _initializeDiamondCut(_init, _calldata);\n    }\n\n    /**\n     * @dev Converts the IDiamondCut FacetCutAction to the local FacetCutAction enum.\n     */\n    function _convertAction(IDiamondCut.FacetCutAction iAction)\n        private\n        pure\n        returns (FacetCutAction)\n    {\n        if (iAction == IDiamondCut.FacetCutAction.Add) {\n            return FacetCutAction.Add;\n        } else if (iAction == IDiamondCut.FacetCutAction.Replace) {\n            return FacetCutAction.Replace;\n        } else if (iAction == IDiamondCut.FacetCutAction.Remove) {\n            return FacetCutAction.Remove;\n        } else {\n            revert(\"LibDiamond: Unknown FacetCutAction\");\n        }\n    }\n\n    /**\n     * @dev Internal function to add new functions to a facet.\n     */\n    function _addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) private {\n        require(_functionSelectors.length > 0, \"LibDiamond: No selectors to add\");\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamond: Add facet can't be address(0)\");\n\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n\n        // If this facet wasn't already in facetAddresses, add it\n        if (selectorPosition == 0) {\n            _enforceHasCode(_facetAddress, \"LibDiamond: Add facet has no code\");\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\n            ds.facetAddresses.push(_facetAddress);\n        }\n\n        for (uint256 i; i < _functionSelectors.length; i++) {\n            bytes4 selector = _functionSelectors[i];\n            require(\n                ds.selectorToFacetAndPosition[selector].facetAddress == address(0),\n                \"LibDiamond: Selector already exists\"\n            );\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\n            ds.selectorToFacetAndPosition[selector] = FacetAddressAndPosition(_facetAddress, selectorPosition);\n            selectorPosition++;\n        }\n    }\n\n    /**\n     * @dev Internal function to replace existing function selectors with a new facet address.\n     */\n    function _replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) private {\n        require(_functionSelectors.length > 0, \"LibDiamond: No selectors to replace\");\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamond: Replace facet can't be address(0)\");\n\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        if (selectorPosition == 0) {\n            _enforceHasCode(_facetAddress, \"LibDiamond: Replace facet has no code\");\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\n            ds.facetAddresses.push(_facetAddress);\n        }\n\n        for (uint256 i; i < _functionSelectors.length; i++) {\n            bytes4 selector = _functionSelectors[i];\n            FacetAddressAndPosition memory oldFacet = ds.selectorToFacetAndPosition[selector];\n            require(oldFacet.facetAddress != address(0), \"LibDiamond: Selector does not exist for replace\");\n            require(oldFacet.facetAddress != _facetAddress, \"LibDiamond: Can't replace with same facet\");\n\n            // remove from old facet\n            uint256 oldSelectorPos = oldFacet.selectorPosition;\n            uint256 lastSelectorPos = ds.facetFunctionSelectors[oldFacet.facetAddress].functionSelectors.length - 1;\n\n            if (oldSelectorPos != lastSelectorPos) {\n                bytes4 lastSelector = ds.facetFunctionSelectors[oldFacet.facetAddress].functionSelectors[lastSelectorPos];\n                ds.facetFunctionSelectors[oldFacet.facetAddress].functionSelectors[oldSelectorPos] = lastSelector;\n                ds.selectorToFacetAndPosition[lastSelector].selectorPosition = uint96(oldSelectorPos);\n            }\n            ds.facetFunctionSelectors[oldFacet.facetAddress].functionSelectors.pop();\n            delete ds.selectorToFacetAndPosition[selector];\n\n            // add to new facet\n            ds.selectorToFacetAndPosition[selector] =\n                FacetAddressAndPosition(_facetAddress, selectorPosition);\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\n            selectorPosition++;\n        }\n    }\n\n    /**\n     * @dev Internal function to remove function selectors from a facet.\n     */\n    function _removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) private {\n        require(_functionSelectors.length > 0, \"LibDiamond: No selectors to remove\");\n        DiamondStorage storage ds = diamondStorage();\n\n        for (uint256 i; i < _functionSelectors.length; i++) {\n            bytes4 selector = _functionSelectors[i];\n            FacetAddressAndPosition memory oldFacet = ds.selectorToFacetAndPosition[selector];\n            require(oldFacet.facetAddress == _facetAddress, \"LibDiamond: Remove facet doesn't match address\");\n\n            uint256 oldSelectorPos = oldFacet.selectorPosition;\n            uint256 lastSelectorPos = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n\n            if (oldSelectorPos != lastSelectorPos) {\n                bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPos];\n                ds.facetFunctionSelectors[_facetAddress].functionSelectors[oldSelectorPos] = lastSelector;\n                ds.selectorToFacetAndPosition[lastSelector].selectorPosition = uint96(oldSelectorPos);\n            }\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n            delete ds.selectorToFacetAndPosition[selector];\n        }\n\n        // if facet has no selectors left, remove from addresses array\n        if (ds.facetFunctionSelectors[_facetAddress].functionSelectors.length == 0) {\n            uint256 lastFacetAddressPos = ds.facetAddresses.length - 1;\n            uint256 facetAddressPos = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPos != lastFacetAddressPos) {\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPos];\n                ds.facetAddresses[facetAddressPos] = lastFacetAddress;\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPos;\n            }\n            ds.facetAddresses.pop();\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    /**\n     * @dev Internal function to initialize diamond cuts with a delegatecall to `_init`.\n     */\n    function _initializeDiamondCut(address _init, bytes memory _calldata) private {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamond: _init is address(0) but calldata not empty\");\n            return;\n        }\n        _enforceHasCode(_init, \"LibDiamond: _init address has no code\");\n        (bool success, bytes memory error) = _init.delegatecall(_calldata);\n        require(success, string(error));\n    }\n\n    /**\n     * @dev Asserts that `_contract` has contract code, reverting otherwise.\n     */\n    function _enforceHasCode(address _contract, string memory _errorMessage) private view {\n        uint256 size;\n        assembly {\n            size := extcodesize(_contract)\n        }\n        require(size > 0, _errorMessage);\n    }\n\n    // -------------------------------------------------------------------------\n    //                   Reentrancy & Pause Logic (unchanged)\n    // -------------------------------------------------------------------------\n    function nonReentrant() internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(!ds._locked, \"ReentrancyGuard: reentrant call\");\n        ds._locked = true;\n    }\n\n    function reentrancyGuardExit() internal {\n        diamondStorage()._locked = false;\n    }\n\n    function enforceNotPaused() internal view {\n        require(!diamondStorage().paused, \"Diamond: paused\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"Contracts/interfaces/IDiamondCut.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IDiamondCut\n * @notice The EIP-2535 DiamondCut interface for adding, replacing, or removing facets.\n */\ninterface IDiamondCut {\n    /**\n     * @dev FacetCutAction enumerates the possible actions: Add, Replace, or Remove.\n     */\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n\n    /**\n     * @dev FacetCut defines a facet address plus a list of function selectors, along with the action to perform.\n     */\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /**\n     * @notice diamondCut implements the core EIP-2535 logic:\n     *         - Add/Replace/Remove facet functions according to _diamondCut\n     *         - Optionally execute _calldata on _init for initialization or additional setup\n     * @param _diamondCut Array describing the facet addresses and function selectors\n     * @param _init The address of a contract/facet to execute _calldata\n     * @param _calldata The function call, including selector and arguments, to be delegatecalled on _init\n     */\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    /**\n     * @dev Emitted when the diamondCut function is called.\n     */\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "constantinople"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209813cc52c28a143803f96a44605584c1b9dcff6cd581a666606b3aa4c1cabc6e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209813cc52c28a143803f96a44605584c1b9dcff6cd581a666606b3aa4c1cabc6e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SGT 0xCC MSTORE 0xC2 DUP11 EQ CODESIZE SUB 0xF9 PUSH11 0x44605584C1B9DCFF6CD581 0xA6 PUSH7 0x606B3AA4C1CABC PUSH15 0x64736F6C634300081C003300000000 ",
							"sourceMap": "771:4738:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209813cc52c28a143803f96a44605584c1b9dcff6cd581a666606b3aa4c1cabc6e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SGT 0xCC MSTORE 0xC2 DUP11 EQ CODESIZE SUB 0xF9 PUSH11 0x44605584C1B9DCFF6CD581 0xA6 PUSH7 0x606B3AA4C1CABC PUSH15 0x64736F6C634300081C003300000000 ",
							"sourceMap": "771:4738:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209813cc52c28a143803f96a44605584c1b9dcff6cd581a666606b3aa4c1cabc6e64736f6c634300081c0033",
									".code": [
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/facets/PoolFactoryFacet.sol",
								"Contracts/interfaces/IDiamondCut.sol",
								"Contracts/libraries/LibDiamond.sol",
								"Contracts/libraries/LibERC20Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c12a49b03a6b0336df201d078ad9b0ceff317450cb8500a146d33a7b87dbdbe64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c12a49b03a6b0336df201d078ad9b0ceff317450cb8500a146d33a7b87dbdbe64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLT LOG4 SWAP12 SUB 0xA6 0xB0 CALLER PUSH14 0xF201D078AD9B0CEFF317450CB850 EXP EQ PUSH14 0x33A7B87DBDBE64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c12a49b03a6b0336df201d078ad9b0ceff317450cb8500a146d33a7b87dbdbe64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLT LOG4 SWAP12 SUB 0xA6 0xB0 CALLER PUSH14 0xF201D078AD9B0CEFF317450CB850 EXP EQ PUSH14 0x33A7B87DBDBE64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c12a49b03a6b0336df201d078ad9b0ceff317450cb8500a146d33a7b87dbdbe64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/facets/PoolFactoryFacet.sol",
								"Contracts/interfaces/IDiamondCut.sol",
								"Contracts/libraries/LibDiamond.sol",
								"Contracts/libraries/LibERC20Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/facets/PoolFactoryFacet.sol": {
				"PoolFactoryFacet": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "step",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "info",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PoolCreateDebug",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initData",
									"type": "bytes"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "clone",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"events": {
							"PoolCreateDebug(string,string,uint256)": {
								"details": "Additional debug logs for frontends.      - step: a short label for the portion of code      - info: a more descriptive string      - amount: a numeric value if relevant (like msg.value, refunded, etc.)"
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,bytes)": {
								"params": {
									"implementation": "The aggregator's ERC20 implementation address.",
									"initData": "Calldata for `initialize(...)`, e.g. `initialize(\"MyLP\",\"MLP\",owner)`."
								},
								"returns": {
									"clone": "The address of the newly created aggregator token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/facets/PoolFactoryFacet.sol\":823:6043  contract PoolFactoryFacet {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":823:6043  contract PoolFactoryFacet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9dd41df2\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":2818:5186  function createPool(... */\n    tag_2:\n      tag_3\n      tag_4\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":943:975   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":925:976   */\n      dup2\n      mstore\n        /* \"#utility.yul\":913:915   */\n      0x20\n        /* \"#utility.yul\":898:916   */\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":2818:5186  function createPool(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3002:3015  address clone */\n      0x00\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1152:1177  LibDiamond.nonReentrant() */\n      tag_10\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1152:1175  LibDiamond.nonReentrant */\n      tag_11\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1152:1177  LibDiamond.nonReentrant() */\n      jump\t// in\n    tag_10:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1406:1435  LibDiamond.enforceNotPaused() */\n      tag_13\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1406:1433  LibDiamond.enforceNotPaused */\n      tag_14\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1406:1435  LibDiamond.enforceNotPaused() */\n      jump\t// in\n    tag_13:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3105:3161  PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value) */\n      0x40\n      dup1\n      mload\n      shl(0xd9, 0x22a72a22a9)\n        /* \"#utility.yul\":1189:1209   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3105:3161  PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":1234:1235   */\n      0x05\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3105:3161  PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":1459:1480   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":1516:1518   */\n      0x11\n        /* \"#utility.yul\":1496:1514   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":1489:1519   */\n      mstore\n      shl(0x7a, 0x18dc99585d19541bdbdb0818d85b1b1959)\n        /* \"#utility.yul\":1550:1552   */\n      0x60\n        /* \"#utility.yul\":1535:1553   */\n      dup4\n      add\n        /* \"#utility.yul\":1528:1575   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3151:3160  msg.value */\n      callvalue\n        /* \"#utility.yul\":1642:1646   */\n      0x20\n        /* \"#utility.yul\":1627:1647   */\n      dup4\n      add\n        /* \"#utility.yul\":1620:1656   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3105:3161  PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":1607:1610   */\n      0x80\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3105:3161  PoolCreateDebug(\"ENTER\", \"createPool called\", msg.value) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3299:3317  ds.poolCreationFee */\n      sload(0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1324)\n        /* \"Contracts/libraries/LibDiamond.sol\":738:783  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n      swap1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3331:3338  fee > 0 */\n      dup1\n      iszero\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3327:4033  if (fee > 0) {... */\n      tag_22\n      jumpi\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3414:3417  fee */\n      dup1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3401:3410  msg.value */\n      callvalue\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3401:3417  msg.value >= fee */\n      lt\n      iszero\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3393:3460  require(msg.value >= fee, \"Insufficient ETH for pool creation fee\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1869:1871   */\n      0x20\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3393:3460  require(msg.value >= fee, \"Insufficient ETH for pool creation fee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1851:1872   */\n      mstore\n        /* \"#utility.yul\":1908:1910   */\n      0x26\n        /* \"#utility.yul\":1888:1906   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1881:1911   */\n      mstore\n        /* \"#utility.yul\":1947:1981   */\n      0x496e73756666696369656e742045544820666f7220706f6f6c20637265617469\n        /* \"#utility.yul\":1927:1945   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1920:1982   */\n      mstore\n      shl(0xd0, 0x6f6e20666565)\n        /* \"#utility.yul\":1998:2016   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1991:2027   */\n      mstore\n        /* \"#utility.yul\":2044:2063   */\n      0x84\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3393:3460  require(msg.value >= fee, \"Insufficient ETH for pool creation fee\") */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3474:3494  uint256 refundAmount */\n      0x00\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3497:3512  msg.value - fee */\n      tag_26\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3509:3512  fee */\n      dup3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3497:3506  msg.value */\n      callvalue\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3497:3512  msg.value - fee */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3474:3512  uint256 refundAmount = msg.value - fee */\n      swap1\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3582:3598  refundAmount > 0 */\n      dup1\n      iszero\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3578:3866  if (refundAmount > 0) {... */\n      tag_28\n      jumpi\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3643:3692  payable(msg.sender).call{value: refundAmount}(\"\") */\n      mload(0x40)\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3619:3637  bool refundSuccess */\n      0x00\n      swap1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3651:3661  msg.sender */\n      caller\n      swap1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3675:3687  refundAmount */\n      dup4\n      swap1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3619:3637  bool refundSuccess */\n      dup4\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3643:3692  payable(msg.sender).call{value: refundAmount}(\"\") */\n      dup2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3619:3637  bool refundSuccess */\n      dup2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3643:3692  payable(msg.sender).call{value: refundAmount}(\"\") */\n      dup2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3675:3687  refundAmount */\n      dup6\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3651:3661  msg.sender */\n      dup8\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3643:3692  payable(msg.sender).call{value: refundAmount}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_33\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_32)\n    tag_33:\n      0x60\n      swap2\n      pop\n    tag_32:\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3618:3692  (bool refundSuccess, ) = payable(msg.sender).call{value: refundAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3718:3731  refundSuccess */\n      dup1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3710:3749  require(refundSuccess, \"Refund failed\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3710:3749  require(refundSuccess, \"Refund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2698:2719   */\n      mstore\n        /* \"#utility.yul\":2755:2757   */\n      0x0d\n        /* \"#utility.yul\":2735:2753   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2728:2758   */\n      mstore\n      shl(0x9a, 0x1499599d5b990819985a5b1959)\n        /* \"#utility.yul\":2774:2792   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2767:2810   */\n      mstore\n        /* \"#utility.yul\":2827:2845   */\n      0x64\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3710:3749  require(refundSuccess, \"Refund failed\") */\n      tag_24\n        /* \"#utility.yul\":2514:2851   */\n      jump\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3710:3749  require(refundSuccess, \"Refund failed\") */\n    tag_34:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3772:3851  PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount) */\n      0x40\n      dup1\n      mload\n      shl(0xd2, 0x149151955391)\n        /* \"#utility.yul\":3058:3079   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3772:3851  PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":3104:3105   */\n      0x06\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3772:3851  PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":3329:3350   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":3386:3388   */\n      0x24\n        /* \"#utility.yul\":3366:3384   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":3359:3389   */\n      mstore\n        /* \"#utility.yul\":3425:3459   */\n      0x55736572206f76657270616964206372656174696f6e206665652c2072656675\n        /* \"#utility.yul\":3420:3422   */\n      0x60\n        /* \"#utility.yul\":3405:3423   */\n      dup4\n      add\n        /* \"#utility.yul\":3398:3460   */\n      mstore\n      shl(0xe2, 0x1b991959)\n        /* \"#utility.yul\":3491:3494   */\n      0x80\n        /* \"#utility.yul\":3476:3495   */\n      dup4\n      add\n        /* \"#utility.yul\":3469:3504   */\n      mstore\n        /* \"#utility.yul\":3571:3575   */\n      0x20\n        /* \"#utility.yul\":3556:3576   */\n      dup3\n      add\n        /* \"#utility.yul\":3549:3585   */\n      dup6\n      swap1\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3772:3851  PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":3536:3539   */\n      0xa0\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3772:3851  PoolCreateDebug(\"REFUND\", \"User overpaid creation fee, refunded\", refundAmount) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3600:3866  {... */\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3578:3866  if (refundAmount > 0) {... */\n    tag_28:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3340:3876  {... */\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3327:4033  if (fee > 0) {... */\n      jump(tag_42)\n    tag_22:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3968:3977  msg.value */\n      callvalue\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3968:3982  msg.value == 0 */\n      iszero\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3960:4022  require(msg.value == 0, \"No fee required, so no ETH accepted\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3798:3800   */\n      0x20\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3960:4022  require(msg.value == 0, \"No fee required, so no ETH accepted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3780:3801   */\n      mstore\n        /* \"#utility.yul\":3837:3839   */\n      0x23\n        /* \"#utility.yul\":3817:3835   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3810:3840   */\n      mstore\n        /* \"#utility.yul\":3876:3910   */\n      0x4e6f206665652072657175697265642c20736f206e6f20455448206163636570\n        /* \"#utility.yul\":3856:3874   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3849:3911   */\n      mstore\n      shl(0xea, 0x1d1959)\n        /* \"#utility.yul\":3927:3945   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3920:3953   */\n      mstore\n        /* \"#utility.yul\":3970:3989   */\n      0x84\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3960:4022  require(msg.value == 0, \"No fee required, so no ETH accepted\") */\n      tag_24\n        /* \"#utility.yul\":3596:3995   */\n      jump\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":3960:4022  require(msg.value == 0, \"No fee required, so no ETH accepted\") */\n    tag_42:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5523:5541  extcodesize(_addr) */\n      dup6\n      extcodesize\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4105:4174  require(_isContract(implementation), \"Implementation not a contract\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4202:4204   */\n      0x20\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4105:4174  require(_isContract(implementation), \"Implementation not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4184:4205   */\n      mstore\n        /* \"#utility.yul\":4241:4243   */\n      0x1d\n        /* \"#utility.yul\":4221:4239   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4214:4244   */\n      mstore\n        /* \"#utility.yul\":4280:4311   */\n      0x496d706c656d656e746174696f6e206e6f74206120636f6e7472616374000000\n        /* \"#utility.yul\":4260:4278   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4253:4312   */\n      mstore\n        /* \"#utility.yul\":4329:4347   */\n      0x64\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4105:4174  require(_isContract(implementation), \"Implementation not a contract\") */\n      tag_24\n        /* \"#utility.yul\":4000:4353   */\n      jump\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4105:4174  require(_isContract(implementation), \"Implementation not a contract\") */\n    tag_47:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4189:4261  PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0) */\n      0x40\n      dup1\n      mload\n      shl(0xb2, 0x10d21150d2d7d2535413)\n        /* \"#utility.yul\":4560:4585   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4189:4261  PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":4610:4612   */\n      0x0a\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4189:4261  PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":4844:4865   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":4901:4903   */\n      0x24\n        /* \"#utility.yul\":4881:4899   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":4874:4904   */\n      mstore\n        /* \"#utility.yul\":4940:4974   */\n      0x496d706c656d656e746174696f6e2061646472657373206973206120636f6e74\n        /* \"#utility.yul\":4935:4937   */\n      0x60\n        /* \"#utility.yul\":4920:4938   */\n      dup4\n      add\n        /* \"#utility.yul\":4913:4975   */\n      mstore\n      shl(0xe2, 0x1c9858dd)\n        /* \"#utility.yul\":5006:5009   */\n      0x80\n        /* \"#utility.yul\":4991:5010   */\n      dup4\n      add\n        /* \"#utility.yul\":4984:5019   */\n      mstore\n      0x00\n        /* \"#utility.yul\":5086:5090   */\n      0x20\n        /* \"#utility.yul\":5071:5091   */\n      dup4\n      add\n        /* \"#utility.yul\":5064:5100   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4189:4261  PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":5051:5054   */\n      0xa0\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4189:4261  PoolCreateDebug(\"CHECK_IMPL\", \"Implementation address is a contract\", 0) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4336:4378  LibERC20Factory.cloneERC20(implementation) */\n      tag_54\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4363:4377  implementation */\n      dup7\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4336:4362  LibERC20Factory.cloneERC20 */\n      tag_55\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4336:4378  LibERC20Factory.cloneERC20(implementation) */\n      jump\t// in\n    tag_54:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4328:4378  clone = LibERC20Factory.cloneERC20(implementation) */\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4396:4415  clone != address(0) */\n      dup4\n      and\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4388:4432  require(clone != address(0), \"Clone failed\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5313:5315   */\n      0x20\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4388:4432  require(clone != address(0), \"Clone failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5295:5316   */\n      mstore\n        /* \"#utility.yul\":5352:5354   */\n      0x0c\n        /* \"#utility.yul\":5332:5350   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5325:5355   */\n      mstore\n      shl(0xa2, 0x10db1bdb994819985a5b1959)\n        /* \"#utility.yul\":5371:5389   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5364:5406   */\n      mstore\n        /* \"#utility.yul\":5423:5441   */\n      0x64\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4388:4432  require(clone != address(0), \"Clone failed\") */\n      tag_24\n        /* \"#utility.yul\":5111:5447   */\n      jump\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4388:4432  require(clone != address(0), \"Clone failed\") */\n    tag_56:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4447:4514  PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0) */\n      0x40\n      dup1\n      mload\n      shl(0xd8, 0x434c4f4e45)\n        /* \"#utility.yul\":5654:5674   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4447:4514  PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":5699:5700   */\n      0x05\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4447:4514  PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":5932:5953   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":5989:5991   */\n      0x24\n        /* \"#utility.yul\":5969:5987   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":5962:5992   */\n      mstore\n        /* \"#utility.yul\":6028:6062   */\n      0x45524332302061676772656761746f7220636c6f6e6564207375636365737366\n        /* \"#utility.yul\":6023:6025   */\n      0x60\n        /* \"#utility.yul\":6008:6026   */\n      dup4\n      add\n        /* \"#utility.yul\":6001:6063   */\n      mstore\n      shl(0xe0, 0x756c6c79)\n        /* \"#utility.yul\":6094:6097   */\n      0x80\n        /* \"#utility.yul\":6079:6098   */\n      dup4\n      add\n        /* \"#utility.yul\":6072:6107   */\n      mstore\n      0x00\n        /* \"#utility.yul\":6174:6178   */\n      0x20\n        /* \"#utility.yul\":6159:6179   */\n      dup4\n      add\n        /* \"#utility.yul\":6152:6188   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4447:4514  PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6139:6142   */\n      0xa0\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4447:4514  PoolCreateDebug(\"CLONE\", \"ERC20 aggregator cloned successfully\", 0) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4566:4582  bool callSuccess */\n      0x00\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4584:4604  bytes memory retData */\n      dup1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4608:4613  clone */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4608:4618  clone.call */\n      and\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4619:4627  initData */\n      dup8\n      dup8\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4608:4628  clone.call(initData) */\n      mload(0x40)\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_67\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_66)\n    tag_67:\n      0x60\n      swap2\n      pop\n    tag_66:\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4565:4628  (bool callSuccess, bytes memory retData) = clone.call(initData) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4714:4725  callSuccess */\n      dup2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4709:4937  if (!callSuccess) {... */\n      tag_68\n      jumpi\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4776:4797  string memory failMsg */\n      0x00\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4800:4838  _decodeAndBubbleUpRetMessages(retData) */\n      tag_69\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4830:4837  retData */\n      dup3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4800:4829  _decodeAndBubbleUpRetMessages */\n      tag_70\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4800:4838  _decodeAndBubbleUpRetMessages(retData) */\n      jump\t// in\n    tag_69:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4857:4897  PoolCreateDebug(\"INIT_FAIL\", failMsg, 0) */\n      mload(0x40)\n      shl(0xba, 0x1253925517d1905253)\n        /* \"#utility.yul\":6677:6701   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4776:4838  string memory failMsg = _decodeAndBubbleUpRetMessages(retData) */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":6726:6727   */\n      0x09\n        /* \"#utility.yul\":6717:6728   */\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4857:4897  PoolCreateDebug(\"INIT_FAIL\", failMsg, 0) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4886:4893  failMsg */\n      dup3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4895:4896  0 */\n      0x00\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4857:4897  PoolCreateDebug(\"INIT_FAIL\", failMsg, 0) */\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4918:4925  failMsg */\n      dup1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4911:4926  revert(failMsg) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4709:4937  if (!callSuccess) {... */\n    tag_68:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4951:5017  PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0) */\n      0x40\n      dup1\n      mload\n      shl(0xc8, 0x494e49545f4f4b)\n        /* \"#utility.yul\":8001:8023   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4951:5017  PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8048:8049   */\n      0x07\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4951:5017  PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":8281:8302   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":8338:8340   */\n      0x21\n        /* \"#utility.yul\":8318:8336   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":8311:8341   */\n      mstore\n        /* \"#utility.yul\":8377:8411   */\n      0x41676772656761746f7220696e697469616c697a6174696f6e20737563636573\n        /* \"#utility.yul\":8372:8374   */\n      0x60\n        /* \"#utility.yul\":8357:8375   */\n      dup4\n      add\n        /* \"#utility.yul\":8350:8412   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8443:8446   */\n      0x80\n        /* \"#utility.yul\":8428:8447   */\n      dup4\n      add\n        /* \"#utility.yul\":8421:8453   */\n      mstore\n      0x00\n        /* \"#utility.yul\":8520:8524   */\n      0x20\n        /* \"#utility.yul\":8505:8525   */\n      dup4\n      add\n        /* \"#utility.yul\":8498:8534   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4951:5017  PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8485:8488   */\n      0xa0\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":4951:5017  PoolCreateDebug(\"INIT_OK\", \"Aggregator initialization success\", 0) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5059:5089  PoolCreated(clone, msg.sender) */\n      mload(0x40)\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5078:5088  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5059:5089  PoolCreated(clone, msg.sender) */\n      dup8\n      and\n      swap1\n      0x4f2ce4e40f623ca765fc0167a25cb7842ceaafb8d82d3dec26ca0d0e0d2d4896\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5104:5156  PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x444f4e45)\n        /* \"#utility.yul\":8747:8766   */\n      dup2\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5104:5156  PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0) */\n      dup2\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8791:8792   */\n      0x04\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5104:5156  PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0) */\n      add\n      dup2\n      keccak256\n        /* \"#utility.yul\":9024:9045   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":9081:9083   */\n      0x16\n        /* \"#utility.yul\":9061:9079   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":9054:9084   */\n      mstore\n      shl(0x50, 0x506f6f6c206372656174696f6e20636f6d706c657465)\n        /* \"#utility.yul\":9115:9117   */\n      0x60\n        /* \"#utility.yul\":9100:9118   */\n      dup4\n      add\n        /* \"#utility.yul\":9093:9145   */\n      mstore\n      0x00\n        /* \"#utility.yul\":9212:9216   */\n      0x20\n        /* \"#utility.yul\":9197:9217   */\n      dup4\n      add\n        /* \"#utility.yul\":9190:9226   */\n      mstore\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5104:5156  PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0) */\n      swap2\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9177:9180   */\n      0x80\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5104:5156  PoolCreateDebug(\"DONE\", \"Pool creation complete\", 0) */\n      add\n      swap1\n      log2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5167:5179  return clone */\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1198:1230  LibDiamond.reentrancyGuardExit() */\n      tag_85\n        /* \"Contracts/libraries/LibDiamond.sol\":15658:15682  diamondStorage()._locked */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322\n        /* \"Contracts/libraries/LibDiamond.sol\":15658:15690  diamondStorage()._locked = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Contracts/libraries/LibDiamond.sol\":15608:15697  function reentrancyGuardExit() internal {... */\n      jump\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":1198:1230  LibDiamond.reentrancyGuardExit() */\n    tag_85:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":2818:5186  function createPool(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/libraries/LibDiamond.sol\":15416:15602  function nonReentrant() internal {... */\n    tag_11:\n        /* \"Contracts/libraries/LibDiamond.sol\":15522:15532  ds._locked */\n      sload(0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322)\n        /* \"Contracts/libraries/LibDiamond.sol\":738:783  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n      swap1\n        /* \"Contracts/libraries/LibDiamond.sol\":15522:15532  ds._locked */\n      0xff\n      and\n        /* \"Contracts/libraries/LibDiamond.sol\":15521:15532  !ds._locked */\n      iszero\n        /* \"Contracts/libraries/LibDiamond.sol\":15513:15568  require(!ds._locked, \"ReentrancyGuard: reentrant call\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9439:9441   */\n      0x20\n        /* \"Contracts/libraries/LibDiamond.sol\":15513:15568  require(!ds._locked, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9421:9442   */\n      mstore\n        /* \"#utility.yul\":9478:9480   */\n      0x1f\n        /* \"#utility.yul\":9458:9476   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9451:9481   */\n      mstore\n        /* \"#utility.yul\":9517:9550   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9497:9515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9490:9551   */\n      mstore\n        /* \"#utility.yul\":9568:9586   */\n      0x64\n      add\n        /* \"Contracts/libraries/LibDiamond.sol\":15513:15568  require(!ds._locked, \"ReentrancyGuard: reentrant call\") */\n      tag_24\n        /* \"#utility.yul\":9237:9592   */\n      jump\n        /* \"Contracts/libraries/LibDiamond.sol\":15513:15568  require(!ds._locked, \"ReentrancyGuard: reentrant call\") */\n    tag_89:\n        /* \"Contracts/libraries/LibDiamond.sol\":15578:15588  ds._locked */\n      0x06\n      add\n        /* \"Contracts/libraries/LibDiamond.sol\":15578:15595  ds._locked = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Contracts/libraries/LibDiamond.sol\":15591:15595  true */\n      0x01\n        /* \"Contracts/libraries/LibDiamond.sol\":15578:15595  ds._locked = true */\n      or\n      swap1\n      sstore\n        /* \"Contracts/libraries/LibDiamond.sol\":15416:15602  function nonReentrant() internal {... */\n      jump\t// out\n        /* \"Contracts/libraries/LibDiamond.sol\":15703:15814  function enforceNotPaused() internal view {... */\n    tag_14:\n        /* \"Contracts/libraries/LibDiamond.sol\":15764:15787  diamondStorage().paused */\n      sload(0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/libraries/LibDiamond.sol\":15763:15787  !diamondStorage().paused */\n      iszero\n        /* \"Contracts/libraries/LibDiamond.sol\":15755:15807  require(!diamondStorage().paused, \"Diamond: paused\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9799:9801   */\n      0x20\n        /* \"Contracts/libraries/LibDiamond.sol\":15755:15807  require(!diamondStorage().paused, \"Diamond: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9781:9802   */\n      mstore\n        /* \"#utility.yul\":9838:9840   */\n      0x0f\n        /* \"#utility.yul\":9818:9836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9811:9841   */\n      mstore\n      shl(0x8a, 0x111a585b5bdb990e881c185d5cd959)\n        /* \"#utility.yul\":9857:9875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9850:9895   */\n      mstore\n        /* \"#utility.yul\":9912:9930   */\n      0x64\n      add\n        /* \"Contracts/libraries/LibDiamond.sol\":15755:15807  require(!diamondStorage().paused, \"Diamond: paused\") */\n      tag_24\n        /* \"#utility.yul\":9597:9936   */\n      jump\n        /* \"Contracts/libraries/LibDiamond.sol\":15755:15807  require(!diamondStorage().paused, \"Diamond: paused\") */\n    tag_94:\n        /* \"Contracts/libraries/LibDiamond.sol\":15703:15814  function enforceNotPaused() internal view {... */\n      jump\t// out\n        /* \"Contracts/libraries/LibERC20Factory.sol\":758:912  function cloneERC20(address implementation) internal returns (address) {... */\n    tag_55:\n        /* \"Contracts/libraries/LibERC20Factory.sol\":820:827  address */\n      0x00\n        /* \"Contracts/libraries/LibERC20Factory.sol\":839:852  address clone */\n      dup1\n        /* \"Contracts/libraries/LibERC20Factory.sol\":855:883  Clones.clone(implementation) */\n      tag_85\n        /* \"Contracts/libraries/LibERC20Factory.sol\":868:882  implementation */\n      dup4\n        /* \"Contracts/libraries/LibERC20Factory.sol\":855:867  Clones.clone */\n      tag_101\n        /* \"Contracts/libraries/LibERC20Factory.sol\":855:883  Clones.clone(implementation) */\n      jump\t// in\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5692:6041  function _decodeAndBubbleUpRetMessages(bytes memory retData)... */\n    tag_70:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5799:5812  string memory */\n      0x60\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5849:5851  68 */\n      0x44\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5832:5839  retData */\n      dup3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5832:5846  retData.length */\n      mload\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5832:5851  retData.length < 68 */\n      lt\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5828:5918  if (retData.length < 68) {... */\n      iszero\n      tag_103\n      jumpi\n      pop\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5867:5907  return \"Pool init failed without reason\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x506f6f6c20696e6974206661696c656420776974686f757420726561736f6e00\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5692:6041  function _decodeAndBubbleUpRetMessages(bytes memory retData)... */\n      jump\t// out\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5828:5918  if (retData.length < 68) {... */\n    tag_103:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5974:5978  0x04 */\n      0x04\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5965:5972  retData */\n      dup3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5961:5979  add(retData, 0x04) */\n      add\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5950:5979  retData := add(retData, 0x04) */\n      swap2\n      pop\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":6016:6023  retData */\n      dup2\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":6005:6034  abi.decode(retData, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5998:6034  return abi.decode(retData, (string)) */\n      swap3\n        /* \"Contracts/facets/PoolFactoryFacet.sol\":5692:6041  function _decodeAndBubbleUpRetMessages(bytes memory retData)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":989:1112  function clone(address implementation) internal returns (address instance) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1046:1062  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1081:1105  clone(implementation, 0) */\n      tag_104\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1087:1101  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1046:1062  address instance */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2013:2061  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1995:2009  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1989:1993  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1985:2010  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1979:1983  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1975:2011  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1972:2062  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1966:1970  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1959:2063  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2220:2252  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2203:2217  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2197:2201  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2193:2218  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2190:2253  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2184:2188  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2177:2254  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2299:2303  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2293:2297  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2286:2291  value */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2279:2304  create(value, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2267:2304  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2327:2349  instance == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2323:2408  if (instance == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2372:2397  Errors.FailedDeployment() */\n      mload(0x40)\n      shl(0xe0, 0xb06ebf3d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:774   */\n    tag_5:\n        /* \"#utility.yul\":93:99   */\n      0x00\n        /* \"#utility.yul\":101:107   */\n      dup1\n        /* \"#utility.yul\":109:115   */\n      0x00\n        /* \"#utility.yul\":162:164   */\n      0x40\n        /* \"#utility.yul\":150:159   */\n      dup5\n        /* \"#utility.yul\":141:148   */\n      dup7\n        /* \"#utility.yul\":137:160   */\n      sub\n        /* \"#utility.yul\":133:165   */\n      slt\n        /* \"#utility.yul\":130:182   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":178:179   */\n      0x00\n        /* \"#utility.yul\":175:176   */\n      dup1\n        /* \"#utility.yul\":168:180   */\n      revert\n        /* \"#utility.yul\":130:182   */\n    tag_121:\n        /* \"#utility.yul\":204:227   */\n      dup4\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":256:287   */\n      dup2\n      and\n        /* \"#utility.yul\":246:288   */\n      dup2\n      eq\n        /* \"#utility.yul\":236:306   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":302:303   */\n      0x00\n        /* \"#utility.yul\":299:300   */\n      dup1\n        /* \"#utility.yul\":292:304   */\n      revert\n        /* \"#utility.yul\":236:306   */\n    tag_122:\n        /* \"#utility.yul\":325:330   */\n      swap3\n      pop\n        /* \"#utility.yul\":381:383   */\n      0x20\n        /* \"#utility.yul\":366:384   */\n      dup5\n      add\n        /* \"#utility.yul\":353:385   */\n      calldataload\n        /* \"#utility.yul\":408:426   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":397:427   */\n      dup2\n      gt\n        /* \"#utility.yul\":394:444   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":437:438   */\n      dup1\n        /* \"#utility.yul\":430:442   */\n      revert\n        /* \"#utility.yul\":394:444   */\n    tag_123:\n        /* \"#utility.yul\":463:485   */\n      dup5\n      add\n        /* \"#utility.yul\":516:520   */\n      0x1f\n        /* \"#utility.yul\":508:521   */\n      dup2\n      add\n        /* \"#utility.yul\":504:531   */\n      dup7\n      sgt\n        /* \"#utility.yul\":494:549   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":542:543   */\n      dup1\n        /* \"#utility.yul\":535:547   */\n      revert\n        /* \"#utility.yul\":494:549   */\n    tag_124:\n        /* \"#utility.yul\":585:587   */\n      dup1\n        /* \"#utility.yul\":572:588   */\n      calldataload\n        /* \"#utility.yul\":611:629   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":603:609   */\n      dup2\n        /* \"#utility.yul\":600:630   */\n      gt\n        /* \"#utility.yul\":597:647   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":643:644   */\n      0x00\n        /* \"#utility.yul\":640:641   */\n      dup1\n        /* \"#utility.yul\":633:645   */\n      revert\n        /* \"#utility.yul\":597:647   */\n    tag_125:\n        /* \"#utility.yul\":688:695   */\n      dup7\n        /* \"#utility.yul\":683:685   */\n      0x20\n        /* \"#utility.yul\":674:680   */\n      dup3\n        /* \"#utility.yul\":670:672   */\n      dup5\n        /* \"#utility.yul\":666:681   */\n      add\n        /* \"#utility.yul\":662:686   */\n      add\n        /* \"#utility.yul\":659:696   */\n      gt\n        /* \"#utility.yul\":656:713   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":656:713   */\n    tag_126:\n        /* \"#utility.yul\":14:774   */\n      swap4\n      swap7\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":732:743   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":762:768   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:774   */\n      jump\t// out\n        /* \"#utility.yul\":2074:2299   */\n    tag_27:\n        /* \"#utility.yul\":2141:2150   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2162:2173   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2159:2293   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2215:2225   */\n      0x4e487b71\n        /* \"#utility.yul\":2210:2213   */\n      0xe0\n        /* \"#utility.yul\":2206:2226   */\n      shl\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2196:2227   */\n      mstore\n        /* \"#utility.yul\":2250:2254   */\n      0x11\n        /* \"#utility.yul\":2247:2248   */\n      0x04\n        /* \"#utility.yul\":2240:2255   */\n      mstore\n        /* \"#utility.yul\":2278:2282   */\n      0x24\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2268:2283   */\n      revert\n        /* \"#utility.yul\":6199:6470   */\n    tag_64:\n        /* \"#utility.yul\":6382:6388   */\n      dup2\n        /* \"#utility.yul\":6374:6380   */\n      dup4\n        /* \"#utility.yul\":6369:6372   */\n      dup3\n        /* \"#utility.yul\":6356:6389   */\n      calldatacopy\n        /* \"#utility.yul\":6338:6341   */\n      0x00\n        /* \"#utility.yul\":6408:6424   */\n      swap2\n      add\n        /* \"#utility.yul\":6433:6446   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6408:6424   */\n      swap2\n        /* \"#utility.yul\":6199:6470   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6739:6989   */\n    tag_116:\n        /* \"#utility.yul\":6824:6825   */\n      0x00\n        /* \"#utility.yul\":6834:6947   */\n    tag_147:\n        /* \"#utility.yul\":6848:6854   */\n      dup4\n        /* \"#utility.yul\":6845:6846   */\n      dup2\n        /* \"#utility.yul\":6842:6855   */\n      lt\n        /* \"#utility.yul\":6834:6947   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":6924:6935   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6918:6936   */\n      mload\n        /* \"#utility.yul\":6905:6916   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6898:6937   */\n      mstore\n        /* \"#utility.yul\":6870:6872   */\n      0x20\n        /* \"#utility.yul\":6863:6873   */\n      add\n        /* \"#utility.yul\":6834:6947   */\n      jump(tag_147)\n    tag_149:\n      pop\n      pop\n        /* \"#utility.yul\":6981:6982   */\n      0x00\n        /* \"#utility.yul\":6963:6979   */\n      swap2\n      add\n        /* \"#utility.yul\":6956:6983   */\n      mstore\n        /* \"#utility.yul\":6739:6989   */\n      jump\t// out\n        /* \"#utility.yul\":6994:7265   */\n    tag_117:\n        /* \"#utility.yul\":7036:7039   */\n      0x00\n        /* \"#utility.yul\":7074:7079   */\n      dup2\n        /* \"#utility.yul\":7068:7080   */\n      mload\n        /* \"#utility.yul\":7101:7107   */\n      dup1\n        /* \"#utility.yul\":7096:7099   */\n      dup5\n        /* \"#utility.yul\":7089:7108   */\n      mstore\n        /* \"#utility.yul\":7117:7193   */\n      tag_151\n        /* \"#utility.yul\":7186:7192   */\n      dup2\n        /* \"#utility.yul\":7179:7183   */\n      0x20\n        /* \"#utility.yul\":7174:7177   */\n      dup7\n        /* \"#utility.yul\":7170:7184   */\n      add\n        /* \"#utility.yul\":7163:7167   */\n      0x20\n        /* \"#utility.yul\":7156:7161   */\n      dup7\n        /* \"#utility.yul\":7152:7168   */\n      add\n        /* \"#utility.yul\":7117:7193   */\n      tag_116\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7247:7249   */\n      0x1f\n        /* \"#utility.yul\":7226:7241   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7222:7251   */\n      and\n        /* \"#utility.yul\":7213:7252   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7254:7258   */\n      0x20\n        /* \"#utility.yul\":7209:7259   */\n      add\n      swap3\n        /* \"#utility.yul\":6994:7265   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7270:7569   */\n    tag_74:\n        /* \"#utility.yul\":7455:7457   */\n      0x40\n        /* \"#utility.yul\":7444:7453   */\n      dup2\n        /* \"#utility.yul\":7437:7458   */\n      mstore\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7475:7520   */\n      tag_153\n        /* \"#utility.yul\":7516:7518   */\n      0x40\n        /* \"#utility.yul\":7505:7514   */\n      dup4\n        /* \"#utility.yul\":7501:7519   */\n      add\n        /* \"#utility.yul\":7493:7499   */\n      dup6\n        /* \"#utility.yul\":7475:7520   */\n      tag_117\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7467:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7556:7562   */\n      dup3\n        /* \"#utility.yul\":7551:7553   */\n      0x20\n        /* \"#utility.yul\":7540:7549   */\n      dup4\n        /* \"#utility.yul\":7536:7554   */\n      add\n        /* \"#utility.yul\":7529:7563   */\n      mstore\n        /* \"#utility.yul\":7270:7569   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7574:7794   */\n    tag_76:\n        /* \"#utility.yul\":7723:7725   */\n      0x20\n        /* \"#utility.yul\":7712:7721   */\n      dup2\n        /* \"#utility.yul\":7705:7726   */\n      mstore\n        /* \"#utility.yul\":7686:7690   */\n      0x00\n        /* \"#utility.yul\":7743:7788   */\n      tag_85\n        /* \"#utility.yul\":7784:7786   */\n      0x20\n        /* \"#utility.yul\":7773:7782   */\n      dup4\n        /* \"#utility.yul\":7769:7787   */\n      add\n        /* \"#utility.yul\":7761:7767   */\n      dup5\n        /* \"#utility.yul\":7743:7788   */\n      tag_117\n      jump\t// in\n        /* \"#utility.yul\":9941:10068   */\n    tag_118:\n        /* \"#utility.yul\":10002:10012   */\n      0x4e487b71\n        /* \"#utility.yul\":9997:10000   */\n      0xe0\n        /* \"#utility.yul\":9993:10013   */\n      shl\n        /* \"#utility.yul\":9990:9991   */\n      0x00\n        /* \"#utility.yul\":9983:10014   */\n      mstore\n        /* \"#utility.yul\":10033:10037   */\n      0x41\n        /* \"#utility.yul\":10030:10031   */\n      0x04\n        /* \"#utility.yul\":10023:10038   */\n      mstore\n        /* \"#utility.yul\":10057:10061   */\n      0x24\n        /* \"#utility.yul\":10054:10055   */\n      0x00\n        /* \"#utility.yul\":10047:10062   */\n      revert\n        /* \"#utility.yul\":10073:10989   */\n    tag_105:\n        /* \"#utility.yul\":10153:10159   */\n      0x00\n        /* \"#utility.yul\":10206:10208   */\n      0x20\n        /* \"#utility.yul\":10194:10203   */\n      dup3\n        /* \"#utility.yul\":10185:10192   */\n      dup5\n        /* \"#utility.yul\":10181:10204   */\n      sub\n        /* \"#utility.yul\":10177:10209   */\n      slt\n        /* \"#utility.yul\":10174:10226   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":10222:10223   */\n      0x00\n        /* \"#utility.yul\":10219:10220   */\n      dup1\n        /* \"#utility.yul\":10212:10224   */\n      revert\n        /* \"#utility.yul\":10174:10226   */\n    tag_164:\n        /* \"#utility.yul\":10255:10264   */\n      dup2\n        /* \"#utility.yul\":10249:10265   */\n      mload\n        /* \"#utility.yul\":10288:10306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10280:10286   */\n      dup2\n        /* \"#utility.yul\":10277:10307   */\n      gt\n        /* \"#utility.yul\":10274:10324   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":10320:10321   */\n      0x00\n        /* \"#utility.yul\":10317:10318   */\n      dup1\n        /* \"#utility.yul\":10310:10322   */\n      revert\n        /* \"#utility.yul\":10274:10324   */\n    tag_165:\n        /* \"#utility.yul\":10343:10365   */\n      dup3\n      add\n        /* \"#utility.yul\":10396:10400   */\n      0x1f\n        /* \"#utility.yul\":10388:10401   */\n      dup2\n      add\n        /* \"#utility.yul\":10384:10411   */\n      dup5\n      sgt\n        /* \"#utility.yul\":10374:10429   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":10425:10426   */\n      0x00\n        /* \"#utility.yul\":10422:10423   */\n      dup1\n        /* \"#utility.yul\":10415:10427   */\n      revert\n        /* \"#utility.yul\":10374:10429   */\n    tag_166:\n        /* \"#utility.yul\":10458:10460   */\n      dup1\n        /* \"#utility.yul\":10452:10461   */\n      mload\n        /* \"#utility.yul\":10484:10502   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10476:10482   */\n      dup2\n        /* \"#utility.yul\":10473:10503   */\n      gt\n        /* \"#utility.yul\":10470:10526   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":10506:10524   */\n      tag_168\n      tag_118\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":10555:10557   */\n      0x40\n        /* \"#utility.yul\":10549:10558   */\n      mload\n        /* \"#utility.yul\":10647:10649   */\n      0x1f\n        /* \"#utility.yul\":10609:10626   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10605:10636   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":10638:10640   */\n      0x3f\n        /* \"#utility.yul\":10601:10641   */\n      add\n        /* \"#utility.yul\":10597:10651   */\n      and\n        /* \"#utility.yul\":10585:10652   */\n      dup2\n      add\n        /* \"#utility.yul\":10682:10700   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10667:10701   */\n      dup2\n      gt\n        /* \"#utility.yul\":10703:10725   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":10664:10726   */\n      or\n        /* \"#utility.yul\":10661:10749   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":10729:10747   */\n      tag_170\n      tag_118\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":10765:10767   */\n      0x40\n        /* \"#utility.yul\":10758:10780   */\n      mstore\n        /* \"#utility.yul\":10789:10811   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":10830:10845   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10847:10849   */\n      0x20\n        /* \"#utility.yul\":10826:10850   */\n      add\n        /* \"#utility.yul\":10823:10860   */\n      dup7\n      lt\n        /* \"#utility.yul\":10820:10877   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":10873:10874   */\n      0x00\n        /* \"#utility.yul\":10870:10871   */\n      dup1\n        /* \"#utility.yul\":10863:10875   */\n      revert\n        /* \"#utility.yul\":10820:10877   */\n    tag_171:\n        /* \"#utility.yul\":10886:10958   */\n      tag_172\n        /* \"#utility.yul\":10951:10957   */\n      dup3\n        /* \"#utility.yul\":10946:10948   */\n      0x20\n        /* \"#utility.yul\":10938:10944   */\n      dup4\n        /* \"#utility.yul\":10934:10949   */\n      add\n        /* \"#utility.yul\":10929:10931   */\n      0x20\n        /* \"#utility.yul\":10925:10927   */\n      dup7\n        /* \"#utility.yul\":10921:10932   */\n      add\n        /* \"#utility.yul\":10886:10958   */\n      tag_116\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":10977:10983   */\n      swap6\n        /* \"#utility.yul\":10073:10989   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_78a3da7c486583446c79ef6d8028ef4667fbe691038bb13c70e17002616a1a67 dc70f72020d718fc1b94a02596a4f9e095702805287f044e5a9b980ae5d3156e\n\n    auxdata: 0xa2646970667358221220db8466ea2934ad3e4a010a2e584cacfb1aaac8bebd4a238de2aa91290d3eac8b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50610aef8061001f6000396000f3fe60806040526004361061001e5760003560e01c80639dd41df214610023575b600080fd5b610036610031366004610885565b610052565b6040516001600160a01b03909116815260200160405180910390f35b600061005c610693565b610064610737565b604080516422a72a22a960d91b815281519081900360050181208282526011828401527018dc99585d19541bdbdb0818d85b1b1959607a1b60608301523460208301529151600080516020610a9a8339815191529181900360800190a27fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1324547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90801561028b578034101561016f5760405162461bcd60e51b815260206004820152602660248201527f496e73756666696369656e742045544820666f7220706f6f6c206372656174696044820152656f6e2066656560d01b60648201526084015b60405180910390fd5b600061017b8234610918565b9050801561028557604051600090339083908381818185875af1925050503d80600081146101c5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ca565b606091505b505090508061020b5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606401610166565b604080516514915195539160d21b815281519081900360060181208282526024828401527f55736572206f76657270616964206372656174696f6e206665652c20726566756060830152631b99195960e21b6080830152602082018590529151600080516020610a9a8339815191529181900360a00190a2505b506102e5565b34156102e55760405162461bcd60e51b815260206004820152602360248201527f4e6f206665652072657175697265642c20736f206e6f204554482061636365706044820152621d195960ea1b6064820152608401610166565b853b6103335760405162461bcd60e51b815260206004820152601d60248201527f496d706c656d656e746174696f6e206e6f74206120636f6e74726163740000006044820152606401610166565b604080516910d21150d2d7d253541360b21b8152815190819003600a0181208282526024828401527f496d706c656d656e746174696f6e2061646472657373206973206120636f6e746060830152631c9858dd60e21b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a26103b8866107a2565b92506001600160a01b0383166103ff5760405162461bcd60e51b815260206004820152600c60248201526b10db1bdb994819985a5b195960a21b6044820152606401610166565b6040805164434c4f4e4560d81b815281519081900360050181208282526024828401527f45524332302061676772656761746f7220636c6f6e6564207375636365737366606083015263756c6c7960e01b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a2600080846001600160a01b03168787604051610493929190610939565b6000604051808303816000865af19150503d80600081146104d0576040519150601f19603f3d011682016040523d82523d6000602084013e6104d5565b606091505b50915091508161054c5760006104ea826107ae565b604051681253925517d190525360ba1b81529091506009016040518091039020600080516020610a9a83398151915282600060405161052a929190610999565b60405180910390a28060405162461bcd60e51b815260040161016691906109bb565b6040805166494e49545f4f4b60c81b815281519081900360070181208282526021828401527f41676772656761746f7220696e697469616c697a6174696f6e207375636365736060830152607360f81b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a260405133906001600160a01b038716907f4f2ce4e40f623ca765fc0167a25cb7842ceaafb8d82d3dec26ca0d0e0d2d489690600090a36040805163444f4e4560e01b8152815190819003600401812082825260168284015275506f6f6c206372656174696f6e20636f6d706c65746560501b6060830152600060208301529151600080516020610a9a8339815191529181900360800190a25050505061068c7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322805460ff19169055565b9392505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060ff16156107275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610166565b600601805460ff19166001179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132254610100900460ff16156107a05760405162461bcd60e51b815260206004820152600f60248201526e111a585b5bdb990e881c185d5cd959608a1b6044820152606401610166565b565b60008061068c83610813565b60606044825110156107f357505060408051808201909152601f81527f506f6f6c20696e6974206661696c656420776974686f757420726561736f6e00602082015290565b6004820191508180602001905181019061080d91906109e4565b92915050565b600061080d828280763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b03811661080d5760405163b06ebf3d60e01b815260040160405180910390fd5b60008060006040848603121561089a57600080fd5b83356001600160a01b03811681146108b157600080fd5b9250602084013567ffffffffffffffff8111156108cd57600080fd5b8401601f810186136108de57600080fd5b803567ffffffffffffffff8111156108f557600080fd5b86602082840101111561090757600080fd5b939660209190910195509293505050565b8181038181111561080d57634e487b7160e01b600052601160045260246000fd5b8183823760009101908152919050565b60005b8381101561096457818101518382015260200161094c565b50506000910152565b60008151808452610985816020860160208601610949565b601f01601f19169290920160200192915050565b6040815260006109ac604083018561096d565b90508260208301529392505050565b60208152600061068c602083018461096d565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109f657600080fd5b815167ffffffffffffffff811115610a0d57600080fd5b8201601f81018413610a1e57600080fd5b805167ffffffffffffffff811115610a3857610a386109ce565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610a6757610a676109ce565b604052818152828201602001861015610a7f57600080fd5b610a90826020830160208601610949565b9594505050505056fedc70f72020d718fc1b94a02596a4f9e095702805287f044e5a9b980ae5d3156ea2646970667358221220db8466ea2934ad3e4a010a2e584cacfb1aaac8bebd4a238de2aa91290d3eac8b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAEF DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DD41DF2 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x5C PUSH2 0x693 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH5 0x22A72A22A9 PUSH1 0xD9 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x11 DUP3 DUP5 ADD MSTORE PUSH17 0x18DC99585D19541BDBDB0818D85B1B1959 PUSH1 0x7A SHL PUSH1 0x60 DUP4 ADD MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1324 SLOAD PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 DUP1 ISZERO PUSH2 0x28B JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820666F7220706F6F6C20637265617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6F6E20666565 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP3 CALLVALUE PUSH2 0x918 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH6 0x149151955391 PUSH1 0xD2 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x6 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x55736572206F76657270616964206372656174696F6E206665652C2072656675 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1B991959 PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 POP JUMPDEST POP PUSH2 0x2E5 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206665652072657175697265642C20736F206E6F20455448206163636570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x166 JUMP JUMPDEST DUP6 EXTCODESIZE PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496D706C656D656E746174696F6E206E6F74206120636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0x10D21150D2D7D2535413 PUSH1 0xB2 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x496D706C656D656E746174696F6E2061646472657373206973206120636F6E74 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH2 0x3B8 DUP7 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB1BDB994819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH5 0x434C4F4E45 PUSH1 0xD8 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x45524332302061676772656761746F7220636C6F6E6564207375636365737366 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x756C6C79 PUSH1 0xE0 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x493 SWAP3 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x54C JUMPI PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x1253925517D1905253 PUSH1 0xBA SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x52A SWAP3 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH7 0x494E49545F4F4B PUSH1 0xC8 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x7 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x21 DUP3 DUP5 ADD MSTORE PUSH32 0x41676772656761746F7220696E697469616C697A6174696F6E20737563636573 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4F2CE4E40F623CA765FC0167A25CB7842CEAAFB8D82D3DEC26CA0D0E0D2D4896 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH4 0x444F4E45 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x4 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x16 DUP3 DUP5 ADD MSTORE PUSH22 0x506F6F6C206372656174696F6E20636F6D706C657465 PUSH1 0x50 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 POP POP POP POP PUSH2 0x68C PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 SLOAD PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x111A585B5BDB990E881C185D5CD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68C DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x7F3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x506F6F6C20696E6974206661696C656420776974686F757420726561736F6E00 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP3 DUP3 DUP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 POP SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x80D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x964 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x94C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x985 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x68C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA67 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0xDC PUSH17 0xF72020D718FC1B94A02596A4F9E0957028 SDIV 0x28 PUSH32 0x44E5A9B980AE5D3156EA2646970667358221220DB8466EA2934AD3E4A010A2E PC 0x4C 0xAC 0xFB BYTE 0xAA 0xC8 0xBE 0xBD BLOBBASEFEE 0x23 DUP14 0xE2 0xAA SWAP2 0x29 0xD RETURNDATACOPY 0xAC DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "823:5220:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_decodeAndBubbleUpRetMessages_452": {
									"entryPoint": 1966,
									"id": 452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isContract_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cloneERC20_1558": {
									"entryPoint": 1954,
									"id": 1558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_18": {
									"entryPoint": 2067,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_63": {
									"entryPoint": null,
									"id": 63,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createPool_408": {
									"entryPoint": 82,
									"id": 408,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@diamondStorage_569": {
									"entryPoint": null,
									"id": 569,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@enforceNotPaused_1535": {
									"entryPoint": 1847,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonReentrant_1513": {
									"entryPoint": 1683,
									"id": 1513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reentrancyGuardExit_1523": {
									"entryPoint": null,
									"id": 1523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_251aba073403b308dd66cc67e16f45cfbf6866f54a23b645833b47ecea01ff7a__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_277f937be034a134c05c560777273bde26da04fa9ed3eecbf480f8169b33beb3__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_6a793ad28ee4e6ecc8a34a57d0b7687d3313fb963487b8149ed18f6a18d493ce__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_9c690244a596def234ad4aff29f0ae1473d355510f12ce67ba758c572eaab7ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_aa4e0f6cdcea7b211950e8a75e39146abfef1b33054a194490366571502a5e48__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_affd1ddf30a6870df5368a6c67c32cedc409a4d80c883696a455c9082bd53d6b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_ccf30dca4844f1b4e184057cad892f5906da41c5e85bfd0703eaaa4b15e68a3f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a0febc9db608e47aa2ea0912611143a79696c7d638d3d8618219e011b2833ca_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38b4bb0e57051b9076fa513dfb3183b834a7e8ed3fd82b66a22d6906e19b06d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56c0cf43ccb7ef818529168c169a871c9903f26b426e829c12658aa0141d38b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ca6cff86f51ffdde474c69ae7d55d306609103b77c0319465dc0260a574a5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c4d90bce8f987af8254cbce76b65017440a16de216ce13173bcb06807161092__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a56f7720dae7cbe89ff33b2b1b29833987e0204eb35a0779addc857c94b907aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad63bd4d1500e762b40e7e2e29ec46074b0db4afdcd8f17f47845e47fc9844b8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b635fbe801938c0002dcb250003f6cbd6c2dbd23fe2bd9d74c004f76daa917c9_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9b97fa4067f04ca32e55161fdeb5127841a2aa14af3fca149dbf7326b2d1746_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d203d24b99e03d15f76592463f6da27aa8a05e78423f0182a050c85b21d8c965_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6734fcd06e6ee1d1211e162185a3cd84ef7f2cafb25ed385b734a56cc8c243f_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11244:6",
										"nodeType": "YulBlock",
										"src": "0:11244:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "120:654:6",
													"nodeType": "YulBlock",
													"src": "120:654:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "166:16:6",
																"nodeType": "YulBlock",
																"src": "166:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "175:1:6",
																					"nodeType": "YulLiteral",
																					"src": "175:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "168:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:6"
																			},
																			"nativeSrc": "168:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "168:12:6"
																		},
																		"nativeSrc": "168:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "168:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "141:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "141:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "150:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "150:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "137:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "137:3:6"
																		},
																		"nativeSrc": "137:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "137:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "162:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nativeSrc": "133:32:6",
																"nodeType": "YulFunctionCall",
																"src": "133:32:6"
															},
															"nativeSrc": "130:52:6",
															"nodeType": "YulIf",
															"src": "130:52:6"
														},
														{
															"nativeSrc": "191:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "191:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "217:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "204:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "204:12:6"
																},
																"nativeSrc": "204:23:6",
																"nodeType": "YulFunctionCall",
																"src": "204:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "195:5:6",
																	"nodeType": "YulTypedName",
																	"src": "195:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "290:16:6",
																"nodeType": "YulBlock",
																"src": "290:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "299:1:6",
																					"nodeType": "YulLiteral",
																					"src": "299:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "302:1:6",
																					"nodeType": "YulLiteral",
																					"src": "302:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "292:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "292:6:6"
																			},
																			"nativeSrc": "292:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "292:12:6"
																		},
																		"nativeSrc": "292:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "292:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "249:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "249:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "260:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "260:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "275:3:6",
																										"nodeType": "YulLiteral",
																										"src": "275:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "280:1:6",
																										"nodeType": "YulLiteral",
																										"src": "280:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "271:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "271:3:6"
																								},
																								"nativeSrc": "271:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "271:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "284:1:6",
																								"nodeType": "YulLiteral",
																								"src": "284:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "267:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "267:3:6"
																						},
																						"nativeSrc": "267:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "267:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "256:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "256:3:6"
																				},
																				"nativeSrc": "256:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "256:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "246:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "246:2:6"
																		},
																		"nativeSrc": "246:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "246:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "239:6:6"
																},
																"nativeSrc": "239:50:6",
																"nodeType": "YulFunctionCall",
																"src": "239:50:6"
															},
															"nativeSrc": "236:70:6",
															"nodeType": "YulIf",
															"src": "236:70:6"
														},
														{
															"nativeSrc": "315:15:6",
															"nodeType": "YulAssignment",
															"src": "315:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "325:5:6",
																"nodeType": "YulIdentifier",
																"src": "325:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "315:6:6"
																}
															]
														},
														{
															"nativeSrc": "339:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "339:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "370:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "370:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "381:2:6",
																				"nodeType": "YulLiteral",
																				"src": "381:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "366:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "366:3:6"
																		},
																		"nativeSrc": "366:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "366:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "353:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "353:12:6"
																},
																"nativeSrc": "353:32:6",
																"nodeType": "YulFunctionCall",
																"src": "353:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "343:6:6",
																	"nodeType": "YulTypedName",
																	"src": "343:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:16:6",
																"nodeType": "YulBlock",
																"src": "428:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "437:1:6",
																					"nodeType": "YulLiteral",
																					"src": "437:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "440:1:6",
																					"nodeType": "YulLiteral",
																					"src": "440:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "430:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "430:6:6"
																			},
																			"nativeSrc": "430:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "430:12:6"
																		},
																		"nativeSrc": "430:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "430:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "400:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "400:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "408:18:6",
																		"nodeType": "YulLiteral",
																		"src": "408:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "397:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "397:2:6"
																},
																"nativeSrc": "397:30:6",
																"nodeType": "YulFunctionCall",
																"src": "397:30:6"
															},
															"nativeSrc": "394:50:6",
															"nodeType": "YulIf",
															"src": "394:50:6"
														},
														{
															"nativeSrc": "453:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "453:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "467:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "463:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "463:3:6"
																},
																"nativeSrc": "463:22:6",
																"nodeType": "YulFunctionCall",
																"src": "463:22:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "457:2:6",
																	"nodeType": "YulTypedName",
																	"src": "457:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "533:16:6",
																"nodeType": "YulBlock",
																"src": "533:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "542:1:6",
																					"nodeType": "YulLiteral",
																					"src": "542:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "545:1:6",
																					"nodeType": "YulLiteral",
																					"src": "545:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "535:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "535:6:6"
																			},
																			"nativeSrc": "535:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "535:12:6"
																		},
																		"nativeSrc": "535:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "535:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "512:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "512:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "516:4:6",
																						"nodeType": "YulLiteral",
																						"src": "516:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "508:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "508:3:6"
																				},
																				"nativeSrc": "508:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "508:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "523:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "523:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:6"
																},
																"nativeSrc": "497:35:6",
																"nodeType": "YulFunctionCall",
																"src": "497:35:6"
															},
															"nativeSrc": "494:55:6",
															"nodeType": "YulIf",
															"src": "494:55:6"
														},
														{
															"nativeSrc": "558:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "558:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "585:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "585:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "572:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "572:12:6"
																},
																"nativeSrc": "572:16:6",
																"nodeType": "YulFunctionCall",
																"src": "572:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "562:6:6",
																	"nodeType": "YulTypedName",
																	"src": "562:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "631:16:6",
																"nodeType": "YulBlock",
																"src": "631:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "640:1:6",
																					"nodeType": "YulLiteral",
																					"src": "640:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "643:1:6",
																					"nodeType": "YulLiteral",
																					"src": "643:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "633:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "633:6:6"
																			},
																			"nativeSrc": "633:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "633:12:6"
																		},
																		"nativeSrc": "633:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "633:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "603:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "603:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:18:6",
																		"nodeType": "YulLiteral",
																		"src": "611:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "600:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "600:2:6"
																},
																"nativeSrc": "600:30:6",
																"nodeType": "YulFunctionCall",
																"src": "600:30:6"
															},
															"nativeSrc": "597:50:6",
															"nodeType": "YulIf",
															"src": "597:50:6"
														},
														{
															"body": {
																"nativeSrc": "697:16:6",
																"nodeType": "YulBlock",
																"src": "697:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "706:1:6",
																					"nodeType": "YulLiteral",
																					"src": "706:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "709:1:6",
																					"nodeType": "YulLiteral",
																					"src": "709:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "699:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:6"
																			},
																			"nativeSrc": "699:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:6"
																		},
																		"nativeSrc": "699:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "670:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "670:2:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "674:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "674:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "666:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:6"
																				},
																				"nativeSrc": "666:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "666:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "683:2:6",
																				"nodeType": "YulLiteral",
																				"src": "683:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "662:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:6"
																		},
																		"nativeSrc": "662:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "662:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "688:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "688:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "659:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "659:2:6"
																},
																"nativeSrc": "659:37:6",
																"nodeType": "YulFunctionCall",
																"src": "659:37:6"
															},
															"nativeSrc": "656:57:6",
															"nodeType": "YulIf",
															"src": "656:57:6"
														},
														{
															"nativeSrc": "722:21:6",
															"nodeType": "YulAssignment",
															"src": "722:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "736:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "736:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "740:2:6",
																		"nodeType": "YulLiteral",
																		"src": "740:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "732:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "732:3:6"
																},
																"nativeSrc": "732:11:6",
																"nodeType": "YulFunctionCall",
																"src": "732:11:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "722:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:6"
																}
															]
														},
														{
															"nativeSrc": "752:16:6",
															"nodeType": "YulAssignment",
															"src": "752:16:6",
															"value": {
																"name": "length",
																"nativeSrc": "762:6:6",
																"nodeType": "YulIdentifier",
																"src": "762:6:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nativeSrc": "14:760:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "70:9:6",
														"nodeType": "YulTypedName",
														"src": "70:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "81:7:6",
														"nodeType": "YulTypedName",
														"src": "81:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "93:6:6",
														"nodeType": "YulTypedName",
														"src": "93:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "101:6:6",
														"nodeType": "YulTypedName",
														"src": "101:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "109:6:6",
														"nodeType": "YulTypedName",
														"src": "109:6:6",
														"type": ""
													}
												],
												"src": "14:760:6"
											},
											{
												"body": {
													"nativeSrc": "880:102:6",
													"nodeType": "YulBlock",
													"src": "880:102:6",
													"statements": [
														{
															"nativeSrc": "890:26:6",
															"nodeType": "YulAssignment",
															"src": "890:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "902:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "902:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "913:2:6",
																		"nodeType": "YulLiteral",
																		"src": "913:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "898:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "898:3:6"
																},
																"nativeSrc": "898:18:6",
																"nodeType": "YulFunctionCall",
																"src": "898:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "890:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "890:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "947:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "963:3:6",
																								"nodeType": "YulLiteral",
																								"src": "963:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "968:1:6",
																								"nodeType": "YulLiteral",
																								"src": "968:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "959:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "959:3:6"
																						},
																						"nativeSrc": "959:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "959:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "972:1:6",
																						"nodeType": "YulLiteral",
																						"src": "972:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "955:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "955:3:6"
																				},
																				"nativeSrc": "955:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "955:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "943:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "943:3:6"
																		},
																		"nativeSrc": "943:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "943:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "925:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:6"
																},
																"nativeSrc": "925:51:6",
																"nodeType": "YulFunctionCall",
																"src": "925:51:6"
															},
															"nativeSrc": "925:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "925:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "779:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "849:9:6",
														"nodeType": "YulTypedName",
														"src": "849:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "860:6:6",
														"nodeType": "YulTypedName",
														"src": "860:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "871:4:6",
														"nodeType": "YulTypedName",
														"src": "871:4:6",
														"type": ""
													}
												],
												"src": "779:203:6"
											},
											{
												"body": {
													"nativeSrc": "1179:63:6",
													"nodeType": "YulBlock",
													"src": "1179:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1196:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1196:3:6"
																	},
																	{
																		"hexValue": "454e544552",
																		"kind": "string",
																		"nativeSrc": "1201:7:6",
																		"nodeType": "YulLiteral",
																		"src": "1201:7:6",
																		"type": "",
																		"value": "ENTER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1189:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:6"
																},
																"nativeSrc": "1189:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1189:20:6"
															},
															"nativeSrc": "1189:20:6",
															"nodeType": "YulExpressionStatement",
															"src": "1189:20:6"
														},
														{
															"nativeSrc": "1218:18:6",
															"nodeType": "YulAssignment",
															"src": "1218:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1229:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1229:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1234:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1234:1:6",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1225:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:6"
																},
																"nativeSrc": "1225:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1225:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1218:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_9c690244a596def234ad4aff29f0ae1473d355510f12ce67ba758c572eaab7ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "987:255:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1163:3:6",
														"nodeType": "YulTypedName",
														"src": "1163:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1171:3:6",
														"nodeType": "YulTypedName",
														"src": "1171:3:6",
														"type": ""
													}
												],
												"src": "987:255:6"
											},
											{
												"body": {
													"nativeSrc": "1449:213:6",
													"nodeType": "YulBlock",
													"src": "1449:213:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1459:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:6"
																},
																"nativeSrc": "1459:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1459:21:6"
															},
															"nativeSrc": "1459:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1459:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1500:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1511:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1511:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1496:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:6"
																		},
																		"nativeSrc": "1496:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1516:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:6"
																},
																"nativeSrc": "1489:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1489:30:6"
															},
															"nativeSrc": "1489:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1489:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1539:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1539:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1550:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1550:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1535:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:6"
																		},
																		"nativeSrc": "1535:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:18:6"
																	},
																	{
																		"hexValue": "637265617465506f6f6c2063616c6c6564",
																		"kind": "string",
																		"nativeSrc": "1555:19:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:19:6",
																		"type": "",
																		"value": "createPool called"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1528:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:6"
																},
																"nativeSrc": "1528:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1528:47:6"
															},
															"nativeSrc": "1528:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1528:47:6"
														},
														{
															"nativeSrc": "1584:27:6",
															"nodeType": "YulAssignment",
															"src": "1584:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1596:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1607:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1607:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1592:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:6"
																},
																"nativeSrc": "1592:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1592:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1584:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1584:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1631:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1631:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1642:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1642:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1627:3:6"
																		},
																		"nativeSrc": "1627:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1627:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1649:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1620:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:6"
																},
																"nativeSrc": "1620:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1620:36:6"
															},
															"nativeSrc": "1620:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1620:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9b97fa4067f04ca32e55161fdeb5127841a2aa14af3fca149dbf7326b2d1746_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "1247:415:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1418:9:6",
														"nodeType": "YulTypedName",
														"src": "1418:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1429:6:6",
														"nodeType": "YulTypedName",
														"src": "1429:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1440:4:6",
														"nodeType": "YulTypedName",
														"src": "1440:4:6",
														"type": ""
													}
												],
												"src": "1247:415:6"
											},
											{
												"body": {
													"nativeSrc": "1841:228:6",
													"nodeType": "YulBlock",
													"src": "1841:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1858:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1858:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1869:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:6"
																},
																"nativeSrc": "1851:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1851:21:6"
															},
															"nativeSrc": "1851:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1851:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1892:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1892:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1903:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1903:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1888:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1888:3:6"
																		},
																		"nativeSrc": "1888:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1888:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1908:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1908:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1881:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:6"
																},
																"nativeSrc": "1881:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1881:30:6"
															},
															"nativeSrc": "1881:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1881:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1931:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1931:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1942:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1942:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1927:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1927:3:6"
																		},
																		"nativeSrc": "1927:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1927:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820666f7220706f6f6c20637265617469",
																		"kind": "string",
																		"nativeSrc": "1947:34:6",
																		"nodeType": "YulLiteral",
																		"src": "1947:34:6",
																		"type": "",
																		"value": "Insufficient ETH for pool creati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1920:6:6"
																},
																"nativeSrc": "1920:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1920:62:6"
															},
															"nativeSrc": "1920:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "1920:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2013:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:6"
																		},
																		"nativeSrc": "1998:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:18:6"
																	},
																	{
																		"hexValue": "6f6e20666565",
																		"kind": "string",
																		"nativeSrc": "2018:8:6",
																		"nodeType": "YulLiteral",
																		"src": "2018:8:6",
																		"type": "",
																		"value": "on fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:6"
																},
																"nativeSrc": "1991:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1991:36:6"
															},
															"nativeSrc": "1991:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1991:36:6"
														},
														{
															"nativeSrc": "2036:27:6",
															"nodeType": "YulAssignment",
															"src": "2036:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2048:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2059:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2044:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2044:3:6"
																},
																"nativeSrc": "2044:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2044:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2036:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38b4bb0e57051b9076fa513dfb3183b834a7e8ed3fd82b66a22d6906e19b06d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1667:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1818:9:6",
														"nodeType": "YulTypedName",
														"src": "1818:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1832:4:6",
														"nodeType": "YulTypedName",
														"src": "1832:4:6",
														"type": ""
													}
												],
												"src": "1667:402:6"
											},
											{
												"body": {
													"nativeSrc": "2123:176:6",
													"nodeType": "YulBlock",
													"src": "2123:176:6",
													"statements": [
														{
															"nativeSrc": "2133:17:6",
															"nodeType": "YulAssignment",
															"src": "2133:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2145:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2145:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2148:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2148:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:6"
																},
																"nativeSrc": "2141:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2141:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2133:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2133:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2182:111:6",
																"nodeType": "YulBlock",
																"src": "2182:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2203:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2203:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2210:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2210:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2215:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2215:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2206:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2206:3:6"
																					},
																					"nativeSrc": "2206:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2206:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2196:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2196:6:6"
																			},
																			"nativeSrc": "2196:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2196:31:6"
																		},
																		"nativeSrc": "2196:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2196:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2247:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2247:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2250:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2250:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2240:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2240:6:6"
																			},
																			"nativeSrc": "2240:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2240:15:6"
																		},
																		"nativeSrc": "2240:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2240:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2275:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2278:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2278:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2268:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2268:6:6"
																			},
																			"nativeSrc": "2268:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2268:15:6"
																		},
																		"nativeSrc": "2268:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2268:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2165:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2171:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2162:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2162:2:6"
																},
																"nativeSrc": "2162:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2162:11:6"
															},
															"nativeSrc": "2159:134:6",
															"nodeType": "YulIf",
															"src": "2159:134:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2074:225:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2105:1:6",
														"nodeType": "YulTypedName",
														"src": "2105:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2108:1:6",
														"nodeType": "YulTypedName",
														"src": "2108:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2114:4:6",
														"nodeType": "YulTypedName",
														"src": "2114:4:6",
														"type": ""
													}
												],
												"src": "2074:225:6"
											},
											{
												"body": {
													"nativeSrc": "2495:14:6",
													"nodeType": "YulBlock",
													"src": "2495:14:6",
													"statements": [
														{
															"nativeSrc": "2497:10:6",
															"nodeType": "YulAssignment",
															"src": "2497:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "2504:3:6",
																"nodeType": "YulIdentifier",
																"src": "2504:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2497:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2497:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2304:205:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2479:3:6",
														"nodeType": "YulTypedName",
														"src": "2479:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2487:3:6",
														"nodeType": "YulTypedName",
														"src": "2487:3:6",
														"type": ""
													}
												],
												"src": "2304:205:6"
											},
											{
												"body": {
													"nativeSrc": "2688:163:6",
													"nodeType": "YulBlock",
													"src": "2688:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2705:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2705:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2716:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2716:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2698:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:6"
																},
																"nativeSrc": "2698:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2698:21:6"
															},
															"nativeSrc": "2698:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2698:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2739:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2739:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2750:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2750:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2735:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2735:3:6"
																		},
																		"nativeSrc": "2735:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2735:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2755:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2755:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2728:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2728:6:6"
																},
																"nativeSrc": "2728:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2728:30:6"
															},
															"nativeSrc": "2728:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2728:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2778:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2778:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2789:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2789:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2774:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2774:3:6"
																		},
																		"nativeSrc": "2774:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2774:18:6"
																	},
																	{
																		"hexValue": "526566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "2794:15:6",
																		"nodeType": "YulLiteral",
																		"src": "2794:15:6",
																		"type": "",
																		"value": "Refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2767:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:6"
																},
																"nativeSrc": "2767:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2767:43:6"
															},
															"nativeSrc": "2767:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "2767:43:6"
														},
														{
															"nativeSrc": "2819:26:6",
															"nodeType": "YulAssignment",
															"src": "2819:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2831:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2842:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2827:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:6"
																},
																"nativeSrc": "2827:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2827:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2819:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2819:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2514:337:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2665:9:6",
														"nodeType": "YulTypedName",
														"src": "2665:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2679:4:6",
														"nodeType": "YulTypedName",
														"src": "2679:4:6",
														"type": ""
													}
												],
												"src": "2514:337:6"
											},
											{
												"body": {
													"nativeSrc": "3048:64:6",
													"nodeType": "YulBlock",
													"src": "3048:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3065:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:6"
																	},
																	{
																		"hexValue": "524546554e44",
																		"kind": "string",
																		"nativeSrc": "3070:8:6",
																		"nodeType": "YulLiteral",
																		"src": "3070:8:6",
																		"type": "",
																		"value": "REFUND"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3058:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3058:6:6"
																},
																"nativeSrc": "3058:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3058:21:6"
															},
															"nativeSrc": "3058:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3058:21:6"
														},
														{
															"nativeSrc": "3088:18:6",
															"nodeType": "YulAssignment",
															"src": "3088:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3099:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3099:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3104:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3104:1:6",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3095:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3095:3:6"
																},
																"nativeSrc": "3095:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3095:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3088:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3088:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_aa4e0f6cdcea7b211950e8a75e39146abfef1b33054a194490366571502a5e48__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2856:256:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3032:3:6",
														"nodeType": "YulTypedName",
														"src": "3032:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3040:3:6",
														"nodeType": "YulTypedName",
														"src": "3040:3:6",
														"type": ""
													}
												],
												"src": "2856:256:6"
											},
											{
												"body": {
													"nativeSrc": "3319:272:6",
													"nodeType": "YulBlock",
													"src": "3319:272:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3336:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3336:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3347:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3347:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3329:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:6"
																},
																"nativeSrc": "3329:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3329:21:6"
															},
															"nativeSrc": "3329:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3329:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3370:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3381:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3381:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3366:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:6"
																		},
																		"nativeSrc": "3366:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3366:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3386:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3359:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:6"
																},
																"nativeSrc": "3359:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3359:30:6"
															},
															"nativeSrc": "3359:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3359:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3409:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3409:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3420:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3420:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3405:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3405:3:6"
																		},
																		"nativeSrc": "3405:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3405:18:6"
																	},
																	{
																		"hexValue": "55736572206f76657270616964206372656174696f6e206665652c2072656675",
																		"kind": "string",
																		"nativeSrc": "3425:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3425:34:6",
																		"type": "",
																		"value": "User overpaid creation fee, refu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3398:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:6"
																},
																"nativeSrc": "3398:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3398:62:6"
															},
															"nativeSrc": "3398:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3398:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3480:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3480:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3491:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3491:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3476:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3476:3:6"
																		},
																		"nativeSrc": "3476:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3476:19:6"
																	},
																	{
																		"hexValue": "6e646564",
																		"kind": "string",
																		"nativeSrc": "3497:6:6",
																		"nodeType": "YulLiteral",
																		"src": "3497:6:6",
																		"type": "",
																		"value": "nded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:6"
																},
																"nativeSrc": "3469:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3469:35:6"
															},
															"nativeSrc": "3469:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "3469:35:6"
														},
														{
															"nativeSrc": "3513:27:6",
															"nodeType": "YulAssignment",
															"src": "3513:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3525:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3525:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3536:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3521:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:3:6"
																},
																"nativeSrc": "3521:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3513:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3513:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3560:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3560:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3571:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3571:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3556:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:6"
																		},
																		"nativeSrc": "3556:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3578:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3578:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3549:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:6"
																},
																"nativeSrc": "3549:36:6",
																"nodeType": "YulFunctionCall",
																"src": "3549:36:6"
															},
															"nativeSrc": "3549:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "3549:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a0febc9db608e47aa2ea0912611143a79696c7d638d3d8618219e011b2833ca_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "3117:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3288:9:6",
														"nodeType": "YulTypedName",
														"src": "3288:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3299:6:6",
														"nodeType": "YulTypedName",
														"src": "3299:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3310:4:6",
														"nodeType": "YulTypedName",
														"src": "3310:4:6",
														"type": ""
													}
												],
												"src": "3117:474:6"
											},
											{
												"body": {
													"nativeSrc": "3770:225:6",
													"nodeType": "YulBlock",
													"src": "3770:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3787:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3787:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:6"
																},
																"nativeSrc": "3780:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3780:21:6"
															},
															"nativeSrc": "3780:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3780:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3832:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3832:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3817:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:6"
																		},
																		"nativeSrc": "3817:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3837:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3837:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3810:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:6"
																},
																"nativeSrc": "3810:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3810:30:6"
															},
															"nativeSrc": "3810:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3810:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3860:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3860:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3871:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3871:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3856:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3856:3:6"
																		},
																		"nativeSrc": "3856:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3856:18:6"
																	},
																	{
																		"hexValue": "4e6f206665652072657175697265642c20736f206e6f20455448206163636570",
																		"kind": "string",
																		"nativeSrc": "3876:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3876:34:6",
																		"type": "",
																		"value": "No fee required, so no ETH accep"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3849:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:6"
																},
																"nativeSrc": "3849:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3849:62:6"
															},
															"nativeSrc": "3849:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3849:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3931:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3942:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3942:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3927:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:6"
																		},
																		"nativeSrc": "3927:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3927:18:6"
																	},
																	{
																		"hexValue": "746564",
																		"kind": "string",
																		"nativeSrc": "3947:5:6",
																		"nodeType": "YulLiteral",
																		"src": "3947:5:6",
																		"type": "",
																		"value": "ted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:6"
																},
																"nativeSrc": "3920:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:33:6"
															},
															"nativeSrc": "3920:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3920:33:6"
														},
														{
															"nativeSrc": "3962:27:6",
															"nodeType": "YulAssignment",
															"src": "3962:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3974:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3974:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3985:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3985:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3970:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3970:3:6"
																},
																"nativeSrc": "3970:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3970:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3962:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3962:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a56f7720dae7cbe89ff33b2b1b29833987e0204eb35a0779addc857c94b907aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3596:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3747:9:6",
														"nodeType": "YulTypedName",
														"src": "3747:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3761:4:6",
														"nodeType": "YulTypedName",
														"src": "3761:4:6",
														"type": ""
													}
												],
												"src": "3596:399:6"
											},
											{
												"body": {
													"nativeSrc": "4174:179:6",
													"nodeType": "YulBlock",
													"src": "4174:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4191:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4191:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4202:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4202:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:6"
																},
																"nativeSrc": "4184:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4184:21:6"
															},
															"nativeSrc": "4184:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4184:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4225:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4236:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4236:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:6"
																		},
																		"nativeSrc": "4221:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4214:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4214:6:6"
																},
																"nativeSrc": "4214:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4214:30:6"
															},
															"nativeSrc": "4214:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4214:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:6"
																		},
																		"nativeSrc": "4260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4260:18:6"
																	},
																	{
																		"hexValue": "496d706c656d656e746174696f6e206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "4280:31:6",
																		"nodeType": "YulLiteral",
																		"src": "4280:31:6",
																		"type": "",
																		"value": "Implementation not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4253:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:6"
																},
																"nativeSrc": "4253:59:6",
																"nodeType": "YulFunctionCall",
																"src": "4253:59:6"
															},
															"nativeSrc": "4253:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "4253:59:6"
														},
														{
															"nativeSrc": "4321:26:6",
															"nodeType": "YulAssignment",
															"src": "4321:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4333:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4333:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4344:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4344:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4329:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4329:3:6"
																},
																"nativeSrc": "4329:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4329:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4321:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4321:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ca6cff86f51ffdde474c69ae7d55d306609103b77c0319465dc0260a574a5a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4000:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4151:9:6",
														"nodeType": "YulTypedName",
														"src": "4151:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4165:4:6",
														"nodeType": "YulTypedName",
														"src": "4165:4:6",
														"type": ""
													}
												],
												"src": "4000:353:6"
											},
											{
												"body": {
													"nativeSrc": "4550:69:6",
													"nodeType": "YulBlock",
													"src": "4550:69:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4567:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:6"
																	},
																	{
																		"hexValue": "434845434b5f494d504c",
																		"kind": "string",
																		"nativeSrc": "4572:12:6",
																		"nodeType": "YulLiteral",
																		"src": "4572:12:6",
																		"type": "",
																		"value": "CHECK_IMPL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4560:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4560:6:6"
																},
																"nativeSrc": "4560:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4560:25:6"
															},
															"nativeSrc": "4560:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "4560:25:6"
														},
														{
															"nativeSrc": "4594:19:6",
															"nodeType": "YulAssignment",
															"src": "4594:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4605:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:6"
																},
																"nativeSrc": "4601:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4601:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4594:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_251aba073403b308dd66cc67e16f45cfbf6866f54a23b645833b47ecea01ff7a__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4358:261:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4534:3:6",
														"nodeType": "YulTypedName",
														"src": "4534:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4542:3:6",
														"nodeType": "YulTypedName",
														"src": "4542:3:6",
														"type": ""
													}
												],
												"src": "4358:261:6"
											},
											{
												"body": {
													"nativeSrc": "4834:272:6",
													"nodeType": "YulBlock",
													"src": "4834:272:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4851:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4851:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4862:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4844:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:6"
																},
																"nativeSrc": "4844:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4844:21:6"
															},
															"nativeSrc": "4844:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4844:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4885:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4885:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4896:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4896:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:6"
																		},
																		"nativeSrc": "4881:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4881:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4901:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4874:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:6"
																},
																"nativeSrc": "4874:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4874:30:6"
															},
															"nativeSrc": "4874:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4874:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4924:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4924:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4935:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4935:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:6"
																		},
																		"nativeSrc": "4920:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4920:18:6"
																	},
																	{
																		"hexValue": "496d706c656d656e746174696f6e2061646472657373206973206120636f6e74",
																		"kind": "string",
																		"nativeSrc": "4940:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4940:34:6",
																		"type": "",
																		"value": "Implementation address is a cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4913:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:6"
																},
																"nativeSrc": "4913:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4913:62:6"
															},
															"nativeSrc": "4913:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4913:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4995:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5006:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5006:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4991:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:6"
																		},
																		"nativeSrc": "4991:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4991:19:6"
																	},
																	{
																		"hexValue": "72616374",
																		"kind": "string",
																		"nativeSrc": "5012:6:6",
																		"nodeType": "YulLiteral",
																		"src": "5012:6:6",
																		"type": "",
																		"value": "ract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:6"
																},
																"nativeSrc": "4984:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4984:35:6"
															},
															"nativeSrc": "4984:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4984:35:6"
														},
														{
															"nativeSrc": "5028:27:6",
															"nodeType": "YulAssignment",
															"src": "5028:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5040:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5040:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5051:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5051:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5036:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																},
																"nativeSrc": "5036:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5036:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5028:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5075:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5075:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5086:4:6",
																				"nodeType": "YulLiteral",
																				"src": "5086:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5071:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:6"
																		},
																		"nativeSrc": "5071:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5071:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5093:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5093:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5064:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5064:6:6"
																},
																"nativeSrc": "5064:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5064:36:6"
															},
															"nativeSrc": "5064:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5064:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6734fcd06e6ee1d1211e162185a3cd84ef7f2cafb25ed385b734a56cc8c243f_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "4624:482:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4803:9:6",
														"nodeType": "YulTypedName",
														"src": "4803:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4814:6:6",
														"nodeType": "YulTypedName",
														"src": "4814:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4825:4:6",
														"nodeType": "YulTypedName",
														"src": "4825:4:6",
														"type": ""
													}
												],
												"src": "4624:482:6"
											},
											{
												"body": {
													"nativeSrc": "5285:162:6",
													"nodeType": "YulBlock",
													"src": "5285:162:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5302:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5302:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:6"
																},
																"nativeSrc": "5295:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5295:21:6"
															},
															"nativeSrc": "5295:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5295:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5336:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5336:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5347:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5347:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:6"
																		},
																		"nativeSrc": "5332:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5352:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5352:2:6",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:6"
																},
																"nativeSrc": "5325:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5325:30:6"
															},
															"nativeSrc": "5325:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5325:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5375:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5375:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5386:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5386:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5371:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:6"
																		},
																		"nativeSrc": "5371:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:18:6"
																	},
																	{
																		"hexValue": "436c6f6e65206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5391:14:6",
																		"nodeType": "YulLiteral",
																		"src": "5391:14:6",
																		"type": "",
																		"value": "Clone failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5364:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5364:6:6"
																},
																"nativeSrc": "5364:42:6",
																"nodeType": "YulFunctionCall",
																"src": "5364:42:6"
															},
															"nativeSrc": "5364:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "5364:42:6"
														},
														{
															"nativeSrc": "5415:26:6",
															"nodeType": "YulAssignment",
															"src": "5415:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5427:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5427:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5438:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5423:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5423:3:6"
																},
																"nativeSrc": "5423:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5423:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5415:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5415:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56c0cf43ccb7ef818529168c169a871c9903f26b426e829c12658aa0141d38b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5111:336:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:6",
														"nodeType": "YulTypedName",
														"src": "5262:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5276:4:6",
														"nodeType": "YulTypedName",
														"src": "5276:4:6",
														"type": ""
													}
												],
												"src": "5111:336:6"
											},
											{
												"body": {
													"nativeSrc": "5644:63:6",
													"nodeType": "YulBlock",
													"src": "5644:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5661:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5661:3:6"
																	},
																	{
																		"hexValue": "434c4f4e45",
																		"kind": "string",
																		"nativeSrc": "5666:7:6",
																		"nodeType": "YulLiteral",
																		"src": "5666:7:6",
																		"type": "",
																		"value": "CLONE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5654:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:6"
																},
																"nativeSrc": "5654:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5654:20:6"
															},
															"nativeSrc": "5654:20:6",
															"nodeType": "YulExpressionStatement",
															"src": "5654:20:6"
														},
														{
															"nativeSrc": "5683:18:6",
															"nodeType": "YulAssignment",
															"src": "5683:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5694:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:6",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5690:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5690:3:6"
																},
																"nativeSrc": "5690:11:6",
																"nodeType": "YulFunctionCall",
																"src": "5690:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5683:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_6a793ad28ee4e6ecc8a34a57d0b7687d3313fb963487b8149ed18f6a18d493ce__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5452:255:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5628:3:6",
														"nodeType": "YulTypedName",
														"src": "5628:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5636:3:6",
														"nodeType": "YulTypedName",
														"src": "5636:3:6",
														"type": ""
													}
												],
												"src": "5452:255:6"
											},
											{
												"body": {
													"nativeSrc": "5922:272:6",
													"nodeType": "YulBlock",
													"src": "5922:272:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5939:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5939:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5950:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5950:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5932:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:6"
																},
																"nativeSrc": "5932:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5932:21:6"
															},
															"nativeSrc": "5932:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5932:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5973:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5973:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5984:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5984:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5969:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:6"
																		},
																		"nativeSrc": "5969:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5969:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5989:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:6"
																},
																"nativeSrc": "5962:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5962:30:6"
															},
															"nativeSrc": "5962:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5962:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6012:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6012:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6023:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6023:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6008:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6008:3:6"
																		},
																		"nativeSrc": "6008:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6008:18:6"
																	},
																	{
																		"hexValue": "45524332302061676772656761746f7220636c6f6e6564207375636365737366",
																		"kind": "string",
																		"nativeSrc": "6028:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6028:34:6",
																		"type": "",
																		"value": "ERC20 aggregator cloned successf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6001:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6001:6:6"
																},
																"nativeSrc": "6001:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6001:62:6"
															},
															"nativeSrc": "6001:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6001:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6083:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6083:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6094:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6094:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6079:3:6"
																		},
																		"nativeSrc": "6079:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6079:19:6"
																	},
																	{
																		"hexValue": "756c6c79",
																		"kind": "string",
																		"nativeSrc": "6100:6:6",
																		"nodeType": "YulLiteral",
																		"src": "6100:6:6",
																		"type": "",
																		"value": "ully"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:6"
																},
																"nativeSrc": "6072:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6072:35:6"
															},
															"nativeSrc": "6072:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6072:35:6"
														},
														{
															"nativeSrc": "6116:27:6",
															"nodeType": "YulAssignment",
															"src": "6116:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6128:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6128:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6139:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6139:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6124:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6124:3:6"
																},
																"nativeSrc": "6124:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6124:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6116:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6116:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6163:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6163:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6174:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6174:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6159:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6159:3:6"
																		},
																		"nativeSrc": "6159:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6159:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6181:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6181:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6152:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6152:6:6"
																},
																"nativeSrc": "6152:36:6",
																"nodeType": "YulFunctionCall",
																"src": "6152:36:6"
															},
															"nativeSrc": "6152:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "6152:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d203d24b99e03d15f76592463f6da27aa8a05e78423f0182a050c85b21d8c965_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "5712:482:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5891:9:6",
														"nodeType": "YulTypedName",
														"src": "5891:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5902:6:6",
														"nodeType": "YulTypedName",
														"src": "5902:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5913:4:6",
														"nodeType": "YulTypedName",
														"src": "5913:4:6",
														"type": ""
													}
												],
												"src": "5712:482:6"
											},
											{
												"body": {
													"nativeSrc": "6346:124:6",
													"nodeType": "YulBlock",
													"src": "6346:124:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6369:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6369:3:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6374:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6374:6:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6382:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6356:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6356:12:6"
																},
																"nativeSrc": "6356:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6356:33:6"
															},
															"nativeSrc": "6356:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "6356:33:6"
														},
														{
															"nativeSrc": "6398:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6398:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6412:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6412:3:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6417:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:6"
																},
																"nativeSrc": "6408:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6408:16:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6402:2:6",
																	"nodeType": "YulTypedName",
																	"src": "6402:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6440:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "6440:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6444:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6444:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6433:6:6"
																},
																"nativeSrc": "6433:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6433:13:6"
															},
															"nativeSrc": "6433:13:6",
															"nodeType": "YulExpressionStatement",
															"src": "6433:13:6"
														},
														{
															"nativeSrc": "6455:9:6",
															"nodeType": "YulAssignment",
															"src": "6455:9:6",
															"value": {
																"name": "_1",
																"nativeSrc": "6462:2:6",
																"nodeType": "YulIdentifier",
																"src": "6462:2:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6455:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6455:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6199:271:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6314:3:6",
														"nodeType": "YulTypedName",
														"src": "6314:3:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6319:6:6",
														"nodeType": "YulTypedName",
														"src": "6319:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6327:6:6",
														"nodeType": "YulTypedName",
														"src": "6327:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6338:3:6",
														"nodeType": "YulTypedName",
														"src": "6338:3:6",
														"type": ""
													}
												],
												"src": "6199:271:6"
											},
											{
												"body": {
													"nativeSrc": "6667:67:6",
													"nodeType": "YulBlock",
													"src": "6667:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6684:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6684:3:6"
																	},
																	{
																		"hexValue": "494e49545f4641494c",
																		"kind": "string",
																		"nativeSrc": "6689:11:6",
																		"nodeType": "YulLiteral",
																		"src": "6689:11:6",
																		"type": "",
																		"value": "INIT_FAIL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6677:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:6"
																},
																"nativeSrc": "6677:24:6",
																"nodeType": "YulFunctionCall",
																"src": "6677:24:6"
															},
															"nativeSrc": "6677:24:6",
															"nodeType": "YulExpressionStatement",
															"src": "6677:24:6"
														},
														{
															"nativeSrc": "6710:18:6",
															"nodeType": "YulAssignment",
															"src": "6710:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6721:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6721:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6726:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6726:1:6",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6717:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6717:3:6"
																},
																"nativeSrc": "6717:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6717:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6710:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6710:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_affd1ddf30a6870df5368a6c67c32cedc409a4d80c883696a455c9082bd53d6b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6475:259:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6651:3:6",
														"nodeType": "YulTypedName",
														"src": "6651:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6659:3:6",
														"nodeType": "YulTypedName",
														"src": "6659:3:6",
														"type": ""
													}
												],
												"src": "6475:259:6"
											},
											{
												"body": {
													"nativeSrc": "6805:184:6",
													"nodeType": "YulBlock",
													"src": "6805:184:6",
													"statements": [
														{
															"nativeSrc": "6815:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6815:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6824:1:6",
																"nodeType": "YulLiteral",
																"src": "6824:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6819:1:6",
																	"nodeType": "YulTypedName",
																	"src": "6819:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6884:63:6",
																"nodeType": "YulBlock",
																"src": "6884:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6909:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6909:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6914:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6914:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6905:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6905:3:6"
																					},
																					"nativeSrc": "6905:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6905:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6928:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6928:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6933:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6933:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6924:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6924:3:6"
																							},
																							"nativeSrc": "6924:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6924:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6918:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6918:5:6"
																					},
																					"nativeSrc": "6918:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6918:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6898:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6898:6:6"
																			},
																			"nativeSrc": "6898:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6898:39:6"
																		},
																		"nativeSrc": "6898:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6898:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6845:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6845:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6848:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6842:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6842:2:6"
																},
																"nativeSrc": "6842:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6842:13:6"
															},
															"nativeSrc": "6834:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6856:19:6",
																"nodeType": "YulBlock",
																"src": "6856:19:6",
																"statements": [
																	{
																		"nativeSrc": "6858:15:6",
																		"nodeType": "YulAssignment",
																		"src": "6858:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6867:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "6867:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6870:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6870:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6863:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6863:3:6"
																			},
																			"nativeSrc": "6863:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6858:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6858:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6838:3:6",
																"nodeType": "YulBlock",
																"src": "6838:3:6",
																"statements": []
															},
															"src": "6834:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6967:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6967:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6972:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6972:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6963:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:6"
																		},
																		"nativeSrc": "6963:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6963:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6981:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6956:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:6"
																},
																"nativeSrc": "6956:27:6",
																"nodeType": "YulFunctionCall",
																"src": "6956:27:6"
															},
															"nativeSrc": "6956:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "6956:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6739:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6783:3:6",
														"nodeType": "YulTypedName",
														"src": "6783:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6788:3:6",
														"nodeType": "YulTypedName",
														"src": "6788:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6793:6:6",
														"nodeType": "YulTypedName",
														"src": "6793:6:6",
														"type": ""
													}
												],
												"src": "6739:250:6"
											},
											{
												"body": {
													"nativeSrc": "7044:221:6",
													"nodeType": "YulBlock",
													"src": "7044:221:6",
													"statements": [
														{
															"nativeSrc": "7054:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7054:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7074:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7074:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7068:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7068:5:6"
																},
																"nativeSrc": "7068:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7068:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7058:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7058:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7096:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7096:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7101:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7089:6:6"
																},
																"nativeSrc": "7089:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7089:19:6"
															},
															"nativeSrc": "7089:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "7089:19:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7156:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7156:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7163:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7163:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7152:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7152:3:6"
																		},
																		"nativeSrc": "7152:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7152:16:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7174:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7174:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7179:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7179:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7170:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:6"
																		},
																		"nativeSrc": "7170:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7170:14:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7186:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7186:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7117:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "7117:34:6"
																},
																"nativeSrc": "7117:76:6",
																"nodeType": "YulFunctionCall",
																"src": "7117:76:6"
															},
															"nativeSrc": "7117:76:6",
															"nodeType": "YulExpressionStatement",
															"src": "7117:76:6"
														},
														{
															"nativeSrc": "7202:57:6",
															"nodeType": "YulAssignment",
															"src": "7202:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7217:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7217:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7230:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "7230:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7238:2:6",
																								"nodeType": "YulLiteral",
																								"src": "7238:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7226:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7226:3:6"
																						},
																						"nativeSrc": "7226:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7226:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7247:2:6",
																								"nodeType": "YulLiteral",
																								"src": "7247:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7243:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7243:3:6"
																						},
																						"nativeSrc": "7243:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7243:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7222:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7222:3:6"
																				},
																				"nativeSrc": "7222:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7222:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7213:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7213:3:6"
																		},
																		"nativeSrc": "7213:39:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7213:39:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7254:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7254:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7209:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7209:3:6"
																},
																"nativeSrc": "7209:50:6",
																"nodeType": "YulFunctionCall",
																"src": "7209:50:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "6994:271:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7021:5:6",
														"nodeType": "YulTypedName",
														"src": "7021:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7028:3:6",
														"nodeType": "YulTypedName",
														"src": "7028:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7036:3:6",
														"nodeType": "YulTypedName",
														"src": "7036:3:6",
														"type": ""
													}
												],
												"src": "6994:271:6"
											},
											{
												"body": {
													"nativeSrc": "7427:142:6",
													"nodeType": "YulBlock",
													"src": "7427:142:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7444:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7444:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7455:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7455:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7437:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:6"
																},
																"nativeSrc": "7437:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7437:21:6"
															},
															"nativeSrc": "7437:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7437:21:6"
														},
														{
															"nativeSrc": "7467:53:6",
															"nodeType": "YulAssignment",
															"src": "7467:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7493:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7493:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7505:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7516:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7516:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7501:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:6"
																		},
																		"nativeSrc": "7501:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7501:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7475:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7475:17:6"
																},
																"nativeSrc": "7475:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7475:45:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7467:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7467:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7540:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7540:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7551:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7551:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:6"
																		},
																		"nativeSrc": "7536:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7556:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7556:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:6"
																},
																"nativeSrc": "7529:34:6",
																"nodeType": "YulFunctionCall",
																"src": "7529:34:6"
															},
															"nativeSrc": "7529:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "7529:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "7270:299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7388:9:6",
														"nodeType": "YulTypedName",
														"src": "7388:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7399:6:6",
														"nodeType": "YulTypedName",
														"src": "7399:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7407:6:6",
														"nodeType": "YulTypedName",
														"src": "7407:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7418:4:6",
														"nodeType": "YulTypedName",
														"src": "7418:4:6",
														"type": ""
													}
												],
												"src": "7270:299:6"
											},
											{
												"body": {
													"nativeSrc": "7695:99:6",
													"nodeType": "YulBlock",
													"src": "7695:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7712:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7712:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7723:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7723:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7705:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7705:6:6"
																},
																"nativeSrc": "7705:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7705:21:6"
															},
															"nativeSrc": "7705:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7705:21:6"
														},
														{
															"nativeSrc": "7735:53:6",
															"nodeType": "YulAssignment",
															"src": "7735:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7761:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7761:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7773:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7784:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7784:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:6"
																		},
																		"nativeSrc": "7769:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7743:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7743:17:6"
																},
																"nativeSrc": "7743:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7743:45:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7735:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7735:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7574:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7664:9:6",
														"nodeType": "YulTypedName",
														"src": "7664:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7675:6:6",
														"nodeType": "YulTypedName",
														"src": "7675:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7686:4:6",
														"nodeType": "YulTypedName",
														"src": "7686:4:6",
														"type": ""
													}
												],
												"src": "7574:220:6"
											},
											{
												"body": {
													"nativeSrc": "7991:65:6",
													"nodeType": "YulBlock",
													"src": "7991:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8008:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8008:3:6"
																	},
																	{
																		"hexValue": "494e49545f4f4b",
																		"kind": "string",
																		"nativeSrc": "8013:9:6",
																		"nodeType": "YulLiteral",
																		"src": "8013:9:6",
																		"type": "",
																		"value": "INIT_OK"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8001:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8001:6:6"
																},
																"nativeSrc": "8001:22:6",
																"nodeType": "YulFunctionCall",
																"src": "8001:22:6"
															},
															"nativeSrc": "8001:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "8001:22:6"
														},
														{
															"nativeSrc": "8032:18:6",
															"nodeType": "YulAssignment",
															"src": "8032:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8043:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8048:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8048:1:6",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8039:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8039:3:6"
																},
																"nativeSrc": "8039:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8039:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8032:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_277f937be034a134c05c560777273bde26da04fa9ed3eecbf480f8169b33beb3__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7799:257:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7975:3:6",
														"nodeType": "YulTypedName",
														"src": "7975:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7983:3:6",
														"nodeType": "YulTypedName",
														"src": "7983:3:6",
														"type": ""
													}
												],
												"src": "7799:257:6"
											},
											{
												"body": {
													"nativeSrc": "8271:269:6",
													"nodeType": "YulBlock",
													"src": "8271:269:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8288:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8288:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8299:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8281:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8281:6:6"
																},
																"nativeSrc": "8281:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8281:21:6"
															},
															"nativeSrc": "8281:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8281:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8322:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8322:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8333:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8333:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8318:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:6"
																		},
																		"nativeSrc": "8318:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8311:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:6"
																},
																"nativeSrc": "8311:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8311:30:6"
															},
															"nativeSrc": "8311:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8311:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8372:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8372:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:6"
																		},
																		"nativeSrc": "8357:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:18:6"
																	},
																	{
																		"hexValue": "41676772656761746f7220696e697469616c697a6174696f6e20737563636573",
																		"kind": "string",
																		"nativeSrc": "8377:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8377:34:6",
																		"type": "",
																		"value": "Aggregator initialization succes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:6"
																},
																"nativeSrc": "8350:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8350:62:6"
															},
															"nativeSrc": "8350:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8350:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8432:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8432:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8443:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8443:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8428:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8428:3:6"
																		},
																		"nativeSrc": "8428:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8428:19:6"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "8449:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8449:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8421:6:6"
																},
																"nativeSrc": "8421:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8421:32:6"
															},
															"nativeSrc": "8421:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "8421:32:6"
														},
														{
															"nativeSrc": "8462:27:6",
															"nodeType": "YulAssignment",
															"src": "8462:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8474:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8474:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8485:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8485:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8470:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:6"
																},
																"nativeSrc": "8470:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8470:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8462:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8462:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8509:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8520:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8505:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:6"
																		},
																		"nativeSrc": "8505:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8527:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8527:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8498:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:6"
																},
																"nativeSrc": "8498:36:6",
																"nodeType": "YulFunctionCall",
																"src": "8498:36:6"
															},
															"nativeSrc": "8498:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "8498:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad63bd4d1500e762b40e7e2e29ec46074b0db4afdcd8f17f47845e47fc9844b8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "8061:479:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8240:9:6",
														"nodeType": "YulTypedName",
														"src": "8240:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8251:6:6",
														"nodeType": "YulTypedName",
														"src": "8251:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8262:4:6",
														"nodeType": "YulTypedName",
														"src": "8262:4:6",
														"type": ""
													}
												],
												"src": "8061:479:6"
											},
											{
												"body": {
													"nativeSrc": "8737:62:6",
													"nodeType": "YulBlock",
													"src": "8737:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8754:3:6"
																	},
																	{
																		"hexValue": "444f4e45",
																		"kind": "string",
																		"nativeSrc": "8759:6:6",
																		"nodeType": "YulLiteral",
																		"src": "8759:6:6",
																		"type": "",
																		"value": "DONE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8747:6:6"
																},
																"nativeSrc": "8747:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8747:19:6"
															},
															"nativeSrc": "8747:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8747:19:6"
														},
														{
															"nativeSrc": "8775:18:6",
															"nodeType": "YulAssignment",
															"src": "8775:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8786:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8786:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8791:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8791:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8782:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8782:3:6"
																},
																"nativeSrc": "8782:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8782:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8775:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8775:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_ccf30dca4844f1b4e184057cad892f5906da41c5e85bfd0703eaaa4b15e68a3f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8545:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8721:3:6",
														"nodeType": "YulTypedName",
														"src": "8721:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8729:3:6",
														"nodeType": "YulTypedName",
														"src": "8729:3:6",
														"type": ""
													}
												],
												"src": "8545:254:6"
											},
											{
												"body": {
													"nativeSrc": "9014:218:6",
													"nodeType": "YulBlock",
													"src": "9014:218:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9031:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9031:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9042:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9042:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9024:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:6"
																},
																"nativeSrc": "9024:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9024:21:6"
															},
															"nativeSrc": "9024:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9024:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9065:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9065:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9076:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9076:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9061:3:6"
																		},
																		"nativeSrc": "9061:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9061:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9081:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9081:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9054:6:6"
																},
																"nativeSrc": "9054:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9054:30:6"
															},
															"nativeSrc": "9054:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9054:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9104:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9104:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9115:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9115:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9100:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9100:3:6"
																		},
																		"nativeSrc": "9100:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9100:18:6"
																	},
																	{
																		"hexValue": "506f6f6c206372656174696f6e20636f6d706c657465",
																		"kind": "string",
																		"nativeSrc": "9120:24:6",
																		"nodeType": "YulLiteral",
																		"src": "9120:24:6",
																		"type": "",
																		"value": "Pool creation complete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9093:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9093:6:6"
																},
																"nativeSrc": "9093:52:6",
																"nodeType": "YulFunctionCall",
																"src": "9093:52:6"
															},
															"nativeSrc": "9093:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "9093:52:6"
														},
														{
															"nativeSrc": "9154:27:6",
															"nodeType": "YulAssignment",
															"src": "9154:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9166:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9166:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9177:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9177:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9162:3:6"
																},
																"nativeSrc": "9162:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9162:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9154:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9201:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9201:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9212:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9212:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:6"
																		},
																		"nativeSrc": "9197:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9197:20:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9219:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9219:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9190:6:6"
																},
																"nativeSrc": "9190:36:6",
																"nodeType": "YulFunctionCall",
																"src": "9190:36:6"
															},
															"nativeSrc": "9190:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "9190:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b635fbe801938c0002dcb250003f6cbd6c2dbd23fe2bd9d74c004f76daa917c9_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "8804:428:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8983:9:6",
														"nodeType": "YulTypedName",
														"src": "8983:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8994:6:6",
														"nodeType": "YulTypedName",
														"src": "8994:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9005:4:6",
														"nodeType": "YulTypedName",
														"src": "9005:4:6",
														"type": ""
													}
												],
												"src": "8804:428:6"
											},
											{
												"body": {
													"nativeSrc": "9411:181:6",
													"nodeType": "YulBlock",
													"src": "9411:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9428:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9428:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9439:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9421:6:6"
																},
																"nativeSrc": "9421:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9421:21:6"
															},
															"nativeSrc": "9421:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9421:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9473:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:6"
																		},
																		"nativeSrc": "9458:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9478:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9478:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9451:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9451:6:6"
																},
																"nativeSrc": "9451:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9451:30:6"
															},
															"nativeSrc": "9451:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9451:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:6"
																		},
																		"nativeSrc": "9497:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9517:33:6",
																		"nodeType": "YulLiteral",
																		"src": "9517:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:6"
																},
																"nativeSrc": "9490:61:6",
																"nodeType": "YulFunctionCall",
																"src": "9490:61:6"
															},
															"nativeSrc": "9490:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "9490:61:6"
														},
														{
															"nativeSrc": "9560:26:6",
															"nodeType": "YulAssignment",
															"src": "9560:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9572:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9572:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9583:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9583:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9568:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9568:3:6"
																},
																"nativeSrc": "9568:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9568:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9560:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9560:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9237:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9388:9:6",
														"nodeType": "YulTypedName",
														"src": "9388:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9402:4:6",
														"nodeType": "YulTypedName",
														"src": "9402:4:6",
														"type": ""
													}
												],
												"src": "9237:355:6"
											},
											{
												"body": {
													"nativeSrc": "9771:165:6",
													"nodeType": "YulBlock",
													"src": "9771:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9788:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9788:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9799:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9799:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:6"
																},
																"nativeSrc": "9781:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9781:21:6"
															},
															"nativeSrc": "9781:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9781:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9822:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9822:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9833:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9833:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9818:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9818:3:6"
																		},
																		"nativeSrc": "9818:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9818:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9838:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9838:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9811:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9811:6:6"
																},
																"nativeSrc": "9811:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9811:30:6"
															},
															"nativeSrc": "9811:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9811:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9861:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9861:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9872:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9872:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9857:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9857:3:6"
																		},
																		"nativeSrc": "9857:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9857:18:6"
																	},
																	{
																		"hexValue": "4469616d6f6e643a20706175736564",
																		"kind": "string",
																		"nativeSrc": "9877:17:6",
																		"nodeType": "YulLiteral",
																		"src": "9877:17:6",
																		"type": "",
																		"value": "Diamond: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:6"
																},
																"nativeSrc": "9850:45:6",
																"nodeType": "YulFunctionCall",
																"src": "9850:45:6"
															},
															"nativeSrc": "9850:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "9850:45:6"
														},
														{
															"nativeSrc": "9904:26:6",
															"nodeType": "YulAssignment",
															"src": "9904:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9916:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9916:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9912:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9912:3:6"
																},
																"nativeSrc": "9912:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9912:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9904:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9904:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4d90bce8f987af8254cbce76b65017440a16de216ce13173bcb06807161092__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9597:339:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9748:9:6",
														"nodeType": "YulTypedName",
														"src": "9748:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9762:4:6",
														"nodeType": "YulTypedName",
														"src": "9762:4:6",
														"type": ""
													}
												],
												"src": "9597:339:6"
											},
											{
												"body": {
													"nativeSrc": "9973:95:6",
													"nodeType": "YulBlock",
													"src": "9973:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9990:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9990:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9997:3:6",
																				"nodeType": "YulLiteral",
																				"src": "9997:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10002:10:6",
																				"nodeType": "YulLiteral",
																				"src": "10002:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9993:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9993:3:6"
																		},
																		"nativeSrc": "9993:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9993:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9983:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9983:6:6"
																},
																"nativeSrc": "9983:31:6",
																"nodeType": "YulFunctionCall",
																"src": "9983:31:6"
															},
															"nativeSrc": "9983:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "9983:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10030:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10030:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10033:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10033:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10023:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:6"
																},
																"nativeSrc": "10023:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10023:15:6"
															},
															"nativeSrc": "10023:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10023:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10054:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10054:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10057:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10057:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10047:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10047:6:6"
																},
																"nativeSrc": "10047:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10047:15:6"
															},
															"nativeSrc": "10047:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10047:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9941:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9941:127:6"
											},
											{
												"body": {
													"nativeSrc": "10164:825:6",
													"nodeType": "YulBlock",
													"src": "10164:825:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10210:16:6",
																"nodeType": "YulBlock",
																"src": "10210:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10219:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10219:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10222:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10222:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10212:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10212:6:6"
																			},
																			"nativeSrc": "10212:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10212:12:6"
																		},
																		"nativeSrc": "10212:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10212:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10181:3:6"
																		},
																		"nativeSrc": "10181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10177:3:6"
																},
																"nativeSrc": "10177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10177:32:6"
															},
															"nativeSrc": "10174:52:6",
															"nodeType": "YulIf",
															"src": "10174:52:6"
														},
														{
															"nativeSrc": "10235:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10235:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10255:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10255:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10249:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10249:5:6"
																},
																"nativeSrc": "10249:16:6",
																"nodeType": "YulFunctionCall",
																"src": "10249:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "10239:6:6",
																	"nodeType": "YulTypedName",
																	"src": "10239:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10308:16:6",
																"nodeType": "YulBlock",
																"src": "10308:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10317:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10320:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10320:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10310:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10310:6:6"
																			},
																			"nativeSrc": "10310:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10310:12:6"
																		},
																		"nativeSrc": "10310:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10310:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10280:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10288:18:6",
																		"nodeType": "YulLiteral",
																		"src": "10288:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10277:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10277:2:6"
																},
																"nativeSrc": "10277:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10277:30:6"
															},
															"nativeSrc": "10274:50:6",
															"nodeType": "YulIf",
															"src": "10274:50:6"
														},
														{
															"nativeSrc": "10333:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10333:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10347:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10347:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "10358:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10358:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10343:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10343:3:6"
																},
																"nativeSrc": "10343:22:6",
																"nodeType": "YulFunctionCall",
																"src": "10343:22:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10337:2:6",
																	"nodeType": "YulTypedName",
																	"src": "10337:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10413:16:6",
																"nodeType": "YulBlock",
																"src": "10413:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10422:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10422:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10425:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10425:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10415:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10415:6:6"
																			},
																			"nativeSrc": "10415:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10415:12:6"
																		},
																		"nativeSrc": "10415:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10415:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "10392:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10392:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10396:4:6",
																						"nodeType": "YulLiteral",
																						"src": "10396:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10388:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10388:3:6"
																				},
																				"nativeSrc": "10388:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10388:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10403:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10403:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10384:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:6"
																		},
																		"nativeSrc": "10384:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10384:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10377:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10377:6:6"
																},
																"nativeSrc": "10377:35:6",
																"nodeType": "YulFunctionCall",
																"src": "10377:35:6"
															},
															"nativeSrc": "10374:55:6",
															"nodeType": "YulIf",
															"src": "10374:55:6"
														},
														{
															"nativeSrc": "10438:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10438:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10458:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "10458:2:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10452:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10452:5:6"
																},
																"nativeSrc": "10452:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10452:9:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10442:6:6",
																	"nodeType": "YulTypedName",
																	"src": "10442:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10504:22:6",
																"nodeType": "YulBlock",
																"src": "10504:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10506:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10506:16:6"
																			},
																			"nativeSrc": "10506:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10506:18:6"
																		},
																		"nativeSrc": "10506:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10506:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10476:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10484:18:6",
																		"nodeType": "YulLiteral",
																		"src": "10484:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10473:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10473:2:6"
																},
																"nativeSrc": "10473:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10473:30:6"
															},
															"nativeSrc": "10470:56:6",
															"nodeType": "YulIf",
															"src": "10470:56:6"
														},
														{
															"nativeSrc": "10535:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10535:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10555:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10549:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10549:5:6"
																},
																"nativeSrc": "10549:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10549:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10539:6:6",
																	"nodeType": "YulTypedName",
																	"src": "10539:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10567:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10567:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10589:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10589:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "10613:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "10613:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10621:4:6",
																										"nodeType": "YulLiteral",
																										"src": "10621:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10609:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "10609:3:6"
																								},
																								"nativeSrc": "10609:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10609:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10632:2:6",
																										"nodeType": "YulLiteral",
																										"src": "10632:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "10628:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "10628:3:6"
																								},
																								"nativeSrc": "10628:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10628:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "10605:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10605:3:6"
																						},
																						"nativeSrc": "10605:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10605:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10638:2:6",
																						"nodeType": "YulLiteral",
																						"src": "10638:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10601:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10601:3:6"
																				},
																				"nativeSrc": "10601:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10601:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10647:2:6",
																						"nodeType": "YulLiteral",
																						"src": "10647:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10643:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10643:3:6"
																				},
																				"nativeSrc": "10643:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10643:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10597:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10597:3:6"
																		},
																		"nativeSrc": "10597:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10597:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10585:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10585:3:6"
																},
																"nativeSrc": "10585:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10585:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10571:10:6",
																	"nodeType": "YulTypedName",
																	"src": "10571:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10727:22:6",
																"nodeType": "YulBlock",
																"src": "10727:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10729:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10729:16:6"
																			},
																			"nativeSrc": "10729:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10729:18:6"
																		},
																		"nativeSrc": "10729:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10729:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10670:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "10670:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10682:18:6",
																				"nodeType": "YulLiteral",
																				"src": "10682:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10667:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10667:2:6"
																		},
																		"nativeSrc": "10667:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10706:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "10706:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10718:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10718:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10703:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10703:2:6"
																		},
																		"nativeSrc": "10703:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10703:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10664:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10664:2:6"
																},
																"nativeSrc": "10664:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10664:62:6"
															},
															"nativeSrc": "10661:88:6",
															"nodeType": "YulIf",
															"src": "10661:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10765:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10765:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10769:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "10769:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10758:6:6"
																},
																"nativeSrc": "10758:22:6",
																"nodeType": "YulFunctionCall",
																"src": "10758:22:6"
															},
															"nativeSrc": "10758:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "10758:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10796:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10796:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10804:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10804:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10789:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10789:6:6"
																},
																"nativeSrc": "10789:22:6",
																"nodeType": "YulFunctionCall",
																"src": "10789:22:6"
															},
															"nativeSrc": "10789:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "10789:22:6"
														},
														{
															"body": {
																"nativeSrc": "10861:16:6",
																"nodeType": "YulBlock",
																"src": "10861:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10870:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10870:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10873:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10873:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10863:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10863:6:6"
																			},
																			"nativeSrc": "10863:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10863:12:6"
																		},
																		"nativeSrc": "10863:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "10834:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10834:2:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "10838:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10838:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10830:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10830:3:6"
																				},
																				"nativeSrc": "10830:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10830:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10847:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10847:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:6"
																		},
																		"nativeSrc": "10826:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10826:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "10852:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "10852:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10823:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10823:2:6"
																},
																"nativeSrc": "10823:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10823:37:6"
															},
															"nativeSrc": "10820:57:6",
															"nodeType": "YulIf",
															"src": "10820:57:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "10925:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "10925:2:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10929:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10929:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10921:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10921:3:6"
																		},
																		"nativeSrc": "10921:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10921:11:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10938:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10938:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10946:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10946:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10934:3:6"
																		},
																		"nativeSrc": "10934:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10934:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10951:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10951:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10886:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "10886:34:6"
																},
																"nativeSrc": "10886:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10886:72:6"
															},
															"nativeSrc": "10886:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10886:72:6"
														},
														{
															"nativeSrc": "10967:16:6",
															"nodeType": "YulAssignment",
															"src": "10967:16:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "10977:6:6",
																"nodeType": "YulIdentifier",
																"src": "10977:6:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10967:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "10073:916:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10130:9:6",
														"nodeType": "YulTypedName",
														"src": "10130:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10141:7:6",
														"nodeType": "YulTypedName",
														"src": "10141:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10153:6:6",
														"nodeType": "YulTypedName",
														"src": "10153:6:6",
														"type": ""
													}
												],
												"src": "10073:916:6"
											},
											{
												"body": {
													"nativeSrc": "11123:119:6",
													"nodeType": "YulBlock",
													"src": "11123:119:6",
													"statements": [
														{
															"nativeSrc": "11133:26:6",
															"nodeType": "YulAssignment",
															"src": "11133:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11145:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11145:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11156:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11156:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11141:3:6"
																},
																"nativeSrc": "11141:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11141:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11133:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11133:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11175:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11175:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11186:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11186:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:6"
																},
																"nativeSrc": "11168:25:6",
																"nodeType": "YulFunctionCall",
																"src": "11168:25:6"
															},
															"nativeSrc": "11168:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "11168:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11213:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11224:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11224:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11209:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:6"
																		},
																		"nativeSrc": "11209:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11209:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11229:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11229:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11202:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:6"
																},
																"nativeSrc": "11202:34:6",
																"nodeType": "YulFunctionCall",
																"src": "11202:34:6"
															},
															"nativeSrc": "11202:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "11202:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10994:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11084:9:6",
														"nodeType": "YulTypedName",
														"src": "11084:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11095:6:6",
														"nodeType": "YulTypedName",
														"src": "11095:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11103:6:6",
														"nodeType": "YulTypedName",
														"src": "11103:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11114:4:6",
														"nodeType": "YulTypedName",
														"src": "11114:4:6",
														"type": ""
													}
												],
												"src": "10994:248:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_9c690244a596def234ad4aff29f0ae1473d355510f12ce67ba758c572eaab7ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ENTER\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_t_stringliteral_c9b97fa4067f04ca32e55161fdeb5127841a2aa14af3fca149dbf7326b2d1746_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 17)\n        mstore(add(headStart, 96), \"createPool called\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_38b4bb0e57051b9076fa513dfb3183b834a7e8ed3fd82b66a22d6906e19b06d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Insufficient ETH for pool creati\")\n        mstore(add(headStart, 96), \"on fee\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_aa4e0f6cdcea7b211950e8a75e39146abfef1b33054a194490366571502a5e48__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"REFUND\")\n        end := add(pos, 6)\n    }\n    function abi_encode_tuple_t_stringliteral_2a0febc9db608e47aa2ea0912611143a79696c7d638d3d8618219e011b2833ca_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 36)\n        mstore(add(headStart, 96), \"User overpaid creation fee, refu\")\n        mstore(add(headStart, 128), \"nded\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_a56f7720dae7cbe89ff33b2b1b29833987e0204eb35a0779addc857c94b907aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No fee required, so no ETH accep\")\n        mstore(add(headStart, 96), \"ted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca6cff86f51ffdde474c69ae7d55d306609103b77c0319465dc0260a574a5a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Implementation not a contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_251aba073403b308dd66cc67e16f45cfbf6866f54a23b645833b47ecea01ff7a__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"CHECK_IMPL\")\n        end := add(pos, 10)\n    }\n    function abi_encode_tuple_t_stringliteral_d6734fcd06e6ee1d1211e162185a3cd84ef7f2cafb25ed385b734a56cc8c243f_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 36)\n        mstore(add(headStart, 96), \"Implementation address is a cont\")\n        mstore(add(headStart, 128), \"ract\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_56c0cf43ccb7ef818529168c169a871c9903f26b426e829c12658aa0141d38b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Clone failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_6a793ad28ee4e6ecc8a34a57d0b7687d3313fb963487b8149ed18f6a18d493ce__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"CLONE\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_t_stringliteral_d203d24b99e03d15f76592463f6da27aa8a05e78423f0182a050c85b21d8c965_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 36)\n        mstore(add(headStart, 96), \"ERC20 aggregator cloned successf\")\n        mstore(add(headStart, 128), \"ully\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_affd1ddf30a6870df5368a6c67c32cedc409a4d80c883696a455c9082bd53d6b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"INIT_FAIL\")\n        end := add(pos, 9)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_277f937be034a134c05c560777273bde26da04fa9ed3eecbf480f8169b33beb3__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"INIT_OK\")\n        end := add(pos, 7)\n    }\n    function abi_encode_tuple_t_stringliteral_ad63bd4d1500e762b40e7e2e29ec46074b0db4afdcd8f17f47845e47fc9844b8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 33)\n        mstore(add(headStart, 96), \"Aggregator initialization succes\")\n        mstore(add(headStart, 128), \"s\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ccf30dca4844f1b4e184057cad892f5906da41c5e85bfd0703eaaa4b15e68a3f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"DONE\")\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_stringliteral_b635fbe801938c0002dcb250003f6cbd6c2dbd23fe2bd9d74c004f76daa917c9_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 22)\n        mstore(add(headStart, 96), \"Pool creation complete\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4d90bce8f987af8254cbce76b65017440a16de216ce13173bcb06807161092__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Diamond: paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c80639dd41df214610023575b600080fd5b610036610031366004610885565b610052565b6040516001600160a01b03909116815260200160405180910390f35b600061005c610693565b610064610737565b604080516422a72a22a960d91b815281519081900360050181208282526011828401527018dc99585d19541bdbdb0818d85b1b1959607a1b60608301523460208301529151600080516020610a9a8339815191529181900360800190a27fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1324547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90801561028b578034101561016f5760405162461bcd60e51b815260206004820152602660248201527f496e73756666696369656e742045544820666f7220706f6f6c206372656174696044820152656f6e2066656560d01b60648201526084015b60405180910390fd5b600061017b8234610918565b9050801561028557604051600090339083908381818185875af1925050503d80600081146101c5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ca565b606091505b505090508061020b5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606401610166565b604080516514915195539160d21b815281519081900360060181208282526024828401527f55736572206f76657270616964206372656174696f6e206665652c20726566756060830152631b99195960e21b6080830152602082018590529151600080516020610a9a8339815191529181900360a00190a2505b506102e5565b34156102e55760405162461bcd60e51b815260206004820152602360248201527f4e6f206665652072657175697265642c20736f206e6f204554482061636365706044820152621d195960ea1b6064820152608401610166565b853b6103335760405162461bcd60e51b815260206004820152601d60248201527f496d706c656d656e746174696f6e206e6f74206120636f6e74726163740000006044820152606401610166565b604080516910d21150d2d7d253541360b21b8152815190819003600a0181208282526024828401527f496d706c656d656e746174696f6e2061646472657373206973206120636f6e746060830152631c9858dd60e21b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a26103b8866107a2565b92506001600160a01b0383166103ff5760405162461bcd60e51b815260206004820152600c60248201526b10db1bdb994819985a5b195960a21b6044820152606401610166565b6040805164434c4f4e4560d81b815281519081900360050181208282526024828401527f45524332302061676772656761746f7220636c6f6e6564207375636365737366606083015263756c6c7960e01b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a2600080846001600160a01b03168787604051610493929190610939565b6000604051808303816000865af19150503d80600081146104d0576040519150601f19603f3d011682016040523d82523d6000602084013e6104d5565b606091505b50915091508161054c5760006104ea826107ae565b604051681253925517d190525360ba1b81529091506009016040518091039020600080516020610a9a83398151915282600060405161052a929190610999565b60405180910390a28060405162461bcd60e51b815260040161016691906109bb565b6040805166494e49545f4f4b60c81b815281519081900360070181208282526021828401527f41676772656761746f7220696e697469616c697a6174696f6e207375636365736060830152607360f81b6080830152600060208301529151600080516020610a9a8339815191529181900360a00190a260405133906001600160a01b038716907f4f2ce4e40f623ca765fc0167a25cb7842ceaafb8d82d3dec26ca0d0e0d2d489690600090a36040805163444f4e4560e01b8152815190819003600401812082825260168284015275506f6f6c206372656174696f6e20636f6d706c65746560501b6060830152600060208301529151600080516020610a9a8339815191529181900360800190a25050505061068c7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322805460ff19169055565b9392505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060ff16156107275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610166565b600601805460ff19166001179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132254610100900460ff16156107a05760405162461bcd60e51b815260206004820152600f60248201526e111a585b5bdb990e881c185d5cd959608a1b6044820152606401610166565b565b60008061068c83610813565b60606044825110156107f357505060408051808201909152601f81527f506f6f6c20696e6974206661696c656420776974686f757420726561736f6e00602082015290565b6004820191508180602001905181019061080d91906109e4565b92915050565b600061080d828280763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b03811661080d5760405163b06ebf3d60e01b815260040160405180910390fd5b60008060006040848603121561089a57600080fd5b83356001600160a01b03811681146108b157600080fd5b9250602084013567ffffffffffffffff8111156108cd57600080fd5b8401601f810186136108de57600080fd5b803567ffffffffffffffff8111156108f557600080fd5b86602082840101111561090757600080fd5b939660209190910195509293505050565b8181038181111561080d57634e487b7160e01b600052601160045260246000fd5b8183823760009101908152919050565b60005b8381101561096457818101518382015260200161094c565b50506000910152565b60008151808452610985816020860160208601610949565b601f01601f19169290920160200192915050565b6040815260006109ac604083018561096d565b90508260208301529392505050565b60208152600061068c602083018461096d565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109f657600080fd5b815167ffffffffffffffff811115610a0d57600080fd5b8201601f81018413610a1e57600080fd5b805167ffffffffffffffff811115610a3857610a386109ce565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610a6757610a676109ce565b604052818152828201602001861015610a7f57600080fd5b610a90826020830160208601610949565b9594505050505056fedc70f72020d718fc1b94a02596a4f9e095702805287f044e5a9b980ae5d3156ea2646970667358221220db8466ea2934ad3e4a010a2e584cacfb1aaac8bebd4a238de2aa91290d3eac8b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DD41DF2 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x5C PUSH2 0x693 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH5 0x22A72A22A9 PUSH1 0xD9 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x11 DUP3 DUP5 ADD MSTORE PUSH17 0x18DC99585D19541BDBDB0818D85B1B1959 PUSH1 0x7A SHL PUSH1 0x60 DUP4 ADD MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1324 SLOAD PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 DUP1 ISZERO PUSH2 0x28B JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820666F7220706F6F6C20637265617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6F6E20666565 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP3 CALLVALUE PUSH2 0x918 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH6 0x149151955391 PUSH1 0xD2 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x6 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x55736572206F76657270616964206372656174696F6E206665652C2072656675 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1B991959 PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 POP JUMPDEST POP PUSH2 0x2E5 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206665652072657175697265642C20736F206E6F20455448206163636570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x166 JUMP JUMPDEST DUP6 EXTCODESIZE PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496D706C656D656E746174696F6E206E6F74206120636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0x10D21150D2D7D2535413 PUSH1 0xB2 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x496D706C656D656E746174696F6E2061646472657373206973206120636F6E74 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH2 0x3B8 DUP7 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB1BDB994819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH5 0x434C4F4E45 PUSH1 0xD8 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x24 DUP3 DUP5 ADD MSTORE PUSH32 0x45524332302061676772656761746F7220636C6F6E6564207375636365737366 PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x756C6C79 PUSH1 0xE0 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x493 SWAP3 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x54C JUMPI PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x1253925517D1905253 PUSH1 0xBA SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x52A SWAP3 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH7 0x494E49545F4F4B PUSH1 0xC8 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x7 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x21 DUP3 DUP5 ADD MSTORE PUSH32 0x41676772656761746F7220696E697469616C697A6174696F6E20737563636573 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4F2CE4E40F623CA765FC0167A25CB7842CEAAFB8D82D3DEC26CA0D0E0D2D4896 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH4 0x444F4E45 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x4 ADD DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x16 DUP3 DUP5 ADD MSTORE PUSH22 0x506F6F6C206372656174696F6E20636F6D706C657465 PUSH1 0x50 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 POP POP POP POP PUSH2 0x68C PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 SLOAD PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x111A585B5BDB990E881C185D5CD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x166 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68C DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x7F3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x506F6F6C20696E6974206661696C656420776974686F757420726561736F6E00 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP3 DUP3 DUP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 POP SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x80D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x964 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x94C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x985 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x68C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA67 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0xDC PUSH17 0xF72020D718FC1B94A02596A4F9E0957028 SDIV 0x28 PUSH32 0x44E5A9B980AE5D3156EA2646970667358221220DB8466EA2934AD3E4A010A2E PC 0x4C 0xAC 0xFB BYTE 0xAA 0xC8 0xBE 0xBD BLOBBASEFEE 0x23 DUP14 0xE2 0xAA SWAP2 0x29 0xD RETURNDATACOPY 0xAC DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "823:5220:2:-:0;;;;;;;;;;;;;;;;;;;;;2818:2368;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;943:32:6;;;925:51;;913:2;898:18;2818:2368:2;;;;;;;;3002:13;1152:25;:23;:25::i;:::-;1406:29:::1;:27;:29::i;:::-;3105:56:::2;::::0;;-1:-1:-1;;;1189:20:6;;3105:56:2;;;;;;1234:1:6;3105:56:2;;;1459:21:6;;;1516:2;1496:18;;;1489:30;-1:-1:-1;;;1550:2:6;1535:18;;1528:47;3151:9:2::2;1642:4:6::0;1627:20;;1620:36;3105:56:2;;-1:-1:-1;;;;;;;;;;;3105:56:2;;;;1607:3:6;3105:56:2;;::::2;3299:18:::0;;738:45:4;;3331:7:2;;3327:706:::2;;3414:3;3401:9;:16;;3393:67;;;::::0;-1:-1:-1;;;3393:67:2;;1869:2:6;3393:67:2::2;::::0;::::2;1851:21:6::0;1908:2;1888:18;;;1881:30;1947:34;1927:18;;;1920:62;-1:-1:-1;;;1998:18:6;;;1991:36;2044:19;;3393:67:2::2;;;;;;;;;3474:20;3497:15;3509:3:::0;3497:9:::2;:15;:::i;:::-;3474:38:::0;-1:-1:-1;3582:16:2;;3578:288:::2;;3643:49;::::0;3619:18:::2;::::0;3651:10:::2;::::0;3675:12;;3619:18;3643:49;3619:18;3643:49;3675:12;3651:10;3643:49:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3618:74;;;3718:13;3710:39;;;::::0;-1:-1:-1;;;3710:39:2;;2716:2:6;3710:39:2::2;::::0;::::2;2698:21:6::0;2755:2;2735:18;;;2728:30;-1:-1:-1;;;2774:18:6;;;2767:43;2827:18;;3710:39:2::2;2514:337:6::0;3710:39:2::2;3772:79;::::0;;-1:-1:-1;;;3058:21:6;;3772:79:2;;;;;;3104:1:6;3772:79:2;;;3329:21:6;;;3386:2;3366:18;;;3359:30;3425:34;3420:2;3405:18;;3398:62;-1:-1:-1;;;3491:3:6;3476:19;;3469:35;3571:4;3556:20;;3549:36;;;3772:79:2;;-1:-1:-1;;;;;;;;;;;3772:79:2;;;;3536:3:6;3772:79:2;;::::2;3600:266;3578:288;3340:536;3327:706;;;3968:9;:14:::0;3960:62:::2;;;::::0;-1:-1:-1;;;3960:62:2;;3798:2:6;3960:62:2::2;::::0;::::2;3780:21:6::0;3837:2;3817:18;;;3810:30;3876:34;3856:18;;;3849:62;-1:-1:-1;;;3927:18:6;;;3920:33;3970:19;;3960:62:2::2;3596:399:6::0;3960:62:2::2;5523:18:::0;;4105:69:::2;;;::::0;-1:-1:-1;;;4105:69:2;;4202:2:6;4105:69:2::2;::::0;::::2;4184:21:6::0;4241:2;4221:18;;;4214:30;4280:31;4260:18;;;4253:59;4329:18;;4105:69:2::2;4000:353:6::0;4105:69:2::2;4189:72;::::0;;-1:-1:-1;;;4560:25:6;;4189:72:2;;;;;;4610:2:6;4189:72:2;;;4844:21:6;;;4901:2;4881:18;;;4874:30;4940:34;4935:2;4920:18;;4913:62;-1:-1:-1;;;5006:3:6;4991:19;;4984:35;-1:-1:-1;5086:4:6;5071:20;;5064:36;4189:72:2;;-1:-1:-1;;;;;;;;;;;4189:72:2;;;;5051:3:6;4189:72:2;;::::2;4336:42;4363:14;4336:26;:42::i;:::-;4328:50:::0;-1:-1:-1;;;;;;4396:19:2;::::2;4388:44;;;::::0;-1:-1:-1;;;4388:44:2;;5313:2:6;4388:44:2::2;::::0;::::2;5295:21:6::0;5352:2;5332:18;;;5325:30;-1:-1:-1;;;5371:18:6;;;5364:42;5423:18;;4388:44:2::2;5111:336:6::0;4388:44:2::2;4447:67;::::0;;-1:-1:-1;;;5654:20:6;;4447:67:2;;;;;;5699:1:6;4447:67:2;;;5932:21:6;;;5989:2;5969:18;;;5962:30;6028:34;6023:2;6008:18;;6001:62;-1:-1:-1;;;6094:3:6;6079:19;;6072:35;-1:-1:-1;6174:4:6;6159:20;;6152:36;4447:67:2;;-1:-1:-1;;;;;;;;;;;4447:67:2;;;;6139:3:6;4447:67:2;;::::2;4566:16;4584:20:::0;4608:5:::2;-1:-1:-1::0;;;;;4608:10:2::2;4619:8;;4608:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4565:63;;;;4714:11;4709:228;;4776:21;4800:38;4830:7;4800:29;:38::i;:::-;4857:40;::::0;-1:-1:-1;;;6677:24:6;;4776:62:2;;-1:-1:-1;6726:1:6;6717:11;4857:40:2::2;;;;;;;-1:-1:-1::0;;;;;;;;;;;4886:7:2::2;4895:1;4857:40;;;;;;;:::i;:::-;;;;;;;;4918:7;4911:15;;-1:-1:-1::0;;;4911:15:2::2;;;;;;;;:::i;4709:228::-;4951:66;::::0;;-1:-1:-1;;;8001:22:6;;4951:66:2;;;;;;8048:1:6;4951:66:2;;;8281:21:6;;;8338:2;8318:18;;;8311:30;8377:34;8372:2;8357:18;;8350:62;-1:-1:-1;;;8443:3:6;8428:19;;8421:32;-1:-1:-1;8520:4:6;8505:20;;8498:36;4951:66:2;;-1:-1:-1;;;;;;;;;;;4951:66:2;;;;8485:3:6;4951:66:2;;::::2;5059:30;::::0;5078:10:::2;::::0;-1:-1:-1;;;;;5059:30:2;::::2;::::0;::::2;::::0;;;::::2;5104:52;::::0;;-1:-1:-1;;;8747:19:6;;5104:52:2;;;;;;8791:1:6;5104:52:2;;;9024:21:6;;;9081:2;9061:18;;;9054:30;-1:-1:-1;;;9115:2:6;9100:18;;9093:52;-1:-1:-1;9212:4:6;9197:20;;9190:36;5104:52:2;;-1:-1:-1;;;;;;;;;;;5104:52:2;;;;9177:3:6;5104:52:2;;::::2;5167:12;;;;1198:32:::0;15658:24:4;:32;;-1:-1:-1;;15658:32:4;;;15608:89;1198:32:2;2818:2368;;;;;:::o;15416:186:4:-;15522:10;;738:45;;15522:10;;15521:11;15513:55;;;;-1:-1:-1;;;15513:55:4;;9439:2:6;15513:55:4;;;9421:21:6;9478:2;9458:18;;;9451:30;9517:33;9497:18;;;9490:61;9568:18;;15513:55:4;9237:355:6;15513:55:4;15578:10;;:17;;-1:-1:-1;;15578:17:4;15591:4;15578:17;;;15416:186::o;15703:111::-;15764:23;;;;;;;15763:24;15755:52;;;;-1:-1:-1;;;15755:52:4;;9799:2:6;15755:52:4;;;9781:21:6;9838:2;9818:18;;;9811:30;-1:-1:-1;;;9857:18:6;;;9850:45;9912:18;;15755:52:4;9597:339:6;15755:52:4;15703:111::o;758:154:5:-;820:7;839:13;855:28;868:14;855:12;:28::i;5692:349:2:-;5799:13;5849:2;5832:7;:14;:19;5828:90;;;-1:-1:-1;;5867:40:2;;;;;;;;;;;;;;;;;;5692:349::o;5828:90::-;5974:4;5965:7;5961:18;5950:29;;6016:7;6005:29;;;;;;;;;;;;:::i;:::-;5998:36;5692:349;-1:-1:-1;;5692:349:2:o;989:123:0:-;1046:16;1081:24;1087:14;1046:16;;2013:48;1995:14;1989:4;1985:25;1979:4;1975:36;1972:90;1966:4;1959:104;2220:32;2203:14;2197:4;2193:25;2190:63;2184:4;2177:77;2299:4;2293;2286:5;2279:25;2267:37;-1:-1:-1;;;;;;2327:22:0;;2323:85;;2372:25;;-1:-1:-1;;;2372:25:0;;;;;;;;;;;14:760:6;93:6;101;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:23;;-1:-1:-1;;;;;256:31:6;;246:42;;236:70;;302:1;299;292:12;236:70;325:5;-1:-1:-1;381:2:6;366:18;;353:32;408:18;397:30;;394:50;;;440:1;437;430:12;394:50;463:22;;516:4;508:13;;504:27;-1:-1:-1;494:55:6;;545:1;542;535:12;494:55;585:2;572:16;611:18;603:6;600:30;597:50;;;643:1;640;633:12;597:50;688:7;683:2;674:6;670:2;666:15;662:24;659:37;656:57;;;709:1;706;699:12;656:57;14:760;;740:2;732:11;;;;;-1:-1:-1;762:6:6;;-1:-1:-1;;;14:760:6:o;2074:225::-;2141:9;;;2162:11;;;2159:134;;;2215:10;2210:3;2206:20;2203:1;2196:31;2250:4;2247:1;2240:15;2278:4;2275:1;2268:15;6199:271;6382:6;6374;6369:3;6356:33;6338:3;6408:16;;6433:13;;;6408:16;6199:271;-1:-1:-1;6199:271:6:o;6739:250::-;6824:1;6834:113;6848:6;6845:1;6842:13;6834:113;;;6924:11;;;6918:18;6905:11;;;6898:39;6870:2;6863:10;6834:113;;;-1:-1:-1;;6981:1:6;6963:16;;6956:27;6739:250::o;6994:271::-;7036:3;7074:5;7068:12;7101:6;7096:3;7089:19;7117:76;7186:6;7179:4;7174:3;7170:14;7163:4;7156:5;7152:16;7117:76;:::i;:::-;7247:2;7226:15;-1:-1:-1;;7222:29:6;7213:39;;;;7254:4;7209:50;;6994:271;-1:-1:-1;;6994:271:6:o;7270:299::-;7455:2;7444:9;7437:21;7418:4;7475:45;7516:2;7505:9;7501:18;7493:6;7475:45;:::i;:::-;7467:53;;7556:6;7551:2;7540:9;7536:18;7529:34;7270:299;;;;;:::o;7574:220::-;7723:2;7712:9;7705:21;7686:4;7743:45;7784:2;7773:9;7769:18;7761:6;7743:45;:::i;9941:127::-;10002:10;9997:3;9993:20;9990:1;9983:31;10033:4;10030:1;10023:15;10057:4;10054:1;10047:15;10073:916;10153:6;10206:2;10194:9;10185:7;10181:23;10177:32;10174:52;;;10222:1;10219;10212:12;10174:52;10255:9;10249:16;10288:18;10280:6;10277:30;10274:50;;;10320:1;10317;10310:12;10274:50;10343:22;;10396:4;10388:13;;10384:27;-1:-1:-1;10374:55:6;;10425:1;10422;10415:12;10374:55;10458:2;10452:9;10484:18;10476:6;10473:30;10470:56;;;10506:18;;:::i;:::-;10555:2;10549:9;10647:2;10609:17;;-1:-1:-1;;10605:31:6;;;10638:2;10601:40;10597:54;10585:67;;10682:18;10667:34;;10703:22;;;10664:62;10661:88;;;10729:18;;:::i;:::-;10765:2;10758:22;10789;;;10830:15;;;10847:2;10826:24;10823:37;-1:-1:-1;10820:57:6;;;10873:1;10870;10863:12;10820:57;10886:72;10951:6;10946:2;10938:6;10934:15;10929:2;10925;10921:11;10886:72;:::i;:::-;10977:6;10073:916;-1:-1:-1;;;;;10073:916:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "559800",
								"executionCost": "594",
								"totalCost": "560394"
							},
							"external": {
								"createPool(address,bytes)": "infinite"
							},
							"internal": {
								"_decodeAndBubbleUpRetMessages(bytes memory)": "infinite",
								"_isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 6043,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db8466ea2934ad3e4a010a2e584cacfb1aaac8bebd4a238de2aa91290d3eac8b64736f6c634300081c0033",
									".code": [
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "9DD41DF2"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 823,
											"end": 6043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2818,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2818,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 943,
											"end": 975,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 925,
											"end": 976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 913,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1152,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1177,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1152,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1406,
											"end": 1433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1406,
											"end": 1435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1406,
											"end": 1435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22A72A22A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DC99585D19541BDBDB0818D85B1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3160,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3161,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1324"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3417,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3410,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3417,
											"modifierDepth": 2,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3417,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742045544820666F7220706F6F6C20637265617469"
										},
										{
											"begin": 1927,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1927,
											"end": 1945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E20666565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3393,
											"end": 3460,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3474,
											"end": 3494,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3506,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3497,
											"end": 3512,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3512,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3497,
											"end": 3512,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3474,
											"end": 3512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3578,
											"end": 3866,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3578,
											"end": 3866,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3637,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3661,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3643,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3692,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3731,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3710,
											"end": 3749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1499599D5B990819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2827,
											"end": 2845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2514,
											"end": 2851,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3710,
											"end": 3749,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149151955391"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3459,
											"name": "PUSH",
											"source": 6,
											"value": "55736572206F76657270616964206372656174696F6E206665652C2072656675"
										},
										{
											"begin": 3420,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3491,
											"end": 3494,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3585,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3539,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3851,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3578,
											"end": 3866,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3578,
											"end": 3866,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3876,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3327,
											"end": 4033,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3977,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3960,
											"end": 4022,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3960,
											"end": 4022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 4022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3960,
											"end": 4022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3780,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F206665652072657175697265642C20736F206E6F20455448206163636570"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3989,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3970,
											"end": 3989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3596,
											"end": 3995,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3960,
											"end": 4022,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4105,
											"end": 4174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4105,
											"end": 4174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4221,
											"end": 4239,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4221,
											"end": 4239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "PUSH",
											"source": 6,
											"value": "496D706C656D656E746174696F6E206E6F74206120636F6E7472616374000000"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4105,
											"end": 4174,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10D21150D2D7D2535413"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "496D706C656D656E746174696F6E2061646472657373206973206120636F6E74"
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4991,
											"end": 5010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5051,
											"end": 5054,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4261,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4378,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4363,
											"end": 4377,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4336,
											"end": 4378,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4378,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4336,
											"end": 4378,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4378,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4388,
											"end": 4432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5332,
											"end": 5350,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5332,
											"end": 5350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DB1BDB994819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5111,
											"end": 5447,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4388,
											"end": 4432,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "434C4F4E45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5989,
											"end": 5991,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 5992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6062,
											"name": "PUSH",
											"source": 6,
											"value": "45524332302061676772656761746F7220636C6F6E6564207375636365737366"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6008,
											"end": 6026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756C6C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6097,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6139,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4447,
											"end": 4514,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4566,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4613,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4627,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4627,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4608,
											"end": 4628,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4565,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4565,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4565,
											"end": 4628,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4565,
											"end": 4628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4725,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4937,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4709,
											"end": 4937,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4838,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4830,
											"end": 4837,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4800,
											"end": 4829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4800,
											"end": 4838,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4800,
											"end": 4838,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4800,
											"end": 4838,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1253925517D1905253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6677,
											"end": 6701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6726,
											"end": 6727,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6717,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 4893,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4896,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4857,
											"end": 4897,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4897,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4918,
											"end": 4925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4937,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4709,
											"end": 4937,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "494E49545F4F4B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8311,
											"end": 8341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8411,
											"name": "PUSH",
											"source": 6,
											"value": "41676772656761746F7220696E697469616C697A6174696F6E20737563636573"
										},
										{
											"begin": 8372,
											"end": 8374,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8443,
											"end": 8446,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8428,
											"end": 8447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8505,
											"end": 8525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8505,
											"end": 8525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 5017,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5078,
											"end": 5088,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5078,
											"end": 5088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4F2CE4E40F623CA765FC0167A25CB7842CEAAFB8D82D3DEC26CA0D0E0D2D4896"
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5089,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "444F4E45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8747,
											"end": 8766,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8792,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9083,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C206372656174696F6E20636F6D706C657465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9117,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9093,
											"end": 9145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9197,
											"end": 9217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9197,
											"end": 9217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9180,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5156,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5179,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5179,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5179,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5179,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 15658,
											"end": 15682,
											"name": "PUSH",
											"source": 4,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322"
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15608,
											"end": 15697,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 5186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15416,
											"end": 15602,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 15416,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15522,
											"end": 15532,
											"name": "PUSH",
											"source": 4,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322"
										},
										{
											"begin": 15522,
											"end": 15532,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 738,
											"end": 783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15522,
											"end": 15532,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15522,
											"end": 15532,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15521,
											"end": 15532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9421,
											"end": 9442,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9458,
											"end": 9476,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9458,
											"end": 9476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9451,
											"end": 9481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9517,
											"end": 9550,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9568,
											"end": 9586,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9568,
											"end": 9586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9237,
											"end": 9592,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 15513,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15578,
											"end": 15588,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 15578,
											"end": 15588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15595,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15416,
											"end": 15602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15703,
											"end": 15814,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 15703,
											"end": 15814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "PUSH",
											"source": 4,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1322"
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15764,
											"end": 15787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15763,
											"end": 15787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9838,
											"end": 9840,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111A585B5BDB990E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9850,
											"end": 9895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9597,
											"end": 9936,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 15755,
											"end": 15807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15703,
											"end": 15814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 912,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 758,
											"end": 912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 868,
											"end": 882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 855,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 855,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 6041,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5692,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5812,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5832,
											"end": 5839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5851,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5918,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5828,
											"end": 5918,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "PUSH",
											"source": 2,
											"value": "506F6F6C20696E6974206661696C656420776974686F757420726561736F6E00"
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5692,
											"end": 6041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5918,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5828,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5965,
											"end": 5972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6005,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6034,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5692,
											"end": 6041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 6041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 989,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2061,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1985,
											"end": 2010,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 1975,
											"end": 2011,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 2062,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 2063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2253,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2177,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2304,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2323,
											"end": 2408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06EBF3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 774,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14,
											"end": 774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 93,
											"end": 99,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 101,
											"end": 107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 109,
											"end": 115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 159,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 141,
											"end": 148,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 137,
											"end": 160,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 133,
											"end": 165,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 130,
											"end": 182,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 130,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 130,
											"end": 182,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 178,
											"end": 179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 130,
											"end": 182,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 130,
											"end": 182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 204,
											"end": 227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 204,
											"end": 227,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 256,
											"end": 287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 256,
											"end": 287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 246,
											"end": 288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 288,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 236,
											"end": 306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 302,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 304,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 236,
											"end": 306,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 236,
											"end": 306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 366,
											"end": 384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 353,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 408,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 427,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 394,
											"end": 444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 394,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 394,
											"end": 444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 430,
											"end": 442,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 394,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 394,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 463,
											"end": 485,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 508,
											"end": 521,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 504,
											"end": 531,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 494,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 494,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 494,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 585,
											"end": 587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 588,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 629,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 600,
											"end": 630,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 597,
											"end": 647,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 597,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 643,
											"end": 644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 633,
											"end": 645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 597,
											"end": 647,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 688,
											"end": 695,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 670,
											"end": 672,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 666,
											"end": 681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 662,
											"end": 686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 659,
											"end": 696,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 656,
											"end": 713,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 656,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 656,
											"end": 713,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 774,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 774,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 732,
											"end": 743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 732,
											"end": 743,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 762,
											"end": 768,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 762,
											"end": 768,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2159,
											"end": 2293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2206,
											"end": 2226,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2283,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6199,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6389,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6446,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 6989,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6739,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6824,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 6937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6834,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 6989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7265,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6994,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7099,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7161,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7117,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7193,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7117,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7222,
											"end": 7251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7258,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7209,
											"end": 7259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7259,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6994,
											"end": 7265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7437,
											"end": 7458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7475,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7520,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7475,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7556,
											"end": 7562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7551,
											"end": 7553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7794,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 7574,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7705,
											"end": 7726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7743,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 10068,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 9941,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10012,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9997,
											"end": 10000,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9993,
											"end": 10013,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9990,
											"end": 9991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 10014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10033,
											"end": 10037,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10023,
											"end": 10038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10061,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10062,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10989,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10073,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10174,
											"end": 10226,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10174,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10174,
											"end": 10226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10174,
											"end": 10226,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10174,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10277,
											"end": 10307,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 10274,
											"end": 10324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10310,
											"end": 10322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10324,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 10274,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10343,
											"end": 10365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10343,
											"end": 10365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10396,
											"end": 10400,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10388,
											"end": 10401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10384,
											"end": 10411,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 10374,
											"end": 10429,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10427,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10429,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 10374,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10502,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10526,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10470,
											"end": 10526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 10506,
											"end": 10524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10609,
											"end": 10626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10638,
											"end": 10640,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 10601,
											"end": 10641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10682,
											"end": 10700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10667,
											"end": 10701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10701,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10703,
											"end": 10725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10703,
											"end": 10725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10703,
											"end": 10725,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10664,
											"end": 10726,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10661,
											"end": 10749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 10729,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10847,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10826,
											"end": 10850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10860,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 10820,
											"end": 10877,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10820,
											"end": 10877,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10863,
											"end": 10875,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10877,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10820,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10951,
											"end": 10957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10946,
											"end": 10948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 10949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 10931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10921,
											"end": 10932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 10886,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 10958,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10886,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 10983,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10989,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"78A3DA7C486583446C79EF6D8028EF4667FBE691038BB13C70E17002616A1A67": "dc70f72020d718fc1b94a02596a4f9e095702805287f044e5a9b980ae5d3156e"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/facets/PoolFactoryFacet.sol",
								"Contracts/interfaces/IDiamondCut.sol",
								"Contracts/libraries/LibDiamond.sol",
								"Contracts/libraries/LibERC20Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createPool(address,bytes)": "9dd41df2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"step\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolCreateDebug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clone\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"events\":{\"PoolCreateDebug(string,string,uint256)\":{\"details\":\"Additional debug logs for frontends.      - step: a short label for the portion of code      - info: a more descriptive string      - amount: a numeric value if relevant (like msg.value, refunded, etc.)\"}},\"kind\":\"dev\",\"methods\":{\"createPool(address,bytes)\":{\"params\":{\"implementation\":\"The aggregator's ERC20 implementation address.\",\"initData\":\"Calldata for `initialize(...)`, e.g. `initialize(\\\"MyLP\\\",\\\"MLP\\\",owner)`.\"},\"returns\":{\"clone\":\"The address of the newly created aggregator token.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"PoolCreated(address,address)\":{\"notice\":\"Emitted when a new minimal-proxy aggregator token is created.\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,bytes)\":{\"notice\":\"Creates a minimal-proxy clone of `implementation`, then calls `initData` on it          to initialize the new aggregator ERC20 pool.          - Potentially charges a creation fee if `ds.poolCreationFee > 0`.         - No usage-limit checks in this version, so anyone can call.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/facets/PoolFactoryFacet.sol\":\"PoolFactoryFacet\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"Contracts/facets/PoolFactoryFacet.sol\":{\"keccak256\":\"0x4d162252990d153205384a919bdd4fa6dfbb31119ab1233e306f10c4cb3ba198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f9669502286f3b35854eaaeeb7a8ab6e998b4390eeb3c347f5aa300de76686d\",\"dweb:/ipfs/QmUyyR1yUBQh4SW5cBJgfwZqFrk8YFzgxpprPL1xU8FqaT\"]},\"Contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xe72d2fd89e151bc47a7fff066b7421fb9d270ba5d56453553b3a65e48f69ba08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://397a9f80e77b7ca275f5c482ffdb9e9bb972aa099b1ff49142fc5e0614858c6f\",\"dweb:/ipfs/QmR7VbpGDDa7buHX16ALMNmaGVRjdyZoRRKfi3wXrpHKwC\"]},\"Contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0xdc691561471964cc753d2eb0483c9ccf632b765c5586ab0043c0afc61c2b4644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6a9c81dc621488ff02faeb280485a080bd67cc875029c865625669701f39be\",\"dweb:/ipfs/QmTs3ickK3ymyweoGnHPybqTc5jr5exXfTatv1YnM3eDXq\"]},\"Contracts/libraries/LibERC20Factory.sol\":{\"keccak256\":\"0x098d2136e1cae0b5ffef7eebab488c95fb182cdb8d4c262f7ab8876e46c431fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4371b3f634e91ebdeef971222d5ac0c24b3567b894bfedb518e0e4267bfe333\",\"dweb:/ipfs/QmZRHqfmZ7fSHmRU88oTYz8nxCLFqhvXe6t1NGMNqW7GiC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"PoolCreated(address,address)": {
								"notice": "Emitted when a new minimal-proxy aggregator token is created."
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,bytes)": {
								"notice": "Creates a minimal-proxy clone of `implementation`, then calls `initData` on it          to initialize the new aggregator ERC20 pool.          - Potentially charges a creation fee if `ds.poolCreationFee > 0`.         - No usage-limit checks in this version, so anyone can call."
							}
						},
						"version": 1
					}
				}
			},
			"Contracts/interfaces/IDiamondCut.sol": {
				"IDiamondCut": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DiamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"details": "Emitted when the diamondCut function is called."
							}
						},
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"_calldata": "The function call, including selector and arguments, to be delegatecalled on _init",
									"_diamondCut": "Array describing the facet addresses and function selectors",
									"_init": "The address of a contract/facet to execute _calldata"
								}
							}
						},
						"title": "IDiamondCut",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"details\":\"Emitted when the diamondCut function is called.\"}},\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"The function call, including selector and arguments, to be delegatecalled on _init\",\"_diamondCut\":\"Array describing the facet addresses and function selectors\",\"_init\":\"The address of a contract/facet to execute _calldata\"}}},\"title\":\"IDiamondCut\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"diamondCut implements the core EIP-2535 logic:         - Add/Replace/Remove facet functions according to _diamondCut         - Optionally execute _calldata on _init for initialization or additional setup\"}},\"notice\":\"The EIP-2535 DiamondCut interface for adding, replacing, or removing facets.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/IDiamondCut.sol\":\"IDiamondCut\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xe72d2fd89e151bc47a7fff066b7421fb9d270ba5d56453553b3a65e48f69ba08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://397a9f80e77b7ca275f5c482ffdb9e9bb972aa099b1ff49142fc5e0614858c6f\",\"dweb:/ipfs/QmR7VbpGDDa7buHX16ALMNmaGVRjdyZoRRKfi3wXrpHKwC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "diamondCut implements the core EIP-2535 logic:         - Add/Replace/Remove facet functions according to _diamondCut         - Optionally execute _calldata on _init for initialization or additional setup"
							}
						},
						"notice": "The EIP-2535 DiamondCut interface for adding, replacing, or removing facets.",
						"version": 1
					}
				}
			},
			"Contracts/libraries/LibDiamond.sol": {
				"LibDiamond": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"DIAMOND_STORAGE_POSITION": {
								"details": "The Diamond Storage position key used in assembly to store the data struct."
							}
						},
						"title": "LibDiamond",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/libraries/LibDiamond.sol\":565:15816  library LibDiamond {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/libraries/LibDiamond.sol\":565:15816  library LibDiamond {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e178e4b3c7a4296435aed64caa4c5a85d70b9ce07cfd8eec0f07149e31efa48864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e178e4b3c7a4296435aed64caa4c5a85d70b9ce07cfd8eec0f07149e31efa48864736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH25 0xE4B3C7A4296435AED64CAA4C5A85D70B9CE07CFD8EEC0F0714 SWAP15 BALANCE 0xEF LOG4 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "565:15251:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e178e4b3c7a4296435aed64caa4c5a85d70b9ce07cfd8eec0f07149e31efa48864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH25 0xE4B3C7A4296435AED64CAA4C5A85D70B9CE07CFD8EEC0F0714 SWAP15 BALANCE 0xEF LOG4 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "565:15251:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_addFunctions(address,bytes4[] memory)": "infinite",
								"_convertAction(enum IDiamondCut.FacetCutAction)": "infinite",
								"_enforceHasCode(address,string memory)": "infinite",
								"_initializeDiamondCut(address,bytes memory)": "infinite",
								"_isInDiamondFullCutContracts(address)": "infinite",
								"_removeFunctions(address,bytes4[] memory)": "infinite",
								"_replaceFunctions(address,bytes4[] memory)": "infinite",
								"contractOwner()": "infinite",
								"diamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)": "infinite",
								"diamondStorage()": "infinite",
								"enforceIsAuthorizedForDiamondCut()": "infinite",
								"enforceIsContractOwner()": "infinite",
								"enforceNotPaused()": "infinite",
								"nonReentrant()": "infinite",
								"reentrancyGuardExit()": "infinite",
								"setContractOwner(address)": "infinite",
								"setDiamondFullCutContracts(address[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 565,
									"end": 15816,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e178e4b3c7a4296435aed64caa4c5a85d70b9ce07cfd8eec0f07149e31efa48864736f6c634300081c0033",
									".code": [
										{
											"begin": 565,
											"end": 15816,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 565,
											"end": 15816,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/facets/PoolFactoryFacet.sol",
								"Contracts/interfaces/IDiamondCut.sol",
								"Contracts/libraries/LibDiamond.sol",
								"Contracts/libraries/LibERC20Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DIAMOND_STORAGE_POSITION\":{\"details\":\"The Diamond Storage position key used in assembly to store the data struct.\"}},\"title\":\"LibDiamond\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides Diamond Storage and core EIP-2535 logic for adding, replacing, or removing facets.         Also includes:         - Contract ownership checks         - Pause/unpause logic         - Reentrancy guard         - multi-owner logic (optional)         - Additional fields like poolCreationFee, nextCallSetId         Updated to allow a special set of DiamondFullCut addresses to also call diamondCut().\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/libraries/LibDiamond.sol\":\"LibDiamond\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xe72d2fd89e151bc47a7fff066b7421fb9d270ba5d56453553b3a65e48f69ba08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://397a9f80e77b7ca275f5c482ffdb9e9bb972aa099b1ff49142fc5e0614858c6f\",\"dweb:/ipfs/QmR7VbpGDDa7buHX16ALMNmaGVRjdyZoRRKfi3wXrpHKwC\"]},\"Contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0xdc691561471964cc753d2eb0483c9ccf632b765c5586ab0043c0afc61c2b4644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6a9c81dc621488ff02faeb280485a080bd67cc875029c865625669701f39be\",\"dweb:/ipfs/QmTs3ickK3ymyweoGnHPybqTc5jr5exXfTatv1YnM3eDXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides Diamond Storage and core EIP-2535 logic for adding, replacing, or removing facets.         Also includes:         - Contract ownership checks         - Pause/unpause logic         - Reentrancy guard         - multi-owner logic (optional)         - Additional fields like poolCreationFee, nextCallSetId         Updated to allow a special set of DiamondFullCut addresses to also call diamondCut().",
						"version": 1
					}
				}
			},
			"Contracts/libraries/LibERC20Factory.sol": {
				"LibERC20Factory": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "LibERC20Factory",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/libraries/LibERC20Factory.sol\":479:2401  library LibERC20Factory {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/libraries/LibERC20Factory.sol\":479:2401  library LibERC20Factory {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf5c69fe23bdf36f95aa7aae218d4804b1c71f3a7f458dcdc1738c3aaba05e1b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf5c69fe23bdf36f95aa7aae218d4804b1c71f3a7f458dcdc1738c3aaba05e1b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF TLOAD PUSH10 0xFE23BDF36F95AA7AAE21 DUP14 BASEFEE DIV 0xB1 0xC7 0x1F GASPRICE PUSH32 0x458DCDC1738C3AABA05E1B64736F6C634300081C003300000000000000000000 ",
							"sourceMap": "479:1922:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf5c69fe23bdf36f95aa7aae218d4804b1c71f3a7f458dcdc1738c3aaba05e1b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF TLOAD PUSH10 0xFE23BDF36F95AA7AAE21 DUP14 BASEFEE DIV 0xB1 0xC7 0x1F GASPRICE PUSH32 0x458DCDC1738C3AABA05E1B64736F6C634300081C003300000000000000000000 ",
							"sourceMap": "479:1922:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"cloneERC20(address)": "infinite",
								"cloneERC20Deterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 479,
									"end": 2401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf5c69fe23bdf36f95aa7aae218d4804b1c71f3a7f458dcdc1738c3aaba05e1b64736f6c634300081c0033",
									".code": [
										{
											"begin": 479,
											"end": 2401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 2401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/facets/PoolFactoryFacet.sol",
								"Contracts/interfaces/IDiamondCut.sol",
								"Contracts/libraries/LibDiamond.sol",
								"Contracts/libraries/LibERC20Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"LibERC20Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library providing creation of minimal-proxy (clone) ERC20 tokens (e.g., for pool tokens).         Integrates seamlessly with other Diamond facets that clone an implementation          and then call `initialize(...)` on the clone.         No placeholders remain; logic is fully compatible with the updated system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/libraries/LibERC20Factory.sol\":\"LibERC20Factory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"Contracts/libraries/LibERC20Factory.sol\":{\"keccak256\":\"0x098d2136e1cae0b5ffef7eebab488c95fb182cdb8d4c262f7ab8876e46c431fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4371b3f634e91ebdeef971222d5ac0c24b3567b894bfedb518e0e4267bfe333\",\"dweb:/ipfs/QmZRHqfmZ7fSHmRU88oTYz8nxCLFqhvXe6t1NGMNqW7GiC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library providing creation of minimal-proxy (clone) ERC20 tokens (e.g., for pool tokens).         Integrates seamlessly with other Diamond facets that clone an implementation          and then call `initialize(...)` on the clone.         No placeholders remain; logic is fully compatible with the updated system.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							184
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 185,
							"src": "126:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 184,
										"src": "134:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "171:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "Clones",
							"nameLocation": "779:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1064:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 13,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1087:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 12,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															18,
															63
														],
														"referencedDeclaration": 63,
														"src": "1081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 11,
												"id": 16,
												"nodeType": "Return",
												"src": "1074:31:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "792:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "998:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1012:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1004:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:24:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1054:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1046:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:18:0"
									},
									"scope": 162,
									"src": "989:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1594:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 30,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1616:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1608:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1608:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1608:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1608:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 33,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1632:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "1604:123:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "1639:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 40,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1695:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1687:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 38,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1687:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 41,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1687:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 42,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1701:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1687:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 43,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1710:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 35,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "1660:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1667:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "1660:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 45,
															"nodeType": "RevertStatement",
															"src": "1653:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1761:553:0",
													"nodeType": "YulBlock",
													"src": "1761:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1979:4:0",
																						"nodeType": "YulLiteral",
																						"src": "1979:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1989:4:0",
																								"nodeType": "YulLiteral",
																								"src": "1989:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "1995:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1995:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1985:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1985:3:0"
																						},
																						"nativeSrc": "1985:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1985:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "1975:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:0"
																				},
																				"nativeSrc": "1975:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1975:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2013:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1972:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1972:2:0"
																		},
																		"nativeSrc": "1972:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1959:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:0"
																},
																"nativeSrc": "1959:104:0",
																"nodeType": "YulFunctionCall",
																"src": "1959:104:0"
															},
															"nativeSrc": "1959:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "1959:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2184:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2184:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2197:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2197:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2203:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2203:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2193:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2193:3:0"
																				},
																				"nativeSrc": "2193:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2193:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2220:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2220:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2190:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2190:2:0"
																		},
																		"nativeSrc": "2190:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2177:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:0"
																},
																"nativeSrc": "2177:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2177:77:0"
															},
															"nativeSrc": "2177:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2177:77:0"
														},
														{
															"nativeSrc": "2267:37:0",
															"nodeType": "YulAssignment",
															"src": "2267:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2286:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2286:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2293:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2299:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2299:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2279:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:0"
																},
																"nativeSrc": "2279:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2279:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2267:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2267:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1995:14:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2203:14:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "2267:8:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "2286:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 48,
												"nodeType": "InlineAssembly",
												"src": "1736:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2327:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 50,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2339:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2327:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "IfStatement",
												"src": "2323:85:0",
												"trueBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "2351:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 55,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2372:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2379:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "2372:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2372:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 59,
															"nodeType": "RevertStatement",
															"src": "2365:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1118:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1513:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1527:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1519:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:39:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:18:0"
									},
									"scope": 162,
									"src": "1504:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2891:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2927:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 73,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															80,
															127
														],
														"referencedDeclaration": 127,
														"src": "2908:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 72,
												"id": 78,
												"nodeType": "Return",
												"src": "2901:50:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2420:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2798:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2825:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2817:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2849:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2841:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:38:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:18:0"
									},
									"scope": 162,
									"src": "2789:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3531:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 94,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3553:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3545:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 92,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3545:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3545:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3559:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3545:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 97,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3569:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3545:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "IfStatement",
												"src": "3541:123:0",
												"trueBody": {
													"id": 110,
													"nodeType": "Block",
													"src": "3576:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 104,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3632:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3624:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 102,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3624:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3624:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3638:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3624:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 107,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "3647:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 99,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "3597:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3604:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "3597:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3597:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 109,
															"nodeType": "RevertStatement",
															"src": "3590:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3698:560:0",
													"nodeType": "YulBlock",
													"src": "3698:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3903:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3903:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3916:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3916:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3926:4:0",
																								"nodeType": "YulLiteral",
																								"src": "3926:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "3932:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "3932:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3922:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "3922:3:0"
																						},
																						"nativeSrc": "3922:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "3922:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3912:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:0"
																				},
																				"nativeSrc": "3912:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3912:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:48:0",
																				"nodeType": "YulLiteral",
																				"src": "3950:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3909:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3909:2:0"
																		},
																		"nativeSrc": "3909:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3896:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3896:6:0"
																},
																"nativeSrc": "3896:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3896:104:0"
															},
															"nativeSrc": "3896:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3896:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4134:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4134:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4140:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4140:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4130:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4130:3:0"
																				},
																				"nativeSrc": "4130:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4130:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4157:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4157:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4127:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4127:2:0"
																		},
																		"nativeSrc": "4127:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4114:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:0"
																},
																"nativeSrc": "4114:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4114:77:0"
															},
															"nativeSrc": "4114:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4114:77:0"
														},
														{
															"nativeSrc": "4204:44:0",
															"nodeType": "YulAssignment",
															"src": "4204:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4224:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4224:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4231:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4231:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4237:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4243:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4243:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4216:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4216:7:0"
																},
																"nativeSrc": "4216:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4216:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4204:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4204:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "3932:14:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "4140:14:0",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "4204:8:0",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "4243:4:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4224:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 112,
												"nodeType": "InlineAssembly",
												"src": "3673:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "4271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4291:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4283:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4283:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4271:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "4267:85:0",
												"trueBody": {
													"id": 124,
													"nodeType": "Block",
													"src": "4295:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "4316:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4323:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "4316:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4316:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 123,
															"nodeType": "RevertStatement",
															"src": "4309:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2964:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3393:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3429:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3421:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3461:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:83:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3521:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:18:0"
									},
									"scope": 162,
									"src": "3384:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4633:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4668:496:0",
													"nodeType": "YulBlock",
													"src": "4668:496:0",
													"statements": [
														{
															"nativeSrc": "4682:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4682:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4699:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4699:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:0"
																},
																"nativeSrc": "4693:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4693:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4686:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4686:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4728:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4728:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4733:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4733:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:0"
																		},
																		"nativeSrc": "4724:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4740:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4740:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4717:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:0"
																},
																"nativeSrc": "4717:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:0"
															},
															"nativeSrc": "4717:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4717:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4773:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4773:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4778:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4778:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4769:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:0"
																		},
																		"nativeSrc": "4769:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4785:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4762:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:0"
																},
																"nativeSrc": "4762:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4762:58:0"
															},
															"nativeSrc": "4762:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4762:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4844:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4844:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4849:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4849:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4840:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:0"
																		},
																		"nativeSrc": "4840:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4856:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4856:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4833:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:0"
																},
																"nativeSrc": "4833:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4833:38:0"
															},
															"nativeSrc": "4833:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4833:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4891:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4891:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4896:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4896:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:0"
																},
																"nativeSrc": "4884:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4884:55:0"
															},
															"nativeSrc": "4884:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4884:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4963:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4963:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4968:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4968:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:0"
																		},
																		"nativeSrc": "4959:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4975:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4975:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4952:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:0"
																},
																"nativeSrc": "4952:28:0",
																"nodeType": "YulFunctionCall",
																"src": "4952:28:0"
															},
															"nativeSrc": "4952:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "4952:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5004:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5004:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5009:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5009:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5000:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5000:3:0"
																		},
																		"nativeSrc": "5000:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5030:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5030:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5035:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5035:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:0"
																				},
																				"nativeSrc": "5026:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5042:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5042:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5016:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5016:9:0"
																		},
																		"nativeSrc": "5016:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4993:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:0"
																},
																"nativeSrc": "4993:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4993:55:0"
															},
															"nativeSrc": "4993:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4993:55:0"
														},
														{
															"nativeSrc": "5061:93:0",
															"nodeType": "YulAssignment",
															"src": "5061:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5092:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5092:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5097:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5097:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5088:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5088:3:0"
																				},
																				"nativeSrc": "5088:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5088:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5104:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5104:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5078:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5078:9:0"
																		},
																		"nativeSrc": "5078:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5111:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5111:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5074:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:0"
																},
																"nativeSrc": "5074:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5061:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5061:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4740:8:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "4856:14:0",
														"valueSize": 1
													},
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "5061:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4975:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 139,
												"nodeType": "InlineAssembly",
												"src": "4643:521:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4364:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4477:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4522:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4514:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4576:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4568:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4504:86:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4622:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4614:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:19:0"
									},
									"scope": 162,
									"src": "4468:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "5419:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5464:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5494:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5486:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5486:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 151,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															141,
															161
														],
														"referencedDeclaration": 141,
														"src": "5436:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 150,
												"id": 159,
												"nodeType": "Return",
												"src": "5429:71:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "5176:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5289:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5334:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5326:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:60:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5408:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5400:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:19:0"
									},
									"scope": 162,
									"src": "5280:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 163,
							"src": "771:4738:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:5410:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:1",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "Errors",
							"nameLocation": "419:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 172,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "557:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "574:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:1"
									},
									"src": "531:59:1"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 175,
									"name": "FailedCall",
									"nameLocation": "696:10:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"src": "690:19:1"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:1",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 178,
									"name": "FailedDeployment",
									"nameLocation": "772:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "766:25:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:1",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 183,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "884:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:1"
									},
									"src": "860:33:1"
								}
							],
							"scope": 185,
							"src": "411:484:1",
							"usedErrors": [
								172,
								175,
								178,
								183
							],
							"usedEvents": []
						}
					],
					"src": "100:796:1"
				},
				"id": 1
			},
			"Contracts/facets/PoolFactoryFacet.sol": {
				"ast": {
					"absolutePath": "Contracts/facets/PoolFactoryFacet.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							184
						],
						"IDiamondCut": [
							495
						],
						"LibDiamond": [
							1536
						],
						"LibERC20Factory": [
							1600
						],
						"PoolFactoryFacet": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "Contracts/libraries/LibDiamond.sol",
							"file": "../libraries/LibDiamond.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 454,
							"sourceUnit": 1537,
							"src": "741:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/libraries/LibERC20Factory.sol",
							"file": "../libraries/LibERC20Factory.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 454,
							"sourceUnit": 1601,
							"src": "779:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolFactoryFacet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "PoolFactoryFacet",
							"nameLocation": "832:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1142:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 191,
															"name": "LibDiamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "1152:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1536_$",
																"typeString": "type(library LibDiamond)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1163:12:2",
														"memberName": "nonReentrant",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1513,
														"src": "1152:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1152:25:2"
											},
											{
												"id": 196,
												"nodeType": "PlaceholderStatement",
												"src": "1187:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 197,
															"name": "LibDiamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "1198:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1536_$",
																"typeString": "type(library LibDiamond)"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1209:19:2",
														"memberName": "reentrancyGuardExit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1523,
														"src": "1198:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1198:32:2"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "985:128:2",
										"text": " @dev Reentrancy guard if using Diamond. \n      If standalone, remove or replace with your own approach."
									},
									"id": 203,
									"name": "nonReentrant",
									"nameLocation": "1127:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:2"
									},
									"src": "1118:119:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1396:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 206,
															"name": "LibDiamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "1406:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1536_$",
																"typeString": "type(library LibDiamond)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1417:16:2",
														"memberName": "enforceNotPaused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1535,
														"src": "1406:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1406:29:2"
											},
											{
												"id": 211,
												"nodeType": "PlaceholderStatement",
												"src": "1445:1:2"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1243:123:2",
										"text": " @dev Global pause check if using Diamond. \n      If standalone, remove or adapt to your own logic."
									},
									"id": 213,
									"name": "whenNotPaused",
									"nameLocation": "1380:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:2"
									},
									"src": "1371:82:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1586:65:2",
										"text": "Emitted when a new minimal-proxy aggregator token is created."
									},
									"eventSelector": "4f2ce4e40f623ca765fc0167a25cb7842ceaafb8d82d3dec26ca0d0e0d2d4896",
									"id": 220,
									"name": "PoolCreated",
									"nameLocation": "1662:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "1690:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1674:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "1719:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1703:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:54:2"
									},
									"src": "1656:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1734:247:2",
										"text": " @dev Additional debug logs for frontends.\n      - step: a short label for the portion of code\n      - info: a more descriptive string\n      - amount: a numeric value if relevant (like msg.value, refunded, etc.)"
									},
									"eventSelector": "dc70f72020d718fc1b94a02596a4f9e095702805287f044e5a9b980ae5d3156e",
									"id": 229,
									"name": "PoolCreateDebug",
									"nameLocation": "1992:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "step",
												"nameLocation": "2032:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2017:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "2053:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2046:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2046:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2075:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2067:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:80:2"
									},
									"src": "1986:102:2"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "3021:2165:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "454e544552",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c690244a596def234ad4aff29f0ae1473d355510f12ce67ba758c572eaab7ee",
																"typeString": "literal_string \"ENTER\""
															},
															"value": "ENTER"
														},
														{
															"hexValue": "637265617465506f6f6c2063616c6c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3130:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9b97fa4067f04ca32e55161fdeb5127841a2aa14af3fca149dbf7326b2d1746",
																"typeString": "literal_string \"createPool called\""
															},
															"value": "createPool called"
														},
														{
															"expression": {
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3151:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3155:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3151:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9c690244a596def234ad4aff29f0ae1473d355510f12ce67ba758c572eaab7ee",
																"typeString": "literal_string \"ENTER\""
															},
															{
																"typeIdentifier": "t_stringliteral_c9b97fa4067f04ca32e55161fdeb5127841a2aa14af3fca149dbf7326b2d1746",
																"typeString": "literal_string \"createPool called\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "PoolCreateDebug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3105:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,string memory,uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "3100:61:2"
											},
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3243:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "3209:36:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 253,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 252,
																"name": "LibDiamond.DiamondStorage",
																"nameLocations": [
																	"3209:10:2",
																	"3220:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "3209:25:2"
															},
															"referencedDeclaration": 551,
															"src": "3209:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 255,
															"name": "LibDiamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "3248:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1536_$",
																"typeString": "type(library LibDiamond)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:14:2",
														"memberName": "diamondStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 569,
														"src": "3248:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3248:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3209:66:2"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3293:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "3285:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3285:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"expression": {
														"id": 261,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3299:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage storage pointer"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3302:15:2",
													"memberName": "poolCreationFee",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 548,
													"src": "3299:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3285:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3331:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3337:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "3882:151:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 313,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3968:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3972:5:2",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3968:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3981:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3968:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f206665652072657175697265642c20736f206e6f20455448206163636570746564",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3984:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a56f7720dae7cbe89ff33b2b1b29833987e0204eb35a0779addc857c94b907aa",
																			"typeString": "literal_string \"No fee required, so no ETH accepted\""
																		},
																		"value": "No fee required, so no ETH accepted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a56f7720dae7cbe89ff33b2b1b29833987e0204eb35a0779addc857c94b907aa",
																			"typeString": "literal_string \"No fee required, so no ETH accepted\""
																		}
																	],
																	"id": 312,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3960:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3960:62:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "3960:62:2"
														}
													]
												},
												"id": 321,
												"nodeType": "IfStatement",
												"src": "3327:706:2",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "3340:536:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 268,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3401:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3405:5:2",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3401:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 270,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "3414:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3401:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820666f7220706f6f6c206372656174696f6e20666565",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3419:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_38b4bb0e57051b9076fa513dfb3183b834a7e8ed3fd82b66a22d6906e19b06d7",
																			"typeString": "literal_string \"Insufficient ETH for pool creation fee\""
																		},
																		"value": "Insufficient ETH for pool creation fee"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_38b4bb0e57051b9076fa513dfb3183b834a7e8ed3fd82b66a22d6906e19b06d7",
																			"typeString": "literal_string \"Insufficient ETH for pool creation fee\""
																		}
																	],
																	"id": 267,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3393:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3393:67:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "3393:67:2"
														},
														{
															"assignments": [
																276
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 276,
																	"mutability": "mutable",
																	"name": "refundAmount",
																	"nameLocation": "3482:12:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 311,
																	"src": "3474:20:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 275,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3474:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 281,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3497:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3501:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3497:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 279,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3509:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3474:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 282,
																	"name": "refundAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3582:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3597:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3582:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 310,
															"nodeType": "IfStatement",
															"src": "3578:288:2",
															"trueBody": {
																"id": 309,
																"nodeType": "Block",
																"src": "3600:266:2",
																"statements": [
																	{
																		"assignments": [
																			286,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 286,
																				"mutability": "mutable",
																				"name": "refundSuccess",
																				"nameLocation": "3624:13:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 309,
																				"src": "3619:18:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 285,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "3619:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 297,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 295,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3689:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 289,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3651:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 290,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3655:6:2",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3651:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 288,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3643:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_payable_$",
																								"typeString": "type(address payable)"
																							},
																							"typeName": {
																								"id": 287,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3643:8:2",
																								"stateMutability": "payable",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3643:19:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"id": 292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3663:4:2",
																					"memberName": "call",
																					"nodeType": "MemberAccess",
																					"src": "3643:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																					}
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"names": [
																					"value"
																				],
																				"nodeType": "FunctionCallOptions",
																				"options": [
																					{
																						"id": 293,
																						"name": "refundAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 276,
																						"src": "3675:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"src": "3643:45:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																					"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																				}
																			},
																			"id": 296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3643:49:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3618:74:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 299,
																					"name": "refundSuccess",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 286,
																					"src": "3718:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "526566756e64206661696c6564",
																					"id": 300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3733:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																						"typeString": "literal_string \"Refund failed\""
																					},
																					"value": "Refund failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																						"typeString": "literal_string \"Refund failed\""
																					}
																				],
																				"id": 298,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "3710:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3710:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 302,
																		"nodeType": "ExpressionStatement",
																		"src": "3710:39:2"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"hexValue": "524546554e44",
																					"id": 304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3788:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_aa4e0f6cdcea7b211950e8a75e39146abfef1b33054a194490366571502a5e48",
																						"typeString": "literal_string \"REFUND\""
																					},
																					"value": "REFUND"
																				},
																				{
																					"hexValue": "55736572206f76657270616964206372656174696f6e206665652c20726566756e646564",
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3798:38:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_2a0febc9db608e47aa2ea0912611143a79696c7d638d3d8618219e011b2833ca",
																						"typeString": "literal_string \"User overpaid creation fee, refunded\""
																					},
																					"value": "User overpaid creation fee, refunded"
																				},
																				{
																					"id": 306,
																					"name": "refundAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 276,
																					"src": "3838:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_aa4e0f6cdcea7b211950e8a75e39146abfef1b33054a194490366571502a5e48",
																						"typeString": "literal_string \"REFUND\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_2a0febc9db608e47aa2ea0912611143a79696c7d638d3d8618219e011b2833ca",
																						"typeString": "literal_string \"User overpaid creation fee, refunded\""
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 303,
																				"name": "PoolCreateDebug",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "3772:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																					"typeString": "function (string memory,string memory,uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3772:79:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 308,
																		"nodeType": "EmitStatement",
																		"src": "3767:84:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 324,
																	"name": "implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "4125:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 323,
																"name": "_isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "4113:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4113:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496d706c656d656e746174696f6e206e6f74206120636f6e7472616374",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4142:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca6cff86f51ffdde474c69ae7d55d306609103b77c0319465dc0260a574a5a",
																"typeString": "literal_string \"Implementation not a contract\""
															},
															"value": "Implementation not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca6cff86f51ffdde474c69ae7d55d306609103b77c0319465dc0260a574a5a",
																"typeString": "literal_string \"Implementation not a contract\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4105:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4105:69:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "434845434b5f494d504c",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4205:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_251aba073403b308dd66cc67e16f45cfbf6866f54a23b645833b47ecea01ff7a",
																"typeString": "literal_string \"CHECK_IMPL\""
															},
															"value": "CHECK_IMPL"
														},
														{
															"hexValue": "496d706c656d656e746174696f6e2061646472657373206973206120636f6e7472616374",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4219:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6734fcd06e6ee1d1211e162185a3cd84ef7f2cafb25ed385b734a56cc8c243f",
																"typeString": "literal_string \"Implementation address is a contract\""
															},
															"value": "Implementation address is a contract"
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4259:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_251aba073403b308dd66cc67e16f45cfbf6866f54a23b645833b47ecea01ff7a",
																"typeString": "literal_string \"CHECK_IMPL\""
															},
															{
																"typeIdentifier": "t_stringliteral_d6734fcd06e6ee1d1211e162185a3cd84ef7f2cafb25ed385b734a56cc8c243f",
																"typeString": "literal_string \"Implementation address is a contract\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 329,
														"name": "PoolCreateDebug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4189:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,string memory,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4189:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "EmitStatement",
												"src": "4184:77:2"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 335,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4328:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 338,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "4363:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 336,
																"name": "LibERC20Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "4336:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_LibERC20Factory_$1600_$",
																	"typeString": "type(library LibERC20Factory)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4352:10:2",
															"memberName": "cloneERC20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1558,
															"src": "4336:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4336:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4328:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "4328:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "clone",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "4396:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4413:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4405:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4405:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4405:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4396:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c6f6e65206661696c6564",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4417:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56c0cf43ccb7ef818529168c169a871c9903f26b426e829c12658aa0141d38b8",
																"typeString": "literal_string \"Clone failed\""
															},
															"value": "Clone failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56c0cf43ccb7ef818529168c169a871c9903f26b426e829c12658aa0141d38b8",
																"typeString": "literal_string \"Clone failed\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4388:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4388:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "4388:44:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "434c4f4e45",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4463:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a793ad28ee4e6ecc8a34a57d0b7687d3313fb963487b8149ed18f6a18d493ce",
																"typeString": "literal_string \"CLONE\""
															},
															"value": "CLONE"
														},
														{
															"hexValue": "45524332302061676772656761746f7220636c6f6e6564207375636365737366756c6c79",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4472:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d203d24b99e03d15f76592463f6da27aa8a05e78423f0182a050c85b21d8c965",
																"typeString": "literal_string \"ERC20 aggregator cloned successfully\""
															},
															"value": "ERC20 aggregator cloned successfully"
														},
														{
															"hexValue": "30",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4512:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6a793ad28ee4e6ecc8a34a57d0b7687d3313fb963487b8149ed18f6a18d493ce",
																"typeString": "literal_string \"CLONE\""
															},
															{
																"typeIdentifier": "t_stringliteral_d203d24b99e03d15f76592463f6da27aa8a05e78423f0182a050c85b21d8c965",
																"typeString": "literal_string \"ERC20 aggregator cloned successfully\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 352,
														"name": "PoolCreateDebug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4447:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,string memory,uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4447:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "EmitStatement",
												"src": "4442:72:2"
											},
											{
												"assignments": [
													359,
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "callSuccess",
														"nameLocation": "4571:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "4566:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 358,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4566:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "retData",
														"nameLocation": "4597:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "4584:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 360,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"arguments": [
														{
															"id": 364,
															"name": "initData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4619:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 362,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4608:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4614:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "4608:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4608:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4565:63:2"
											},
											{
												"condition": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4713:12:2",
													"subExpression": {
														"id": 367,
														"name": "callSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4714:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "4709:228:2",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "4727:210:2",
													"statements": [
														{
															"assignments": [
																370
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 370,
																	"mutability": "mutable",
																	"name": "failMsg",
																	"nameLocation": "4790:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 385,
																	"src": "4776:21:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 369,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 374,
															"initialValue": {
																"arguments": [
																	{
																		"id": 372,
																		"name": "retData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "4830:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 371,
																	"name": "_decodeAndBubbleUpRetMessages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "4800:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (string memory)"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4800:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4776:62:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "494e49545f4641494c",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4873:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_affd1ddf30a6870df5368a6c67c32cedc409a4d80c883696a455c9082bd53d6b",
																			"typeString": "literal_string \"INIT_FAIL\""
																		},
																		"value": "INIT_FAIL"
																	},
																	{
																		"id": 377,
																		"name": "failMsg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "4886:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4895:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_affd1ddf30a6870df5368a6c67c32cedc409a4d80c883696a455c9082bd53d6b",
																			"typeString": "literal_string \"INIT_FAIL\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 375,
																	"name": "PoolCreateDebug",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "4857:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (string memory,string memory,uint256)"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4857:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 380,
															"nodeType": "EmitStatement",
															"src": "4852:45:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 382,
																		"name": "failMsg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "4918:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 381,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4911:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4911:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "ExpressionStatement",
															"src": "4911:15:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "494e49545f4f4b",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4967:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f937be034a134c05c560777273bde26da04fa9ed3eecbf480f8169b33beb3",
																"typeString": "literal_string \"INIT_OK\""
															},
															"value": "INIT_OK"
														},
														{
															"hexValue": "41676772656761746f7220696e697469616c697a6174696f6e2073756363657373",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4978:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad63bd4d1500e762b40e7e2e29ec46074b0db4afdcd8f17f47845e47fc9844b8",
																"typeString": "literal_string \"Aggregator initialization success\""
															},
															"value": "Aggregator initialization success"
														},
														{
															"hexValue": "30",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5015:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_277f937be034a134c05c560777273bde26da04fa9ed3eecbf480f8169b33beb3",
																"typeString": "literal_string \"INIT_OK\""
															},
															{
																"typeIdentifier": "t_stringliteral_ad63bd4d1500e762b40e7e2e29ec46074b0db4afdcd8f17f47845e47fc9844b8",
																"typeString": "literal_string \"Aggregator initialization success\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 387,
														"name": "PoolCreateDebug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4951:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,string memory,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4951:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "4946:71:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 394,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5071:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 395,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5078:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5082:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5078:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "5059:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5059:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "EmitStatement",
												"src": "5054:35:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "444f4e45",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5120:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf30dca4844f1b4e184057cad892f5906da41c5e85bfd0703eaaa4b15e68a3f",
																"typeString": "literal_string \"DONE\""
															},
															"value": "DONE"
														},
														{
															"hexValue": "506f6f6c206372656174696f6e20636f6d706c657465",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5128:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b635fbe801938c0002dcb250003f6cbd6c2dbd23fe2bd9d74c004f76daa917c9",
																"typeString": "literal_string \"Pool creation complete\""
															},
															"value": "Pool creation complete"
														},
														{
															"hexValue": "30",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5154:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ccf30dca4844f1b4e184057cad892f5906da41c5e85bfd0703eaaa4b15e68a3f",
																"typeString": "literal_string \"DONE\""
															},
															{
																"typeIdentifier": "t_stringliteral_b635fbe801938c0002dcb250003f6cbd6c2dbd23fe2bd9d74c004f76daa917c9",
																"typeString": "literal_string \"Pool creation complete\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 399,
														"name": "PoolCreateDebug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "5104:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,string memory,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5104:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "EmitStatement",
												"src": "5099:57:2"
											},
											{
												"expression": {
													"id": 405,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "5174:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 242,
												"id": 406,
												"nodeType": "Return",
												"src": "5167:12:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2240:573:2",
										"text": " @notice Creates a minimal-proxy clone of `implementation`, then calls `initData` on it \n         to initialize the new aggregator ERC20 pool. \n         - Potentially charges a creation fee if `ds.poolCreationFee > 0`.\n         - No usage-limit checks in this version, so anyone can call.\n @param implementation The aggregator's ERC20 implementation address.\n @param initData Calldata for `initialize(...)`, e.g. `initialize(\"MyLP\",\"MLP\",owner)`.\n @return clone The address of the newly created aggregator token."
									},
									"functionSelector": "9dd41df2",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 236,
												"name": "nonReentrant",
												"nameLocations": [
													"2950:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "2950:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2950:12:2"
										},
										{
											"id": 239,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 238,
												"name": "whenNotPaused",
												"nameLocations": [
													"2971:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "2971:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2971:13:2"
										}
									],
									"name": "createPool",
									"nameLocation": "2827:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2855:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2847:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "initData",
												"nameLocation": "2894:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2879:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2879:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:71:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "clone",
												"nameLocation": "3010:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3002:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3001:15:2"
									},
									"scope": 453,
									"src": "2818:2368:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "5460:124:2",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "5478:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "5470:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"nodeType": "VariableDeclarationStatement",
												"src": "5470:12:2"
											},
											{
												"AST": {
													"nativeSrc": "5501:50:2",
													"nodeType": "YulBlock",
													"src": "5501:50:2",
													"statements": [
														{
															"nativeSrc": "5515:26:2",
															"nodeType": "YulAssignment",
															"src": "5515:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nativeSrc": "5535:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "5535:5:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "5523:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "5523:11:2"
																},
																"nativeSrc": "5523:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5523:18:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5515:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5515:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "5535:5:2",
														"valueSize": 1
													},
													{
														"declaration": 417,
														"isOffset": false,
														"isSlot": false,
														"src": "5515:4:2",
														"valueSize": 1
													}
												],
												"id": 419,
												"nodeType": "InlineAssembly",
												"src": "5492:59:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5568:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5575:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5568:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 423,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5567:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 415,
												"id": 424,
												"nodeType": "Return",
												"src": "5560:17:2"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "5329:62:2",
										"text": " @notice Check if `_addr` has contract code."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nameLocation": "5405:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5425:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5417:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5416:15:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5454:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5454:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5453:6:2"
									},
									"scope": 453,
									"src": "5396:188:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "5818:223:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 434,
															"name": "retData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5832:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5840:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5832:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3638",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5849:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_68_by_1",
															"typeString": "int_const 68"
														},
														"value": "68"
													},
													"src": "5832:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "5828:90:2",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "5853:65:2",
													"statements": [
														{
															"expression": {
																"hexValue": "506f6f6c20696e6974206661696c656420776974686f757420726561736f6e",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5874:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5f11c945c5534e61a8c6a4852df8510abf4995a090c6bd14ccb3b4af53df2ab7",
																	"typeString": "literal_string \"Pool init failed without reason\""
																},
																"value": "Pool init failed without reason"
															},
															"functionReturnParameters": 433,
															"id": 439,
															"nodeType": "Return",
															"src": "5867:40:2"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "5936:53:2",
													"nodeType": "YulBlock",
													"src": "5936:53:2",
													"statements": [
														{
															"nativeSrc": "5950:29:2",
															"nodeType": "YulAssignment",
															"src": "5950:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "retData",
																		"nativeSrc": "5965:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "5965:7:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5974:4:2",
																		"nodeType": "YulLiteral",
																		"src": "5974:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5961:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5961:3:2"
																},
																"nativeSrc": "5961:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5961:18:2"
															},
															"variableNames": [
																{
																	"name": "retData",
																	"nativeSrc": "5950:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "5950:7:2"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 429,
														"isOffset": false,
														"isSlot": false,
														"src": "5950:7:2",
														"valueSize": 1
													},
													{
														"declaration": 429,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:7:2",
														"valueSize": 1
													}
												],
												"id": 442,
												"nodeType": "InlineAssembly",
												"src": "5927:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "retData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "6016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6026:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "6026:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 448,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6025:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														],
														"expression": {
															"id": 443,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6005:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6009:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6005:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6005:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 433,
												"id": 450,
												"nodeType": "Return",
												"src": "5998:36:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "5590:97:2",
										"text": " @notice Decodes a revert reason from the returned data if the init call fails."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_decodeAndBubbleUpRetMessages",
									"nameLocation": "5701:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "retData",
												"nameLocation": "5744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5731:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5731:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5730:22:2"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5799:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5799:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5798:15:2"
									},
									"scope": 453,
									"src": "5692:349:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 454,
							"src": "823:5220:2",
							"usedErrors": [
								172,
								178
							],
							"usedEvents": [
								220,
								229
							]
						}
					],
					"src": "32:6012:2"
				},
				"id": 2
			},
			"Contracts/interfaces/IDiamondCut.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/IDiamondCut.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							495
						]
					},
					"id": 496,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDiamondCut",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "58:117:3",
								"text": " @title IDiamondCut\n @notice The EIP-2535 DiamondCut interface for adding, replacing, or removing facets."
							},
							"fullyImplemented": false,
							"id": 495,
							"linearizedBaseContracts": [
								495
							],
							"name": "IDiamondCut",
							"nameLocation": "186:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondCut.FacetCutAction",
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "204:96:3",
										"text": " @dev FacetCutAction enumerates the possible actions: Add, Replace, or Remove."
									},
									"id": 461,
									"members": [
										{
											"id": 458,
											"name": "Add",
											"nameLocation": "335:3:3",
											"nodeType": "EnumValue",
											"src": "335:3:3"
										},
										{
											"id": 459,
											"name": "Replace",
											"nameLocation": "348:7:3",
											"nodeType": "EnumValue",
											"src": "348:7:3"
										},
										{
											"id": 460,
											"name": "Remove",
											"nameLocation": "365:6:3",
											"nodeType": "EnumValue",
											"src": "365:6:3"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "310:14:3",
									"nodeType": "EnumDefinition",
									"src": "305:72:3"
								},
								{
									"canonicalName": "IDiamondCut.FacetCut",
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "383:125:3",
										"text": " @dev FacetCut defines a facet address plus a list of function selectors, along with the action to perform."
									},
									"id": 471,
									"members": [
										{
											"constant": false,
											"id": 464,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "547:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 471,
											"src": "539:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 463,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "539:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 467,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "584:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 471,
											"src": "569:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$461",
												"typeString": "enum IDiamondCut.FacetCutAction"
											},
											"typeName": {
												"id": 466,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 465,
													"name": "FacetCutAction",
													"nameLocations": [
														"569:14:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 461,
													"src": "569:14:3"
												},
												"referencedDeclaration": 461,
												"src": "569:14:3",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$461",
													"typeString": "enum IDiamondCut.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 470,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nameLocation": "609:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 471,
											"src": "600:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 468,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 469,
												"nodeType": "ArrayTypeName",
												"src": "600:8:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "520:8:3",
									"nodeType": "StructDefinition",
									"scope": 495,
									"src": "513:120:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "639:510:3",
										"text": " @notice diamondCut implements the core EIP-2535 logic:\n         - Add/Replace/Remove facet functions according to _diamondCut\n         - Optionally execute _calldata on _init for initialization or additional setup\n @param _diamondCut Array describing the facet addresses and function selectors\n @param _init The address of a contract/facet to execute _calldata\n @param _calldata The function call, including selector and arguments, to be delegatecalled on _init"
									},
									"functionSelector": "1f931c1c",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "1163:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "1203:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1183:31:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 474,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 473,
															"name": "FacetCut",
															"nameLocations": [
																"1183:8:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 471,
															"src": "1183:8:3"
														},
														"referencedDeclaration": 471,
														"src": "1183:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$471_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 475,
													"nodeType": "ArrayTypeName",
													"src": "1183:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "1232:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1224:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1247:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1247:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:104:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:3"
									},
									"scope": 495,
									"src": "1154:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "1293:71:3",
										"text": " @dev Emitted when the diamondCut function is called."
									},
									"eventSelector": "8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673",
									"id": 494,
									"name": "DiamondCut",
									"nameLocation": "1375:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "1397:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1386:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 486,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 485,
															"name": "FacetCut",
															"nameLocations": [
																"1386:8:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 471,
															"src": "1386:8:3"
														},
														"referencedDeclaration": 471,
														"src": "1386:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$471_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 487,
													"nodeType": "ArrayTypeName",
													"src": "1386:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "1418:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1410:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1431:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1425:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:56:3"
									},
									"src": "1369:73:3"
								}
							],
							"scope": 496,
							"src": "176:1268:3",
							"usedErrors": [],
							"usedEvents": [
								494
							]
						}
					],
					"src": "32:1413:3"
				},
				"id": 3
			},
			"Contracts/libraries/LibDiamond.sol": {
				"ast": {
					"absolutePath": "Contracts/libraries/LibDiamond.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							495
						],
						"LibDiamond": [
							1536
						]
					},
					"id": 1537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 497,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "Contracts/interfaces/IDiamondCut.sol",
							"file": "../interfaces/IDiamondCut.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1537,
							"sourceUnit": 496,
							"src": "58:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibDiamond",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 499,
								"nodeType": "StructuredDocumentation",
								"src": "99:465:4",
								"text": " @title LibDiamond\n @notice Provides Diamond Storage and core EIP-2535 logic for adding, replacing, or removing facets.\n         Also includes:\n         - Contract ownership checks\n         - Pause/unpause logic\n         - Reentrancy guard\n         - multi-owner logic (optional)\n         - Additional fields like poolCreationFee, nextCallSetId\n         Updated to allow a special set of DiamondFullCut addresses to also call diamondCut()."
							},
							"fullyImplemented": true,
							"id": 1536,
							"linearizedBaseContracts": [
								1536
							],
							"name": "LibDiamond",
							"nameLocation": "573:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "590:99:4",
										"text": " @dev The Diamond Storage position key used in assembly to store the data struct."
									},
									"id": 505,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nameLocation": "711:24:4",
									"nodeType": "VariableDeclaration",
									"scope": 1536,
									"src": "694:89:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 501,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "694:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765",
												"id": 503,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "748:34:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												},
												"value": "diamond.standard.diamond.storage"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												}
											],
											"id": 502,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "738:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 504,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "738:45:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibDiamond.FacetAddressAndPosition",
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "790:176:4",
										"text": " @dev Stores facet addresses, function selectors, owner address, optional multiOwners array,\n      pause states, reentrancy state, and any extra fields."
									},
									"id": 511,
									"members": [
										{
											"constant": false,
											"id": 508,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "1020:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 511,
											"src": "1012:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 507,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 510,
											"mutability": "mutable",
											"name": "selectorPosition",
											"nameLocation": "1049:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 511,
											"src": "1042:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 509,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1042:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetAddressAndPosition",
									"nameLocation": "978:23:4",
									"nodeType": "StructDefinition",
									"scope": 1536,
									"src": "971:101:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.FacetFunctionSelectors",
									"id": 517,
									"members": [
										{
											"constant": false,
											"id": 514,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nameLocation": "1127:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 517,
											"src": "1118:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 512,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1118:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 513,
												"nodeType": "ArrayTypeName",
												"src": "1118:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 516,
											"mutability": "mutable",
											"name": "facetAddressPosition",
											"nameLocation": "1162:20:4",
											"nodeType": "VariableDeclaration",
											"scope": 517,
											"src": "1154:28:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1154:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetFunctionSelectors",
									"nameLocation": "1085:22:4",
									"nodeType": "StructDefinition",
									"scope": 1536,
									"src": "1078:111:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.DiamondStorage",
									"id": 551,
									"members": [
										{
											"constant": false,
											"id": 519,
											"mutability": "mutable",
											"name": "contractOwner",
											"nameLocation": "1277:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "1269:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 518,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1269:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 522,
											"mutability": "mutable",
											"name": "multiOwners",
											"nameLocation": "1389:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "1379:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 521,
												"nodeType": "ArrayTypeName",
												"src": "1379:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 525,
											"mutability": "mutable",
											"name": "diamondFullCutContracts",
											"nameLocation": "1606:23:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "1596:33:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 524,
												"nodeType": "ArrayTypeName",
												"src": "1596:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 530,
											"mutability": "mutable",
											"name": "selectorToFacetAndPosition",
											"nameLocation": "1779:26:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "1736:69:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
												"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"
											},
											"typeName": {
												"id": 529,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 526,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1744:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "1736:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
													"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 527,
														"name": "FacetAddressAndPosition",
														"nameLocations": [
															"1754:23:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 511,
														"src": "1754:23:4"
													},
													"referencedDeclaration": 511,
													"src": "1754:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage_ptr",
														"typeString": "struct LibDiamond.FacetAddressAndPosition"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 535,
											"mutability": "mutable",
											"name": "facetFunctionSelectors",
											"nameLocation": "1956:22:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "1913:65:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
												"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors)"
											},
											"typeName": {
												"id": 534,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1913:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
													"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 532,
														"name": "FacetFunctionSelectors",
														"nameLocations": [
															"1932:22:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "1932:22:4"
													},
													"referencedDeclaration": 517,
													"src": "1932:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage_ptr",
														"typeString": "struct LibDiamond.FacetFunctionSelectors"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 538,
											"mutability": "mutable",
											"name": "facetAddresses",
											"nameLocation": "2037:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2027:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 537,
												"nodeType": "ArrayTypeName",
												"src": "2027:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 540,
											"mutability": "mutable",
											"name": "_locked",
											"nameLocation": "2095:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2090:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 539,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2090:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 542,
											"mutability": "mutable",
											"name": "paused",
											"nameLocation": "2147:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2142:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 541,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2142:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 546,
											"mutability": "mutable",
											"name": "systemPaused",
											"nameLocation": "2254:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2229:37:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"typeName": {
												"id": 545,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2229:24:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
													"typeString": "mapping(bytes32 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 548,
											"mutability": "mutable",
											"name": "poolCreationFee",
											"nameLocation": "2322:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2314:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 547,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2314:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 550,
											"mutability": "mutable",
											"name": "nextCallSetId",
											"nameLocation": "2355:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 551,
											"src": "2347:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2347:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondStorage",
									"nameLocation": "1202:14:4",
									"nodeType": "StructDefinition",
									"scope": 1536,
									"src": "1195:1180:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.FacetCutAction",
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "2381:84:4",
										"text": " @dev Action types for diamondCut operations: Add, Replace, Remove"
									},
									"id": 556,
									"members": [
										{
											"id": 553,
											"name": "Add",
											"nameLocation": "2500:3:4",
											"nodeType": "EnumValue",
											"src": "2500:3:4"
										},
										{
											"id": 554,
											"name": "Replace",
											"nameLocation": "2513:7:4",
											"nodeType": "EnumValue",
											"src": "2513:7:4"
										},
										{
											"id": 555,
											"name": "Remove",
											"nameLocation": "2530:6:4",
											"nodeType": "EnumValue",
											"src": "2530:6:4"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "2475:14:4",
									"nodeType": "EnumDefinition",
									"src": "2470:72:4"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "2945:121:4",
										"statements": [
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2963:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "2955:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 563,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2955:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"id": 565,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "2974:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2955:43:4"
											},
											{
												"AST": {
													"nativeSrc": "3017:43:4",
													"nodeType": "YulBlock",
													"src": "3017:43:4",
													"statements": [
														{
															"nativeSrc": "3031:19:4",
															"nodeType": "YulAssignment",
															"src": "3031:19:4",
															"value": {
																"name": "position",
																"nativeSrc": "3042:8:4",
																"nodeType": "YulIdentifier",
																"src": "3042:8:4"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nativeSrc": "3031:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3031:7:4"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": true,
														"src": "3031:7:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 564,
														"isOffset": false,
														"isSlot": false,
														"src": "3042:8:4",
														"valueSize": 1
													}
												],
												"id": 567,
												"nodeType": "InlineAssembly",
												"src": "3008:52:4"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "2769:95:4",
										"text": " @notice Returns a reference to the DiamondStorage struct for internal usage."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondStorage",
									"nameLocation": "2878:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:2:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "ds",
												"nameLocation": "2941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2918:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
													"typeString": "struct LibDiamond.DiamondStorage"
												},
												"typeName": {
													"id": 560,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 559,
														"name": "DiamondStorage",
														"nameLocations": [
															"2918:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 551,
														"src": "2918:14:4"
													},
													"referencedDeclaration": 551,
													"src": "2918:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2917:27:4"
									},
									"scope": 1536,
									"src": "2869:197:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3227:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 575,
															"name": "diamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3244:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
																"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3244:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage storage pointer"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3261:13:4",
													"memberName": "contractOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 519,
													"src": "3244:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 574,
												"id": 578,
												"nodeType": "Return",
												"src": "3237:37:4"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "3072:93:4",
										"text": " @notice Retrieves the single fallback contract owner address from storage."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractOwner",
									"nameLocation": "3179:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3192:2:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3218:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:9:4"
									},
									"scope": 1536,
									"src": "3170:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3478:99:4",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3511:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "3488:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 587,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 586,
																"name": "DiamondStorage",
																"nameLocations": [
																	"3488:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "3488:14:4"
															},
															"referencedDeclaration": 551,
															"src": "3488:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 589,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "3516:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3516:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3488:44:4"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 592,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3542:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3545:13:4",
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "3542:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 595,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "3561:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3542:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "3542:28:4"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3287:132:4",
										"text": " @notice Sets the fallback contract owner in storage.\n @param _newOwner The address to set as contractOwner."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setContractOwner",
									"nameLocation": "3433:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "3458:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3450:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:19:4"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3478:0:4"
									},
									"scope": 1536,
									"src": "3424:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "4151:407:4",
										"statements": [
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "4184:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "4161:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 607,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 606,
																"name": "DiamondStorage",
																"nameLocations": [
																	"4161:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "4161:14:4"
															},
															"referencedDeclaration": 551,
															"src": "4161:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 609,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "4189:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4189:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4161:44:4"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4242:33:4",
													"subExpression": {
														"expression": {
															"id": 612,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4249:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4252:23:4",
														"memberName": "diamondFullCutContracts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 525,
														"src": "4249:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "4242:33:4"
											},
											{
												"body": {
													"id": 649,
													"nodeType": "Block",
													"src": "4371:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 628,
																				"name": "_fullCutContracts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "4393:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 630,
																			"indexExpression": {
																				"id": 629,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "4411:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4393:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4425:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4417:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 631,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4417:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4417:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4393:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2066756c6c43757420616464726573732063616e6e6f74206265207a65726f",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4429:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_46575d9620556b631d3a1554ffb4de1fdc4a8b666f4d2187f2a2818dbbc7141f",
																			"typeString": "literal_string \"LibDiamond: fullCut address cannot be zero\""
																		},
																		"value": "LibDiamond: fullCut address cannot be zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_46575d9620556b631d3a1554ffb4de1fdc4a8b666f4d2187f2a2818dbbc7141f",
																			"typeString": "literal_string \"LibDiamond: fullCut address cannot be zero\""
																		}
																	],
																	"id": 627,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4385:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4385:89:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "4385:89:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 644,
																			"name": "_fullCutContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "4520:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 646,
																		"indexExpression": {
																			"id": 645,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "4538:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4520:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 639,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "4488:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4491:23:4",
																		"memberName": "diamondFullCutContracts",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 525,
																		"src": "4488:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4515:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4488:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4488:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 648,
															"nodeType": "ExpressionStatement",
															"src": "4488:53:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 620,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "4336:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 621,
															"name": "_fullCutContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "4340:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4358:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4340:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4336:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"initializationExpression": {
													"assignments": [
														617
													],
													"declarations": [
														{
															"constant": false,
															"id": 617,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4329:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 650,
															"src": "4321:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 616,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4321:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 619,
													"initialValue": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4333:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4321:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4366:3:4",
														"subExpression": {
															"id": 624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4366:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 626,
													"nodeType": "ExpressionStatement",
													"src": "4366:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4316:236:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3816:249:4",
										"text": " @notice Sets an **entire array** of addresses that are allowed to call diamondCut, \n         in addition to the single contractOwner.\n @param _fullCutContracts An array of addresses (like your 0xb971... and 0xbbac...)."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDiamondFullCutContracts",
									"nameLocation": "4079:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "_fullCutContracts",
												"nameLocation": "4123:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "4106:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 601,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4106:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 602,
													"nodeType": "ArrayTypeName",
													"src": "4106:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:36:4"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4151:0:4"
									},
									"scope": 1536,
									"src": "4070:488:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "4780:268:4",
										"statements": [
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "4813:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "4790:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 661,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 660,
																"name": "DiamondStorage",
																"nameLocations": [
																	"4790:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "4790:14:4"
															},
															"referencedDeclaration": 551,
															"src": "4790:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 663,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "4818:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4818:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4790:44:4"
											},
											{
												"body": {
													"id": 688,
													"nodeType": "Block",
													"src": "4908:112:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 678,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "4926:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4929:23:4",
																		"memberName": "diamondFullCutContracts",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 525,
																		"src": "4926:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 681,
																	"indexExpression": {
																		"id": 680,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "4953:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4926:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 682,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4959:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4926:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 687,
															"nodeType": "IfStatement",
															"src": "4922:88:4",
															"trueBody": {
																"id": 686,
																"nodeType": "Block",
																"src": "4966:44:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4991:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 659,
																		"id": 685,
																		"nodeType": "Return",
																		"src": "4984:11:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "4864:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 671,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "4868:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4871:23:4",
															"memberName": "diamondFullCutContracts",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 525,
															"src": "4868:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4895:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4868:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4864:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"initializationExpression": {
													"assignments": [
														667
													],
													"declarations": [
														{
															"constant": false,
															"id": 667,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4857:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 689,
															"src": "4849:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 666,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4849:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 669,
													"initialValue": {
														"hexValue": "30",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4861:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4849:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4903:3:4",
														"subExpression": {
															"id": 675,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4903:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 677,
													"nodeType": "ExpressionStatement",
													"src": "4903:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4844:176:4"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5036:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 659,
												"id": 691,
												"nodeType": "Return",
												"src": "5029:12:4"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "4564:130:4",
										"text": " @notice Checks if an address is in the diamondFullCutContracts array.\n @param _addr The address to check."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInDiamondFullCutContracts",
									"nameLocation": "4708:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "4745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:15:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4774:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4774:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:6:4"
									},
									"scope": 1536,
									"src": "4699:349:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "5280:381:4",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5313:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "5290:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 698,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 697,
																"name": "DiamondStorage",
																"nameLocations": [
																	"5290:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "5290:14:4"
															},
															"referencedDeclaration": 551,
															"src": "5290:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "5318:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5290:44:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 703,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5349:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5353:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5349:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 705,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5363:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5366:13:4",
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "5363:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5349:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 710,
												"nodeType": "IfStatement",
												"src": "5345:99:4",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "5381:63:4",
													"statements": [
														{
															"functionReturnParameters": 696,
															"id": 708,
															"nodeType": "Return",
															"src": "5395:7:4"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5486:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5490:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5486:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 711,
														"name": "_isInDiamondFullCutContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "5457:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5457:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "5453:129:4",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "5499:83:4",
													"statements": [
														{
															"functionReturnParameters": 696,
															"id": 715,
															"nodeType": "Return",
															"src": "5513:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4c69624469616d6f6e643a204d757374206265206f776e6572206f72204469616d6f6e6446756c6c43757420636f6e7472616374",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5599:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28fae54102727231b3525197ebc85db38f159fc16e2dbec04e56a55d1493bff8",
																"typeString": "literal_string \"LibDiamond: Must be owner or DiamondFullCut contract\""
															},
															"value": "LibDiamond: Must be owner or DiamondFullCut contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_28fae54102727231b3525197ebc85db38f159fc16e2dbec04e56a55d1493bff8",
																"typeString": "literal_string \"LibDiamond: Must be owner or DiamondFullCut contract\""
															}
														],
														"id": 718,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5592:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5592:62:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5054:163:4",
										"text": " @notice Allows diamondCut calls if msg.sender is EITHER the single contractOwner OR\n         one of the diamondFullCutContracts addresses."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceIsAuthorizedForDiamondCut",
									"nameLocation": "5231:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5263:2:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5280:0:4"
									},
									"scope": 1536,
									"src": "5222:439:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5942:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 727,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5960:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5964:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5960:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 729,
																	"name": "contractOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5974:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5974:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5960:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5991:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															},
															"value": "LibDiamond: Must be contract owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5952:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5952:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "5952:76:4"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceIsContractOwner",
									"nameLocation": "5903:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5925:2:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:4"
									},
									"scope": 1536,
									"src": "5894:141:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "6753:1014:4",
										"statements": [
											{
												"body": {
													"id": 824,
													"nodeType": "Block",
													"src": "6835:877:4",
													"statements": [
														{
															"assignments": [
																760
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 760,
																	"mutability": "mutable",
																	"name": "action",
																	"nameLocation": "6864:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 824,
																	"src": "6849:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$556",
																		"typeString": "enum LibDiamond.FacetCutAction"
																	},
																	"typeName": {
																		"id": 759,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 758,
																			"name": "FacetCutAction",
																			"nameLocations": [
																				"6849:14:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 556,
																			"src": "6849:14:4"
																		},
																		"referencedDeclaration": 556,
																		"src": "6849:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$556",
																			"typeString": "enum LibDiamond.FacetCutAction"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 767,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 762,
																				"name": "_diamondCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "6888:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																				}
																			},
																			"id": 764,
																			"indexExpression": {
																				"id": 763,
																				"name": "facetIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "6900:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6888:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																				"typeString": "struct IDiamondCut.FacetCut memory"
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6912:6:4",
																		"memberName": "action",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 467,
																		"src": "6888:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$461",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_FacetCutAction_$461",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	],
																	"id": 761,
																	"name": "_convertAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "6873:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_enum$_FacetCutAction_$461_$returns$_t_enum$_FacetCutAction_$556_$",
																		"typeString": "function (enum IDiamondCut.FacetCutAction) pure returns (enum LibDiamond.FacetCutAction)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6873:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$556",
																	"typeString": "enum LibDiamond.FacetCutAction"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6849:70:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$556",
																	"typeString": "enum LibDiamond.FacetCutAction"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 768,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "6938:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$556",
																		"typeString": "enum LibDiamond.FacetCutAction"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 769,
																		"name": "FacetCutAction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "6948:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																			"typeString": "type(enum LibDiamond.FacetCutAction)"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6963:3:4",
																	"memberName": "Add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 553,
																	"src": "6948:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$556",
																		"typeString": "enum LibDiamond.FacetCutAction"
																	}
																},
																"src": "6938:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$556",
																		"typeString": "enum LibDiamond.FacetCutAction"
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 784,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "7163:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$556",
																			"typeString": "enum LibDiamond.FacetCutAction"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 785,
																			"name": "FacetCutAction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "7173:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																				"typeString": "type(enum LibDiamond.FacetCutAction)"
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "7188:7:4",
																		"memberName": "Replace",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 554,
																		"src": "7173:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$556",
																			"typeString": "enum LibDiamond.FacetCutAction"
																		}
																	},
																	"src": "7163:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$556",
																			"typeString": "enum LibDiamond.FacetCutAction"
																		},
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 800,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 760,
																			"src": "7396:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$556",
																				"typeString": "enum LibDiamond.FacetCutAction"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 801,
																				"name": "FacetCutAction",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7406:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																					"typeString": "type(enum LibDiamond.FacetCutAction)"
																				}
																			},
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7421:6:4",
																			"memberName": "Remove",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 555,
																			"src": "7406:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$556",
																				"typeString": "enum LibDiamond.FacetCutAction"
																			}
																		},
																		"src": "7396:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 820,
																		"nodeType": "Block",
																		"src": "7623:79:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "4c69624469616d6f6e643a20496e636f7272656374204661636574437574416374696f6e",
																							"id": 817,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7648:38:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_4c0b9258418f52989eca549e0230fc01e98820682407d83aa73dacf72558c767",
																								"typeString": "literal_string \"LibDiamond: Incorrect FacetCutAction\""
																							},
																							"value": "LibDiamond: Incorrect FacetCutAction"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_4c0b9258418f52989eca549e0230fc01e98820682407d83aa73dacf72558c767",
																								"typeString": "literal_string \"LibDiamond: Incorrect FacetCutAction\""
																							}
																						],
																						"id": 816,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "7641:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7641:46:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 819,
																				"nodeType": "ExpressionStatement",
																				"src": "7641:46:4"
																			}
																		]
																	},
																	"id": 821,
																	"nodeType": "IfStatement",
																	"src": "7392:310:4",
																	"trueBody": {
																		"id": 815,
																		"nodeType": "Block",
																		"src": "7429:188:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 805,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 741,
																									"src": "7485:11:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 807,
																								"indexExpression": {
																									"id": 806,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 749,
																									"src": "7497:10:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7485:23:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 808,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7509:12:4",
																							"memberName": "facetAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 464,
																							"src": "7485:36:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 809,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 741,
																									"src": "7543:11:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 811,
																								"indexExpression": {
																									"id": 810,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 749,
																									"src": "7555:10:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7543:23:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 812,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7567:17:4",
																							"memberName": "functionSelectors",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 470,
																							"src": "7543:41:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						],
																						"id": 804,
																						"name": "_removeFunctions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1422,
																						"src": "7447:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																							"typeString": "function (address,bytes4[] memory)"
																						}
																					},
																					"id": 813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7447:155:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 814,
																				"nodeType": "ExpressionStatement",
																				"src": "7447:155:4"
																			}
																		]
																	}
																},
																"id": 822,
																"nodeType": "IfStatement",
																"src": "7159:543:4",
																"trueBody": {
																	"id": 799,
																	"nodeType": "Block",
																	"src": "7197:189:4",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 789,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 741,
																								"src": "7254:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 791,
																							"indexExpression": {
																								"id": 790,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 749,
																								"src": "7266:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7254:23:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 792,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7278:12:4",
																						"memberName": "facetAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 464,
																						"src": "7254:36:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 793,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 741,
																								"src": "7312:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 795,
																							"indexExpression": {
																								"id": 794,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 749,
																								"src": "7324:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7312:23:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 796,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7336:17:4",
																						"memberName": "functionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 470,
																						"src": "7312:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					],
																					"id": 788,
																					"name": "_replaceFunctions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "7215:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																						"typeString": "function (address,bytes4[] memory)"
																					}
																				},
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7215:156:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 798,
																			"nodeType": "ExpressionStatement",
																			"src": "7215:156:4"
																		}
																	]
																}
															},
															"id": 823,
															"nodeType": "IfStatement",
															"src": "6934:768:4",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "6968:185:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 773,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 741,
																							"src": "7021:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 775,
																						"indexExpression": {
																							"id": 774,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 749,
																							"src": "7033:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7021:23:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 776,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7045:12:4",
																					"memberName": "facetAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 464,
																					"src": "7021:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 777,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 741,
																							"src": "7079:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 779,
																						"indexExpression": {
																							"id": 778,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 749,
																							"src": "7091:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7079:23:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$471_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 780,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7103:17:4",
																					"memberName": "functionSelectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 470,
																					"src": "7079:41:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				],
																				"id": 772,
																				"name": "_addFunctions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "6986:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																					"typeString": "function (address,bytes4[] memory)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6986:152:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "ExpressionStatement",
																		"src": "6986:152:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "facetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "6788:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 752,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "6801:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6813:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6801:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6788:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 825,
												"initializationExpression": {
													"assignments": [
														749
													],
													"declarations": [
														{
															"constant": false,
															"id": 749,
															"mutability": "mutable",
															"name": "facetIndex",
															"nameLocation": "6776:10:4",
															"nodeType": "VariableDeclaration",
															"scope": 825,
															"src": "6768:18:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 748,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6768:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 750,
													"nodeType": "VariableDeclarationStatement",
													"src": "6768:18:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6821:12:4",
														"subExpression": {
															"id": 755,
															"name": "facetIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6821:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ExpressionStatement",
													"src": "6821:12:4"
												},
												"nodeType": "ForStatement",
												"src": "6763:949:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "7743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7750:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 826,
														"name": "_initializeDiamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "7721:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7721:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "7721:39:4"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "6254:353:4",
										"text": " @notice The core diamondCut function implementing EIP-2535 add/replace/remove logic for facets.\n @param _diamondCut The array of facet cuts to apply.\n @param _init The address of a contract or facet to execute _calldata.\n @param _calldata The function call, including function selector/args, to be executed on _init."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "6621:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "6671:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "6641:41:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 739,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 738,
															"name": "IDiamondCut.FacetCut",
															"nameLocations": [
																"6641:11:4",
																"6653:8:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 471,
															"src": "6641:20:4"
														},
														"referencedDeclaration": 471,
														"src": "6641:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$471_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 740,
													"nodeType": "ArrayTypeName",
													"src": "6641:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$471_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "6700:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "6692:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "6728:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "6715:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6715:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6631:112:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6753:0:4"
									},
									"scope": 1536,
									"src": "6612:1155:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "8001:408:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_FacetCutAction_$461",
														"typeString": "enum IDiamondCut.FacetCutAction"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 842,
														"name": "iAction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "8015:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FacetCutAction_$461",
															"typeString": "enum IDiamondCut.FacetCutAction"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 843,
																"name": "IDiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "8026:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$495_$",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8038:14:4",
															"memberName": "FacetCutAction",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 461,
															"src": "8026:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$461_$",
																"typeString": "type(enum IDiamondCut.FacetCutAction)"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8053:3:4",
														"memberName": "Add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "8026:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FacetCutAction_$461",
															"typeString": "enum IDiamondCut.FacetCutAction"
														}
													},
													"src": "8015:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_FacetCutAction_$461",
															"typeString": "enum IDiamondCut.FacetCutAction"
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 851,
															"name": "iAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "8118:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_FacetCutAction_$461",
																"typeString": "enum IDiamondCut.FacetCutAction"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 852,
																	"name": "IDiamondCut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8129:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$495_$",
																		"typeString": "type(contract IDiamondCut)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8141:14:4",
																"memberName": "FacetCutAction",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 461,
																"src": "8129:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$461_$",
																	"typeString": "type(enum IDiamondCut.FacetCutAction)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8156:7:4",
															"memberName": "Replace",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 459,
															"src": "8129:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_FacetCutAction_$461",
																"typeString": "enum IDiamondCut.FacetCutAction"
															}
														},
														"src": "8118:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_FacetCutAction_$461",
																"typeString": "enum IDiamondCut.FacetCutAction"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "iAction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "8229:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$461",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 861,
																		"name": "IDiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "8240:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$495_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8252:14:4",
																	"memberName": "FacetCutAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 461,
																	"src": "8240:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$461_$",
																		"typeString": "type(enum IDiamondCut.FacetCutAction)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8267:6:4",
																"memberName": "Remove",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "8240:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$461",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															"src": "8229:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 873,
															"nodeType": "Block",
															"src": "8334:69:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4c69624469616d6f6e643a20556e6b6e6f776e204661636574437574416374696f6e",
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8355:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_56ea5dd3b34d5d17790d141b8b22e5fd2d6c904989259731f92a345434a875b7",
																					"typeString": "literal_string \"LibDiamond: Unknown FacetCutAction\""
																				},
																				"value": "LibDiamond: Unknown FacetCutAction"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_56ea5dd3b34d5d17790d141b8b22e5fd2d6c904989259731f92a345434a875b7",
																					"typeString": "literal_string \"LibDiamond: Unknown FacetCutAction\""
																				}
																			],
																			"id": 869,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "8348:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8348:44:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "8348:44:4"
																}
															]
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "8225:178:4",
														"trueBody": {
															"id": 868,
															"nodeType": "Block",
															"src": "8275:53:4",
															"statements": [
																{
																	"expression": {
																		"expression": {
																			"id": 865,
																			"name": "FacetCutAction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "8296:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																				"typeString": "type(enum LibDiamond.FacetCutAction)"
																			}
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8311:6:4",
																		"memberName": "Remove",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 555,
																		"src": "8296:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$556",
																			"typeString": "enum LibDiamond.FacetCutAction"
																		}
																	},
																	"functionReturnParameters": 841,
																	"id": 867,
																	"nodeType": "Return",
																	"src": "8289:28:4"
																}
															]
														}
													},
													"id": 875,
													"nodeType": "IfStatement",
													"src": "8114:289:4",
													"trueBody": {
														"id": 859,
														"nodeType": "Block",
														"src": "8165:54:4",
														"statements": [
															{
																"expression": {
																	"expression": {
																		"id": 856,
																		"name": "FacetCutAction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "8186:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																			"typeString": "type(enum LibDiamond.FacetCutAction)"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8201:7:4",
																	"memberName": "Replace",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 554,
																	"src": "8186:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$556",
																		"typeString": "enum LibDiamond.FacetCutAction"
																	}
																},
																"functionReturnParameters": 841,
																"id": 858,
																"nodeType": "Return",
																"src": "8179:29:4"
															}
														]
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "8011:392:4",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "8058:50:4",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 847,
																	"name": "FacetCutAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "8079:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$556_$",
																		"typeString": "type(enum LibDiamond.FacetCutAction)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8094:3:4",
																"memberName": "Add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 553,
																"src": "8079:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$556",
																	"typeString": "enum LibDiamond.FacetCutAction"
																}
															},
															"functionReturnParameters": 841,
															"id": 849,
															"nodeType": "Return",
															"src": "8072:25:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "7773:97:4",
										"text": " @dev Converts the IDiamondCut FacetCutAction to the local FacetCutAction enum."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertAction",
									"nameLocation": "7884:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "iAction",
												"nameLocation": "7926:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7899:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$461",
													"typeString": "enum IDiamondCut.FacetCutAction"
												},
												"typeName": {
													"id": 835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 834,
														"name": "IDiamondCut.FacetCutAction",
														"nameLocations": [
															"7899:11:4",
															"7911:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7899:26:4"
													},
													"referencedDeclaration": 461,
													"src": "7899:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FacetCutAction_$461",
														"typeString": "enum IDiamondCut.FacetCutAction"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:36:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7981:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$556",
													"typeString": "enum LibDiamond.FacetCutAction"
												},
												"typeName": {
													"id": 839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 838,
														"name": "FacetCutAction",
														"nameLocations": [
															"7981:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 556,
														"src": "7981:14:4"
													},
													"referencedDeclaration": 556,
													"src": "7981:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FacetCutAction_$556",
														"typeString": "enum LibDiamond.FacetCutAction"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7980:16:4"
									},
									"scope": 1536,
									"src": "7875:534:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "8584:1224:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 888,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8602:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8621:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8602:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8630:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8602:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204e6f2073656c6563746f727320746f20616464",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8633:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93c0a4fb4c5d863955664cb59694b40d821cd6604f12cd4a506936f2c236a124",
																"typeString": "literal_string \"LibDiamond: No selectors to add\""
															},
															"value": "LibDiamond: No selectors to add"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93c0a4fb4c5d863955664cb59694b40d821cd6604f12cd4a506936f2c236a124",
																"typeString": "literal_string \"LibDiamond: No selectors to add\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8594:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8594:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "8594:73:4"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "8700:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "8677:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 896,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 895,
																"name": "DiamondStorage",
																"nameLocations": [
																	"8677:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "8677:14:4"
															},
															"referencedDeclaration": 551,
															"src": "8677:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 898,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "8705:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8705:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8677:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "8739:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8764:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8756:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 903,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8756:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8756:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8739:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204164642066616365742063616e27742062652061646472657373283029",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8768:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53b235aacfa86e36a26f222097116587130e12d5aafc1dcc24e72b2dcadd7478",
																"typeString": "literal_string \"LibDiamond: Add facet can't be address(0)\""
															},
															"value": "LibDiamond: Add facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53b235aacfa86e36a26f222097116587130e12d5aafc1dcc24e72b2dcadd7478",
																"typeString": "literal_string \"LibDiamond: Add facet can't be address(0)\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8731:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8731:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "8731:81:4"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "selectorPosition",
														"nameLocation": "8830:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "8823:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 911,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "8823:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 915,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "8856:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8859:22:4",
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 535,
																		"src": "8856:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 918,
																	"indexExpression": {
																		"id": 917,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "8882:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8856:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8897:17:4",
																"memberName": "functionSelectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 514,
																"src": "8856:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																	"typeString": "bytes4[] storage ref"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8915:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8856:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8849:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 913,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "8849:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8849:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8823:99:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "selectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "9003:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9023:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9003:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "8999:272:4",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "9026:245:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 927,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "9056:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2041646420666163657420686173206e6f20636f6465",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9071:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7596f8f96dff384ebc856498fbddc39a5fe2725e39d69380e049df20165fa1ef",
																			"typeString": "literal_string \"LibDiamond: Add facet has no code\""
																		},
																		"value": "LibDiamond: Add facet has no code"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7596f8f96dff384ebc856498fbddc39a5fe2725e39d69380e049df20165fa1ef",
																			"typeString": "literal_string \"LibDiamond: Add facet has no code\""
																		}
																	],
																	"id": 926,
																	"name": "_enforceHasCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "9040:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory) view"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9040:67:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "9040:67:4"
														},
														{
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 931,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "9121:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9124:22:4",
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 535,
																			"src": "9121:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 935,
																		"indexExpression": {
																			"id": 933,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "9147:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9121:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9162:20:4",
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "9121:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "9185:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9188:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "9185:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9203:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9185:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9121:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "9121:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "9246:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 942,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "9223:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9226:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "9223:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9241:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9223:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9223:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "9223:37:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1006,
													"nodeType": "Block",
													"src": "9333:469:4",
													"statements": [
														{
															"assignments": [
																963
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 963,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "9354:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1006,
																	"src": "9347:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 962,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "9347:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 967,
															"initialValue": {
																"baseExpression": {
																	"id": 964,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "9365:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 966,
																"indexExpression": {
																	"id": 965,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "9384:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9365:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9347:39:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 969,
																						"name": "ds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 897,
																						"src": "9425:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																							"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9428:26:4",
																					"memberName": "selectorToFacetAndPosition",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 530,
																					"src": "9425:29:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																						"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																					}
																				},
																				"id": 972,
																				"indexExpression": {
																					"id": 971,
																					"name": "selector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 963,
																					"src": "9455:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9425:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																					"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9465:12:4",
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "9425:52:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 976,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9489:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9481:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 974,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "9481:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9481:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "9425:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2053656c6563746f7220616c726561647920657869737473",
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9509:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ff8be353a2896eba6858efabfc3ab32b52fb324cf7906863723920c3cdf68fbb",
																			"typeString": "literal_string \"LibDiamond: Selector already exists\""
																		},
																		"value": "LibDiamond: Selector already exists"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ff8be353a2896eba6858efabfc3ab32b52fb324cf7906863723920c3cdf68fbb",
																			"typeString": "literal_string \"LibDiamond: Selector already exists\""
																		}
																	],
																	"id": 968,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9400:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9400:160:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 981,
															"nodeType": "ExpressionStatement",
															"src": "9400:160:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 989,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "9638:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 982,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "9574:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 985,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9577:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "9574:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 986,
																			"indexExpression": {
																				"id": 984,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "9600:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9574:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9615:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "9574:58:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9633:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9574:63:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer,bytes4)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9574:73:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 991,
															"nodeType": "ExpressionStatement",
															"src": "9574:73:4"
														},
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 992,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "9661:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9664:26:4",
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "9661:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 996,
																	"indexExpression": {
																		"id": 994,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "9691:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9661:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 998,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "9727:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 999,
																			"name": "selectorPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 912,
																			"src": "9742:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 997,
																		"name": "FacetAddressAndPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "9703:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FacetAddressAndPosition_$511_storage_ptr_$",
																			"typeString": "type(struct LibDiamond.FacetAddressAndPosition storage pointer)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9703:56:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																	}
																},
																"src": "9661:98:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "9661:98:4"
														},
														{
															"expression": {
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9773:18:4",
																"subExpression": {
																	"id": 1003,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "9773:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "9773:18:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "9297:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 956,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "9301:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9320:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9301:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9297:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"initializationExpression": {
													"assignments": [
														953
													],
													"declarations": [
														{
															"constant": false,
															"id": 953,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9294:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1007,
															"src": "9286:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 952,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9286:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 954,
													"nodeType": "VariableDeclarationStatement",
													"src": "9286:9:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9328:3:4",
														"subExpression": {
															"id": 959,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "9328:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ExpressionStatement",
													"src": "9328:3:4"
												},
												"nodeType": "ForStatement",
												"src": "9281:521:4"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8415:74:4",
										"text": " @dev Internal function to add new functions to a facet."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addFunctions",
									"nameLocation": "8503:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "8525:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8517:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8517:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "8556:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8540:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 882,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "8540:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 883,
													"nodeType": "ArrayTypeName",
													"src": "8540:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8516:59:4"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8584:0:4"
									},
									"scope": 1536,
									"src": "8494:1314:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "10019:2128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1019,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "10037:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10056:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10037:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10065:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10037:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204e6f2073656c6563746f727320746f207265706c616365",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10068:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4ec06f714bd57b9be336662ba785817964d5c9c2df62e187f5bedac02aa3a65",
																"typeString": "literal_string \"LibDiamond: No selectors to replace\""
															},
															"value": "LibDiamond: No selectors to replace"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4ec06f714bd57b9be336662ba785817964d5c9c2df62e187f5bedac02aa3a65",
																"typeString": "literal_string \"LibDiamond: No selectors to replace\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10029:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "10029:77:4"
											},
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "10139:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "10116:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 1027,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1026,
																"name": "DiamondStorage",
																"nameLocations": [
																	"10116:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "10116:14:4"
															},
															"referencedDeclaration": 551,
															"src": "10116:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1029,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "10144:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10144:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "10178:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10203:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10195:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1034,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10195:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10195:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10178:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a205265706c6163652066616365742063616e27742062652061646472657373283029",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10207:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b89cd03e893764a4e114c61f4551808124e5bca20475f156cca02ef7929f4c5c",
																"typeString": "literal_string \"LibDiamond: Replace facet can't be address(0)\""
															},
															"value": "LibDiamond: Replace facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b89cd03e893764a4e114c61f4551808124e5bca20475f156cca02ef7929f4c5c",
																"typeString": "literal_string \"LibDiamond: Replace facet can't be address(0)\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10170:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10170:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "10170:85:4"
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "selectorPosition",
														"nameLocation": "10273:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "10266:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1042,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10266:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1046,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "10299:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10302:22:4",
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 535,
																		"src": "10299:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 1049,
																	"indexExpression": {
																		"id": 1048,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "10325:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10299:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10340:17:4",
																"memberName": "functionSelectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 514,
																"src": "10299:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																	"typeString": "bytes4[] storage ref"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10358:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10299:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10292:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1044,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10292:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10292:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10266:99:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "selectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "10379:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10399:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10379:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "10375:276:4",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "10402:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1058,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "10432:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a205265706c61636520666163657420686173206e6f20636f6465",
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10447:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3a8ecc6e17d65fffb94f353fd91a6431919013bf18022b5392ea7ceb1d1c0f7c",
																			"typeString": "literal_string \"LibDiamond: Replace facet has no code\""
																		},
																		"value": "LibDiamond: Replace facet has no code"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3a8ecc6e17d65fffb94f353fd91a6431919013bf18022b5392ea7ceb1d1c0f7c",
																			"typeString": "literal_string \"LibDiamond: Replace facet has no code\""
																		}
																	],
																	"id": 1057,
																	"name": "_enforceHasCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "10416:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory) view"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10416:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "10416:71:4"
														},
														{
															"expression": {
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1062,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "10501:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10504:22:4",
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 535,
																			"src": "10501:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 1066,
																		"indexExpression": {
																			"id": 1064,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "10527:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10501:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10542:20:4",
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "10501:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1068,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "10565:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10568:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "10565:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10583:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "10565:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10501:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1072,
															"nodeType": "ExpressionStatement",
															"src": "10501:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "10626:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1073,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "10603:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10606:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "10603:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10621:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10603:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10603:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "10603:37:4"
														}
													]
												}
											},
											{
												"body": {
													"id": 1223,
													"nodeType": "Block",
													"src": "10713:1428:4",
													"statements": [
														{
															"assignments": [
																1094
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1094,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "10734:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "10727:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "10727:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1098,
															"initialValue": {
																"baseExpression": {
																	"id": 1095,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "10745:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 1097,
																"indexExpression": {
																	"id": 1096,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "10764:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10727:39:4"
														},
														{
															"assignments": [
																1101
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1101,
																	"mutability": "mutable",
																	"name": "oldFacet",
																	"nameLocation": "10811:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "10780:39:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition"
																	},
																	"typeName": {
																		"id": 1100,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1099,
																			"name": "FacetAddressAndPosition",
																			"nameLocations": [
																				"10780:23:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 511,
																			"src": "10780:23:4"
																		},
																		"referencedDeclaration": 511,
																		"src": "10780:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage_ptr",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1106,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1102,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "10822:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10825:26:4",
																	"memberName": "selectorToFacetAndPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "10822:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																		"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																	}
																},
																"id": 1105,
																"indexExpression": {
																	"id": 1104,
																	"name": "selector",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "10852:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10822:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10780:81:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1108,
																				"name": "oldFacet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "10883:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																					"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10892:12:4",
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "10883:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10916:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1110,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "10908:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10908:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10883:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2053656c6563746f7220646f6573206e6f7420657869737420666f72207265706c616365",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10920:49:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9d5c1beb35d4caa9062589aecdfe2b32543a66ff36c3a816540c23391b211f67",
																			"typeString": "literal_string \"LibDiamond: Selector does not exist for replace\""
																		},
																		"value": "LibDiamond: Selector does not exist for replace"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9d5c1beb35d4caa9062589aecdfe2b32543a66ff36c3a816540c23391b211f67",
																			"typeString": "literal_string \"LibDiamond: Selector does not exist for replace\""
																		}
																	],
																	"id": 1107,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10875:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10875:95:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1117,
															"nodeType": "ExpressionStatement",
															"src": "10875:95:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1119,
																				"name": "oldFacet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "10992:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																					"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11001:12:4",
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "10992:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1121,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "11017:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10992:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2043616e2774207265706c61636520776974682073616d65206661636574",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11032:43:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1694045f366234b1d728dbfb9219baf36076d6734e24fd6108eed03066968989",
																			"typeString": "literal_string \"LibDiamond: Can't replace with same facet\""
																		},
																		"value": "LibDiamond: Can't replace with same facet"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1694045f366234b1d728dbfb9219baf36076d6734e24fd6108eed03066968989",
																			"typeString": "literal_string \"LibDiamond: Can't replace with same facet\""
																		}
																	],
																	"id": 1118,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10984:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10984:92:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "10984:92:4"
														},
														{
															"assignments": [
																1127
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1127,
																	"mutability": "mutable",
																	"name": "oldSelectorPos",
																	"nameLocation": "11136:14:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "11128:22:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1126,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11128:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1130,
															"initialValue": {
																"expression": {
																	"id": 1128,
																	"name": "oldFacet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "11153:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11162:16:4",
																"memberName": "selectorPosition",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 510,
																"src": "11153:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11128:50:4"
														},
														{
															"assignments": [
																1132
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1132,
																	"mutability": "mutable",
																	"name": "lastSelectorPos",
																	"nameLocation": "11200:15:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1223,
																	"src": "11192:23:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1131,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11192:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1142,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1133,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1028,
																					"src": "11218:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11221:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "11218:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1137,
																			"indexExpression": {
																				"expression": {
																					"id": 1135,
																					"name": "oldFacet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "11244:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																						"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																					}
																				},
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11253:12:4",
																				"memberName": "facetAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 508,
																				"src": "11244:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11218:48:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11267:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "11218:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11285:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11218:73:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11294:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11218:77:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11192:103:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "oldSelectorPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "11314:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1144,
																	"name": "lastSelectorPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "11332:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11314:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1182,
															"nodeType": "IfStatement",
															"src": "11310:395:4",
															"trueBody": {
																"id": 1181,
																"nodeType": "Block",
																"src": "11349:356:4",
																"statements": [
																	{
																		"assignments": [
																			1147
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1147,
																				"mutability": "mutable",
																				"name": "lastSelector",
																				"nameLocation": "11374:12:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1181,
																				"src": "11367:19:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1146,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "11367:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1156,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1148,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1028,
																							"src": "11389:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11392:22:4",
																						"memberName": "facetFunctionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 535,
																						"src": "11389:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																							"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																						}
																					},
																					"id": 1152,
																					"indexExpression": {
																						"expression": {
																							"id": 1150,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1101,
																							"src": "11415:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																								"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																							}
																						},
																						"id": 1151,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11424:12:4",
																						"memberName": "facetAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 508,
																						"src": "11415:21:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11389:48:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																						"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																					}
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11438:17:4",
																				"memberName": "functionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 514,
																				"src": "11389:66:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																					"typeString": "bytes4[] storage ref"
																				}
																			},
																			"id": 1155,
																			"indexExpression": {
																				"id": 1154,
																				"name": "lastSelectorPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11456:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11389:83:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11367:105:4"
																	},
																	{
																		"expression": {
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1157,
																								"name": "ds",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1028,
																								"src": "11490:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																									"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																								}
																							},
																							"id": 1161,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11493:22:4",
																							"memberName": "facetFunctionSelectors",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 535,
																							"src": "11490:25:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																								"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																							}
																						},
																						"id": 1162,
																						"indexExpression": {
																							"expression": {
																								"id": 1159,
																								"name": "oldFacet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1101,
																								"src": "11516:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																									"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																								}
																							},
																							"id": 1160,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11525:12:4",
																							"memberName": "facetAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 508,
																							"src": "11516:21:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "11490:48:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																							"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																						}
																					},
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11539:17:4",
																					"memberName": "functionSelectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 514,
																					"src": "11490:66:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																						"typeString": "bytes4[] storage ref"
																					}
																				},
																				"id": 1165,
																				"indexExpression": {
																					"id": 1164,
																					"name": "oldSelectorPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "11557:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11490:82:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1166,
																				"name": "lastSelector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "11575:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"src": "11490:97:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1168,
																		"nodeType": "ExpressionStatement",
																		"src": "11490:97:4"
																	},
																	{
																		"expression": {
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1169,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1028,
																							"src": "11605:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1172,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11608:26:4",
																						"memberName": "selectorToFacetAndPosition",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 530,
																						"src": "11605:29:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																							"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																						}
																					},
																					"id": 1173,
																					"indexExpression": {
																						"id": 1171,
																						"name": "lastSelector",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1147,
																						"src": "11635:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11605:43:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																						"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																					}
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "11649:16:4",
																				"memberName": "selectorPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 510,
																				"src": "11605:60:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1177,
																						"name": "oldSelectorPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1127,
																						"src": "11675:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11668:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint96_$",
																						"typeString": "type(uint96)"
																					},
																					"typeName": {
																						"id": 1175,
																						"name": "uint96",
																						"nodeType": "ElementaryTypeName",
																						"src": "11668:6:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11668:22:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"src": "11605:85:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"id": 1180,
																		"nodeType": "ExpressionStatement",
																		"src": "11605:85:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1183,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1028,
																					"src": "11718:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11721:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "11718:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1188,
																			"indexExpression": {
																				"expression": {
																					"id": 1185,
																					"name": "oldFacet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "11744:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																						"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11753:12:4",
																				"memberName": "facetAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 508,
																				"src": "11744:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11718:48:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11767:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "11718:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11785:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "11718:70:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11718:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1192,
															"nodeType": "ExpressionStatement",
															"src": "11718:72:4"
														},
														{
															"expression": {
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "11804:46:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1193,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "11811:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11814:26:4",
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "11811:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 1196,
																	"indexExpression": {
																		"id": 1195,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "11841:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11811:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1198,
															"nodeType": "ExpressionStatement",
															"src": "11804:46:4"
														},
														{
															"expression": {
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1199,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "11897:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11900:26:4",
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "11897:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"id": 1201,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "11927:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11897:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1205,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "11979:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1206,
																			"name": "selectorPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "11994:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 1204,
																		"name": "FacetAddressAndPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "11955:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FacetAddressAndPosition_$511_storage_ptr_$",
																			"typeString": "type(struct LibDiamond.FacetAddressAndPosition storage pointer)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11955:56:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																	}
																},
																"src": "11897:114:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "11897:114:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "12089:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1210,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1028,
																					"src": "12025:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12028:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "12025:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1214,
																			"indexExpression": {
																				"id": 1212,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "12051:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12025:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12066:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "12025:58:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12084:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "12025:63:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer,bytes4)"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12025:73:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "12025:73:4"
														},
														{
															"expression": {
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "12112:18:4",
																"subExpression": {
																	"id": 1220,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "12112:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1222,
															"nodeType": "ExpressionStatement",
															"src": "12112:18:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1086,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "10677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1087,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10681:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10700:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10681:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10677:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"initializationExpression": {
													"assignments": [
														1084
													],
													"declarations": [
														{
															"constant": false,
															"id": 1084,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10674:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1224,
															"src": "10666:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1083,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10666:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1085,
													"nodeType": "VariableDeclarationStatement",
													"src": "10666:9:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10708:3:4",
														"subExpression": {
															"id": 1090,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "10708:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1092,
													"nodeType": "ExpressionStatement",
													"src": "10708:3:4"
												},
												"nodeType": "ForStatement",
												"src": "10661:1480:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "9814:106:4",
										"text": " @dev Internal function to replace existing function selectors with a new facet address."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_replaceFunctions",
									"nameLocation": "9934:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "9960:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "9952:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "9991:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "9975:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1013,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "9975:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1014,
													"nodeType": "ArrayTypeName",
													"src": "9975:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9951:59:4"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10019:0:4"
									},
									"scope": 1536,
									"src": "9925:2222:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "12335:1970:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1236,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "12353:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12372:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12353:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12381:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12353:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204e6f2073656c6563746f727320746f2072656d6f7665",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12384:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43b6d13206d4bfb1326b1490b7931e38073021575670befc5fd29206ca44b82b",
																"typeString": "literal_string \"LibDiamond: No selectors to remove\""
															},
															"value": "LibDiamond: No selectors to remove"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43b6d13206d4bfb1326b1490b7931e38073021575670befc5fd29206ca44b82b",
																"typeString": "literal_string \"LibDiamond: No selectors to remove\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12345:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12345:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "12345:76:4"
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "12454:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "12431:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 1244,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1243,
																"name": "DiamondStorage",
																"nameLocations": [
																	"12431:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "12431:14:4"
															},
															"referencedDeclaration": 551,
															"src": "12431:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1246,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "12459:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12459:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12431:44:4"
											},
											{
												"body": {
													"id": 1350,
													"nodeType": "Block",
													"src": "12538:975:4",
													"statements": [
														{
															"assignments": [
																1260
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1260,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "12559:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1350,
																	"src": "12552:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "12552:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1264,
															"initialValue": {
																"baseExpression": {
																	"id": 1261,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "12570:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 1263,
																"indexExpression": {
																	"id": 1262,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "12589:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12570:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12552:39:4"
														},
														{
															"assignments": [
																1267
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1267,
																	"mutability": "mutable",
																	"name": "oldFacet",
																	"nameLocation": "12636:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1350,
																	"src": "12605:39:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition"
																	},
																	"typeName": {
																		"id": 1266,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1265,
																			"name": "FacetAddressAndPosition",
																			"nameLocations": [
																				"12605:23:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 511,
																			"src": "12605:23:4"
																		},
																		"referencedDeclaration": 511,
																		"src": "12605:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage_ptr",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1272,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1268,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "12647:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12650:26:4",
																	"memberName": "selectorToFacetAndPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "12647:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																		"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																	}
																},
																"id": 1271,
																"indexExpression": {
																	"id": 1270,
																	"name": "selector",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "12677:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12647:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12605:81:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1274,
																				"name": "oldFacet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "12708:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																					"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12717:12:4",
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "12708:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1276,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "12733:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12708:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a2052656d6f766520666163657420646f65736e2774206d617463682061646472657373",
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12748:48:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d1cd02db6b654d1360cef6d329dd3b79594e5b308ed34e8a76cb403ba21fff4b",
																			"typeString": "literal_string \"LibDiamond: Remove facet doesn't match address\""
																		},
																		"value": "LibDiamond: Remove facet doesn't match address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d1cd02db6b654d1360cef6d329dd3b79594e5b308ed34e8a76cb403ba21fff4b",
																			"typeString": "literal_string \"LibDiamond: Remove facet doesn't match address\""
																		}
																	],
																	"id": 1273,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12700:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12700:97:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1280,
															"nodeType": "ExpressionStatement",
															"src": "12700:97:4"
														},
														{
															"assignments": [
																1282
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1282,
																	"mutability": "mutable",
																	"name": "oldSelectorPos",
																	"nameLocation": "12820:14:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1350,
																	"src": "12812:22:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1281,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12812:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1285,
															"initialValue": {
																"expression": {
																	"id": 1283,
																	"name": "oldFacet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "12837:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition memory"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12846:16:4",
																"memberName": "selectorPosition",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 510,
																"src": "12837:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12812:50:4"
														},
														{
															"assignments": [
																1287
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1287,
																	"mutability": "mutable",
																	"name": "lastSelectorPos",
																	"nameLocation": "12884:15:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1350,
																	"src": "12876:23:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12876:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1296,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1288,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1245,
																					"src": "12902:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12905:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "12902:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1291,
																			"indexExpression": {
																				"id": 1290,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "12928:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12902:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12943:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "12902:58:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12961:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12902:65:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12970:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12902:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12876:95:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1297,
																	"name": "oldSelectorPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "12990:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1298,
																	"name": "lastSelectorPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "13008:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12990:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1334,
															"nodeType": "IfStatement",
															"src": "12986:379:4",
															"trueBody": {
																"id": 1333,
																"nodeType": "Block",
																"src": "13025:340:4",
																"statements": [
																	{
																		"assignments": [
																			1301
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1301,
																				"mutability": "mutable",
																				"name": "lastSelector",
																				"nameLocation": "13050:12:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1333,
																				"src": "13043:19:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1300,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13043:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1309,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1302,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1245,
																							"src": "13065:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1303,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13068:22:4",
																						"memberName": "facetFunctionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 535,
																						"src": "13065:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																							"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																						}
																					},
																					"id": 1305,
																					"indexExpression": {
																						"id": 1304,
																						"name": "_facetAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "13091:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13065:40:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																						"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																					}
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13106:17:4",
																				"memberName": "functionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 514,
																				"src": "13065:58:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																					"typeString": "bytes4[] storage ref"
																				}
																			},
																			"id": 1308,
																			"indexExpression": {
																				"id": 1307,
																				"name": "lastSelectorPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1287,
																				"src": "13124:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13065:75:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13043:97:4"
																	},
																	{
																		"expression": {
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 1310,
																								"name": "ds",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1245,
																								"src": "13158:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																									"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																								}
																							},
																							"id": 1313,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13161:22:4",
																							"memberName": "facetFunctionSelectors",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 535,
																							"src": "13158:25:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																								"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																							}
																						},
																						"id": 1314,
																						"indexExpression": {
																							"id": 1312,
																							"name": "_facetAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1229,
																							"src": "13184:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13158:40:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																							"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																						}
																					},
																					"id": 1315,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13199:17:4",
																					"memberName": "functionSelectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 514,
																					"src": "13158:58:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																						"typeString": "bytes4[] storage ref"
																					}
																				},
																				"id": 1317,
																				"indexExpression": {
																					"id": 1316,
																					"name": "oldSelectorPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "13217:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "13158:74:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1318,
																				"name": "lastSelector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "13235:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"src": "13158:89:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1320,
																		"nodeType": "ExpressionStatement",
																		"src": "13158:89:4"
																	},
																	{
																		"expression": {
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1321,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1245,
																							"src": "13265:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1324,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13268:26:4",
																						"memberName": "selectorToFacetAndPosition",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 530,
																						"src": "13265:29:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																							"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																						}
																					},
																					"id": 1325,
																					"indexExpression": {
																						"id": 1323,
																						"name": "lastSelector",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1301,
																						"src": "13295:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13265:43:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																						"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																					}
																				},
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13309:16:4",
																				"memberName": "selectorPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 510,
																				"src": "13265:60:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1329,
																						"name": "oldSelectorPos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "13335:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13328:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint96_$",
																						"typeString": "type(uint96)"
																					},
																					"typeName": {
																						"id": 1327,
																						"name": "uint96",
																						"nodeType": "ElementaryTypeName",
																						"src": "13328:6:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13328:22:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"src": "13265:85:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"id": 1332,
																		"nodeType": "ExpressionStatement",
																		"src": "13265:85:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1335,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1245,
																					"src": "13378:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13381:22:4",
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 535,
																				"src": "13378:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1339,
																			"indexExpression": {
																				"id": 1337,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "13404:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13378:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13419:17:4",
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "13378:58:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13437:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "13378:62:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer)"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13378:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "13378:64:4"
														},
														{
															"expression": {
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "13456:46:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1344,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "13463:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13466:26:4",
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "13463:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$511_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"id": 1346,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "13493:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13463:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$511_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1349,
															"nodeType": "ExpressionStatement",
															"src": "13456:46:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "12502:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1253,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "12506:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12525:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12506:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12502:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1351,
												"initializationExpression": {
													"assignments": [
														1250
													],
													"declarations": [
														{
															"constant": false,
															"id": 1250,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12499:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1351,
															"src": "12491:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1249,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12491:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1251,
													"nodeType": "VariableDeclarationStatement",
													"src": "12491:9:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12533:3:4",
														"subExpression": {
															"id": 1256,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "12533:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ExpressionStatement",
													"src": "12533:3:4"
												},
												"nodeType": "ForStatement",
												"src": "12486:1027:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 1352,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "13598:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13601:22:4",
																	"memberName": "facetFunctionSelectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 535,
																	"src": "13598:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																		"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																	}
																},
																"id": 1355,
																"indexExpression": {
																	"id": 1354,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "13624:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13598:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																	"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13639:17:4",
															"memberName": "functionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 514,
															"src": "13598:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																"typeString": "bytes4[] storage ref"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13657:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13598:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13667:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13598:70:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "IfStatement",
												"src": "13594:705:4",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "13670:629:4",
													"statements": [
														{
															"assignments": [
																1361
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1361,
																	"mutability": "mutable",
																	"name": "lastFacetAddressPos",
																	"nameLocation": "13692:19:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1419,
																	"src": "13684:27:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1360,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1367,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1362,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "13714:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13717:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "13714:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13732:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "13714:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13741:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13714:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13684:58:4"
														},
														{
															"assignments": [
																1369
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1369,
																	"mutability": "mutable",
																	"name": "facetAddressPos",
																	"nameLocation": "13764:15:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1419,
																	"src": "13756:23:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1368,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13756:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1375,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1370,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "13782:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13785:22:4",
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 535,
																		"src": "13782:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 1373,
																	"indexExpression": {
																		"id": 1372,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "13808:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13782:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13823:20:4",
																"memberName": "facetAddressPosition",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 516,
																"src": "13782:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13756:87:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1376,
																	"name": "facetAddressPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "13861:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1377,
																	"name": "lastFacetAddressPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "13880:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13861:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1404,
															"nodeType": "IfStatement",
															"src": "13857:313:4",
															"trueBody": {
																"id": 1403,
																"nodeType": "Block",
																"src": "13901:269:4",
																"statements": [
																	{
																		"assignments": [
																			1380
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1380,
																				"mutability": "mutable",
																				"name": "lastFacetAddress",
																				"nameLocation": "13927:16:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1403,
																				"src": "13919:24:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1379,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13919:7:4",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1385,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1381,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1245,
																					"src": "13946:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13949:14:4",
																				"memberName": "facetAddresses",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 538,
																				"src": "13946:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1384,
																			"indexExpression": {
																				"id": 1383,
																				"name": "lastFacetAddressPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1361,
																				"src": "13964:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13946:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13919:65:4"
																	},
																	{
																		"expression": {
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1386,
																						"name": "ds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1245,
																						"src": "14002:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																							"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																						}
																					},
																					"id": 1389,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14005:14:4",
																					"memberName": "facetAddresses",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "14002:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1390,
																				"indexExpression": {
																					"id": 1388,
																					"name": "facetAddressPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "14020:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14002:34:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1391,
																				"name": "lastFacetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1380,
																				"src": "14039:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "14002:53:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1393,
																		"nodeType": "ExpressionStatement",
																		"src": "14002:53:4"
																	},
																	{
																		"expression": {
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1394,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1245,
																							"src": "14073:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1397,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14076:22:4",
																						"memberName": "facetFunctionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 535,
																						"src": "14073:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																							"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																						}
																					},
																					"id": 1398,
																					"indexExpression": {
																						"id": 1396,
																						"name": "lastFacetAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1380,
																						"src": "14099:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14073:43:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																						"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																					}
																				},
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "14117:20:4",
																				"memberName": "facetAddressPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 516,
																				"src": "14073:64:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1400,
																				"name": "facetAddressPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1369,
																				"src": "14140:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14073:82:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1402,
																		"nodeType": "ExpressionStatement",
																		"src": "14073:82:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1405,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "14183:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14186:14:4",
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 538,
																		"src": "14183:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14201:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "14183:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14183:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1411,
															"nodeType": "ExpressionStatement",
															"src": "14183:23:4"
														},
														{
															"expression": {
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "14220:68:4",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1412,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1245,
																				"src": "14227:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14230:22:4",
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 535,
																			"src": "14227:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$517_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 1415,
																		"indexExpression": {
																			"id": 1414,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "14253:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14227:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$517_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14268:20:4",
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "14227:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "14220:68:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "12153:84:4",
										"text": " @dev Internal function to remove function selectors from a facet."
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeFunctions",
									"nameLocation": "12251:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "12276:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12268:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "12307:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12291:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1230,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "12291:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1231,
													"nodeType": "ArrayTypeName",
													"src": "12291:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:59:4"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12335:0:4"
									},
									"scope": 1536,
									"src": "12242:2063:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "14494:364:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1430,
														"name": "_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "14508:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14525:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14517:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14517:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14517:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14508:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "14504:158:4",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "14529:133:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1437,
																				"name": "_calldata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "14551:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14561:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "14551:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14571:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14551:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e643a205f696e69742069732061646472657373283029206275742063616c6c64617461206e6f7420656d707479",
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14574:56:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1418c81a8f8cea7f71b4483c4eedfadb39da2e93d73e10cf90188e2f14f05c14",
																			"typeString": "literal_string \"LibDiamond: _init is address(0) but calldata not empty\""
																		},
																		"value": "LibDiamond: _init is address(0) but calldata not empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1418c81a8f8cea7f71b4483c4eedfadb39da2e93d73e10cf90188e2f14f05c14",
																			"typeString": "literal_string \"LibDiamond: _init is address(0) but calldata not empty\""
																		}
																	],
																	"id": 1436,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "14543:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14543:88:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1443,
															"nodeType": "ExpressionStatement",
															"src": "14543:88:4"
														},
														{
															"functionReturnParameters": 1429,
															"id": 1444,
															"nodeType": "Return",
															"src": "14645:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1448,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "14687:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a205f696e6974206164647265737320686173206e6f20636f6465",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14694:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_392a883362b8d19ec85829499753ef59926c848a7e4ae1982c6564611d7e2c70",
																"typeString": "literal_string \"LibDiamond: _init address has no code\""
															},
															"value": "LibDiamond: _init address has no code"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_392a883362b8d19ec85829499753ef59926c848a7e4ae1982c6564611d7e2c70",
																"typeString": "literal_string \"LibDiamond: _init address has no code\""
															}
														],
														"id": 1447,
														"name": "_enforceHasCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "14671:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory) view"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14671:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "14671:63:4"
											},
											{
												"assignments": [
													1453,
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14750:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "14745:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1452,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14745:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "14772:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "14759:18:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1454,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14759:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [
														{
															"id": 1458,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "14800:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1456,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "14781:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14787:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "14781:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14781:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14744:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "14828:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "14844:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14837:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1463,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "14837:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14837:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14820:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "14820:31:4"
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "14311:100:4",
										"text": " @dev Internal function to initialize diamond cuts with a delegatecall to `_init`."
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeDiamondCut",
									"nameLocation": "14425:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "14455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "14447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "14475:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "14462:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14462:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14446:39:4"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14494:0:4"
									},
									"scope": 1536,
									"src": "14416:442:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "15043:143:4",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "15061:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "15053:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15053:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"nodeType": "VariableDeclarationStatement",
												"src": "15053:12:4"
											},
											{
												"AST": {
													"nativeSrc": "15084:54:4",
													"nodeType": "YulBlock",
													"src": "15084:54:4",
													"statements": [
														{
															"nativeSrc": "15098:30:4",
															"nodeType": "YulAssignment",
															"src": "15098:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "_contract",
																		"nativeSrc": "15118:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "15118:9:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "15106:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "15106:11:4"
																},
																"nativeSrc": "15106:22:4",
																"nodeType": "YulFunctionCall",
																"src": "15106:22:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "15098:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "15098:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": false,
														"src": "15118:9:4",
														"valueSize": 1
													},
													{
														"declaration": 1479,
														"isOffset": false,
														"isSlot": false,
														"src": "15098:4:4",
														"valueSize": 1
													}
												],
												"id": 1481,
												"nodeType": "InlineAssembly",
												"src": "15075:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "15155:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15162:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15155:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1486,
															"name": "_errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "15165:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15147:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "15147:32:4"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "14864:88:4",
										"text": " @dev Asserts that `_contract` has contract code, reverting otherwise."
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_enforceHasCode",
									"nameLocation": "14966:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "_contract",
												"nameLocation": "14990:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "14982:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_errorMessage",
												"nameLocation": "15015:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "15001:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15001:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14981:48:4"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15043:0:4"
									},
									"scope": 1536,
									"src": "14957:229:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "15449:153:4",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "15482:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "15459:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 1494,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1493,
																"name": "DiamondStorage",
																"nameLocations": [
																	"15459:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 551,
																"src": "15459:14:4"
															},
															"referencedDeclaration": 551,
															"src": "15459:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1496,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "15487:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15487:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15459:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15521:11:4",
															"subExpression": {
																"expression": {
																	"id": 1500,
																	"name": "ds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "15522:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																		"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15525:7:4",
																"memberName": "_locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 540,
																"src": "15522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15534:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15513:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "15513:55:4"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1506,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "15578:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15581:7:4",
														"memberName": "_locked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "15578:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15591:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15578:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "15578:17:4"
											}
										]
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonReentrant",
									"nameLocation": "15425:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15437:2:4"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15449:0:4"
									},
									"scope": 1536,
									"src": "15416:186:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "15648:49:4",
										"statements": [
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1516,
																"name": "diamondStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "15658:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15658:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15675:7:4",
														"memberName": "_locked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "15658:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15685:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15658:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "15658:32:4"
											}
										]
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reentrancyGuardExit",
									"nameLocation": "15617:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15636:2:4"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15648:0:4"
									},
									"scope": 1536,
									"src": "15608:89:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "15745:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15763:24:4",
															"subExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1527,
																		"name": "diamondStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "15764:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$551_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15764:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondStorage_$551_storage_ptr",
																		"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15781:6:4",
																"memberName": "paused",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "15764:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469616d6f6e643a20706175736564",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15789:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4d90bce8f987af8254cbce76b65017440a16de216ce13173bcb06807161092",
																"typeString": "literal_string \"Diamond: paused\""
															},
															"value": "Diamond: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4d90bce8f987af8254cbce76b65017440a16de216ce13173bcb06807161092",
																"typeString": "literal_string \"Diamond: paused\""
															}
														],
														"id": 1526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15755:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15755:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "15755:52:4"
											}
										]
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceNotPaused",
									"nameLocation": "15712:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15728:2:4"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15745:0:4"
									},
									"scope": 1536,
									"src": "15703:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1537,
							"src": "565:15251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:15785:4"
				},
				"id": 4
			},
			"Contracts/libraries/LibERC20Factory.sol": {
				"ast": {
					"absolutePath": "Contracts/libraries/LibERC20Factory.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							184
						],
						"LibERC20Factory": [
							1600
						]
					},
					"id": 1601,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 1539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1601,
							"sourceUnit": 163,
							"src": "58:50:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibERC20Factory",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1540,
								"nodeType": "StructuredDocumentation",
								"src": "110:368:5",
								"text": " @title LibERC20Factory\n @notice A library providing creation of minimal-proxy (clone) ERC20 tokens (e.g., for pool tokens).\n         Integrates seamlessly with other Diamond facets that clone an implementation \n         and then call `initialize(...)` on the clone.\n         No placeholders remain; logic is fully compatible with the updated system."
							},
							"fullyImplemented": true,
							"id": 1600,
							"linearizedBaseContracts": [
								1600
							],
							"name": "LibERC20Factory",
							"nameLocation": "487:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "829:83:5",
										"statements": [
											{
												"assignments": [
													1549
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "clone",
														"nameLocation": "847:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "839:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1548,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "839:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"arguments": [
														{
															"id": 1552,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "868:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1550,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "855:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$162_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "862:5:5",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "855:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "839:44:5"
											},
											{
												"expression": {
													"id": 1555,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1549,
													"src": "900:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1556,
												"nodeType": "Return",
												"src": "893:12:5"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "509:244:5",
										"text": " @notice Creates a minimal proxy clone of the given ERC20 implementation contract.\n @param implementation The address of the implementation contract to clone.\n @return clone The address of the newly deployed clone."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneERC20",
									"nameLocation": "767:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "786:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "778:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:24:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1600,
									"src": "758:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1451:102:5",
										"statements": [
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "clone",
														"nameLocation": "1469:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "1461:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1461:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"id": 1572,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1503:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "1519:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1570,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1477:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$162_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1484:18:5",
														"memberName": "cloneDeterministic",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "1477:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) returns (address)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1477:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1461:63:5"
											},
											{
												"expression": {
													"id": 1576,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1569,
													"src": "1541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1577,
												"nodeType": "Return",
												"src": "1534:12:5"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "918:430:5",
										"text": " @notice Creates a minimal proxy clone deterministically using a provided salt.\n         The resulting address can be known in advance via predictDeterministicAddress.\n @param implementation The address of the implementation contract to clone.\n @param salt A user-supplied salt, ensuring a deterministic clone address.\n @return clone The address of the newly deployed deterministic clone."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneERC20Deterministic",
									"nameLocation": "1362:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1394:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1386:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1386:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1418:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1410:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:38:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1442:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:9:5"
									},
									"scope": 1600,
									"src": "1353:200:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "2150:90:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "2202:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2218:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1595,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2224:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1591,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2167:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$162_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2174:27:5",
														"memberName": "predictDeterministicAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "2167:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1597,
												"nodeType": "Return",
												"src": "2160:73:5"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1559:399:5",
										"text": " @notice Computes the address for a clone deployed deterministically with `cloneERC20Deterministic`.\n @param implementation The address of the implementation contract to clone.\n @param salt The salt used in cloneERC20Deterministic.\n @param deployer The address that will deploy the clone contract.\n @return The predicted address for the deterministic clone."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "1972:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2017:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2009:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2049:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2041:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2071:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2063:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:86:5"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2136:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:9:5"
									},
									"scope": 1600,
									"src": "1963:277:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1601,
							"src": "479:1922:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2370:5"
				},
				"id": 5
			}
		}
	}
}