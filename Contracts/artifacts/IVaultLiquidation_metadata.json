{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUnderlyingPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "shares",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "seizeShares",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Minimal interface for a Vault that supports forcibly reassigning user shares       to a recipient during liquidation. The Liquidator calls:        1. balanceOf(user) - checks user share balance        2. totalSupply()   - used for ratio-based calculations        3. getUnderlyingPrice() - to compute user's share value in the chosen unit (e.g. USD)        4. seizeShares(...) - forcibly remove shares from one user and assign them to a recipient",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"seizeShares(address,uint256,address)": {
					"notice": "Forcibly removes `shares` from `from` and transfers them to `recipient`.         Used by the Liquidator for undercollateralized positions."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/Liquidator.sol": "IVaultLiquidation"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"Contracts/Liquidator.sol": {
			"keccak256": "0x15b27d2b35ee2574fe030e9f418bbffd83dc6d089b8784809d459fe0270fd787",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df392bbca898498ddc5c395f004f3ac9c0badfeb31f855cd3136024229d449d",
				"dweb:/ipfs/Qma4GARQcHVFRaQYVVpAfUN6ej9F4w4o3TSsutDHfn2kYL"
			]
		}
	},
	"version": 1
}