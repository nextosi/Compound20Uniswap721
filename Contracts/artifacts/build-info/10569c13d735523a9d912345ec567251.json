{
	"id": "10569c13d735523a9d912345ec567251",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/Liquidator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev Minimal interface for a Vault that supports forcibly reassigning user shares \n *      to a recipient during liquidation. The Liquidator calls:\n *        1. balanceOf(user) - checks user share balance\n *        2. totalSupply()   - used for ratio-based calculations\n *        3. getUnderlyingPrice() - to compute user's share value in the chosen unit (e.g. USD)\n *        4. seizeShares(...) - forcibly remove shares from one user and assign them to a recipient\n */\ninterface IVaultLiquidation {\n    function balanceOf(address user) external view returns (uint256);\n    function totalSupply() external view returns (uint256);\n    function getUnderlyingPrice() external view returns (uint256 price, uint8 decimals);\n\n    /**\n     * @notice Forcibly removes `shares` from `from` and transfers them to `recipient`.\n     *         Used by the Liquidator for undercollateralized positions.\n     */\n    function seizeShares(address from, uint256 shares, address recipient) external;\n}\n\n/**\n * @title Liquidator\n * @notice A contract that can forcibly seize user shares from an undercollateralized position\n *         in a vault. The seized shares are transferred to this contract's owner (the deployer),\n *         who can then decide how to handle them (e.g., distribute to a hired liquidator,\n *         return partially to a pool, penalize the user, etc.).\n *\n *         Key parameters:\n *         - minCollateralValue: The required value below which a user is undercollateralized.\n *         - liquidationFeeBps: A fee in basis points added on top of the seizeAmount, \n *           also sent to the owner (deployer).\n *         - maxLiquidationBps: The maximum fraction (in BPS) of a user's shares \n *           that can be seized in one call.\n *\n *         This contract calls `seizeShares(user, totalSeize, owner())` on the vault, \n *         transferring forcibly removed shares to the contract's owner.\n */\ncontract Liquidator is Ownable {\n    /**\n     * @dev The minimum value (in the same unit as the vault's price feed) \n     *      a user must maintain. If their share value < minCollateralValue, \n     *      they can be liquidated.\n     */\n    uint256 public minCollateralValue;\n\n    /**\n     * @dev A liquidation fee in basis points (e.g., 500 => 5%). \n     *      This is added on top of `seizeAmount` and also transferred \n     *      to the contract owner upon liquidation.\n     */\n    uint256 public liquidationFeeBps;\n\n    /**\n     * @dev The maximum proportion of a user's total shares that can be seized \n     *      in one liquidation call, in basis points (e.g., 5000 => 50%).\n     */\n    uint256 public maxLiquidationBps;\n\n    /**\n     * @dev Emitted when the minCollateralValue is updated.\n     */\n    event MinCollateralValueUpdated(uint256 oldValue, uint256 newValue);\n\n    /**\n     * @dev Emitted when the liquidation fee is updated.\n     */\n    event LiquidationFeeBpsUpdated(uint256 oldFee, uint256 newFee);\n\n    /**\n     * @dev Emitted when the maximum liquidation ratio is updated.\n     */\n    event MaxLiquidationBpsUpdated(uint256 oldMaxBps, uint256 newMaxBps);\n\n    /**\n     * @dev Emitted after a successful liquidation.\n     * @param vault          The vault being liquidated.\n     * @param liquidator     The caller who triggered the liquidation action.\n     * @param userLiquidated The user whose shares were seized.\n     * @param seizedShares   The base amount of shares seized from the user.\n     * @param feeShares      The fee portion of shares, also seized and given to owner.\n     * @param recipient      The address that receives the seized shares (the contract owner).\n     */\n    event LiquidationExecuted(\n        address indexed vault,\n        address indexed liquidator,\n        address indexed userLiquidated,\n        uint256 seizedShares,\n        uint256 feeShares,\n        address recipient\n    );\n\n    /**\n     * @notice Constructor calls the Ownable base constructor with `initialOwner` \n     *         and initializes the liquidation parameters.\n     * @param initialOwner         The address that will own this Liquidator contract.\n     * @param _minCollateralValue  The minimum user share value required to avoid liquidation.\n     * @param _liquidationFeeBps   A fee in basis points added on top of `seizeAmount`.\n     * @param _maxLiquidationBps   The maximum fraction of user shares seizable in one call.\n     */\n    constructor(\n        address initialOwner,\n        uint256 _minCollateralValue,\n        uint256 _liquidationFeeBps,\n        uint256 _maxLiquidationBps\n    ) Ownable(initialOwner) {\n        require(_maxLiquidationBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\");\n        require(_liquidationFeeBps <= 5000, \"Liquidator: feeBps too large\"); \n        minCollateralValue = _minCollateralValue;\n        liquidationFeeBps = _liquidationFeeBps;\n        maxLiquidationBps = _maxLiquidationBps;\n    }\n\n    /**\n     * @notice Updates the minimum collateral value (onlyOwner).\n     * @param newValue The new minCollateralValue.\n     */\n    function setMinCollateralValue(uint256 newValue) external onlyOwner {\n        uint256 oldVal = minCollateralValue;\n        minCollateralValue = newValue;\n        emit MinCollateralValueUpdated(oldVal, newValue);\n    }\n\n    /**\n     * @notice Updates the liquidation fee in basis points (onlyOwner).\n     * @param newFeeBps The new liquidation fee.\n     */\n    function setLiquidationFeeBps(uint256 newFeeBps) external onlyOwner {\n        require(newFeeBps <= 5000, \"Liquidator: fee too large\");\n        uint256 oldFee = liquidationFeeBps;\n        liquidationFeeBps = newFeeBps;\n        emit LiquidationFeeBpsUpdated(oldFee, newFeeBps);\n    }\n\n    /**\n     * @notice Updates the max fraction of user shares that can be seized in one call (onlyOwner).\n     * @param newMaxBps The new ratio in basis points.\n     */\n    function setMaxLiquidationBps(uint256 newMaxBps) external onlyOwner {\n        require(newMaxBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\");\n        uint256 oldMax = maxLiquidationBps;\n        maxLiquidationBps = newMaxBps;\n        emit MaxLiquidationBpsUpdated(oldMax, newMaxBps);\n    }\n\n    /**\n     * @dev Checks if a user is undercollateralized by computing their share value \n     *      from the vault's price feed and comparing it to `minCollateralValue`.\n     * @param vault The vault implementing IVaultLiquidation.\n     * @param user  The user to check.\n     * @return isUnderCollateral True if user's share value < minCollateralValue.\n     * @return userValue         The user's computed share value (in the feed's unit).\n     */\n    function checkUnderCollateral(address vault, address user)\n        public\n        view\n        returns (bool isUnderCollateral, uint256 userValue)\n    {\n        IVaultLiquidation v = IVaultLiquidation(vault);\n        uint256 userShares = v.balanceOf(user);\n        if (userShares == 0) {\n            // If user has no shares, they effectively have no position.\n            // Return false, value=0, not undercollateralized in the sense of a negative condition.\n            return (false, 0);\n        }\n\n        uint256 _totalSupply = v.totalSupply();\n        (uint256 price, ) = v.getUnderlyingPrice();\n        // userValue = (price * userShares) / totalSupply\n        userValue = (price * userShares) / (_totalSupply == 0 ? 1 : _totalSupply);\n\n        isUnderCollateral = (userValue < minCollateralValue);\n    }\n\n    /**\n     * @notice Liquidates a user if they are undercollateralized by seizing a specified \n     *         number of shares (plus a fee) and transferring them to this contract's owner.\n     * @param vault       The vault address implementing IVaultLiquidation.\n     * @param user        The undercollateralized user to liquidate.\n     * @param seizeAmount The base number of shares to seize (excluding fee).\n     */\n    function liquidate(\n        address vault,\n        address user,\n        uint256 seizeAmount\n    ) external {\n        require(vault != address(0), \"Liquidator: invalid vault\");\n        require(user != address(0), \"Liquidator: invalid user\");\n        require(seizeAmount > 0, \"Liquidator: zero seizeAmount\");\n\n        (bool underCollateral, ) = checkUnderCollateral(vault, user);\n        require(underCollateral, \"Liquidator: user not undercollateralized\");\n\n        IVaultLiquidation v = IVaultLiquidation(vault);\n        uint256 userShares = v.balanceOf(user);\n        require(userShares >= seizeAmount, \"Liquidator: user has fewer shares than seizeAmount\");\n\n        // Enforce max liquidation ratio\n        uint256 maxSeizable = (userShares * maxLiquidationBps) / 10000;\n        require(seizeAmount <= maxSeizable, \"Liquidator: exceed max liquidation ratio\");\n\n        // Compute fee in shares\n        uint256 feeShares = (seizeAmount * liquidationFeeBps) / 10000;\n        uint256 totalSeize = seizeAmount + feeShares;\n        require(userShares >= totalSeize, \"Liquidator: totalSeize > userShares\");\n\n        // Forcibly remove shares from the user and assign them to this contract's owner \n        // the owner can decide how to handle them (reward a third-party, penalize user, lock to an address etc.).\n        v.seizeShares(user, totalSeize, owner());\n\n        emit LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/Liquidator.sol": {
				"IVaultLiquidation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUnderlyingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "seizeShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Minimal interface for a Vault that supports forcibly reassigning user shares       to a recipient during liquidation. The Liquidator calls:        1. balanceOf(user) - checks user share balance        2. totalSupply()   - used for ratio-based calculations        3. getUnderlyingPrice() - to compute user's share value in the chosen unit (e.g. USD)        4. seizeShares(...) - forcibly remove shares from one user and assign them to a recipient",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"getUnderlyingPrice()": "468f02d2",
							"seizeShares(address,uint256,address)": "1d14cd0f",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"seizeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Minimal interface for a Vault that supports forcibly reassigning user shares       to a recipient during liquidation. The Liquidator calls:        1. balanceOf(user) - checks user share balance        2. totalSupply()   - used for ratio-based calculations        3. getUnderlyingPrice() - to compute user's share value in the chosen unit (e.g. USD)        4. seizeShares(...) - forcibly remove shares from one user and assign them to a recipient\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"seizeShares(address,uint256,address)\":{\"notice\":\"Forcibly removes `shares` from `from` and transfers them to `recipient`.         Used by the Liquidator for undercollateralized positions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Liquidator.sol\":\"IVaultLiquidation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Contracts/Liquidator.sol\":{\"keccak256\":\"0x15b27d2b35ee2574fe030e9f418bbffd83dc6d089b8784809d459fe0270fd787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df392bbca898498ddc5c395f004f3ac9c0badfeb31f855cd3136024229d449d\",\"dweb:/ipfs/Qma4GARQcHVFRaQYVVpAfUN6ej9F4w4o3TSsutDHfn2kYL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"seizeShares(address,uint256,address)": {
								"notice": "Forcibly removes `shares` from `from` and transfers them to `recipient`.         Used by the Liquidator for undercollateralized positions."
							}
						},
						"version": 1
					}
				},
				"Liquidator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minCollateralValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidationFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxLiquidationBps",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "userLiquidated",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "seizedShares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeShares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "LiquidationExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "LiquidationFeeBpsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldMaxBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxBps",
									"type": "uint256"
								}
							],
							"name": "MaxLiquidationBpsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "MinCollateralValueUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "checkUnderCollateral",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isUnderCollateral",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "userValue",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "seizeAmount",
									"type": "uint256"
								}
							],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidationBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFeeBps",
									"type": "uint256"
								}
							],
							"name": "setLiquidationFeeBps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxBps",
									"type": "uint256"
								}
							],
							"name": "setMaxLiquidationBps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "setMinCollateralValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"LiquidationExecuted(address,address,address,uint256,uint256,address)": {
								"details": "Emitted after a successful liquidation.",
								"params": {
									"feeShares": "The fee portion of shares, also seized and given to owner.",
									"liquidator": "The caller who triggered the liquidation action.",
									"recipient": "The address that receives the seized shares (the contract owner).",
									"seizedShares": "The base amount of shares seized from the user.",
									"userLiquidated": "The user whose shares were seized.",
									"vault": "The vault being liquidated."
								}
							},
							"LiquidationFeeBpsUpdated(uint256,uint256)": {
								"details": "Emitted when the liquidation fee is updated."
							},
							"MaxLiquidationBpsUpdated(uint256,uint256)": {
								"details": "Emitted when the maximum liquidation ratio is updated."
							},
							"MinCollateralValueUpdated(uint256,uint256)": {
								"details": "Emitted when the minCollateralValue is updated."
							}
						},
						"kind": "dev",
						"methods": {
							"checkUnderCollateral(address,address)": {
								"details": "Checks if a user is undercollateralized by computing their share value       from the vault's price feed and comparing it to `minCollateralValue`.",
								"params": {
									"user": "The user to check.",
									"vault": "The vault implementing IVaultLiquidation."
								},
								"returns": {
									"isUnderCollateral": "True if user's share value < minCollateralValue.",
									"userValue": "        The user's computed share value (in the feed's unit)."
								}
							},
							"constructor": {
								"params": {
									"_liquidationFeeBps": "A fee in basis points added on top of `seizeAmount`.",
									"_maxLiquidationBps": "The maximum fraction of user shares seizable in one call.",
									"_minCollateralValue": "The minimum user share value required to avoid liquidation.",
									"initialOwner": "The address that will own this Liquidator contract."
								}
							},
							"liquidate(address,address,uint256)": {
								"params": {
									"seizeAmount": "The base number of shares to seize (excluding fee).",
									"user": "The undercollateralized user to liquidate.",
									"vault": "The vault address implementing IVaultLiquidation."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setLiquidationFeeBps(uint256)": {
								"params": {
									"newFeeBps": "The new liquidation fee."
								}
							},
							"setMaxLiquidationBps(uint256)": {
								"params": {
									"newMaxBps": "The new ratio in basis points."
								}
							},
							"setMinCollateralValue(uint256)": {
								"params": {
									"newValue": "The new minCollateralValue."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"liquidationFeeBps": {
								"details": "A liquidation fee in basis points (e.g., 500 => 5%).       This is added on top of `seizeAmount` and also transferred       to the contract owner upon liquidation."
							},
							"maxLiquidationBps": {
								"details": "The maximum proportion of a user's total shares that can be seized       in one liquidation call, in basis points (e.g., 5000 => 50%)."
							},
							"minCollateralValue": {
								"details": "The minimum value (in the same unit as the vault's price feed)       a user must maintain. If their share value < minCollateralValue,       they can be liquidated."
							}
						},
						"title": "Liquidator",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Liquidator.sol\":2032:9397  contract Liquidator is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/Liquidator.sol\":4496:4992  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contracts/Liquidator.sol\":4661:4673  initialOwner */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":795:846   */\n  mstore\n    /* \"#utility.yul\":768:786   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Contracts/Liquidator.sol\":4715:4720  10000 */\n  0x2710\n    /* \"Contracts/Liquidator.sol\":4693:4711  _maxLiquidationBps */\n  dup2\n    /* \"Contracts/Liquidator.sol\":4693:4720  _maxLiquidationBps <= 10000 */\n  gt\n  iszero\n    /* \"Contracts/Liquidator.sol\":4685:4761  require(_maxLiquidationBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1059:1061   */\n  0x20\n    /* \"Contracts/Liquidator.sol\":4685:4761  require(_maxLiquidationBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1041:1062   */\n  mstore\n    /* \"#utility.yul\":1098:1100   */\n  0x24\n    /* \"#utility.yul\":1078:1096   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1071:1101   */\n  mstore\n    /* \"#utility.yul\":1137:1171   */\n  0x4c697175696461746f723a206d61784c69717569646174696f6e427073203e20\n    /* \"#utility.yul\":1117:1135   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1110:1172   */\n  mstore\n  shl(0xe0, 0x31303025)\n    /* \"#utility.yul\":1188:1206   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1181:1215   */\n  mstore\n    /* \"#utility.yul\":1232:1251   */\n  0x84\n  add\n    /* \"Contracts/Liquidator.sol\":4685:4761  require(_maxLiquidationBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n  tag_8\n    /* \"#utility.yul\":857:1257   */\n  jump\n    /* \"Contracts/Liquidator.sol\":4685:4761  require(_maxLiquidationBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\ntag_13:\n    /* \"Contracts/Liquidator.sol\":4801:4805  5000 */\n  0x1388\n    /* \"Contracts/Liquidator.sol\":4779:4797  _liquidationFeeBps */\n  dup3\n    /* \"Contracts/Liquidator.sol\":4779:4805  _liquidationFeeBps <= 5000 */\n  gt\n  iszero\n    /* \"Contracts/Liquidator.sol\":4771:4838  require(_liquidationFeeBps <= 5000, \"Liquidator: feeBps too large\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1464:1466   */\n  0x20\n    /* \"Contracts/Liquidator.sol\":4771:4838  require(_liquidationFeeBps <= 5000, \"Liquidator: feeBps too large\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1446:1467   */\n  mstore\n    /* \"#utility.yul\":1503:1505   */\n  0x1c\n    /* \"#utility.yul\":1483:1501   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1476:1506   */\n  mstore\n    /* \"#utility.yul\":1542:1572   */\n  0x4c697175696461746f723a2066656542707320746f6f206c6172676500000000\n    /* \"#utility.yul\":1522:1540   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1515:1573   */\n  mstore\n    /* \"#utility.yul\":1590:1608   */\n  0x64\n  add\n    /* \"Contracts/Liquidator.sol\":4771:4838  require(_liquidationFeeBps <= 5000, \"Liquidator: feeBps too large\") */\n  tag_8\n    /* \"#utility.yul\":1262:1614   */\n  jump\n    /* \"Contracts/Liquidator.sol\":4771:4838  require(_liquidationFeeBps <= 5000, \"Liquidator: feeBps too large\") */\ntag_16:\n    /* \"Contracts/Liquidator.sol\":4849:4867  minCollateralValue */\n  0x01\n    /* \"Contracts/Liquidator.sol\":4849:4889  minCollateralValue = _minCollateralValue */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"Contracts/Liquidator.sol\":4899:4916  liquidationFeeBps */\n  0x02\n    /* \"Contracts/Liquidator.sol\":4899:4937  liquidationFeeBps = _liquidationFeeBps */\n  sstore\n    /* \"Contracts/Liquidator.sol\":4947:4964  maxLiquidationBps */\n  0x03\n    /* \"Contracts/Liquidator.sol\":4947:4985  maxLiquidationBps = _maxLiquidationBps */\n  sstore\n  pop\n    /* \"Contracts/Liquidator.sol\":2032:9397  contract Liquidator is Ownable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:644   */\ntag_3:\n    /* \"#utility.yul\":111:117   */\n  0x00\n    /* \"#utility.yul\":119:125   */\n  0x00\n    /* \"#utility.yul\":127:133   */\n  0x00\n    /* \"#utility.yul\":135:141   */\n  0x00\n    /* \"#utility.yul\":188:191   */\n  0x80\n    /* \"#utility.yul\":176:185   */\n  dup6\n    /* \"#utility.yul\":167:174   */\n  dup8\n    /* \"#utility.yul\":163:186   */\n  sub\n    /* \"#utility.yul\":159:192   */\n  slt\n    /* \"#utility.yul\":156:209   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":205:206   */\n  0x00\n    /* \"#utility.yul\":202:203   */\n  0x00\n    /* \"#utility.yul\":195:207   */\n  revert\n    /* \"#utility.yul\":156:209   */\ntag_23:\n    /* \"#utility.yul\":231:247   */\n  dup5\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":276:307   */\n  dup2\n  and\n    /* \"#utility.yul\":266:308   */\n  dup2\n  eq\n    /* \"#utility.yul\":256:326   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":322:323   */\n  0x00\n    /* \"#utility.yul\":319:320   */\n  0x00\n    /* \"#utility.yul\":312:324   */\n  revert\n    /* \"#utility.yul\":256:326   */\ntag_24:\n    /* \"#utility.yul\":416:418   */\n  0x20\n    /* \"#utility.yul\":401:419   */\n  dup7\n  add\n    /* \"#utility.yul\":395:420   */\n  mload\n    /* \"#utility.yul\":512:514   */\n  0x40\n    /* \"#utility.yul\":497:515   */\n  dup8\n  add\n    /* \"#utility.yul\":491:516   */\n  mload\n    /* \"#utility.yul\":608:610   */\n  0x60\n    /* \"#utility.yul\":593:611   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":587:612   */\n  mload\n    /* \"#utility.yul\":345:350   */\n  swap2\n  swap9\n    /* \"#utility.yul\":395:420   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":587:612   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":14:644   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1262:1614   */\ntag_21:\n    /* \"Contracts/Liquidator.sol\":2032:9397  contract Liquidator is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Liquidator.sol\":2032:9397  contract Liquidator is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8951b054\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8951b054\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc4a34f37\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe031a824\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe81b5a8c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x11299f11\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26c01303\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29880339\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5fee4865\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Contracts/Liquidator.sol\":2730:2762  uint256 public maxLiquidationBps */\n    tag_3:\n      tag_15\n      sload(0x03)\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Contracts/Liquidator.sol\":2730:2762  uint256 public maxLiquidationBps */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Liquidator.sol\":7937:9395  function liquidate(... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Contracts/Liquidator.sol\":2275:2308  uint256 public minCollateralValue */\n    tag_5:\n      tag_15\n      sload(0x01)\n      dup2\n      jump\n        /* \"Contracts/Liquidator.sol\":6698:7510  function checkUnderCollateral(address vault, address user)... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1211:1225   */\n      swap3\n      iszero\n        /* \"#utility.yul\":1204:1226   */\n      iszero\n        /* \"#utility.yul\":1186:1227   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1258:1260   */\n      0x20\n        /* \"#utility.yul\":1243:1261   */\n      dup4\n      add\n        /* \"#utility.yul\":1236:1270   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1159:1177   */\n      add\n        /* \"Contracts/Liquidator.sol\":6698:7510  function checkUnderCollateral(address vault, address user)... */\n      tag_17\n        /* \"#utility.yul\":1018:1276   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_19\n      tag_33\n      jump\t// in\n        /* \"Contracts/Liquidator.sol\":5490:5771  function setLiquidationFeeBps(uint256 newFeeBps) external onlyOwner {... */\n    tag_8:\n      tag_19\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1658:1709   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1646:1648   */\n      0x20\n        /* \"#utility.yul\":1631:1649   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_17\n        /* \"#utility.yul\":1512:1715   */\n      jump\n        /* \"Contracts/Liquidator.sol\":5130:5347  function setMinCollateralValue(uint256 newValue) external onlyOwner {... */\n    tag_10:\n      tag_19\n      tag_43\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Contracts/Liquidator.sol\":2521:2553  uint256 public liquidationFeeBps */\n    tag_11:\n      tag_15\n      sload(0x02)\n      dup2\n      jump\n        /* \"Contracts/Liquidator.sol\":5947:6240  function setMaxLiquidationBps(uint256 newMaxBps) external onlyOwner {... */\n    tag_12:\n      tag_19\n      tag_49\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_19\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"Contracts/Liquidator.sol\":7937:9395  function liquidate(... */\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":8063:8082  vault != address(0) */\n      dup4\n      and\n        /* \"Contracts/Liquidator.sol\":8055:8112  require(vault != address(0), \"Liquidator: invalid vault\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8055:8112  require(vault != address(0), \"Liquidator: invalid vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2095:2116   */\n      mstore\n        /* \"#utility.yul\":2152:2154   */\n      0x19\n        /* \"#utility.yul\":2132:2150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2125:2155   */\n      mstore\n        /* \"#utility.yul\":2191:2218   */\n      0x4c697175696461746f723a20696e76616c6964207661756c7400000000000000\n        /* \"#utility.yul\":2171:2189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2164:2219   */\n      mstore\n        /* \"#utility.yul\":2236:2254   */\n      0x64\n      add\n        /* \"Contracts/Liquidator.sol\":8055:8112  require(vault != address(0), \"Liquidator: invalid vault\") */\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":8130:8148  user != address(0) */\n      dup3\n      and\n        /* \"Contracts/Liquidator.sol\":8122:8177  require(user != address(0), \"Liquidator: invalid user\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2467:2469   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8122:8177  require(user != address(0), \"Liquidator: invalid user\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2449:2470   */\n      mstore\n        /* \"#utility.yul\":2506:2508   */\n      0x18\n        /* \"#utility.yul\":2486:2504   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2479:2509   */\n      mstore\n        /* \"#utility.yul\":2545:2571   */\n      0x4c697175696461746f723a20696e76616c696420757365720000000000000000\n        /* \"#utility.yul\":2525:2543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2518:2572   */\n      mstore\n        /* \"#utility.yul\":2589:2607   */\n      0x64\n      add\n        /* \"Contracts/Liquidator.sol\":8122:8177  require(user != address(0), \"Liquidator: invalid user\") */\n      tag_57\n        /* \"#utility.yul\":2265:2613   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8122:8177  require(user != address(0), \"Liquidator: invalid user\") */\n    tag_59:\n        /* \"Contracts/Liquidator.sol\":8209:8210  0 */\n      0x00\n        /* \"Contracts/Liquidator.sol\":8195:8206  seizeAmount */\n      dup2\n        /* \"Contracts/Liquidator.sol\":8195:8210  seizeAmount > 0 */\n      gt\n        /* \"Contracts/Liquidator.sol\":8187:8243  require(seizeAmount > 0, \"Liquidator: zero seizeAmount\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2820:2822   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8187:8243  require(seizeAmount > 0, \"Liquidator: zero seizeAmount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2802:2823   */\n      mstore\n        /* \"#utility.yul\":2859:2861   */\n      0x1c\n        /* \"#utility.yul\":2839:2857   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2832:2862   */\n      mstore\n        /* \"#utility.yul\":2898:2928   */\n      0x4c697175696461746f723a207a65726f207365697a65416d6f756e7400000000\n        /* \"#utility.yul\":2878:2896   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2871:2929   */\n      mstore\n        /* \"#utility.yul\":2946:2964   */\n      0x64\n      add\n        /* \"Contracts/Liquidator.sol\":8187:8243  require(seizeAmount > 0, \"Liquidator: zero seizeAmount\") */\n      tag_57\n        /* \"#utility.yul\":2618:2970   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8187:8243  require(seizeAmount > 0, \"Liquidator: zero seizeAmount\") */\n    tag_62:\n        /* \"Contracts/Liquidator.sol\":8255:8275  bool underCollateral */\n      0x00\n        /* \"Contracts/Liquidator.sol\":8281:8314  checkUnderCollateral(vault, user) */\n      tag_65\n        /* \"Contracts/Liquidator.sol\":8302:8307  vault */\n      dup5\n        /* \"Contracts/Liquidator.sol\":8309:8313  user */\n      dup5\n        /* \"Contracts/Liquidator.sol\":8281:8301  checkUnderCollateral */\n      tag_29\n        /* \"Contracts/Liquidator.sol\":8281:8314  checkUnderCollateral(vault, user) */\n      jump\t// in\n    tag_65:\n        /* \"Contracts/Liquidator.sol\":8254:8314  (bool underCollateral, ) = checkUnderCollateral(vault, user) */\n      pop\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":8332:8347  underCollateral */\n      dup1\n        /* \"Contracts/Liquidator.sol\":8324:8392  require(underCollateral, \"Liquidator: user not undercollateralized\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3177:3179   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8324:8392  require(underCollateral, \"Liquidator: user not undercollateralized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3159:3180   */\n      mstore\n        /* \"#utility.yul\":3216:3218   */\n      0x28\n        /* \"#utility.yul\":3196:3214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3189:3219   */\n      mstore\n        /* \"#utility.yul\":3255:3289   */\n      0x4c697175696461746f723a2075736572206e6f7420756e646572636f6c6c6174\n        /* \"#utility.yul\":3235:3253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3228:3290   */\n      mstore\n      shl(0xc2, 0x195c985b1a5e9959)\n        /* \"#utility.yul\":3306:3324   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3299:3337   */\n      mstore\n        /* \"#utility.yul\":3354:3373   */\n      0x84\n      add\n        /* \"Contracts/Liquidator.sol\":8324:8392  require(underCollateral, \"Liquidator: user not undercollateralized\") */\n      tag_57\n        /* \"#utility.yul\":2975:3379   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8324:8392  require(underCollateral, \"Liquidator: user not undercollateralized\") */\n    tag_66:\n        /* \"Contracts/Liquidator.sol\":8480:8497  v.balanceOf(user) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1676:1708   */\n      dup5\n      dup2\n      and\n        /* \"Contracts/Liquidator.sol\":8480:8497  v.balanceOf(user) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1658:1709   */\n      mstore\n        /* \"Contracts/Liquidator.sol\":8443:8448  vault */\n      dup6\n      swap2\n        /* \"Contracts/Liquidator.sol\":8403:8422  IVaultLiquidation v */\n      0x00\n      swap2\n        /* \"Contracts/Liquidator.sol\":8480:8491  v.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1631:1649   */\n      0x24\n      add\n        /* \"Contracts/Liquidator.sol\":8480:8497  v.balanceOf(user) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"Contracts/Liquidator.sol\":8459:8497  uint256 userShares = v.balanceOf(user) */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":8529:8540  seizeAmount */\n      dup4\n        /* \"Contracts/Liquidator.sol\":8515:8525  userShares */\n      dup2\n        /* \"Contracts/Liquidator.sol\":8515:8540  userShares >= seizeAmount */\n      lt\n      iszero\n        /* \"Contracts/Liquidator.sol\":8507:8595  require(userShares >= seizeAmount, \"Liquidator: user has fewer shares than seizeAmount\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3821:3823   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8507:8595  require(userShares >= seizeAmount, \"Liquidator: user has fewer shares than seizeAmount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3803:3824   */\n      mstore\n        /* \"#utility.yul\":3860:3862   */\n      0x32\n        /* \"#utility.yul\":3840:3858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3833:3863   */\n      mstore\n        /* \"#utility.yul\":3899:3933   */\n      0x4c697175696461746f723a207573657220686173206665776572207368617265\n        /* \"#utility.yul\":3879:3897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3872:3934   */\n      mstore\n      shl(0x72, 0x1cc81d1a185b881cd95a5e99505b5bdd5b9d)\n        /* \"#utility.yul\":3950:3968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3943:3991   */\n      mstore\n        /* \"#utility.yul\":4008:4027   */\n      0x84\n      add\n        /* \"Contracts/Liquidator.sol\":8507:8595  require(userShares >= seizeAmount, \"Liquidator: user has fewer shares than seizeAmount\") */\n      tag_57\n        /* \"#utility.yul\":3619:4033   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8507:8595  require(userShares >= seizeAmount, \"Liquidator: user has fewer shares than seizeAmount\") */\n    tag_74:\n        /* \"Contracts/Liquidator.sol\":8647:8666  uint256 maxSeizable */\n      0x00\n        /* \"Contracts/Liquidator.sol\":8704:8709  10000 */\n      0x2710\n        /* \"Contracts/Liquidator.sol\":8683:8700  maxLiquidationBps */\n      sload(0x03)\n        /* \"Contracts/Liquidator.sol\":8670:8680  userShares */\n      dup4\n        /* \"Contracts/Liquidator.sol\":8670:8700  userShares * maxLiquidationBps */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"Contracts/Liquidator.sol\":8669:8709  (userShares * maxLiquidationBps) / 10000 */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"Contracts/Liquidator.sol\":8647:8709  uint256 maxSeizable = (userShares * maxLiquidationBps) / 10000 */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":8742:8753  maxSeizable */\n      dup1\n        /* \"Contracts/Liquidator.sol\":8727:8738  seizeAmount */\n      dup6\n        /* \"Contracts/Liquidator.sol\":8727:8753  seizeAmount <= maxSeizable */\n      gt\n      iszero\n        /* \"Contracts/Liquidator.sol\":8719:8798  require(seizeAmount <= maxSeizable, \"Liquidator: exceed max liquidation ratio\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4767:4769   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8719:8798  require(seizeAmount <= maxSeizable, \"Liquidator: exceed max liquidation ratio\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4749:4770   */\n      mstore\n        /* \"#utility.yul\":4806:4808   */\n      0x28\n        /* \"#utility.yul\":4786:4804   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4779:4809   */\n      mstore\n        /* \"#utility.yul\":4845:4879   */\n      0x4c697175696461746f723a20657863656564206d6178206c6971756964617469\n        /* \"#utility.yul\":4825:4843   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4818:4880   */\n      mstore\n      shl(0xc0, 0x6f6e20726174696f)\n        /* \"#utility.yul\":4896:4914   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4889:4927   */\n      mstore\n        /* \"#utility.yul\":4944:4963   */\n      0x84\n      add\n        /* \"Contracts/Liquidator.sol\":8719:8798  require(seizeAmount <= maxSeizable, \"Liquidator: exceed max liquidation ratio\") */\n      tag_57\n        /* \"#utility.yul\":4565:4969   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8719:8798  require(seizeAmount <= maxSeizable, \"Liquidator: exceed max liquidation ratio\") */\n    tag_81:\n        /* \"Contracts/Liquidator.sol\":8842:8859  uint256 feeShares */\n      0x00\n        /* \"Contracts/Liquidator.sol\":8898:8903  10000 */\n      0x2710\n        /* \"Contracts/Liquidator.sol\":8877:8894  liquidationFeeBps */\n      sload(0x02)\n        /* \"Contracts/Liquidator.sol\":8863:8874  seizeAmount */\n      dup8\n        /* \"Contracts/Liquidator.sol\":8863:8894  seizeAmount * liquidationFeeBps */\n      tag_84\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_84:\n        /* \"Contracts/Liquidator.sol\":8862:8903  (seizeAmount * liquidationFeeBps) / 10000 */\n      tag_85\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_85:\n        /* \"Contracts/Liquidator.sol\":8842:8903  uint256 feeShares = (seizeAmount * liquidationFeeBps) / 10000 */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":8913:8931  uint256 totalSeize */\n      0x00\n        /* \"Contracts/Liquidator.sol\":8934:8957  seizeAmount + feeShares */\n      tag_86\n        /* \"Contracts/Liquidator.sol\":8842:8903  uint256 feeShares = (seizeAmount * liquidationFeeBps) / 10000 */\n      dup3\n        /* \"Contracts/Liquidator.sol\":8934:8945  seizeAmount */\n      dup9\n        /* \"Contracts/Liquidator.sol\":8934:8957  seizeAmount + feeShares */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"Contracts/Liquidator.sol\":8913:8957  uint256 totalSeize = seizeAmount + feeShares */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":8989:8999  totalSeize */\n      dup1\n        /* \"Contracts/Liquidator.sol\":8975:8985  userShares */\n      dup5\n        /* \"Contracts/Liquidator.sol\":8975:8999  userShares >= totalSeize */\n      lt\n      iszero\n        /* \"Contracts/Liquidator.sol\":8967:9039  require(userShares >= totalSeize, \"Liquidator: totalSeize > userShares\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5306:5308   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":8967:9039  require(userShares >= totalSeize, \"Liquidator: totalSeize > userShares\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5288:5309   */\n      mstore\n        /* \"#utility.yul\":5345:5347   */\n      0x23\n        /* \"#utility.yul\":5325:5343   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5318:5348   */\n      mstore\n        /* \"#utility.yul\":5384:5418   */\n      0x4c697175696461746f723a20746f74616c5365697a65203e2075736572536861\n        /* \"#utility.yul\":5364:5382   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5357:5419   */\n      mstore\n      shl(0xe8, 0x726573)\n        /* \"#utility.yul\":5435:5453   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5428:5461   */\n      mstore\n        /* \"#utility.yul\":5478:5497   */\n      0x84\n      add\n        /* \"Contracts/Liquidator.sol\":8967:9039  require(userShares >= totalSeize, \"Liquidator: totalSeize > userShares\") */\n      tag_57\n        /* \"#utility.yul\":5104:5503   */\n      jump\n        /* \"Contracts/Liquidator.sol\":8967:9039  require(userShares >= totalSeize, \"Liquidator: totalSeize > userShares\") */\n    tag_88:\n        /* \"Contracts/Liquidator.sol\":9255:9256  v */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":9255:9268  v.seizeShares */\n      and\n      0x1d14cd0f\n        /* \"Contracts/Liquidator.sol\":9269:9273  user */\n      dup10\n        /* \"Contracts/Liquidator.sol\":9275:9285  totalSeize */\n      dup4\n        /* \"Contracts/Liquidator.sol\":9287:9294  owner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"Contracts/Liquidator.sol\":9287:9294  owner() */\n    tag_91:\n        /* \"Contracts/Liquidator.sol\":9255:9295  v.seizeShares(user, totalSeize, owner()) */\n      mload(0x40)\n      0xe0\n      dup6\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5728:5760   */\n      swap4\n      dup5\n      and\n        /* \"Contracts/Liquidator.sol\":9255:9295  v.seizeShares(user, totalSeize, owner()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5710:5761   */\n      mstore\n        /* \"#utility.yul\":5777:5795   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5770:5804   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5840:5872   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5820:5838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5813:5873   */\n      mstore\n        /* \"#utility.yul\":5683:5701   */\n      0x64\n      add\n        /* \"Contracts/Liquidator.sol\":9255:9295  v.seizeShares(user, totalSeize, owner()) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/Liquidator.sol\":9350:9354  user */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":9311:9388  LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner()) */\n      and\n        /* \"Contracts/Liquidator.sol\":9338:9348  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":9311:9388  LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner()) */\n      and\n        /* \"Contracts/Liquidator.sol\":9331:9336  vault */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":9311:9388  LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner()) */\n      and\n      0x900e49b75dd80ec3bea4347fabcc52ca262a91cdca47776af2875399e4b26dbe\n        /* \"Contracts/Liquidator.sol\":9356:9367  seizeAmount */\n      dup11\n        /* \"Contracts/Liquidator.sol\":9369:9378  feeShares */\n      dup7\n        /* \"Contracts/Liquidator.sol\":9380:9387  owner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"Contracts/Liquidator.sol\":9380:9387  owner() */\n    tag_97:\n        /* \"Contracts/Liquidator.sol\":9311:9388  LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6086:6111   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":6142:6144   */\n      0x20\n        /* \"#utility.yul\":6127:6145   */\n      dup5\n      add\n        /* \"#utility.yul\":6120:6154   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6190:6222   */\n      and\n        /* \"#utility.yul\":6170:6188   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6163:6223   */\n      mstore\n        /* \"#utility.yul\":6074:6076   */\n      0x60\n        /* \"#utility.yul\":6059:6077   */\n      add\n        /* \"Contracts/Liquidator.sol\":9311:9388  LiquidationExecuted(vault, msg.sender, user, seizeAmount, feeShares, owner()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Contracts/Liquidator.sol\":8045:9395  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/Liquidator.sol\":7937:9395  function liquidate(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/Liquidator.sol\":6698:7510  function checkUnderCollateral(address vault, address user)... */\n    tag_29:\n        /* \"Contracts/Liquidator.sol\":6936:6953  v.balanceOf(user) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1676:1708   */\n      dup3\n      dup2\n      and\n        /* \"Contracts/Liquidator.sol\":6936:6953  v.balanceOf(user) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1658:1709   */\n      mstore\n        /* \"Contracts/Liquidator.sol\":6802:6824  bool isUnderCollateral */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"Contracts/Liquidator.sol\":6899:6904  vault */\n      dup6\n      swap2\n        /* \"Contracts/Liquidator.sol\":6802:6824  bool isUnderCollateral */\n      dup4\n      swap2\n        /* \"Contracts/Liquidator.sol\":6936:6947  v.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1631:1649   */\n      0x24\n      add\n        /* \"Contracts/Liquidator.sol\":6936:6953  v.balanceOf(user) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n        /* \"Contracts/Liquidator.sol\":6915:6953  uint256 userShares = v.balanceOf(user) */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":6967:6977  userShares */\n      dup1\n        /* \"Contracts/Liquidator.sol\":6981:6982  0 */\n      0x00\n        /* \"Contracts/Liquidator.sol\":6967:6982  userShares == 0 */\n      sub\n        /* \"Contracts/Liquidator.sol\":6963:7199  if (userShares == 0) {... */\n      tag_105\n      jumpi\n        /* \"Contracts/Liquidator.sol\":7179:7184  false */\n      0x00\n        /* \"Contracts/Liquidator.sol\":7186:7187  0 */\n      0x00\n        /* \"Contracts/Liquidator.sol\":7171:7188  return (false, 0) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n      jump(tag_100)\n        /* \"Contracts/Liquidator.sol\":6963:7199  if (userShares == 0) {... */\n    tag_105:\n        /* \"Contracts/Liquidator.sol\":7209:7229  uint256 _totalSupply */\n      0x00\n        /* \"Contracts/Liquidator.sol\":7232:7233  v */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":7232:7245  v.totalSupply */\n      and\n      0x18160ddd\n        /* \"Contracts/Liquidator.sol\":7232:7247  v.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_108:\n        /* \"Contracts/Liquidator.sol\":7209:7247  uint256 _totalSupply = v.totalSupply() */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":7258:7271  uint256 price */\n      0x00\n        /* \"Contracts/Liquidator.sol\":7277:7278  v */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/Liquidator.sol\":7277:7297  v.getUnderlyingPrice */\n      and\n      0x468f02d2\n        /* \"Contracts/Liquidator.sol\":7277:7299  v.getUnderlyingPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n        /* \"Contracts/Liquidator.sol\":7257:7299  (uint256 price, ) = v.getUnderlyingPrice() */\n      swap1\n      pop\n        /* \"Contracts/Liquidator.sol\":7403:7420  _totalSupply == 0 */\n      dup2\n      iszero\n        /* \"Contracts/Liquidator.sol\":7403:7439  _totalSupply == 0 ? 1 : _totalSupply */\n      tag_113\n      jumpi\n        /* \"Contracts/Liquidator.sol\":7427:7439  _totalSupply */\n      dup2\n        /* \"Contracts/Liquidator.sol\":7403:7439  _totalSupply == 0 ? 1 : _totalSupply */\n      jump(tag_114)\n    tag_113:\n        /* \"Contracts/Liquidator.sol\":7423:7424  1 */\n      0x01\n        /* \"Contracts/Liquidator.sol\":7403:7439  _totalSupply == 0 ? 1 : _totalSupply */\n    tag_114:\n        /* \"Contracts/Liquidator.sol\":7380:7398  price * userShares */\n      tag_115\n        /* \"Contracts/Liquidator.sol\":7388:7398  userShares */\n      dup5\n        /* \"Contracts/Liquidator.sol\":7380:7385  price */\n      dup4\n        /* \"Contracts/Liquidator.sol\":7380:7398  price * userShares */\n      tag_78\n      jump\t// in\n    tag_115:\n        /* \"Contracts/Liquidator.sol\":7379:7440  (price * userShares) / (_totalSupply == 0 ? 1 : _totalSupply) */\n      tag_116\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_116:\n        /* \"Contracts/Liquidator.sol\":7367:7440  userValue = (price * userShares) / (_totalSupply == 0 ? 1 : _totalSupply) */\n      swap5\n      pop\n        /* \"Contracts/Liquidator.sol\":7484:7502  minCollateralValue */\n      sload(0x01)\n        /* \"Contracts/Liquidator.sol\":7472:7481  userValue */\n      dup6\n        /* \"Contracts/Liquidator.sol\":7472:7502  userValue < minCollateralValue */\n      lt\n        /* \"Contracts/Liquidator.sol\":7451:7503  isUnderCollateral = (userValue < minCollateralValue) */\n      swap6\n      pop\n        /* \"Contracts/Liquidator.sol\":6849:7510  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/Liquidator.sol\":6698:7510  function checkUnderCollateral(address vault, address user)... */\n    tag_100:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/Liquidator.sol\":5490:5771  function setLiquidationFeeBps(uint256 newFeeBps) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"Contracts/Liquidator.sol\":5589:5593  5000 */\n      0x1388\n        /* \"Contracts/Liquidator.sol\":5576:5585  newFeeBps */\n      dup2\n        /* \"Contracts/Liquidator.sol\":5576:5593  newFeeBps <= 5000 */\n      gt\n      iszero\n        /* \"Contracts/Liquidator.sol\":5568:5623  require(newFeeBps <= 5000, \"Liquidator: fee too large\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":5568:5623  require(newFeeBps <= 5000, \"Liquidator: fee too large\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6811:6832   */\n      mstore\n        /* \"#utility.yul\":6868:6870   */\n      0x19\n        /* \"#utility.yul\":6848:6866   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6841:6871   */\n      mstore\n        /* \"#utility.yul\":6907:6934   */\n      0x4c697175696461746f723a2066656520746f6f206c6172676500000000000000\n        /* \"#utility.yul\":6887:6905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6880:6935   */\n      mstore\n        /* \"#utility.yul\":6952:6970   */\n      0x64\n      add\n        /* \"Contracts/Liquidator.sol\":5568:5623  require(newFeeBps <= 5000, \"Liquidator: fee too large\") */\n      tag_57\n        /* \"#utility.yul\":6627:6976   */\n      jump\n        /* \"Contracts/Liquidator.sol\":5568:5623  require(newFeeBps <= 5000, \"Liquidator: fee too large\") */\n    tag_126:\n        /* \"Contracts/Liquidator.sol\":5650:5667  liquidationFeeBps */\n      0x02\n      dup1\n      sload\n        /* \"Contracts/Liquidator.sol\":5677:5706  liquidationFeeBps = newFeeBps */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/Liquidator.sol\":5721:5764  LiquidationFeeBpsUpdated(oldFee, newFeeBps) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7155:7180   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":7211:7213   */\n      0x20\n        /* \"#utility.yul\":7196:7214   */\n      dup2\n      add\n        /* \"#utility.yul\":7189:7223   */\n      dup5\n      swap1\n      mstore\n        /* \"Contracts/Liquidator.sol\":5721:5764  LiquidationFeeBpsUpdated(oldFee, newFeeBps) */\n      0x557b0d960e10511641485a3dc861fdc0e7940df3f9fef08d56df8f709625d108\n      swap2\n        /* \"#utility.yul\":7128:7146   */\n      add\n        /* \"Contracts/Liquidator.sol\":5721:5764  LiquidationFeeBpsUpdated(oldFee, newFeeBps) */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/Liquidator.sol\":5558:5771  {... */\n      pop\n        /* \"Contracts/Liquidator.sol\":5490:5771  function setLiquidationFeeBps(uint256 newFeeBps) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Liquidator.sol\":5130:5347  function setMinCollateralValue(uint256 newValue) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"Contracts/Liquidator.sol\":5225:5243  minCollateralValue */\n      0x01\n      dup1\n      sload\n        /* \"Contracts/Liquidator.sol\":5253:5282  minCollateralValue = newValue */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/Liquidator.sol\":5297:5340  MinCollateralValueUpdated(oldVal, newValue) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7155:7180   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":7211:7213   */\n      0x20\n        /* \"#utility.yul\":7196:7214   */\n      dup2\n      add\n        /* \"#utility.yul\":7189:7223   */\n      dup5\n      swap1\n      mstore\n        /* \"Contracts/Liquidator.sol\":5297:5340  MinCollateralValueUpdated(oldVal, newValue) */\n      0x5d513dd15e422e7bcf5473fd0705fb8ca9c338ecc0edda3a3e29003202dc921e\n      swap2\n        /* \"#utility.yul\":7128:7146   */\n      add\n        /* \"Contracts/Liquidator.sol\":5297:5340  MinCollateralValueUpdated(oldVal, newValue) */\n      tag_129\n        /* \"#utility.yul\":6981:7229   */\n      jump\n        /* \"Contracts/Liquidator.sol\":5947:6240  function setMaxLiquidationBps(uint256 newMaxBps) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"Contracts/Liquidator.sol\":6046:6051  10000 */\n      0x2710\n        /* \"Contracts/Liquidator.sol\":6033:6042  newMaxBps */\n      dup2\n        /* \"Contracts/Liquidator.sol\":6033:6051  newMaxBps <= 10000 */\n      gt\n      iszero\n        /* \"Contracts/Liquidator.sol\":6025:6092  require(newMaxBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7436:7438   */\n      0x20\n        /* \"Contracts/Liquidator.sol\":6025:6092  require(newMaxBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7418:7439   */\n      mstore\n        /* \"#utility.yul\":7475:7477   */\n      0x24\n        /* \"#utility.yul\":7455:7473   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7448:7478   */\n      mstore\n        /* \"#utility.yul\":7514:7548   */\n      0x4c697175696461746f723a206d61784c69717569646174696f6e427073203e20\n        /* \"#utility.yul\":7494:7512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7487:7549   */\n      mstore\n      shl(0xe0, 0x31303025)\n        /* \"#utility.yul\":7565:7583   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7558:7592   */\n      mstore\n        /* \"#utility.yul\":7609:7628   */\n      0x84\n      add\n        /* \"Contracts/Liquidator.sol\":6025:6092  require(newMaxBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n      tag_57\n        /* \"#utility.yul\":7234:7634   */\n      jump\n        /* \"Contracts/Liquidator.sol\":6025:6092  require(newMaxBps <= 10000, \"Liquidator: maxLiquidationBps > 100%\") */\n    tag_139:\n        /* \"Contracts/Liquidator.sol\":6119:6136  maxLiquidationBps */\n      0x03\n      dup1\n      sload\n        /* \"Contracts/Liquidator.sol\":6146:6175  maxLiquidationBps = newMaxBps */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/Liquidator.sol\":6190:6233  MaxLiquidationBpsUpdated(oldMax, newMaxBps) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7155:7180   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":7211:7213   */\n      0x20\n        /* \"#utility.yul\":7196:7214   */\n      dup2\n      add\n        /* \"#utility.yul\":7189:7223   */\n      dup5\n      swap1\n      mstore\n        /* \"Contracts/Liquidator.sol\":6190:6233  MaxLiquidationBpsUpdated(oldMax, newMaxBps) */\n      0x0c97e48d448ea4d00e9a3d604eea0e39315d280ccdeb06185e2c53efe38debcd\n      swap2\n        /* \"#utility.yul\":7128:7146   */\n      add\n        /* \"Contracts/Liquidator.sol\":6190:6233  MaxLiquidationBpsUpdated(oldMax, newMaxBps) */\n      tag_129\n        /* \"#utility.yul\":6981:7229   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1658:1709   */\n      mstore\n        /* \"#utility.yul\":1631:1649   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_57\n        /* \"#utility.yul\":1512:1715   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1658:1709   */\n      mstore\n        /* \"#utility.yul\":1631:1649   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_57\n        /* \"#utility.yul\":1512:1715   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:369   */\n    tag_158:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      0x00\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_163:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:748   */\n    tag_21:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      0x00\n        /* \"#utility.yul\":467:473   */\n      0x00\n        /* \"#utility.yul\":520:522   */\n      0x60\n        /* \"#utility.yul\":508:517   */\n      dup5\n        /* \"#utility.yul\":499:506   */\n      dup7\n        /* \"#utility.yul\":495:518   */\n      sub\n        /* \"#utility.yul\":491:523   */\n      slt\n        /* \"#utility.yul\":488:540   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":488:540   */\n    tag_165:\n        /* \"#utility.yul\":559:588   */\n      tag_166\n        /* \"#utility.yul\":578:587   */\n      dup5\n        /* \"#utility.yul\":559:588   */\n      tag_158\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":549:588   */\n      swap3\n      pop\n        /* \"#utility.yul\":607:645   */\n      tag_167\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":630:639   */\n      dup6\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"#utility.yul\":607:645   */\n      tag_158\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":374:748   */\n      swap3\n      swap6\n        /* \"#utility.yul\":597:645   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":714:716   */\n      0x40\n        /* \"#utility.yul\":699:717   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":686:718   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":374:748   */\n      jump\t// out\n        /* \"#utility.yul\":753:1013   */\n    tag_28:\n        /* \"#utility.yul\":821:827   */\n      0x00\n        /* \"#utility.yul\":829:835   */\n      0x00\n        /* \"#utility.yul\":882:884   */\n      0x40\n        /* \"#utility.yul\":870:879   */\n      dup4\n        /* \"#utility.yul\":861:868   */\n      dup6\n        /* \"#utility.yul\":857:880   */\n      sub\n        /* \"#utility.yul\":853:885   */\n      slt\n        /* \"#utility.yul\":850:902   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":898:899   */\n      0x00\n        /* \"#utility.yul\":895:896   */\n      0x00\n        /* \"#utility.yul\":888:900   */\n      revert\n        /* \"#utility.yul\":850:902   */\n    tag_169:\n        /* \"#utility.yul\":921:950   */\n      tag_170\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":921:950   */\n      tag_158\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":911:950   */\n      swap2\n      pop\n        /* \"#utility.yul\":969:1007   */\n      tag_171\n        /* \"#utility.yul\":1003:1005   */\n      0x20\n        /* \"#utility.yul\":992:1001   */\n      dup5\n        /* \"#utility.yul\":988:1006   */\n      add\n        /* \"#utility.yul\":969:1007   */\n      tag_158\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":959:1007   */\n      swap1\n      pop\n        /* \"#utility.yul\":753:1013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1507   */\n    tag_36:\n        /* \"#utility.yul\":1340:1346   */\n      0x00\n        /* \"#utility.yul\":1393:1395   */\n      0x20\n        /* \"#utility.yul\":1381:1390   */\n      dup3\n        /* \"#utility.yul\":1372:1379   */\n      dup5\n        /* \"#utility.yul\":1368:1391   */\n      sub\n        /* \"#utility.yul\":1364:1396   */\n      slt\n        /* \"#utility.yul\":1361:1413   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1409:1410   */\n      0x00\n        /* \"#utility.yul\":1406:1407   */\n      0x00\n        /* \"#utility.yul\":1399:1411   */\n      revert\n        /* \"#utility.yul\":1361:1413   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":1454:1477   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1281:1507   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1720:1906   */\n    tag_53:\n        /* \"#utility.yul\":1779:1785   */\n      0x00\n        /* \"#utility.yul\":1832:1834   */\n      0x20\n        /* \"#utility.yul\":1820:1829   */\n      dup3\n        /* \"#utility.yul\":1811:1818   */\n      dup5\n        /* \"#utility.yul\":1807:1830   */\n      sub\n        /* \"#utility.yul\":1803:1835   */\n      slt\n        /* \"#utility.yul\":1800:1852   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1848:1849   */\n      0x00\n        /* \"#utility.yul\":1845:1846   */\n      0x00\n        /* \"#utility.yul\":1838:1850   */\n      revert\n        /* \"#utility.yul\":1800:1852   */\n    tag_177:\n        /* \"#utility.yul\":1871:1900   */\n      tag_178\n        /* \"#utility.yul\":1890:1899   */\n      dup3\n        /* \"#utility.yul\":1871:1900   */\n      tag_158\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1861:1900   */\n      swap4\n        /* \"#utility.yul\":1720:1906   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3614   */\n    tag_73:\n        /* \"#utility.yul\":3454:3460   */\n      0x00\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3495:3504   */\n      dup3\n        /* \"#utility.yul\":3486:3493   */\n      dup5\n        /* \"#utility.yul\":3482:3505   */\n      sub\n        /* \"#utility.yul\":3478:3510   */\n      slt\n        /* \"#utility.yul\":3475:3527   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":3523:3524   */\n      0x00\n        /* \"#utility.yul\":3520:3521   */\n      0x00\n        /* \"#utility.yul\":3513:3525   */\n      revert\n        /* \"#utility.yul\":3475:3527   */\n    tag_184:\n      pop\n        /* \"#utility.yul\":3568:3584   */\n      mload\n      swap2\n        /* \"#utility.yul\":3384:3614   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4038:4165   */\n    tag_159:\n        /* \"#utility.yul\":4099:4109   */\n      0x4e487b71\n        /* \"#utility.yul\":4094:4097   */\n      0xe0\n        /* \"#utility.yul\":4090:4110   */\n      shl\n        /* \"#utility.yul\":4087:4088   */\n      0x00\n        /* \"#utility.yul\":4080:4111   */\n      mstore\n        /* \"#utility.yul\":4130:4134   */\n      0x11\n        /* \"#utility.yul\":4127:4128   */\n      0x04\n        /* \"#utility.yul\":4120:4135   */\n      mstore\n        /* \"#utility.yul\":4154:4158   */\n      0x24\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4144:4159   */\n      revert\n        /* \"#utility.yul\":4170:4338   */\n    tag_78:\n        /* \"#utility.yul\":4243:4252   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4274:4283   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4291:4306   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4285:4307   */\n      dup5\n      eq\n        /* \"#utility.yul\":4271:4308   */\n      or\n        /* \"#utility.yul\":4261:4332   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":4312:4330   */\n      tag_189\n      tag_159\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4170:4338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4343:4560   */\n    tag_80:\n        /* \"#utility.yul\":4383:4384   */\n      0x00\n        /* \"#utility.yul\":4409:4410   */\n      dup3\n        /* \"#utility.yul\":4399:4531   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":4453:4463   */\n      0x4e487b71\n        /* \"#utility.yul\":4448:4451   */\n      0xe0\n        /* \"#utility.yul\":4444:4464   */\n      shl\n        /* \"#utility.yul\":4441:4442   */\n      0x00\n        /* \"#utility.yul\":4434:4465   */\n      mstore\n        /* \"#utility.yul\":4488:4492   */\n      0x12\n        /* \"#utility.yul\":4485:4486   */\n      0x04\n        /* \"#utility.yul\":4478:4493   */\n      mstore\n        /* \"#utility.yul\":4516:4520   */\n      0x24\n        /* \"#utility.yul\":4513:4514   */\n      0x00\n        /* \"#utility.yul\":4506:4521   */\n      revert\n        /* \"#utility.yul\":4399:4531   */\n    tag_191:\n      pop\n        /* \"#utility.yul\":4545:4554   */\n      div\n      swap1\n        /* \"#utility.yul\":4343:4560   */\n      jump\t// out\n        /* \"#utility.yul\":4974:5099   */\n    tag_87:\n        /* \"#utility.yul\":5039:5048   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5060:5070   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5057:5093   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5073:5091   */\n      tag_189\n      tag_159\n      jump\t// in\n        /* \"#utility.yul\":6234:6622   */\n    tag_112:\n        /* \"#utility.yul\":6311:6317   */\n      0x00\n        /* \"#utility.yul\":6319:6325   */\n      0x00\n        /* \"#utility.yul\":6372:6374   */\n      0x40\n        /* \"#utility.yul\":6360:6369   */\n      dup4\n        /* \"#utility.yul\":6351:6358   */\n      dup6\n        /* \"#utility.yul\":6347:6370   */\n      sub\n        /* \"#utility.yul\":6343:6375   */\n      slt\n        /* \"#utility.yul\":6340:6392   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6385:6386   */\n      0x00\n        /* \"#utility.yul\":6378:6390   */\n      revert\n        /* \"#utility.yul\":6340:6392   */\n    tag_200:\n        /* \"#utility.yul\":6433:6449   */\n      dup3\n      mload\n        /* \"#utility.yul\":6518:6520   */\n      0x20\n        /* \"#utility.yul\":6503:6521   */\n      dup5\n      add\n        /* \"#utility.yul\":6497:6522   */\n      mload\n        /* \"#utility.yul\":6433:6449   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":6566:6570   */\n      0xff\n        /* \"#utility.yul\":6553:6571   */\n      dup2\n      and\n        /* \"#utility.yul\":6541:6572   */\n      dup2\n      eq\n        /* \"#utility.yul\":6531:6590   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6586:6587   */\n      0x00\n        /* \"#utility.yul\":6583:6584   */\n      0x00\n        /* \"#utility.yul\":6576:6588   */\n      revert\n        /* \"#utility.yul\":6531:6590   */\n    tag_201:\n        /* \"#utility.yul\":6609:6616   */\n      dup1\n        /* \"#utility.yul\":6599:6616   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6234:6622   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e554d5fea22ab8935e3c4b00a56e6ac237f34c7a960e39623dd5c04414ef3b0c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 297,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3666b3383664b07c6f5ca2238b0ba6d16f131c3f874d7c1b35b16e3deed2f19a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1616:3",
										"nodeType": "YulBlock",
										"src": "0:1616:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "146:498:3",
													"nodeType": "YulBlock",
													"src": "146:498:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "193:16:3",
																"nodeType": "YulBlock",
																"src": "193:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "202:1:3",
																					"nodeType": "YulLiteral",
																					"src": "202:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "205:1:3",
																					"nodeType": "YulLiteral",
																					"src": "205:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "195:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:6:3"
																			},
																			"nativeSrc": "195:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "195:12:3"
																		},
																		"nativeSrc": "195:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "195:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "167:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "167:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "176:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "176:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "163:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "163:3:3"
																		},
																		"nativeSrc": "163:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "163:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "188:3:3",
																		"nodeType": "YulLiteral",
																		"src": "188:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "159:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "159:3:3"
																},
																"nativeSrc": "159:33:3",
																"nodeType": "YulFunctionCall",
																"src": "159:33:3"
															},
															"nativeSrc": "156:53:3",
															"nodeType": "YulIf",
															"src": "156:53:3"
														},
														{
															"nativeSrc": "218:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "218:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "237:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "237:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "231:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nativeSrc": "231:16:3",
																"nodeType": "YulFunctionCall",
																"src": "231:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "222:5:3",
																	"nodeType": "YulTypedName",
																	"src": "222:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "310:16:3",
																"nodeType": "YulBlock",
																"src": "310:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "319:1:3",
																					"nodeType": "YulLiteral",
																					"src": "319:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "322:1:3",
																					"nodeType": "YulLiteral",
																					"src": "322:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "312:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:3"
																			},
																			"nativeSrc": "312:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "312:12:3"
																		},
																		"nativeSrc": "312:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "312:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "269:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "269:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "280:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "280:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "295:3:3",
																										"nodeType": "YulLiteral",
																										"src": "295:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "300:1:3",
																										"nodeType": "YulLiteral",
																										"src": "300:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "291:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "291:3:3"
																								},
																								"nativeSrc": "291:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "291:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "304:1:3",
																								"nodeType": "YulLiteral",
																								"src": "304:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "287:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "287:3:3"
																						},
																						"nativeSrc": "287:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "287:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "276:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:3"
																				},
																				"nativeSrc": "276:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "276:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "266:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "266:2:3"
																		},
																		"nativeSrc": "266:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "266:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "259:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "259:6:3"
																},
																"nativeSrc": "259:50:3",
																"nodeType": "YulFunctionCall",
																"src": "259:50:3"
															},
															"nativeSrc": "256:70:3",
															"nodeType": "YulIf",
															"src": "256:70:3"
														},
														{
															"nativeSrc": "335:15:3",
															"nodeType": "YulAssignment",
															"src": "335:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "345:5:3",
																"nodeType": "YulIdentifier",
																"src": "345:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "335:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:3"
																}
															]
														},
														{
															"nativeSrc": "359:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "359:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "374:1:3",
																"nodeType": "YulLiteral",
																"src": "374:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "363:7:3",
																	"nodeType": "YulTypedName",
																	"src": "363:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "384:36:3",
															"nodeType": "YulAssignment",
															"src": "384:36:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "405:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "405:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "416:2:3",
																				"nodeType": "YulLiteral",
																				"src": "416:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "401:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "401:3:3"
																		},
																		"nativeSrc": "401:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "401:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "395:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:3"
																},
																"nativeSrc": "395:25:3",
																"nodeType": "YulFunctionCall",
																"src": "395:25:3"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "384:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "384:7:3"
																}
															]
														},
														{
															"nativeSrc": "429:17:3",
															"nodeType": "YulAssignment",
															"src": "429:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "439:7:3",
																"nodeType": "YulIdentifier",
																"src": "439:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "429:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "429:6:3"
																}
															]
														},
														{
															"nativeSrc": "455:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "455:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "470:1:3",
																"nodeType": "YulLiteral",
																"src": "470:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "459:7:3",
																	"nodeType": "YulTypedName",
																	"src": "459:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "480:36:3",
															"nodeType": "YulAssignment",
															"src": "480:36:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "512:2:3",
																				"nodeType": "YulLiteral",
																				"src": "512:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "497:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:3"
																		},
																		"nativeSrc": "497:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "491:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:3"
																},
																"nativeSrc": "491:25:3",
																"nodeType": "YulFunctionCall",
																"src": "491:25:3"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "480:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "480:7:3"
																}
															]
														},
														{
															"nativeSrc": "525:17:3",
															"nodeType": "YulAssignment",
															"src": "525:17:3",
															"value": {
																"name": "value_2",
																"nativeSrc": "535:7:3",
																"nodeType": "YulIdentifier",
																"src": "535:7:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "525:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:3"
																}
															]
														},
														{
															"nativeSrc": "551:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "551:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "566:1:3",
																"nodeType": "YulLiteral",
																"src": "566:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "555:7:3",
																	"nodeType": "YulTypedName",
																	"src": "555:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "576:36:3",
															"nodeType": "YulAssignment",
															"src": "576:36:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "608:2:3",
																				"nodeType": "YulLiteral",
																				"src": "608:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "593:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "593:3:3"
																		},
																		"nativeSrc": "593:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "593:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "587:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "587:5:3"
																},
																"nativeSrc": "587:25:3",
																"nodeType": "YulFunctionCall",
																"src": "587:25:3"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "576:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "576:7:3"
																}
															]
														},
														{
															"nativeSrc": "621:17:3",
															"nodeType": "YulAssignment",
															"src": "621:17:3",
															"value": {
																"name": "value_3",
																"nativeSrc": "631:7:3",
																"nodeType": "YulIdentifier",
																"src": "631:7:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "621:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "621:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "14:630:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "88:9:3",
														"nodeType": "YulTypedName",
														"src": "88:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "99:7:3",
														"nodeType": "YulTypedName",
														"src": "99:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "111:6:3",
														"nodeType": "YulTypedName",
														"src": "111:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "119:6:3",
														"nodeType": "YulTypedName",
														"src": "119:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "127:6:3",
														"nodeType": "YulTypedName",
														"src": "127:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "135:6:3",
														"nodeType": "YulTypedName",
														"src": "135:6:3",
														"type": ""
													}
												],
												"src": "14:630:3"
											},
											{
												"body": {
													"nativeSrc": "750:102:3",
													"nodeType": "YulBlock",
													"src": "750:102:3",
													"statements": [
														{
															"nativeSrc": "760:26:3",
															"nodeType": "YulAssignment",
															"src": "760:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "772:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "772:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:2:3",
																		"nodeType": "YulLiteral",
																		"src": "783:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "768:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:3"
																},
																"nativeSrc": "768:18:3",
																"nodeType": "YulFunctionCall",
																"src": "768:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "760:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "760:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "817:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "833:3:3",
																								"nodeType": "YulLiteral",
																								"src": "833:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "838:1:3",
																								"nodeType": "YulLiteral",
																								"src": "838:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "829:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "829:3:3"
																						},
																						"nativeSrc": "829:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "829:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "842:1:3",
																						"nodeType": "YulLiteral",
																						"src": "842:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "825:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "825:3:3"
																				},
																				"nativeSrc": "825:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "825:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "813:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:3"
																		},
																		"nativeSrc": "813:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "813:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:3"
																},
																"nativeSrc": "795:51:3",
																"nodeType": "YulFunctionCall",
																"src": "795:51:3"
															},
															"nativeSrc": "795:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "795:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "649:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "719:9:3",
														"nodeType": "YulTypedName",
														"src": "719:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "730:6:3",
														"nodeType": "YulTypedName",
														"src": "730:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "741:4:3",
														"nodeType": "YulTypedName",
														"src": "741:4:3",
														"type": ""
													}
												],
												"src": "649:203:3"
											},
											{
												"body": {
													"nativeSrc": "1031:226:3",
													"nodeType": "YulBlock",
													"src": "1031:226:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1048:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1048:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1059:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1059:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1041:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1041:6:3"
																},
																"nativeSrc": "1041:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1041:21:3"
															},
															"nativeSrc": "1041:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "1041:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1082:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1082:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1093:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1093:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1078:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1078:3:3"
																		},
																		"nativeSrc": "1078:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1098:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1071:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1071:6:3"
																},
																"nativeSrc": "1071:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1071:30:3"
															},
															"nativeSrc": "1071:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "1071:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1121:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1132:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1132:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1117:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:3"
																		},
																		"nativeSrc": "1117:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a206d61784c69717569646174696f6e427073203e20",
																		"kind": "string",
																		"nativeSrc": "1137:34:3",
																		"nodeType": "YulLiteral",
																		"src": "1137:34:3",
																		"type": "",
																		"value": "Liquidator: maxLiquidationBps > "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1110:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:3"
																},
																"nativeSrc": "1110:62:3",
																"nodeType": "YulFunctionCall",
																"src": "1110:62:3"
															},
															"nativeSrc": "1110:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "1110:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1192:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1192:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1203:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1203:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1188:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:3"
																		},
																		"nativeSrc": "1188:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1188:18:3"
																	},
																	{
																		"hexValue": "31303025",
																		"kind": "string",
																		"nativeSrc": "1208:6:3",
																		"nodeType": "YulLiteral",
																		"src": "1208:6:3",
																		"type": "",
																		"value": "100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1181:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:3"
																},
																"nativeSrc": "1181:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1181:34:3"
															},
															"nativeSrc": "1181:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1181:34:3"
														},
														{
															"nativeSrc": "1224:27:3",
															"nodeType": "YulAssignment",
															"src": "1224:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1236:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1236:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:3:3",
																		"nodeType": "YulLiteral",
																		"src": "1247:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1232:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:3"
																},
																"nativeSrc": "1232:19:3",
																"nodeType": "YulFunctionCall",
																"src": "1232:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1224:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1224:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "857:400:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1008:9:3",
														"nodeType": "YulTypedName",
														"src": "1008:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1022:4:3",
														"nodeType": "YulTypedName",
														"src": "1022:4:3",
														"type": ""
													}
												],
												"src": "857:400:3"
											},
											{
												"body": {
													"nativeSrc": "1436:178:3",
													"nodeType": "YulBlock",
													"src": "1436:178:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1453:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1464:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1464:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1446:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:3"
																},
																"nativeSrc": "1446:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1446:21:3"
															},
															"nativeSrc": "1446:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "1446:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1487:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1487:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1498:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1498:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1483:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:3"
																		},
																		"nativeSrc": "1483:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1483:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1503:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1503:2:3",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1476:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:3"
																},
																"nativeSrc": "1476:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1476:30:3"
															},
															"nativeSrc": "1476:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "1476:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1526:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1526:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1537:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1537:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1522:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:3"
																		},
																		"nativeSrc": "1522:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a2066656542707320746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "1542:30:3",
																		"nodeType": "YulLiteral",
																		"src": "1542:30:3",
																		"type": "",
																		"value": "Liquidator: feeBps too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1515:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:3"
																},
																"nativeSrc": "1515:58:3",
																"nodeType": "YulFunctionCall",
																"src": "1515:58:3"
															},
															"nativeSrc": "1515:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "1515:58:3"
														},
														{
															"nativeSrc": "1582:26:3",
															"nodeType": "YulAssignment",
															"src": "1582:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1594:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1594:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1605:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1590:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1590:3:3"
																},
																"nativeSrc": "1590:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1590:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1582:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1582:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3666b3383664b07c6f5ca2238b0ba6d16f131c3f874d7c1b35b16e3deed2f19a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1262:352:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1413:9:3",
														"nodeType": "YulTypedName",
														"src": "1413:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1427:4:3",
														"nodeType": "YulTypedName",
														"src": "1427:4:3",
														"type": ""
													}
												],
												"src": "1262:352:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Liquidator: maxLiquidationBps > \")\n        mstore(add(headStart, 96), \"100%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3666b3383664b07c6f5ca2238b0ba6d16f131c3f874d7c1b35b16e3deed2f19a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Liquidator: feeBps too large\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610d20380380610d2083398101604081905261002e91610178565b836001600160a01b03811661005d57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006681610129565b506127108111156100c55760405162461bcd60e51b8152602060048201526024808201527f4c697175696461746f723a206d61784c69717569646174696f6e427073203e206044820152633130302560e01b6064820152608401610054565b6113888211156101175760405162461bcd60e51b815260206004820152601c60248201527f4c697175696461746f723a2066656542707320746f6f206c61726765000000006044820152606401610054565b600192909255600255600355506101bf565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f5f6080858703121561018b575f5ffd5b84516001600160a01b03811681146101a1575f5ffd5b60208601516040870151606090970151919890975090945092505050565b610b54806101cc5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c80638951b0541161006e5780638951b054146101165780638da5cb5b14610129578063c4a34f3714610143578063e031a82414610156578063e81b5a8c1461015f578063f2fde38b14610172575f5ffd5b806311299f11146100aa57806326c01303146100c657806329880339146100db5780635fee4865146100e4578063715018a61461010e575b5f5ffd5b6100b360035481565b6040519081526020015b60405180910390f35b6100d96100d43660046109ce565b610185565b005b6100b360015481565b6100f76100f2366004610a08565b6105da565b6040805192151583526020830191909152016100bd565b6100d961075e565b6100d9610124366004610a39565b610771565b5f546040516001600160a01b0390911681526020016100bd565b6100d9610151366004610a39565b610811565b6100b360025481565b6100d961016d366004610a39565b610857565b6100d9610180366004610a50565b6108fb565b6001600160a01b0383166101e05760405162461bcd60e51b815260206004820152601960248201527f4c697175696461746f723a20696e76616c6964207661756c740000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166102365760405162461bcd60e51b815260206004820152601860248201527f4c697175696461746f723a20696e76616c69642075736572000000000000000060448201526064016101d7565b5f81116102855760405162461bcd60e51b815260206004820152601c60248201527f4c697175696461746f723a207a65726f207365697a65416d6f756e740000000060448201526064016101d7565b5f61029084846105da565b509050806102f15760405162461bcd60e51b815260206004820152602860248201527f4c697175696461746f723a2075736572206e6f7420756e646572636f6c6c6174604482015267195c985b1a5e995960c21b60648201526084016101d7565b6040516370a0823160e01b81526001600160a01b03848116600483015285915f918316906370a0823190602401602060405180830381865afa158015610339573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035d9190610a70565b9050838110156103ca5760405162461bcd60e51b815260206004820152603260248201527f4c697175696461746f723a2075736572206861732066657765722073686172656044820152711cc81d1a185b881cd95a5e99505b5bdd5b9d60721b60648201526084016101d7565b5f612710600354836103dc9190610a9b565b6103e69190610ab8565b9050808511156104495760405162461bcd60e51b815260206004820152602860248201527f4c697175696461746f723a20657863656564206d6178206c69717569646174696044820152676f6e20726174696f60c01b60648201526084016101d7565b5f6127106002548761045b9190610a9b565b6104659190610ab8565b90505f6104728288610ad7565b9050808410156104d05760405162461bcd60e51b815260206004820152602360248201527f4c697175696461746f723a20746f74616c5365697a65203e207573657253686160448201526272657360e81b60648201526084016101d7565b846001600160a01b0316631d14cd0f89836104f25f546001600160a01b031690565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152602481019290925290911660448201526064015f604051808303815f87803b158015610540575f5ffd5b505af1158015610552573d5f5f3e3d5ffd5b50505050876001600160a01b0316336001600160a01b03168a6001600160a01b03167f900e49b75dd80ec3bea4347fabcc52ca262a91cdca47776af2875399e4b26dbe8a866105a85f546001600160a01b031690565b6040805193845260208401929092526001600160a01b03169082015260600160405180910390a4505050505050505050565b6040516370a0823160e01b81526001600160a01b0382811660048301525f918291859183918316906370a0823190602401602060405180830381865afa158015610626573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064a9190610a70565b9050805f03610660575f5f935093505050610757565b5f826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c19190610a70565b90505f836001600160a01b031663468f02d26040518163ffffffff1660e01b81526004016040805180830381865afa1580156106ff573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107239190610aea565b50905081156107325781610735565b60015b61073f8483610a9b565b6107499190610ab8565b945060015485109550505050505b9250929050565b610766610938565b61076f5f610964565b565b610779610938565b6113888111156107cb5760405162461bcd60e51b815260206004820152601960248201527f4c697175696461746f723a2066656520746f6f206c617267650000000000000060448201526064016101d7565b600280549082905560408051828152602081018490527f557b0d960e10511641485a3dc861fdc0e7940df3f9fef08d56df8f709625d10891015b60405180910390a15050565b610819610938565b600180549082905560408051828152602081018490527f5d513dd15e422e7bcf5473fd0705fb8ca9c338ecc0edda3a3e29003202dc921e9101610805565b61085f610938565b6127108111156108bd5760405162461bcd60e51b8152602060048201526024808201527f4c697175696461746f723a206d61784c69717569646174696f6e427073203e206044820152633130302560e01b60648201526084016101d7565b600380549082905560408051828152602081018490527f0c97e48d448ea4d00e9a3d604eea0e39315d280ccdeb06185e2c53efe38debcd9101610805565b610903610938565b6001600160a01b03811661092c57604051631e4fbdf760e01b81525f60048201526024016101d7565b61093581610964565b50565b5f546001600160a01b0316331461076f5760405163118cdaa760e01b81523360048201526024016101d7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146109c9575f5ffd5b919050565b5f5f5f606084860312156109e0575f5ffd5b6109e9846109b3565b92506109f7602085016109b3565b929592945050506040919091013590565b5f5f60408385031215610a19575f5ffd5b610a22836109b3565b9150610a30602084016109b3565b90509250929050565b5f60208284031215610a49575f5ffd5b5035919050565b5f60208284031215610a60575f5ffd5b610a69826109b3565b9392505050565b5f60208284031215610a80575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610ab257610ab2610a87565b92915050565b5f82610ad257634e487b7160e01b5f52601260045260245ffd5b500490565b80820180821115610ab257610ab2610a87565b5f5f60408385031215610afb575f5ffd5b8251602084015190925060ff81168114610b13575f5ffd5b80915050925092905056fea2646970667358221220e554d5fea22ab8935e3c4b00a56e6ac237f34c7a960e39623dd5c04414ef3b0c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD20 CODESIZE SUB DUP1 PUSH2 0xD20 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x178 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66 DUP2 PUSH2 0x129 JUMP JUMPDEST POP PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A206D61784C69717569646174696F6E427073203E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31303025 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54 JUMP JUMPDEST PUSH2 0x1388 DUP3 GT ISZERO PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A2066656542707320746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54 JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 SSTORE PUSH1 0x3 SSTORE POP PUSH2 0x1BF JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB54 DUP1 PUSH2 0x1CC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8951B054 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8951B054 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xC4A34F37 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xE031A824 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xE81B5A8C EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x11299F11 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x26C01303 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x29880339 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x5FEE4865 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x75E JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20696E76616C6964207661756C7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20696E76616C696420757365720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A207A65726F207365697A65416D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x290 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A2075736572206E6F7420756E646572636F6C6C6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x195C985B1A5E9959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP2 PUSH0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x339 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A207573657220686173206665776572207368617265 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1CC81D1A185B881CD95A5E99505B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 SLOAD DUP4 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20657863656564206D6178206C6971756964617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6F6E20726174696F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP8 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x472 DUP3 DUP9 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20746F74616C5365697A65203E2075736572536861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D14CD0F DUP10 DUP4 PUSH2 0x4F2 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x900E49B75DD80EC3BEA4347FABCC52CA262A91CDCA47776AF2875399E4B26DBE DUP11 DUP7 PUSH2 0x5A8 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 DUP6 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x626 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x660 JUMPI PUSH0 PUSH0 SWAP4 POP SWAP4 POP POP POP PUSH2 0x757 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x468F02D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST POP SWAP1 POP DUP2 ISZERO PUSH2 0x732 JUMPI DUP2 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x73F DUP5 DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x749 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 SLOAD DUP6 LT SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x76F PUSH0 PUSH2 0x964 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x779 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A2066656520746F6F206C6172676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x557B0D960E10511641485A3DC861FDC0E7940DF3F9FEF08D56DF8F709625D108 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x5D513DD15E422E7BCF5473FD0705FB8CA9C338ECC0EDDA3A3E29003202DC921E SWAP2 ADD PUSH2 0x805 JUMP JUMPDEST PUSH2 0x85F PUSH2 0x938 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A206D61784C69717569646174696F6E427073203E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31303025 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC97E48D448EA4D00E9A3D604EEA0E39315D280CCDEB06185E2C53EFE38DEBCD SWAP2 ADD PUSH2 0x805 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0x964 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9E9 DUP5 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F7 PUSH1 0x20 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA19 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA22 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA30 PUSH1 0x20 DUP5 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA49 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA60 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA80 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAB2 JUMPI PUSH2 0xAB2 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAB2 JUMPI PUSH2 0xAB2 PUSH2 0xA87 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SLOAD 0xD5 INVALID LOG2 0x2A 0xB8 SWAP4 MCOPY EXTCODECOPY 0x4B STOP 0xA5 PUSH15 0x6AC237F34C7A960E39623DD5C04414 0xEF EXTCODESIZE 0xC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2032:7365:2:-:0;;;4496:496;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4661:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;795:51:3;768:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;4715:5:2::1;4693:18;:27;;4685:76;;;::::0;-1:-1:-1;;;4685:76:2;;1059:2:3;4685:76:2::1;::::0;::::1;1041:21:3::0;1098:2;1078:18;;;1071:30;1137:34;1117:18;;;1110:62;-1:-1:-1;;;1188:18:3;;;1181:34;1232:19;;4685:76:2::1;857:400:3::0;4685:76:2::1;4801:4;4779:18;:26;;4771:67;;;::::0;-1:-1:-1;;;4771:67:2;;1464:2:3;4771:67:2::1;::::0;::::1;1446:21:3::0;1503:2;1483:18;;;1476:30;1542;1522:18;;;1515:58;1590:18;;4771:67:2::1;1262:352:3::0;4771:67:2::1;4849:18;:40:::0;;;;4899:17:::1;:38:::0;4947:17:::1;:38:::0;-1:-1:-1;2032:7365:2;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:630:3:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;231:16;;-1:-1:-1;;;;;276:31:3;;266:42;;256:70;;322:1;319;312:12;256:70;416:2;401:18;;395:25;512:2;497:18;;491:25;608:2;593:18;;;587:25;345:5;;395:25;;-1:-1:-1;587:25:3;;-1:-1:-1;14:630:3;-1:-1:-1;;;14:630:3:o;1262:352::-;2032:7365:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2360,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2404,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUnderCollateral_451": {
									"entryPoint": 1498,
									"id": 451,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@liquidate_580": {
									"entryPoint": 389,
									"id": 580,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@liquidationFeeBps_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxLiquidationBps_223": {
									"entryPoint": null,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minCollateralValue_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1886,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLiquidationFeeBps_352": {
									"entryPoint": 1905,
									"id": 352,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxLiquidationBps_381": {
									"entryPoint": 2135,
									"id": 381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinCollateralValue_323": {
									"entryPoint": 2065,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2299,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint8_fromMemory": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00e6e29de0548fa50ed0ab8d678d8f6433e8c9455ffa823b1c570bc264c7cf44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2dbe8c1210af0604f8ca88a15332940a0b394f8877ac55e66d60b28f9c8d2dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_421850d34df33112d2e113ba8372f7bea6e78c885a224bb7a067eec93abb96ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51a6811835e05b9989dd98b6f1761417bc001241f05fb9237192f053f7995e2c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55e84075a38951068c7a3ae0db8f31c0efc50714b4ef19a3e2f8409960d05fee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c9390100bf22e976d198f475149626ee04fce5c5bb189a1925d231e60a432fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c557334a96232afa903923fb17fcf36722f822508c3703a1d55f537253c2bbfc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6c04df7aabef17ba4cbf28e1ac9a08e71d0af1882a5dd881f6c863724125aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7636:3",
										"nodeType": "YulBlock",
										"src": "0:7636:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:3",
													"nodeType": "YulBlock",
													"src": "115:76:3",
													"statements": [
														{
															"nativeSrc": "125:26:3",
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:3",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nativeSrc": "133:18:3",
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nativeSrc": "160:25:3",
																"nodeType": "YulFunctionCall",
																"src": "160:25:3"
															},
															"nativeSrc": "160:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:3",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:3",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:3",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											},
											{
												"body": {
													"nativeSrc": "245:124:3",
													"nodeType": "YulBlock",
													"src": "245:124:3",
													"statements": [
														{
															"nativeSrc": "255:29:3",
															"nodeType": "YulAssignment",
															"src": "255:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:3"
																},
																"nativeSrc": "264:20:3",
																"nodeType": "YulFunctionCall",
																"src": "264:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:3",
																"nodeType": "YulBlock",
																"src": "347:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:3",
																					"nodeType": "YulLiteral",
																					"src": "356:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:3",
																					"nodeType": "YulLiteral",
																					"src": "359:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:3"
																			},
																			"nativeSrc": "349:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:3"
																		},
																		"nativeSrc": "349:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:3",
																										"nodeType": "YulLiteral",
																										"src": "332:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:3",
																										"nodeType": "YulLiteral",
																										"src": "337:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:3"
																								},
																								"nativeSrc": "328:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:3",
																								"nodeType": "YulLiteral",
																								"src": "341:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:3"
																						},
																						"nativeSrc": "324:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:3"
																				},
																				"nativeSrc": "313:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:3"
																		},
																		"nativeSrc": "303:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:3"
																},
																"nativeSrc": "296:50:3",
																"nodeType": "YulFunctionCall",
																"src": "296:50:3"
															},
															"nativeSrc": "293:70:3",
															"nodeType": "YulIf",
															"src": "293:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:3",
														"nodeType": "YulTypedName",
														"src": "224:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:3",
														"nodeType": "YulTypedName",
														"src": "235:5:3",
														"type": ""
													}
												],
												"src": "196:173:3"
											},
											{
												"body": {
													"nativeSrc": "478:270:3",
													"nodeType": "YulBlock",
													"src": "478:270:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:3",
																"nodeType": "YulBlock",
																"src": "524:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:3",
																					"nodeType": "YulLiteral",
																					"src": "533:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:3",
																					"nodeType": "YulLiteral",
																					"src": "536:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:3"
																			},
																			"nativeSrc": "526:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:3"
																		},
																		"nativeSrc": "526:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "499:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "508:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "508:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "495:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "495:3:3"
																		},
																		"nativeSrc": "495:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "495:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "520:2:3",
																		"nodeType": "YulLiteral",
																		"src": "520:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "491:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "491:3:3"
																},
																"nativeSrc": "491:32:3",
																"nodeType": "YulFunctionCall",
																"src": "491:32:3"
															},
															"nativeSrc": "488:52:3",
															"nodeType": "YulIf",
															"src": "488:52:3"
														},
														{
															"nativeSrc": "549:39:3",
															"nodeType": "YulAssignment",
															"src": "549:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "578:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "578:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "559:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "559:18:3"
																},
																"nativeSrc": "559:29:3",
																"nodeType": "YulFunctionCall",
																"src": "559:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "549:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "549:6:3"
																}
															]
														},
														{
															"nativeSrc": "597:48:3",
															"nodeType": "YulAssignment",
															"src": "597:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "630:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "641:2:3",
																				"nodeType": "YulLiteral",
																				"src": "641:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "626:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:3"
																		},
																		"nativeSrc": "626:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "626:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "607:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:18:3"
																},
																"nativeSrc": "607:38:3",
																"nodeType": "YulFunctionCall",
																"src": "607:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "597:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																}
															]
														},
														{
															"nativeSrc": "654:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "654:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "667:1:3",
																"nodeType": "YulLiteral",
																"src": "667:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "658:5:3",
																	"nodeType": "YulTypedName",
																	"src": "658:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "677:41:3",
															"nodeType": "YulAssignment",
															"src": "677:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "703:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "703:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "714:2:3",
																				"nodeType": "YulLiteral",
																				"src": "714:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "699:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:3"
																		},
																		"nativeSrc": "699:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "699:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "686:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "686:12:3"
																},
																"nativeSrc": "686:32:3",
																"nodeType": "YulFunctionCall",
																"src": "686:32:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "677:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:3"
																}
															]
														},
														{
															"nativeSrc": "727:15:3",
															"nodeType": "YulAssignment",
															"src": "727:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "737:5:3",
																"nodeType": "YulIdentifier",
																"src": "737:5:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "727:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "374:374:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "428:9:3",
														"nodeType": "YulTypedName",
														"src": "428:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "439:7:3",
														"nodeType": "YulTypedName",
														"src": "439:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "451:6:3",
														"nodeType": "YulTypedName",
														"src": "451:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "459:6:3",
														"nodeType": "YulTypedName",
														"src": "459:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "467:6:3",
														"nodeType": "YulTypedName",
														"src": "467:6:3",
														"type": ""
													}
												],
												"src": "374:374:3"
											},
											{
												"body": {
													"nativeSrc": "840:173:3",
													"nodeType": "YulBlock",
													"src": "840:173:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "886:16:3",
																"nodeType": "YulBlock",
																"src": "886:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "895:1:3",
																					"nodeType": "YulLiteral",
																					"src": "895:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "898:1:3",
																					"nodeType": "YulLiteral",
																					"src": "898:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "888:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:3"
																			},
																			"nativeSrc": "888:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "888:12:3"
																		},
																		"nativeSrc": "888:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "888:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "861:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "857:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:3"
																		},
																		"nativeSrc": "857:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "857:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "882:2:3",
																		"nodeType": "YulLiteral",
																		"src": "882:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "853:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "853:3:3"
																},
																"nativeSrc": "853:32:3",
																"nodeType": "YulFunctionCall",
																"src": "853:32:3"
															},
															"nativeSrc": "850:52:3",
															"nodeType": "YulIf",
															"src": "850:52:3"
														},
														{
															"nativeSrc": "911:39:3",
															"nodeType": "YulAssignment",
															"src": "911:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "940:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "940:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "921:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "921:18:3"
																},
																"nativeSrc": "921:29:3",
																"nodeType": "YulFunctionCall",
																"src": "921:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "911:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:3"
																}
															]
														},
														{
															"nativeSrc": "959:48:3",
															"nodeType": "YulAssignment",
															"src": "959:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "992:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "992:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1003:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1003:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "988:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:3"
																		},
																		"nativeSrc": "988:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "988:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "969:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "969:18:3"
																},
																"nativeSrc": "969:38:3",
																"nodeType": "YulFunctionCall",
																"src": "969:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "959:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "753:260:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "798:9:3",
														"nodeType": "YulTypedName",
														"src": "798:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "809:7:3",
														"nodeType": "YulTypedName",
														"src": "809:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "821:6:3",
														"nodeType": "YulTypedName",
														"src": "821:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "829:6:3",
														"nodeType": "YulTypedName",
														"src": "829:6:3",
														"type": ""
													}
												],
												"src": "753:260:3"
											},
											{
												"body": {
													"nativeSrc": "1141:135:3",
													"nodeType": "YulBlock",
													"src": "1141:135:3",
													"statements": [
														{
															"nativeSrc": "1151:26:3",
															"nodeType": "YulAssignment",
															"src": "1151:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1163:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1174:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1159:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:3"
																},
																"nativeSrc": "1159:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1159:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1151:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1151:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1193:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1193:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1218:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1218:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1211:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1211:6:3"
																				},
																				"nativeSrc": "1211:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1211:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1204:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1204:6:3"
																		},
																		"nativeSrc": "1204:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1204:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1186:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:3"
																},
																"nativeSrc": "1186:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1186:41:3"
															},
															"nativeSrc": "1186:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "1186:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1247:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1247:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1258:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1258:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1243:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1243:3:3"
																		},
																		"nativeSrc": "1243:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1243:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1263:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1236:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:3"
																},
																"nativeSrc": "1236:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1236:34:3"
															},
															"nativeSrc": "1236:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1236:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "1018:258:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1102:9:3",
														"nodeType": "YulTypedName",
														"src": "1102:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1113:6:3",
														"nodeType": "YulTypedName",
														"src": "1113:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1121:6:3",
														"nodeType": "YulTypedName",
														"src": "1121:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1132:4:3",
														"nodeType": "YulTypedName",
														"src": "1132:4:3",
														"type": ""
													}
												],
												"src": "1018:258:3"
											},
											{
												"body": {
													"nativeSrc": "1351:156:3",
													"nodeType": "YulBlock",
													"src": "1351:156:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:16:3",
																"nodeType": "YulBlock",
																"src": "1397:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1406:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1406:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1409:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1409:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1399:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1399:6:3"
																			},
																			"nativeSrc": "1399:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:12:3"
																		},
																		"nativeSrc": "1399:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1372:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1372:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1381:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1381:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1368:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:3"
																		},
																		"nativeSrc": "1368:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1393:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1393:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1364:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:3"
																},
																"nativeSrc": "1364:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1364:32:3"
															},
															"nativeSrc": "1361:52:3",
															"nodeType": "YulIf",
															"src": "1361:52:3"
														},
														{
															"nativeSrc": "1422:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1422:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "1435:1:3",
																"nodeType": "YulLiteral",
																"src": "1435:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1426:5:3",
																	"nodeType": "YulTypedName",
																	"src": "1426:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1445:32:3",
															"nodeType": "YulAssignment",
															"src": "1445:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1467:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1467:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1454:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1454:12:3"
																},
																"nativeSrc": "1454:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1454:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1445:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1445:5:3"
																}
															]
														},
														{
															"nativeSrc": "1486:15:3",
															"nodeType": "YulAssignment",
															"src": "1486:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "1496:5:3",
																"nodeType": "YulIdentifier",
																"src": "1496:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1486:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1281:226:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1317:9:3",
														"nodeType": "YulTypedName",
														"src": "1317:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1328:7:3",
														"nodeType": "YulTypedName",
														"src": "1328:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1340:6:3",
														"nodeType": "YulTypedName",
														"src": "1340:6:3",
														"type": ""
													}
												],
												"src": "1281:226:3"
											},
											{
												"body": {
													"nativeSrc": "1613:102:3",
													"nodeType": "YulBlock",
													"src": "1613:102:3",
													"statements": [
														{
															"nativeSrc": "1623:26:3",
															"nodeType": "YulAssignment",
															"src": "1623:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1635:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1646:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1631:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1631:3:3"
																},
																"nativeSrc": "1631:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1631:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1623:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1623:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1665:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1665:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1680:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1680:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1696:3:3",
																								"nodeType": "YulLiteral",
																								"src": "1696:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1701:1:3",
																								"nodeType": "YulLiteral",
																								"src": "1701:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1692:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1692:3:3"
																						},
																						"nativeSrc": "1692:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1692:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1705:1:3",
																						"nodeType": "YulLiteral",
																						"src": "1705:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1688:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1688:3:3"
																				},
																				"nativeSrc": "1688:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1688:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1676:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:3"
																		},
																		"nativeSrc": "1676:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1658:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:3"
																},
																"nativeSrc": "1658:51:3",
																"nodeType": "YulFunctionCall",
																"src": "1658:51:3"
															},
															"nativeSrc": "1658:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "1658:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1512:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1582:9:3",
														"nodeType": "YulTypedName",
														"src": "1582:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1593:6:3",
														"nodeType": "YulTypedName",
														"src": "1593:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1604:4:3",
														"nodeType": "YulTypedName",
														"src": "1604:4:3",
														"type": ""
													}
												],
												"src": "1512:203:3"
											},
											{
												"body": {
													"nativeSrc": "1790:116:3",
													"nodeType": "YulBlock",
													"src": "1790:116:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1836:16:3",
																"nodeType": "YulBlock",
																"src": "1836:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1845:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1845:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1848:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1848:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1838:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:3"
																			},
																			"nativeSrc": "1838:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1838:12:3"
																		},
																		"nativeSrc": "1838:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1838:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1811:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1811:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1820:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1820:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1807:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:3"
																		},
																		"nativeSrc": "1807:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1832:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1832:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1803:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:3"
																},
																"nativeSrc": "1803:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1803:32:3"
															},
															"nativeSrc": "1800:52:3",
															"nodeType": "YulIf",
															"src": "1800:52:3"
														},
														{
															"nativeSrc": "1861:39:3",
															"nodeType": "YulAssignment",
															"src": "1861:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1890:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1890:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1871:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1871:18:3"
																},
																"nativeSrc": "1871:29:3",
																"nodeType": "YulFunctionCall",
																"src": "1871:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1861:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1720:186:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1756:9:3",
														"nodeType": "YulTypedName",
														"src": "1756:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1767:7:3",
														"nodeType": "YulTypedName",
														"src": "1767:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1779:6:3",
														"nodeType": "YulTypedName",
														"src": "1779:6:3",
														"type": ""
													}
												],
												"src": "1720:186:3"
											},
											{
												"body": {
													"nativeSrc": "2085:175:3",
													"nodeType": "YulBlock",
													"src": "2085:175:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2102:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2102:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2095:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:3"
																},
																"nativeSrc": "2095:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2095:21:3"
															},
															"nativeSrc": "2095:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2095:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2136:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2136:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2147:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2147:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2132:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:3"
																		},
																		"nativeSrc": "2132:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2132:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2152:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2125:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:3"
																},
																"nativeSrc": "2125:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2125:30:3"
															},
															"nativeSrc": "2125:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2125:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2175:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2175:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2186:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2186:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2171:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:3"
																		},
																		"nativeSrc": "2171:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a20696e76616c6964207661756c74",
																		"kind": "string",
																		"nativeSrc": "2191:27:3",
																		"nodeType": "YulLiteral",
																		"src": "2191:27:3",
																		"type": "",
																		"value": "Liquidator: invalid vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:3"
																},
																"nativeSrc": "2164:55:3",
																"nodeType": "YulFunctionCall",
																"src": "2164:55:3"
															},
															"nativeSrc": "2164:55:3",
															"nodeType": "YulExpressionStatement",
															"src": "2164:55:3"
														},
														{
															"nativeSrc": "2228:26:3",
															"nodeType": "YulAssignment",
															"src": "2228:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2251:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2236:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2236:3:3"
																},
																"nativeSrc": "2236:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2236:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2228:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2228:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2dbe8c1210af0604f8ca88a15332940a0b394f8877ac55e66d60b28f9c8d2dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1911:349:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2062:9:3",
														"nodeType": "YulTypedName",
														"src": "2062:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2076:4:3",
														"nodeType": "YulTypedName",
														"src": "2076:4:3",
														"type": ""
													}
												],
												"src": "1911:349:3"
											},
											{
												"body": {
													"nativeSrc": "2439:174:3",
													"nodeType": "YulBlock",
													"src": "2439:174:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2456:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2456:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2467:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2467:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2449:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:3"
																},
																"nativeSrc": "2449:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2449:21:3"
															},
															"nativeSrc": "2449:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2449:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2490:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2490:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2501:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2501:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:3"
																		},
																		"nativeSrc": "2486:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2479:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:3"
																},
																"nativeSrc": "2479:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2479:30:3"
															},
															"nativeSrc": "2479:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2479:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2529:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2540:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2540:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:3"
																		},
																		"nativeSrc": "2525:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a20696e76616c69642075736572",
																		"kind": "string",
																		"nativeSrc": "2545:26:3",
																		"nodeType": "YulLiteral",
																		"src": "2545:26:3",
																		"type": "",
																		"value": "Liquidator: invalid user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:3"
																},
																"nativeSrc": "2518:54:3",
																"nodeType": "YulFunctionCall",
																"src": "2518:54:3"
															},
															"nativeSrc": "2518:54:3",
															"nodeType": "YulExpressionStatement",
															"src": "2518:54:3"
														},
														{
															"nativeSrc": "2581:26:3",
															"nodeType": "YulAssignment",
															"src": "2581:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2593:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2593:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2604:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2589:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:3"
																},
																"nativeSrc": "2589:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2589:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2581:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2581:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c9390100bf22e976d198f475149626ee04fce5c5bb189a1925d231e60a432fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2265:348:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2416:9:3",
														"nodeType": "YulTypedName",
														"src": "2416:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2430:4:3",
														"nodeType": "YulTypedName",
														"src": "2430:4:3",
														"type": ""
													}
												],
												"src": "2265:348:3"
											},
											{
												"body": {
													"nativeSrc": "2792:178:3",
													"nodeType": "YulBlock",
													"src": "2792:178:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2809:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2809:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2820:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2820:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2802:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:3"
																},
																"nativeSrc": "2802:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2802:21:3"
															},
															"nativeSrc": "2802:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2802:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2854:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2854:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2839:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:3"
																		},
																		"nativeSrc": "2839:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2859:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2859:2:3",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:3"
																},
																"nativeSrc": "2832:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2832:30:3"
															},
															"nativeSrc": "2832:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2832:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2882:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2893:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2893:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2878:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:3"
																		},
																		"nativeSrc": "2878:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a207a65726f207365697a65416d6f756e74",
																		"kind": "string",
																		"nativeSrc": "2898:30:3",
																		"nodeType": "YulLiteral",
																		"src": "2898:30:3",
																		"type": "",
																		"value": "Liquidator: zero seizeAmount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2871:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:3"
																},
																"nativeSrc": "2871:58:3",
																"nodeType": "YulFunctionCall",
																"src": "2871:58:3"
															},
															"nativeSrc": "2871:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "2871:58:3"
														},
														{
															"nativeSrc": "2938:26:3",
															"nodeType": "YulAssignment",
															"src": "2938:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2950:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2950:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2961:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2961:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2946:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2946:3:3"
																},
																"nativeSrc": "2946:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2946:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2938:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2938:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6c04df7aabef17ba4cbf28e1ac9a08e71d0af1882a5dd881f6c863724125aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2618:352:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2769:9:3",
														"nodeType": "YulTypedName",
														"src": "2769:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2783:4:3",
														"nodeType": "YulTypedName",
														"src": "2783:4:3",
														"type": ""
													}
												],
												"src": "2618:352:3"
											},
											{
												"body": {
													"nativeSrc": "3149:230:3",
													"nodeType": "YulBlock",
													"src": "3149:230:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3166:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3177:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3159:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:3"
																},
																"nativeSrc": "3159:21:3",
																"nodeType": "YulFunctionCall",
																"src": "3159:21:3"
															},
															"nativeSrc": "3159:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "3159:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3200:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3200:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3211:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3211:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3196:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3196:3:3"
																		},
																		"nativeSrc": "3196:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3216:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3216:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3189:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:3"
																},
																"nativeSrc": "3189:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3189:30:3"
															},
															"nativeSrc": "3189:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "3189:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3239:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3239:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3250:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3250:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3235:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:3"
																		},
																		"nativeSrc": "3235:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a2075736572206e6f7420756e646572636f6c6c6174",
																		"kind": "string",
																		"nativeSrc": "3255:34:3",
																		"nodeType": "YulLiteral",
																		"src": "3255:34:3",
																		"type": "",
																		"value": "Liquidator: user not undercollat"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:3"
																},
																"nativeSrc": "3228:62:3",
																"nodeType": "YulFunctionCall",
																"src": "3228:62:3"
															},
															"nativeSrc": "3228:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "3228:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3310:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3321:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3321:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3306:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:3"
																		},
																		"nativeSrc": "3306:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3306:18:3"
																	},
																	{
																		"hexValue": "6572616c697a6564",
																		"kind": "string",
																		"nativeSrc": "3326:10:3",
																		"nodeType": "YulLiteral",
																		"src": "3326:10:3",
																		"type": "",
																		"value": "eralized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3299:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:3"
																},
																"nativeSrc": "3299:38:3",
																"nodeType": "YulFunctionCall",
																"src": "3299:38:3"
															},
															"nativeSrc": "3299:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "3299:38:3"
														},
														{
															"nativeSrc": "3346:27:3",
															"nodeType": "YulAssignment",
															"src": "3346:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3358:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3358:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3369:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3369:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3354:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:3"
																},
																"nativeSrc": "3354:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3354:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3346:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3346:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51a6811835e05b9989dd98b6f1761417bc001241f05fb9237192f053f7995e2c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2975:404:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3126:9:3",
														"nodeType": "YulTypedName",
														"src": "3126:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3140:4:3",
														"nodeType": "YulTypedName",
														"src": "3140:4:3",
														"type": ""
													}
												],
												"src": "2975:404:3"
											},
											{
												"body": {
													"nativeSrc": "3465:149:3",
													"nodeType": "YulBlock",
													"src": "3465:149:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3511:16:3",
																"nodeType": "YulBlock",
																"src": "3511:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3520:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3520:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3523:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3523:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3513:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3513:6:3"
																			},
																			"nativeSrc": "3513:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3513:12:3"
																		},
																		"nativeSrc": "3513:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3486:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3486:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3495:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3495:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3482:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3482:3:3"
																		},
																		"nativeSrc": "3482:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3482:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3507:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3478:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:3"
																},
																"nativeSrc": "3478:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3478:32:3"
															},
															"nativeSrc": "3475:52:3",
															"nodeType": "YulIf",
															"src": "3475:52:3"
														},
														{
															"nativeSrc": "3536:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3536:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3549:1:3",
																"nodeType": "YulLiteral",
																"src": "3549:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3540:5:3",
																	"nodeType": "YulTypedName",
																	"src": "3540:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3559:25:3",
															"nodeType": "YulAssignment",
															"src": "3559:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3574:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3574:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3568:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3568:5:3"
																},
																"nativeSrc": "3568:16:3",
																"nodeType": "YulFunctionCall",
																"src": "3568:16:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3559:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3559:5:3"
																}
															]
														},
														{
															"nativeSrc": "3593:15:3",
															"nodeType": "YulAssignment",
															"src": "3593:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "3603:5:3",
																"nodeType": "YulIdentifier",
																"src": "3603:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3593:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3384:230:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3431:9:3",
														"nodeType": "YulTypedName",
														"src": "3431:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3442:7:3",
														"nodeType": "YulTypedName",
														"src": "3442:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3454:6:3",
														"nodeType": "YulTypedName",
														"src": "3454:6:3",
														"type": ""
													}
												],
												"src": "3384:230:3"
											},
											{
												"body": {
													"nativeSrc": "3793:240:3",
													"nodeType": "YulBlock",
													"src": "3793:240:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3810:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3821:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3803:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:3"
																},
																"nativeSrc": "3803:21:3",
																"nodeType": "YulFunctionCall",
																"src": "3803:21:3"
															},
															"nativeSrc": "3803:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "3803:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3844:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3844:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3855:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3855:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3840:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:3"
																		},
																		"nativeSrc": "3840:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3840:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3860:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3860:2:3",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:3"
																},
																"nativeSrc": "3833:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3833:30:3"
															},
															"nativeSrc": "3833:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "3833:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3883:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3883:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3894:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3894:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3879:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3879:3:3"
																		},
																		"nativeSrc": "3879:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3879:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a207573657220686173206665776572207368617265",
																		"kind": "string",
																		"nativeSrc": "3899:34:3",
																		"nodeType": "YulLiteral",
																		"src": "3899:34:3",
																		"type": "",
																		"value": "Liquidator: user has fewer share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3872:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:3"
																},
																"nativeSrc": "3872:62:3",
																"nodeType": "YulFunctionCall",
																"src": "3872:62:3"
															},
															"nativeSrc": "3872:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "3872:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3954:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3965:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3965:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3950:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:3"
																		},
																		"nativeSrc": "3950:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:18:3"
																	},
																	{
																		"hexValue": "73207468616e207365697a65416d6f756e74",
																		"kind": "string",
																		"nativeSrc": "3970:20:3",
																		"nodeType": "YulLiteral",
																		"src": "3970:20:3",
																		"type": "",
																		"value": "s than seizeAmount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3943:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3943:6:3"
																},
																"nativeSrc": "3943:48:3",
																"nodeType": "YulFunctionCall",
																"src": "3943:48:3"
															},
															"nativeSrc": "3943:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "3943:48:3"
														},
														{
															"nativeSrc": "4000:27:3",
															"nodeType": "YulAssignment",
															"src": "4000:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4012:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4012:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4023:3:3",
																		"nodeType": "YulLiteral",
																		"src": "4023:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4008:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4008:3:3"
																},
																"nativeSrc": "4008:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4008:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4000:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4000:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_421850d34df33112d2e113ba8372f7bea6e78c885a224bb7a067eec93abb96ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3619:414:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3770:9:3",
														"nodeType": "YulTypedName",
														"src": "3770:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3784:4:3",
														"nodeType": "YulTypedName",
														"src": "3784:4:3",
														"type": ""
													}
												],
												"src": "3619:414:3"
											},
											{
												"body": {
													"nativeSrc": "4070:95:3",
													"nodeType": "YulBlock",
													"src": "4070:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4087:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4087:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4094:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4094:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4099:10:3",
																				"nodeType": "YulLiteral",
																				"src": "4099:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4090:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:3"
																		},
																		"nativeSrc": "4090:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4080:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:3"
																},
																"nativeSrc": "4080:31:3",
																"nodeType": "YulFunctionCall",
																"src": "4080:31:3"
															},
															"nativeSrc": "4080:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "4080:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4127:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4127:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4130:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:3"
																},
																"nativeSrc": "4120:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4120:15:3"
															},
															"nativeSrc": "4120:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4120:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4151:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4151:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4154:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4154:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4144:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4144:6:3"
																},
																"nativeSrc": "4144:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4144:15:3"
															},
															"nativeSrc": "4144:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4144:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4038:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4038:127:3"
											},
											{
												"body": {
													"nativeSrc": "4222:116:3",
													"nodeType": "YulBlock",
													"src": "4222:116:3",
													"statements": [
														{
															"nativeSrc": "4232:20:3",
															"nodeType": "YulAssignment",
															"src": "4232:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4247:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4247:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4250:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4250:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4243:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4243:3:3"
																},
																"nativeSrc": "4243:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4243:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4232:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4232:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4310:22:3",
																"nodeType": "YulBlock",
																"src": "4310:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4312:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4312:16:3"
																			},
																			"nativeSrc": "4312:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4312:18:3"
																		},
																		"nativeSrc": "4312:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4312:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4281:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4281:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4274:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4274:6:3"
																				},
																				"nativeSrc": "4274:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4274:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4288:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4288:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4295:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "4295:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4304:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "4304:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4291:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4291:3:3"
																						},
																						"nativeSrc": "4291:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4291:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4285:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4285:2:3"
																				},
																				"nativeSrc": "4285:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4285:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4271:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4271:2:3"
																		},
																		"nativeSrc": "4271:37:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4271:37:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4264:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:3"
																},
																"nativeSrc": "4264:45:3",
																"nodeType": "YulFunctionCall",
																"src": "4264:45:3"
															},
															"nativeSrc": "4261:71:3",
															"nodeType": "YulIf",
															"src": "4261:71:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4170:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4201:1:3",
														"nodeType": "YulTypedName",
														"src": "4201:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4204:1:3",
														"nodeType": "YulTypedName",
														"src": "4204:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4210:7:3",
														"nodeType": "YulTypedName",
														"src": "4210:7:3",
														"type": ""
													}
												],
												"src": "4170:168:3"
											},
											{
												"body": {
													"nativeSrc": "4389:171:3",
													"nodeType": "YulBlock",
													"src": "4389:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:111:3",
																"nodeType": "YulBlock",
																"src": "4420:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4441:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4441:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4448:3:3",
																							"nodeType": "YulLiteral",
																							"src": "4448:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4453:10:3",
																							"nodeType": "YulLiteral",
																							"src": "4453:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4444:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "4444:3:3"
																					},
																					"nativeSrc": "4444:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "4444:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4434:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4434:6:3"
																			},
																			"nativeSrc": "4434:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:31:3"
																		},
																		"nativeSrc": "4434:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4485:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4485:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4488:4:3",
																					"nodeType": "YulLiteral",
																					"src": "4488:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4478:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4478:6:3"
																			},
																			"nativeSrc": "4478:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4478:15:3"
																		},
																		"nativeSrc": "4478:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4478:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4513:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4513:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4516:4:3",
																					"nodeType": "YulLiteral",
																					"src": "4516:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4506:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:3"
																			},
																			"nativeSrc": "4506:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4506:15:3"
																		},
																		"nativeSrc": "4506:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4409:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4409:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4402:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:3"
																},
																"nativeSrc": "4402:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4402:9:3"
															},
															"nativeSrc": "4399:132:3",
															"nodeType": "YulIf",
															"src": "4399:132:3"
														},
														{
															"nativeSrc": "4540:14:3",
															"nodeType": "YulAssignment",
															"src": "4540:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4549:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4549:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4552:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4552:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4545:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:3"
																},
																"nativeSrc": "4545:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4545:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4540:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4540:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4343:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4374:1:3",
														"nodeType": "YulTypedName",
														"src": "4374:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4377:1:3",
														"nodeType": "YulTypedName",
														"src": "4377:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4383:1:3",
														"nodeType": "YulTypedName",
														"src": "4383:1:3",
														"type": ""
													}
												],
												"src": "4343:217:3"
											},
											{
												"body": {
													"nativeSrc": "4739:230:3",
													"nodeType": "YulBlock",
													"src": "4739:230:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4756:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4756:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4767:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4767:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4749:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4749:6:3"
																},
																"nativeSrc": "4749:21:3",
																"nodeType": "YulFunctionCall",
																"src": "4749:21:3"
															},
															"nativeSrc": "4749:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "4749:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4790:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4790:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4801:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4801:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4786:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:3"
																		},
																		"nativeSrc": "4786:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4806:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4806:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4779:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:3"
																},
																"nativeSrc": "4779:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4779:30:3"
															},
															"nativeSrc": "4779:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "4779:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4829:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4829:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4840:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4840:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4825:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4825:3:3"
																		},
																		"nativeSrc": "4825:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4825:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a20657863656564206d6178206c6971756964617469",
																		"kind": "string",
																		"nativeSrc": "4845:34:3",
																		"nodeType": "YulLiteral",
																		"src": "4845:34:3",
																		"type": "",
																		"value": "Liquidator: exceed max liquidati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4818:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4818:6:3"
																},
																"nativeSrc": "4818:62:3",
																"nodeType": "YulFunctionCall",
																"src": "4818:62:3"
															},
															"nativeSrc": "4818:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "4818:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4900:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4911:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4911:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4896:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4896:3:3"
																		},
																		"nativeSrc": "4896:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4896:18:3"
																	},
																	{
																		"hexValue": "6f6e20726174696f",
																		"kind": "string",
																		"nativeSrc": "4916:10:3",
																		"nodeType": "YulLiteral",
																		"src": "4916:10:3",
																		"type": "",
																		"value": "on ratio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4889:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:3"
																},
																"nativeSrc": "4889:38:3",
																"nodeType": "YulFunctionCall",
																"src": "4889:38:3"
															},
															"nativeSrc": "4889:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "4889:38:3"
														},
														{
															"nativeSrc": "4936:27:3",
															"nodeType": "YulAssignment",
															"src": "4936:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4948:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4948:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4959:3:3",
																		"nodeType": "YulLiteral",
																		"src": "4959:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4944:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:3"
																},
																"nativeSrc": "4944:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4944:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4936:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4936:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c557334a96232afa903923fb17fcf36722f822508c3703a1d55f537253c2bbfc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4565:404:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4716:9:3",
														"nodeType": "YulTypedName",
														"src": "4716:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4730:4:3",
														"nodeType": "YulTypedName",
														"src": "4730:4:3",
														"type": ""
													}
												],
												"src": "4565:404:3"
											},
											{
												"body": {
													"nativeSrc": "5022:77:3",
													"nodeType": "YulBlock",
													"src": "5022:77:3",
													"statements": [
														{
															"nativeSrc": "5032:16:3",
															"nodeType": "YulAssignment",
															"src": "5032:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5043:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5043:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5046:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5046:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5039:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:3"
																},
																"nativeSrc": "5039:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5039:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5032:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5071:22:3",
																"nodeType": "YulBlock",
																"src": "5071:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5073:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5073:16:3"
																			},
																			"nativeSrc": "5073:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5073:18:3"
																		},
																		"nativeSrc": "5073:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5073:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5063:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5063:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5066:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5066:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5060:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5060:2:3"
																},
																"nativeSrc": "5060:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5060:10:3"
															},
															"nativeSrc": "5057:36:3",
															"nodeType": "YulIf",
															"src": "5057:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4974:125:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5005:1:3",
														"nodeType": "YulTypedName",
														"src": "5005:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5008:1:3",
														"nodeType": "YulTypedName",
														"src": "5008:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5014:3:3",
														"nodeType": "YulTypedName",
														"src": "5014:3:3",
														"type": ""
													}
												],
												"src": "4974:125:3"
											},
											{
												"body": {
													"nativeSrc": "5278:225:3",
													"nodeType": "YulBlock",
													"src": "5278:225:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5295:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5295:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5306:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5288:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:3"
																},
																"nativeSrc": "5288:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5288:21:3"
															},
															"nativeSrc": "5288:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5288:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5329:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5329:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5340:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5340:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5325:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:3"
																		},
																		"nativeSrc": "5325:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5325:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5345:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5318:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:3"
																},
																"nativeSrc": "5318:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5318:30:3"
															},
															"nativeSrc": "5318:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5318:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5368:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5379:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5364:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:3"
																		},
																		"nativeSrc": "5364:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5364:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a20746f74616c5365697a65203e2075736572536861",
																		"kind": "string",
																		"nativeSrc": "5384:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5384:34:3",
																		"type": "",
																		"value": "Liquidator: totalSeize > userSha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5357:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:3"
																},
																"nativeSrc": "5357:62:3",
																"nodeType": "YulFunctionCall",
																"src": "5357:62:3"
															},
															"nativeSrc": "5357:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "5357:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5450:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5435:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:3"
																		},
																		"nativeSrc": "5435:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:3"
																	},
																	{
																		"hexValue": "726573",
																		"kind": "string",
																		"nativeSrc": "5455:5:3",
																		"nodeType": "YulLiteral",
																		"src": "5455:5:3",
																		"type": "",
																		"value": "res"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5428:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:3"
																},
																"nativeSrc": "5428:33:3",
																"nodeType": "YulFunctionCall",
																"src": "5428:33:3"
															},
															"nativeSrc": "5428:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "5428:33:3"
														},
														{
															"nativeSrc": "5470:27:3",
															"nodeType": "YulAssignment",
															"src": "5470:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5482:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5482:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5493:3:3",
																		"nodeType": "YulLiteral",
																		"src": "5493:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5478:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:3"
																},
																"nativeSrc": "5478:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5478:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5470:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5470:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55e84075a38951068c7a3ae0db8f31c0efc50714b4ef19a3e2f8409960d05fee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5104:399:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5255:9:3",
														"nodeType": "YulTypedName",
														"src": "5255:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5269:4:3",
														"nodeType": "YulTypedName",
														"src": "5269:4:3",
														"type": ""
													}
												],
												"src": "5104:399:3"
											},
											{
												"body": {
													"nativeSrc": "5665:214:3",
													"nodeType": "YulBlock",
													"src": "5665:214:3",
													"statements": [
														{
															"nativeSrc": "5675:26:3",
															"nodeType": "YulAssignment",
															"src": "5675:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5687:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5687:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5698:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5698:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5683:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:3"
																},
																"nativeSrc": "5683:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5683:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5675:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5675:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5717:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5717:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5732:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5732:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5748:3:3",
																								"nodeType": "YulLiteral",
																								"src": "5748:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5753:1:3",
																								"nodeType": "YulLiteral",
																								"src": "5753:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5744:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5744:3:3"
																						},
																						"nativeSrc": "5744:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5744:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5757:1:3",
																						"nodeType": "YulLiteral",
																						"src": "5757:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5740:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5740:3:3"
																				},
																				"nativeSrc": "5740:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5740:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5728:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5728:3:3"
																		},
																		"nativeSrc": "5728:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5728:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5710:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:3"
																},
																"nativeSrc": "5710:51:3",
																"nodeType": "YulFunctionCall",
																"src": "5710:51:3"
															},
															"nativeSrc": "5710:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "5710:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5781:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5792:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5792:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5777:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:3"
																		},
																		"nativeSrc": "5777:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5777:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5797:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5797:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5770:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5770:6:3"
																},
																"nativeSrc": "5770:34:3",
																"nodeType": "YulFunctionCall",
																"src": "5770:34:3"
															},
															"nativeSrc": "5770:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "5770:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5824:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5835:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5835:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5820:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5820:3:3"
																		},
																		"nativeSrc": "5820:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5844:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5844:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5860:3:3",
																								"nodeType": "YulLiteral",
																								"src": "5860:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5865:1:3",
																								"nodeType": "YulLiteral",
																								"src": "5865:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5856:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5856:3:3"
																						},
																						"nativeSrc": "5856:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5856:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5869:1:3",
																						"nodeType": "YulLiteral",
																						"src": "5869:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5852:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5852:3:3"
																				},
																				"nativeSrc": "5852:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5852:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5840:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:3"
																		},
																		"nativeSrc": "5840:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5840:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5813:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:3"
																},
																"nativeSrc": "5813:60:3",
																"nodeType": "YulFunctionCall",
																"src": "5813:60:3"
															},
															"nativeSrc": "5813:60:3",
															"nodeType": "YulExpressionStatement",
															"src": "5813:60:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5508:371:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5618:9:3",
														"nodeType": "YulTypedName",
														"src": "5618:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5629:6:3",
														"nodeType": "YulTypedName",
														"src": "5629:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5637:6:3",
														"nodeType": "YulTypedName",
														"src": "5637:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5645:6:3",
														"nodeType": "YulTypedName",
														"src": "5645:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5656:4:3",
														"nodeType": "YulTypedName",
														"src": "5656:4:3",
														"type": ""
													}
												],
												"src": "5508:371:3"
											},
											{
												"body": {
													"nativeSrc": "6041:188:3",
													"nodeType": "YulBlock",
													"src": "6041:188:3",
													"statements": [
														{
															"nativeSrc": "6051:26:3",
															"nodeType": "YulAssignment",
															"src": "6051:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6063:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6063:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6074:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6059:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6059:3:3"
																},
																"nativeSrc": "6059:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6059:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6051:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6051:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6093:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6093:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6104:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6104:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6086:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:3"
																},
																"nativeSrc": "6086:25:3",
																"nodeType": "YulFunctionCall",
																"src": "6086:25:3"
															},
															"nativeSrc": "6086:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "6086:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6131:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6131:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6142:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6142:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6127:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:3"
																		},
																		"nativeSrc": "6127:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6127:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6147:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6147:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6120:6:3"
																},
																"nativeSrc": "6120:34:3",
																"nodeType": "YulFunctionCall",
																"src": "6120:34:3"
															},
															"nativeSrc": "6120:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "6120:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6174:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6174:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6185:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6185:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6170:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:3"
																		},
																		"nativeSrc": "6170:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6170:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6194:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6194:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6210:3:3",
																								"nodeType": "YulLiteral",
																								"src": "6210:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6215:1:3",
																								"nodeType": "YulLiteral",
																								"src": "6215:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6206:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "6206:3:3"
																						},
																						"nativeSrc": "6206:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "6206:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6219:1:3",
																						"nodeType": "YulLiteral",
																						"src": "6219:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6202:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6202:3:3"
																				},
																				"nativeSrc": "6202:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6202:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6190:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:3"
																		},
																		"nativeSrc": "6190:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6163:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:3"
																},
																"nativeSrc": "6163:60:3",
																"nodeType": "YulFunctionCall",
																"src": "6163:60:3"
															},
															"nativeSrc": "6163:60:3",
															"nodeType": "YulExpressionStatement",
															"src": "6163:60:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5884:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5994:9:3",
														"nodeType": "YulTypedName",
														"src": "5994:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6005:6:3",
														"nodeType": "YulTypedName",
														"src": "6005:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6013:6:3",
														"nodeType": "YulTypedName",
														"src": "6013:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6021:6:3",
														"nodeType": "YulTypedName",
														"src": "6021:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6032:4:3",
														"nodeType": "YulTypedName",
														"src": "6032:4:3",
														"type": ""
													}
												],
												"src": "5884:345:3"
											},
											{
												"body": {
													"nativeSrc": "6330:292:3",
													"nodeType": "YulBlock",
													"src": "6330:292:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6376:16:3",
																"nodeType": "YulBlock",
																"src": "6376:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6385:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6385:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6388:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6388:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6378:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6378:6:3"
																			},
																			"nativeSrc": "6378:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6378:12:3"
																		},
																		"nativeSrc": "6378:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6378:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6351:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6351:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6360:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6360:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6347:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:3"
																		},
																		"nativeSrc": "6347:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6347:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6372:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6372:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6343:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6343:3:3"
																},
																"nativeSrc": "6343:32:3",
																"nodeType": "YulFunctionCall",
																"src": "6343:32:3"
															},
															"nativeSrc": "6340:52:3",
															"nodeType": "YulIf",
															"src": "6340:52:3"
														},
														{
															"nativeSrc": "6401:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "6401:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "6414:1:3",
																"nodeType": "YulLiteral",
																"src": "6414:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6405:5:3",
																	"nodeType": "YulTypedName",
																	"src": "6405:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6424:25:3",
															"nodeType": "YulAssignment",
															"src": "6424:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6439:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6439:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6433:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6433:5:3"
																},
																"nativeSrc": "6433:16:3",
																"nodeType": "YulFunctionCall",
																"src": "6433:16:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6424:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6424:5:3"
																}
															]
														},
														{
															"nativeSrc": "6458:15:3",
															"nodeType": "YulAssignment",
															"src": "6458:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "6468:5:3",
																"nodeType": "YulIdentifier",
																"src": "6468:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6458:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6458:6:3"
																}
															]
														},
														{
															"nativeSrc": "6482:40:3",
															"nodeType": "YulVariableDeclaration",
															"src": "6482:40:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6507:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6518:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6518:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6503:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:3"
																		},
																		"nativeSrc": "6503:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6503:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6497:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6497:5:3"
																},
																"nativeSrc": "6497:25:3",
																"nodeType": "YulFunctionCall",
																"src": "6497:25:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6486:7:3",
																	"nodeType": "YulTypedName",
																	"src": "6486:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6574:16:3",
																"nodeType": "YulBlock",
																"src": "6574:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6583:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6583:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6586:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6586:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6576:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6576:6:3"
																			},
																			"nativeSrc": "6576:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6576:12:3"
																		},
																		"nativeSrc": "6576:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6576:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "6544:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "6557:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "6557:7:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6566:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6566:4:3",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6553:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6553:3:3"
																				},
																				"nativeSrc": "6553:18:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6553:18:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6541:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "6541:2:3"
																		},
																		"nativeSrc": "6541:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:31:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6534:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:3"
																},
																"nativeSrc": "6534:39:3",
																"nodeType": "YulFunctionCall",
																"src": "6534:39:3"
															},
															"nativeSrc": "6531:59:3",
															"nodeType": "YulIf",
															"src": "6531:59:3"
														},
														{
															"nativeSrc": "6599:17:3",
															"nodeType": "YulAssignment",
															"src": "6599:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "6609:7:3",
																"nodeType": "YulIdentifier",
																"src": "6609:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6599:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint8_fromMemory",
												"nativeSrc": "6234:388:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6288:9:3",
														"nodeType": "YulTypedName",
														"src": "6288:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6299:7:3",
														"nodeType": "YulTypedName",
														"src": "6299:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6311:6:3",
														"nodeType": "YulTypedName",
														"src": "6311:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6319:6:3",
														"nodeType": "YulTypedName",
														"src": "6319:6:3",
														"type": ""
													}
												],
												"src": "6234:388:3"
											},
											{
												"body": {
													"nativeSrc": "6801:175:3",
													"nodeType": "YulBlock",
													"src": "6801:175:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6818:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6818:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6811:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6811:6:3"
																},
																"nativeSrc": "6811:21:3",
																"nodeType": "YulFunctionCall",
																"src": "6811:21:3"
															},
															"nativeSrc": "6811:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "6811:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6852:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6852:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6863:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6863:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6848:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6848:3:3"
																		},
																		"nativeSrc": "6848:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6848:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6868:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6868:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6841:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6841:6:3"
																},
																"nativeSrc": "6841:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6841:30:3"
															},
															"nativeSrc": "6841:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6841:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6891:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6891:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6902:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6902:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6887:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6887:3:3"
																		},
																		"nativeSrc": "6887:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6887:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a2066656520746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "6907:27:3",
																		"nodeType": "YulLiteral",
																		"src": "6907:27:3",
																		"type": "",
																		"value": "Liquidator: fee too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6880:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6880:6:3"
																},
																"nativeSrc": "6880:55:3",
																"nodeType": "YulFunctionCall",
																"src": "6880:55:3"
															},
															"nativeSrc": "6880:55:3",
															"nodeType": "YulExpressionStatement",
															"src": "6880:55:3"
														},
														{
															"nativeSrc": "6944:26:3",
															"nodeType": "YulAssignment",
															"src": "6944:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6956:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6956:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6967:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6967:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6952:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6952:3:3"
																},
																"nativeSrc": "6952:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6952:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6944:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6944:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00e6e29de0548fa50ed0ab8d678d8f6433e8c9455ffa823b1c570bc264c7cf44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6627:349:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6778:9:3",
														"nodeType": "YulTypedName",
														"src": "6778:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6792:4:3",
														"nodeType": "YulTypedName",
														"src": "6792:4:3",
														"type": ""
													}
												],
												"src": "6627:349:3"
											},
											{
												"body": {
													"nativeSrc": "7110:119:3",
													"nodeType": "YulBlock",
													"src": "7110:119:3",
													"statements": [
														{
															"nativeSrc": "7120:26:3",
															"nodeType": "YulAssignment",
															"src": "7120:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7132:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7132:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7143:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7143:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7128:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7128:3:3"
																},
																"nativeSrc": "7128:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7128:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7120:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7120:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7162:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7162:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7173:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7173:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7155:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:3"
																},
																"nativeSrc": "7155:25:3",
																"nodeType": "YulFunctionCall",
																"src": "7155:25:3"
															},
															"nativeSrc": "7155:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "7155:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7200:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7200:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7211:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7196:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:3"
																		},
																		"nativeSrc": "7196:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7216:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7189:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:3"
																},
																"nativeSrc": "7189:34:3",
																"nodeType": "YulFunctionCall",
																"src": "7189:34:3"
															},
															"nativeSrc": "7189:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "7189:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6981:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7071:9:3",
														"nodeType": "YulTypedName",
														"src": "7071:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7082:6:3",
														"nodeType": "YulTypedName",
														"src": "7082:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7090:6:3",
														"nodeType": "YulTypedName",
														"src": "7090:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7101:4:3",
														"nodeType": "YulTypedName",
														"src": "7101:4:3",
														"type": ""
													}
												],
												"src": "6981:248:3"
											},
											{
												"body": {
													"nativeSrc": "7408:226:3",
													"nodeType": "YulBlock",
													"src": "7408:226:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7425:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7425:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7436:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7436:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7418:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:3"
																},
																"nativeSrc": "7418:21:3",
																"nodeType": "YulFunctionCall",
																"src": "7418:21:3"
															},
															"nativeSrc": "7418:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "7418:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7459:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7459:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7470:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7470:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7455:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:3"
																		},
																		"nativeSrc": "7455:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7448:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:3"
																},
																"nativeSrc": "7448:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7448:30:3"
															},
															"nativeSrc": "7448:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "7448:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7498:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7498:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7509:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7509:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7494:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:3"
																		},
																		"nativeSrc": "7494:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:18:3"
																	},
																	{
																		"hexValue": "4c697175696461746f723a206d61784c69717569646174696f6e427073203e20",
																		"kind": "string",
																		"nativeSrc": "7514:34:3",
																		"nodeType": "YulLiteral",
																		"src": "7514:34:3",
																		"type": "",
																		"value": "Liquidator: maxLiquidationBps > "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7487:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:3"
																},
																"nativeSrc": "7487:62:3",
																"nodeType": "YulFunctionCall",
																"src": "7487:62:3"
															},
															"nativeSrc": "7487:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "7487:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7569:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7569:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7580:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7580:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7565:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7565:3:3"
																		},
																		"nativeSrc": "7565:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:18:3"
																	},
																	{
																		"hexValue": "31303025",
																		"kind": "string",
																		"nativeSrc": "7585:6:3",
																		"nodeType": "YulLiteral",
																		"src": "7585:6:3",
																		"type": "",
																		"value": "100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7558:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:3"
																},
																"nativeSrc": "7558:34:3",
																"nodeType": "YulFunctionCall",
																"src": "7558:34:3"
															},
															"nativeSrc": "7558:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "7558:34:3"
														},
														{
															"nativeSrc": "7601:27:3",
															"nodeType": "YulAssignment",
															"src": "7601:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7613:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7613:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7624:3:3",
																		"nodeType": "YulLiteral",
																		"src": "7624:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7609:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7609:3:3"
																},
																"nativeSrc": "7609:19:3",
																"nodeType": "YulFunctionCall",
																"src": "7609:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7601:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7601:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7234:400:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7385:9:3",
														"nodeType": "YulTypedName",
														"src": "7385:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7399:4:3",
														"nodeType": "YulTypedName",
														"src": "7399:4:3",
														"type": ""
													}
												],
												"src": "7234:400:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_2dbe8c1210af0604f8ca88a15332940a0b394f8877ac55e66d60b28f9c8d2dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Liquidator: invalid vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5c9390100bf22e976d198f475149626ee04fce5c5bb189a1925d231e60a432fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Liquidator: invalid user\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_db6c04df7aabef17ba4cbf28e1ac9a08e71d0af1882a5dd881f6c863724125aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Liquidator: zero seizeAmount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51a6811835e05b9989dd98b6f1761417bc001241f05fb9237192f053f7995e2c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Liquidator: user not undercollat\")\n        mstore(add(headStart, 96), \"eralized\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_421850d34df33112d2e113ba8372f7bea6e78c885a224bb7a067eec93abb96ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Liquidator: user has fewer share\")\n        mstore(add(headStart, 96), \"s than seizeAmount\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c557334a96232afa903923fb17fcf36722f822508c3703a1d55f537253c2bbfc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Liquidator: exceed max liquidati\")\n        mstore(add(headStart, 96), \"on ratio\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_55e84075a38951068c7a3ae0db8f31c0efc50714b4ef19a3e2f8409960d05fee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Liquidator: totalSeize > userSha\")\n        mstore(add(headStart, 96), \"res\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint8_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_00e6e29de0548fa50ed0ab8d678d8f6433e8c9455ffa823b1c570bc264c7cf44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Liquidator: fee too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Liquidator: maxLiquidationBps > \")\n        mstore(add(headStart, 96), \"100%\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c80638951b0541161006e5780638951b054146101165780638da5cb5b14610129578063c4a34f3714610143578063e031a82414610156578063e81b5a8c1461015f578063f2fde38b14610172575f5ffd5b806311299f11146100aa57806326c01303146100c657806329880339146100db5780635fee4865146100e4578063715018a61461010e575b5f5ffd5b6100b360035481565b6040519081526020015b60405180910390f35b6100d96100d43660046109ce565b610185565b005b6100b360015481565b6100f76100f2366004610a08565b6105da565b6040805192151583526020830191909152016100bd565b6100d961075e565b6100d9610124366004610a39565b610771565b5f546040516001600160a01b0390911681526020016100bd565b6100d9610151366004610a39565b610811565b6100b360025481565b6100d961016d366004610a39565b610857565b6100d9610180366004610a50565b6108fb565b6001600160a01b0383166101e05760405162461bcd60e51b815260206004820152601960248201527f4c697175696461746f723a20696e76616c6964207661756c740000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166102365760405162461bcd60e51b815260206004820152601860248201527f4c697175696461746f723a20696e76616c69642075736572000000000000000060448201526064016101d7565b5f81116102855760405162461bcd60e51b815260206004820152601c60248201527f4c697175696461746f723a207a65726f207365697a65416d6f756e740000000060448201526064016101d7565b5f61029084846105da565b509050806102f15760405162461bcd60e51b815260206004820152602860248201527f4c697175696461746f723a2075736572206e6f7420756e646572636f6c6c6174604482015267195c985b1a5e995960c21b60648201526084016101d7565b6040516370a0823160e01b81526001600160a01b03848116600483015285915f918316906370a0823190602401602060405180830381865afa158015610339573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035d9190610a70565b9050838110156103ca5760405162461bcd60e51b815260206004820152603260248201527f4c697175696461746f723a2075736572206861732066657765722073686172656044820152711cc81d1a185b881cd95a5e99505b5bdd5b9d60721b60648201526084016101d7565b5f612710600354836103dc9190610a9b565b6103e69190610ab8565b9050808511156104495760405162461bcd60e51b815260206004820152602860248201527f4c697175696461746f723a20657863656564206d6178206c69717569646174696044820152676f6e20726174696f60c01b60648201526084016101d7565b5f6127106002548761045b9190610a9b565b6104659190610ab8565b90505f6104728288610ad7565b9050808410156104d05760405162461bcd60e51b815260206004820152602360248201527f4c697175696461746f723a20746f74616c5365697a65203e207573657253686160448201526272657360e81b60648201526084016101d7565b846001600160a01b0316631d14cd0f89836104f25f546001600160a01b031690565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152602481019290925290911660448201526064015f604051808303815f87803b158015610540575f5ffd5b505af1158015610552573d5f5f3e3d5ffd5b50505050876001600160a01b0316336001600160a01b03168a6001600160a01b03167f900e49b75dd80ec3bea4347fabcc52ca262a91cdca47776af2875399e4b26dbe8a866105a85f546001600160a01b031690565b6040805193845260208401929092526001600160a01b03169082015260600160405180910390a4505050505050505050565b6040516370a0823160e01b81526001600160a01b0382811660048301525f918291859183918316906370a0823190602401602060405180830381865afa158015610626573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064a9190610a70565b9050805f03610660575f5f935093505050610757565b5f826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c19190610a70565b90505f836001600160a01b031663468f02d26040518163ffffffff1660e01b81526004016040805180830381865afa1580156106ff573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107239190610aea565b50905081156107325781610735565b60015b61073f8483610a9b565b6107499190610ab8565b945060015485109550505050505b9250929050565b610766610938565b61076f5f610964565b565b610779610938565b6113888111156107cb5760405162461bcd60e51b815260206004820152601960248201527f4c697175696461746f723a2066656520746f6f206c617267650000000000000060448201526064016101d7565b600280549082905560408051828152602081018490527f557b0d960e10511641485a3dc861fdc0e7940df3f9fef08d56df8f709625d10891015b60405180910390a15050565b610819610938565b600180549082905560408051828152602081018490527f5d513dd15e422e7bcf5473fd0705fb8ca9c338ecc0edda3a3e29003202dc921e9101610805565b61085f610938565b6127108111156108bd5760405162461bcd60e51b8152602060048201526024808201527f4c697175696461746f723a206d61784c69717569646174696f6e427073203e206044820152633130302560e01b60648201526084016101d7565b600380549082905560408051828152602081018490527f0c97e48d448ea4d00e9a3d604eea0e39315d280ccdeb06185e2c53efe38debcd9101610805565b610903610938565b6001600160a01b03811661092c57604051631e4fbdf760e01b81525f60048201526024016101d7565b61093581610964565b50565b5f546001600160a01b0316331461076f5760405163118cdaa760e01b81523360048201526024016101d7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146109c9575f5ffd5b919050565b5f5f5f606084860312156109e0575f5ffd5b6109e9846109b3565b92506109f7602085016109b3565b929592945050506040919091013590565b5f5f60408385031215610a19575f5ffd5b610a22836109b3565b9150610a30602084016109b3565b90509250929050565b5f60208284031215610a49575f5ffd5b5035919050565b5f60208284031215610a60575f5ffd5b610a69826109b3565b9392505050565b5f60208284031215610a80575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610ab257610ab2610a87565b92915050565b5f82610ad257634e487b7160e01b5f52601260045260245ffd5b500490565b80820180821115610ab257610ab2610a87565b5f5f60408385031215610afb575f5ffd5b8251602084015190925060ff81168114610b13575f5ffd5b80915050925092905056fea2646970667358221220e554d5fea22ab8935e3c4b00a56e6ac237f34c7a960e39623dd5c04414ef3b0c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8951B054 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8951B054 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xC4A34F37 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xE031A824 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xE81B5A8C EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x11299F11 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x26C01303 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x29880339 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x5FEE4865 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x75E JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20696E76616C6964207661756C7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20696E76616C696420757365720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A207A65726F207365697A65416D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x290 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A2075736572206E6F7420756E646572636F6C6C6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x195C985B1A5E9959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP2 PUSH0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x339 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A207573657220686173206665776572207368617265 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1CC81D1A185B881CD95A5E99505B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 SLOAD DUP4 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20657863656564206D6178206C6971756964617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6F6E20726174696F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP8 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x472 DUP3 DUP9 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A20746F74616C5365697A65203E2075736572536861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D14CD0F DUP10 DUP4 PUSH2 0x4F2 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x900E49B75DD80EC3BEA4347FABCC52CA262A91CDCA47776AF2875399E4B26DBE DUP11 DUP7 PUSH2 0x5A8 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 DUP6 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x626 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x660 JUMPI PUSH0 PUSH0 SWAP4 POP SWAP4 POP POP POP PUSH2 0x757 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x468F02D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST POP SWAP1 POP DUP2 ISZERO PUSH2 0x732 JUMPI DUP2 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x73F DUP5 DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x749 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 SLOAD DUP6 LT SWAP6 POP POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x76F PUSH0 PUSH2 0x964 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x779 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A2066656520746F6F206C6172676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x557B0D960E10511641485A3DC861FDC0E7940DF3F9FEF08D56DF8F709625D108 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x5D513DD15E422E7BCF5473FD0705FB8CA9C338ECC0EDDA3A3E29003202DC921E SWAP2 ADD PUSH2 0x805 JUMP JUMPDEST PUSH2 0x85F PUSH2 0x938 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C697175696461746F723A206D61784C69717569646174696F6E427073203E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x31303025 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC97E48D448EA4D00E9A3D604EEA0E39315D280CCDEB06185E2C53EFE38DEBCD SWAP2 ADD PUSH2 0x805 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0x964 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9E9 DUP5 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F7 PUSH1 0x20 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA19 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA22 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA30 PUSH1 0x20 DUP5 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA49 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA60 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA80 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAB2 JUMPI PUSH2 0xAB2 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAB2 JUMPI PUSH2 0xAB2 PUSH2 0xA87 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SLOAD 0xD5 INVALID LOG2 0x2A 0xB8 SWAP4 MCOPY EXTCODECOPY 0x4B STOP 0xA5 PUSH15 0x6AC237F34C7A960E39623DD5C04414 0xEF EXTCODESIZE 0xC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2032:7365:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:32;;;;;;;;;160:25:3;;;148:2;133:18;2730:32:2;;;;;;;;7937:1458;;;;;;:::i;:::-;;:::i;:::-;;2275:33;;;;;;6698:812;;;;;;:::i;:::-;;:::i;:::-;;;;1211:14:3;;1204:22;1186:41;;1258:2;1243:18;;1236:34;;;;1159:18;6698:812:2;1018:258:3;2293:101:0;;;:::i;5490:281:2:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1658:51:3;;1646:2;1631:18;1638:85:0;1512:203:3;5130:217:2;;;;;;:::i;:::-;;:::i;2521:32::-;;;;;;5947:293;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;7937:1458:2:-;-1:-1:-1;;;;;8063:19:2;;8055:57;;;;-1:-1:-1;;;8055:57:2;;2113:2:3;8055:57:2;;;2095:21:3;2152:2;2132:18;;;2125:30;2191:27;2171:18;;;2164:55;2236:18;;8055:57:2;;;;;;;;;-1:-1:-1;;;;;8130:18:2;;8122:55;;;;-1:-1:-1;;;8122:55:2;;2467:2:3;8122:55:2;;;2449:21:3;2506:2;2486:18;;;2479:30;2545:26;2525:18;;;2518:54;2589:18;;8122:55:2;2265:348:3;8122:55:2;8209:1;8195:11;:15;8187:56;;;;-1:-1:-1;;;8187:56:2;;2820:2:3;8187:56:2;;;2802:21:3;2859:2;2839:18;;;2832:30;2898;2878:18;;;2871:58;2946:18;;8187:56:2;2618:352:3;8187:56:2;8255:20;8281:33;8302:5;8309:4;8281:20;:33::i;:::-;8254:60;;;8332:15;8324:68;;;;-1:-1:-1;;;8324:68:2;;3177:2:3;8324:68:2;;;3159:21:3;3216:2;3196:18;;;3189:30;3255:34;3235:18;;;3228:62;-1:-1:-1;;;3306:18:3;;;3299:38;3354:19;;8324:68:2;2975:404:3;8324:68:2;8480:17;;-1:-1:-1;;;8480:17:2;;-1:-1:-1;;;;;1676:32:3;;;8480:17:2;;;1658:51:3;8443:5:2;;8403:19;;8480:11;;;;;1631:18:3;;8480:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8459:38;;8529:11;8515:10;:25;;8507:88;;;;-1:-1:-1;;;8507:88:2;;3821:2:3;8507:88:2;;;3803:21:3;3860:2;3840:18;;;3833:30;3899:34;3879:18;;;3872:62;-1:-1:-1;;;3950:18:3;;;3943:48;4008:19;;8507:88:2;3619:414:3;8507:88:2;8647:19;8704:5;8683:17;;8670:10;:30;;;;:::i;:::-;8669:40;;;;:::i;:::-;8647:62;;8742:11;8727;:26;;8719:79;;;;-1:-1:-1;;;8719:79:2;;4767:2:3;8719:79:2;;;4749:21:3;4806:2;4786:18;;;4779:30;4845:34;4825:18;;;4818:62;-1:-1:-1;;;4896:18:3;;;4889:38;4944:19;;8719:79:2;4565:404:3;8719:79:2;8842:17;8898:5;8877:17;;8863:11;:31;;;;:::i;:::-;8862:41;;;;:::i;:::-;8842:61;-1:-1:-1;8913:18:2;8934:23;8842:61;8934:11;:23;:::i;:::-;8913:44;;8989:10;8975;:24;;8967:72;;;;-1:-1:-1;;;8967:72:2;;5306:2:3;8967:72:2;;;5288:21:3;5345:2;5325:18;;;5318:30;5384:34;5364:18;;;5357:62;-1:-1:-1;;;5435:18:3;;;5428:33;5478:19;;8967:72:2;5104:399:3;8967:72:2;9255:1;-1:-1:-1;;;;;9255:13:2;;9269:4;9275:10;9287:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;9287:7:2;9255:40;;;;;;-1:-1:-1;;;;;;9255:40:2;;;-1:-1:-1;;;;;5728:32:3;;;9255:40:2;;;5710:51:3;5777:18;;;5770:34;;;;5840:32;;;5820:18;;;5813:60;5683:18;;9255:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:4;-1:-1:-1;;;;;9311:77:2;9338:10;-1:-1:-1;;;;;9311:77:2;9331:5;-1:-1:-1;;;;;9311:77:2;;9356:11;9369:9;9380:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;9380:7:2;9311:77;;;6086:25:3;;;6142:2;6127:18;;6120:34;;;;-1:-1:-1;;;;;6190:32:3;6170:18;;;6163:60;6074:2;6059:18;9311:77:2;;;;;;;8045:1350;;;;;;7937:1458;;;:::o;6698:812::-;6936:17;;-1:-1:-1;;;6936:17:2;;-1:-1:-1;;;;;1676:32:3;;;6936:17:2;;;1658:51:3;6802:22:2;;;;6899:5;;6802:22;;6936:11;;;;;1631:18:3;;6936:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6915:38;;6967:10;6981:1;6967:15;6963:236;;7179:5;7186:1;7171:17;;;;;;;;6963:236;7209:20;7232:1;-1:-1:-1;;;;;7232:13:2;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7209:38;;7258:13;7277:1;-1:-1:-1;;;;;7277:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7257:42:2;-1:-1:-1;7403:17:2;;:36;;7427:12;7403:36;;;7423:1;7403:36;7380:18;7388:10;7380:5;:18;:::i;:::-;7379:61;;;;:::i;:::-;7367:73;;7484:18;;7472:9;:30;7451:52;;6849:661;;;;6698:812;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5490:281:2:-;1531:13:0;:11;:13::i;:::-;5589:4:2::1;5576:9;:17;;5568:55;;;::::0;-1:-1:-1;;;5568:55:2;;6829:2:3;5568:55:2::1;::::0;::::1;6811:21:3::0;6868:2;6848:18;;;6841:30;6907:27;6887:18;;;6880:55;6952:18;;5568:55:2::1;6627:349:3::0;5568:55:2::1;5650:17;::::0;;5677:29;;;;5721:43:::1;::::0;;7155:25:3;;;7211:2;7196:18;;7189:34;;;5721:43:2::1;::::0;7128:18:3;5721:43:2::1;;;;;;;;5558:213;5490:281:::0;:::o;5130:217::-;1531:13:0;:11;:13::i;:::-;5225:18:2::1;::::0;;5253:29;;;;5297:43:::1;::::0;;7155:25:3;;;7211:2;7196:18;;7189:34;;;5297:43:2::1;::::0;7128:18:3;5297:43:2::1;6981:248:3::0;5947:293:2;1531:13:0;:11;:13::i;:::-;6046:5:2::1;6033:9;:18;;6025:67;;;::::0;-1:-1:-1;;;6025:67:2;;7436:2:3;6025:67:2::1;::::0;::::1;7418:21:3::0;7475:2;7455:18;;;7448:30;7514:34;7494:18;;;7487:62;-1:-1:-1;;;7565:18:3;;;7558:34;7609:19;;6025:67:2::1;7234:400:3::0;6025:67:2::1;6119:17;::::0;;6146:29;;;;6190:43:::1;::::0;;7155:25:3;;;7211:2;7196:18;;7189:34;;;6190:43:2::1;::::0;7128:18:3;6190:43:2::1;6981:248:3::0;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1658:51:3::0;1631:18;;2672:31:0::1;1512:203:3::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1658:51:3;1631:18;;1901:40:0;1512:203:3;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;196:173:3:-;264:20;;-1:-1:-1;;;;;313:31:3;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:374::-;451:6;459;467;520:2;508:9;499:7;495:23;491:32;488:52;;;536:1;533;526:12;488:52;559:29;578:9;559:29;:::i;:::-;549:39;;607:38;641:2;630:9;626:18;607:38;:::i;:::-;374:374;;597:48;;-1:-1:-1;;;714:2:3;699:18;;;;686:32;;374:374::o;753:260::-;821:6;829;882:2;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;921:29;940:9;921:29;:::i;:::-;911:39;;969:38;1003:2;992:9;988:18;969:38;:::i;:::-;959:48;;753:260;;;;;:::o;1281:226::-;1340:6;1393:2;1381:9;1372:7;1368:23;1364:32;1361:52;;;1409:1;1406;1399:12;1361:52;-1:-1:-1;1454:23:3;;1281:226;-1:-1:-1;1281:226:3:o;1720:186::-;1779:6;1832:2;1820:9;1811:7;1807:23;1803:32;1800:52;;;1848:1;1845;1838:12;1800:52;1871:29;1890:9;1871:29;:::i;:::-;1861:39;1720:186;-1:-1:-1;;;1720:186:3:o;3384:230::-;3454:6;3507:2;3495:9;3486:7;3482:23;3478:32;3475:52;;;3523:1;3520;3513:12;3475:52;-1:-1:-1;3568:16:3;;3384:230;-1:-1:-1;3384:230:3:o;4038:127::-;4099:10;4094:3;4090:20;4087:1;4080:31;4130:4;4127:1;4120:15;4154:4;4151:1;4144:15;4170:168;4243:9;;;4274;;4291:15;;;4285:22;;4271:37;4261:71;;4312:18;;:::i;:::-;4170:168;;;;:::o;4343:217::-;4383:1;4409;4399:132;;4453:10;4448:3;4444:20;4441:1;4434:31;4488:4;4485:1;4478:15;4516:4;4513:1;4506:15;4399:132;-1:-1:-1;4545:9:3;;4343:217::o;4974:125::-;5039:9;;;5060:10;;;5057:36;;;5073:18;;:::i;6234:388::-;6311:6;6319;6372:2;6360:9;6351:7;6347:23;6343:32;6340:52;;;6388:1;6385;6378:12;6340:52;6433:16;;6518:2;6503:18;;6497:25;6433:16;;-1:-1:-1;6566:4:3;6553:18;;6541:31;;6531:59;;6586:1;6583;6576:12;6531:59;6609:7;6599:17;;;6234:388;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "580000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkUnderCollateral(address,address)": "infinite",
								"liquidate(address,address,uint256)": "infinite",
								"liquidationFeeBps()": "2349",
								"maxLiquidationBps()": "2284",
								"minCollateralValue()": "2328",
								"owner()": "2321",
								"renounceOwnership()": "infinite",
								"setLiquidationFeeBps(uint256)": "27962",
								"setMaxLiquidationBps(uint256)": "28061",
								"setMinCollateralValue(uint256)": "27991",
								"transferOwnership(address)": "28439"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 4496,
									"end": 4992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4496,
									"end": 4992,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4661,
									"end": 4673,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 795,
									"end": 846,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 786,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 768,
									"end": 786,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4715,
									"end": 4720,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2710"
								},
								{
									"begin": 4693,
									"end": 4711,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4693,
									"end": 4720,
									"modifierDepth": 1,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4693,
									"end": 4720,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4685,
									"end": 4761,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4685,
									"end": 4761,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4685,
									"end": 4761,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1059,
									"end": 1061,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4685,
									"end": 4761,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1041,
									"end": 1062,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1096,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1096,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1096,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1071,
									"end": 1101,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1137,
									"end": 1171,
									"name": "PUSH",
									"source": 3,
									"value": "4C697175696461746F723A206D61784C69717569646174696F6E427073203E20"
								},
								{
									"begin": 1117,
									"end": 1135,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1117,
									"end": 1135,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1117,
									"end": 1135,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1172,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31303025"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1188,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 1188,
									"end": 1206,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1188,
									"end": 1206,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1232,
									"end": 1251,
									"name": "PUSH",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 1232,
									"end": 1251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 857,
									"end": 1257,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4685,
									"end": 4761,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4801,
									"end": 4805,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1388"
								},
								{
									"begin": 4779,
									"end": 4797,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4779,
									"end": 4805,
									"modifierDepth": 1,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4779,
									"end": 4805,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4771,
									"end": 4838,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4771,
									"end": 4838,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4771,
									"end": 4838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1466,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4771,
									"end": 4838,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1467,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1483,
									"end": 1501,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1483,
									"end": 1501,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1483,
									"end": 1501,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1476,
									"end": 1506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 1572,
									"name": "PUSH",
									"source": 3,
									"value": "4C697175696461746F723A2066656542707320746F6F206C6172676500000000"
								},
								{
									"begin": 1522,
									"end": 1540,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1522,
									"end": 1540,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1522,
									"end": 1540,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1515,
									"end": 1573,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1262,
									"end": 1614,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 4771,
									"end": 4838,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4849,
									"end": 4867,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4849,
									"end": 4889,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4849,
									"end": 4889,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4849,
									"end": 4889,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4849,
									"end": 4889,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4899,
									"end": 4916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4899,
									"end": 4937,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4947,
									"end": 4964,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 4947,
									"end": 4985,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 644,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 644,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 111,
									"end": 117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 125,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 133,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 141,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 191,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 185,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 167,
									"end": 174,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 163,
									"end": 186,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 159,
									"end": 192,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 156,
									"end": 209,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 156,
									"end": 209,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 205,
									"end": 206,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 203,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 207,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 156,
									"end": 209,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 231,
									"end": 247,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 231,
									"end": 247,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 276,
									"end": 307,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 266,
									"end": 308,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 266,
									"end": 308,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 256,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 326,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 322,
									"end": 323,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 320,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 324,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 256,
									"end": 326,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 326,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 416,
									"end": 418,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 401,
									"end": 419,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 401,
									"end": 419,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 395,
									"end": 420,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 491,
									"end": 516,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP8",
									"source": 3
								},
								{
									"begin": 593,
									"end": 611,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 587,
									"end": 612,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 345,
									"end": 350,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 345,
									"end": 350,
									"name": "SWAP9",
									"source": 3
								},
								{
									"begin": 395,
									"end": 420,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 395,
									"end": 420,
									"name": "SWAP8",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 587,
									"end": 612,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 587,
									"end": 612,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 644,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1262,
									"end": 1614,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1262,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 9397,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e554d5fea22ab8935e3c4b00a56e6ac237f34c7a960e39623dd5c04414ef3b0c64736f6c634300081c0033",
									".code": [
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "8951B054"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "8951B054"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "C4A34F37"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "E031A824"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "E81B5A8C"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "11299F11"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "26C01303"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "29880339"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "5FEE4865"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 9397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7937,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7937,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2308,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6698,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 6698,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1227,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1018,
											"end": 1276,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5490,
											"end": 5771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5490,
											"end": 5771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1512,
											"end": 1715,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5130,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5130,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5947,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5947,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8063,
											"end": 8082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2218,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A20696E76616C6964207661756C7400000000000000"
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8055,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2486,
											"end": 2504,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2486,
											"end": 2504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2571,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A20696E76616C696420757365720000000000000000"
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2265,
											"end": 2613,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8122,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8195,
											"end": 8210,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2859,
											"end": 2861,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A207A65726F207365697A65416D6F756E7400000000"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2618,
											"end": 2970,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8187,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8255,
											"end": 8275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8302,
											"end": 8307,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8309,
											"end": 8313,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 8281,
											"end": 8314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8314,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8281,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8254,
											"end": 8314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8254,
											"end": 8314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8254,
											"end": 8314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8332,
											"end": 8347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3289,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A2075736572206E6F7420756E646572636F6C6C6174"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2975,
											"end": 3379,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8324,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8443,
											"end": 8448,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8403,
											"end": 8422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8491,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8491,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 8480,
											"end": 8491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8480,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8480,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8459,
											"end": 8497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8459,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8540,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8515,
											"end": 8525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3899,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A207573657220686173206665776572207368617265"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CC81D1A185B881CD95A5E99505B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3968,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3950,
											"end": 3968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3619,
											"end": 4033,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 8507,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8647,
											"end": 8666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8709,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 8683,
											"end": 8700,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8683,
											"end": 8700,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8670,
											"end": 8680,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8670,
											"end": 8700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8669,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8669,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8647,
											"end": 8709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8647,
											"end": 8709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8727,
											"end": 8738,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4786,
											"end": 4804,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4786,
											"end": 4804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4879,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A20657863656564206D6178206C6971756964617469"
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E20726174696F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 4927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4565,
											"end": 4969,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8719,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8903,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 8877,
											"end": 8894,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8877,
											"end": 8894,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8874,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8863,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8863,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8862,
											"end": 8903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8862,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 8842,
											"end": 8903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8934,
											"end": 8945,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8934,
											"end": 8957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 8999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8975,
											"end": 8985,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8975,
											"end": 8999,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8975,
											"end": 8999,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A20746F74616C5365697A65203E2075736572536861"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5357,
											"end": 5419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5428,
											"end": 5461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5478,
											"end": 5497,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5478,
											"end": 5497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5104,
											"end": 5503,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9255,
											"end": 9268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9268,
											"name": "PUSH",
											"source": 2,
											"value": "1D14CD0F"
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9287,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9294,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9287,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5728,
											"end": 5760,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5760,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5760,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5710,
											"end": 5761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5872,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9350,
											"end": 9354,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9338,
											"end": 9348,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9331,
											"end": 9336,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "900E49B75DD80EC3BEA4347FABCC52CA262A91CDCA47776AF2875399E4B26DBE"
										},
										{
											"begin": 9356,
											"end": 9367,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9380,
											"end": 9387,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 9380,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6111,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6111,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6111,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6144,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6145,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6127,
											"end": 6145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6154,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6154,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6190,
											"end": 6222,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9388,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7937,
											"end": 9395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6936,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6915,
											"end": 6953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6915,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6963,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6963,
											"end": 7199,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7171,
											"end": 7188,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6963,
											"end": 7199,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6963,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7245,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7232,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7258,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "468F02D2"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7277,
											"end": 7299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7403,
											"end": 7420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7427,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7388,
											"end": 7398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 7385,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7380,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7379,
											"end": 7440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7440,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7502,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7503,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1388"
										},
										{
											"begin": 5576,
											"end": 5585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5593,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5568,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6870,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A2066656520746F6F206C6172676500000000000000"
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6627,
											"end": 6976,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5568,
											"end": 5623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5706,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "557B0D960E10511641485A3DC861FDC0E7940DF3F9FEF08D56DF8F709625D108"
										},
										{
											"begin": 5721,
											"end": 5764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5771,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5225,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5D513DD15E422E7BCF5473FD0705FB8CA9C338ECC0EDDA3A3E29003202DC921E"
										},
										{
											"begin": 5297,
											"end": 5340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6981,
											"end": 7229,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5947,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 6033,
											"end": 6042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6051,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6051,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6025,
											"end": 6092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7475,
											"end": 7477,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7448,
											"end": 7478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7514,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "4C697175696461746F723A206D61784C69717569646174696F6E427073203E20"
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31303025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7234,
											"end": 7634,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6025,
											"end": 6092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6119,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6119,
											"end": 6136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6119,
											"end": 6136,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6190,
											"end": 6233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6190,
											"end": 6233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6190,
											"end": 6233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6190,
											"end": 6233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C97E48D448EA4D00E9A3D604EEA0E39315D280CCDEB06185E2C53EFE38DEBCD"
										},
										{
											"begin": 6190,
											"end": 6233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6190,
											"end": 6233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6981,
											"end": 7229,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1512,
											"end": 1715,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1512,
											"end": 1715,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 748,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 374,
											"end": 748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 522,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 506,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 495,
											"end": 518,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 491,
											"end": 523,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 488,
											"end": 540,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 488,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 488,
											"end": 540,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 488,
											"end": 540,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 488,
											"end": 540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 559,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 578,
											"end": 587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 559,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 559,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 559,
											"end": 588,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 559,
											"end": 588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 588,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 549,
											"end": 588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 607,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 607,
											"end": 645,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 374,
											"end": 748,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 597,
											"end": 645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 597,
											"end": 645,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 699,
											"end": 717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 699,
											"end": 717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 699,
											"end": 717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 686,
											"end": 718,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 686,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 821,
											"end": 827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 850,
											"end": 902,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 850,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 898,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 900,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 850,
											"end": 902,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 921,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 921,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 911,
											"end": 950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 911,
											"end": 950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 969,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1007,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 969,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 959,
											"end": 1007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 1007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 753,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1507,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1281,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1379,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1396,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1413,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1361,
											"end": 1413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1411,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1413,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1361,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1281,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1720,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1807,
											"end": 1830,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1835,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1852,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1800,
											"end": 1852,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1850,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1852,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1800,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1871,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1900,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1906,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1720,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3614,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3384,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3505,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3510,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3527,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3475,
											"end": 3527,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3527,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3475,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4038,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4038,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 4094,
											"end": 4097,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4111,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4127,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4274,
											"end": 4283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4274,
											"end": 4283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4307,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4307,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4308,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4312,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4560,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4343,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4399,
											"end": 4531,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4463,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4444,
											"end": 4464,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4492,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4478,
											"end": 4493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4521,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4531,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4399,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5099,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4974,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5070,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5093,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5057,
											"end": 5093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5073,
											"end": 5091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6311,
											"end": 6317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6358,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6370,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6375,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6390,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6522,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6566,
											"end": 6570,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6572,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6531,
											"end": 6590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6531,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6616,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6234,
											"end": 6622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Contracts/Liquidator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkUnderCollateral(address,address)": "5fee4865",
							"liquidate(address,address,uint256)": "26c01303",
							"liquidationFeeBps()": "e031a824",
							"maxLiquidationBps()": "11299f11",
							"minCollateralValue()": "29880339",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setLiquidationFeeBps(uint256)": "8951b054",
							"setMaxLiquidationBps(uint256)": "e81b5a8c",
							"setMinCollateralValue(uint256)": "c4a34f37",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateralValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLiquidationBps\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userLiquidated\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"LiquidationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"LiquidationFeeBpsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxBps\",\"type\":\"uint256\"}],\"name\":\"MaxLiquidationBpsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinCollateralValueUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkUnderCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isUnderCollateral\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeAmount\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidationBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeBps\",\"type\":\"uint256\"}],\"name\":\"setLiquidationFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxBps\",\"type\":\"uint256\"}],\"name\":\"setMaxLiquidationBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setMinCollateralValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"LiquidationExecuted(address,address,address,uint256,uint256,address)\":{\"details\":\"Emitted after a successful liquidation.\",\"params\":{\"feeShares\":\"The fee portion of shares, also seized and given to owner.\",\"liquidator\":\"The caller who triggered the liquidation action.\",\"recipient\":\"The address that receives the seized shares (the contract owner).\",\"seizedShares\":\"The base amount of shares seized from the user.\",\"userLiquidated\":\"The user whose shares were seized.\",\"vault\":\"The vault being liquidated.\"}},\"LiquidationFeeBpsUpdated(uint256,uint256)\":{\"details\":\"Emitted when the liquidation fee is updated.\"},\"MaxLiquidationBpsUpdated(uint256,uint256)\":{\"details\":\"Emitted when the maximum liquidation ratio is updated.\"},\"MinCollateralValueUpdated(uint256,uint256)\":{\"details\":\"Emitted when the minCollateralValue is updated.\"}},\"kind\":\"dev\",\"methods\":{\"checkUnderCollateral(address,address)\":{\"details\":\"Checks if a user is undercollateralized by computing their share value       from the vault's price feed and comparing it to `minCollateralValue`.\",\"params\":{\"user\":\"The user to check.\",\"vault\":\"The vault implementing IVaultLiquidation.\"},\"returns\":{\"isUnderCollateral\":\"True if user's share value < minCollateralValue.\",\"userValue\":\"        The user's computed share value (in the feed's unit).\"}},\"constructor\":{\"params\":{\"_liquidationFeeBps\":\"A fee in basis points added on top of `seizeAmount`.\",\"_maxLiquidationBps\":\"The maximum fraction of user shares seizable in one call.\",\"_minCollateralValue\":\"The minimum user share value required to avoid liquidation.\",\"initialOwner\":\"The address that will own this Liquidator contract.\"}},\"liquidate(address,address,uint256)\":{\"params\":{\"seizeAmount\":\"The base number of shares to seize (excluding fee).\",\"user\":\"The undercollateralized user to liquidate.\",\"vault\":\"The vault address implementing IVaultLiquidation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setLiquidationFeeBps(uint256)\":{\"params\":{\"newFeeBps\":\"The new liquidation fee.\"}},\"setMaxLiquidationBps(uint256)\":{\"params\":{\"newMaxBps\":\"The new ratio in basis points.\"}},\"setMinCollateralValue(uint256)\":{\"params\":{\"newValue\":\"The new minCollateralValue.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"liquidationFeeBps\":{\"details\":\"A liquidation fee in basis points (e.g., 500 => 5%).       This is added on top of `seizeAmount` and also transferred       to the contract owner upon liquidation.\"},\"maxLiquidationBps\":{\"details\":\"The maximum proportion of a user's total shares that can be seized       in one liquidation call, in basis points (e.g., 5000 => 50%).\"},\"minCollateralValue\":{\"details\":\"The minimum value (in the same unit as the vault's price feed)       a user must maintain. If their share value < minCollateralValue,       they can be liquidated.\"}},\"title\":\"Liquidator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor calls the Ownable base constructor with `initialOwner`          and initializes the liquidation parameters.\"},\"liquidate(address,address,uint256)\":{\"notice\":\"Liquidates a user if they are undercollateralized by seizing a specified          number of shares (plus a fee) and transferring them to this contract's owner.\"},\"setLiquidationFeeBps(uint256)\":{\"notice\":\"Updates the liquidation fee in basis points (onlyOwner).\"},\"setMaxLiquidationBps(uint256)\":{\"notice\":\"Updates the max fraction of user shares that can be seized in one call (onlyOwner).\"},\"setMinCollateralValue(uint256)\":{\"notice\":\"Updates the minimum collateral value (onlyOwner).\"}},\"notice\":\"A contract that can forcibly seize user shares from an undercollateralized position         in a vault. The seized shares are transferred to this contract's owner (the deployer),         who can then decide how to handle them (e.g., distribute to a hired liquidator,         return partially to a pool, penalize the user, etc.).         Key parameters:         - minCollateralValue: The required value below which a user is undercollateralized.         - liquidationFeeBps: A fee in basis points added on top of the seizeAmount,            also sent to the owner (deployer).         - maxLiquidationBps: The maximum fraction (in BPS) of a user's shares            that can be seized in one call.         This contract calls `seizeShares(user, totalSeize, owner())` on the vault,          transferring forcibly removed shares to the contract's owner.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Liquidator.sol\":\"Liquidator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Contracts/Liquidator.sol\":{\"keccak256\":\"0x15b27d2b35ee2574fe030e9f418bbffd83dc6d089b8784809d459fe0270fd787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df392bbca898498ddc5c395f004f3ac9c0badfeb31f855cd3136024229d449d\",\"dweb:/ipfs/Qma4GARQcHVFRaQYVVpAfUN6ej9F4w4o3TSsutDHfn2kYL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Contracts/Liquidator.sol:Liquidator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 217,
								"contract": "Contracts/Liquidator.sol:Liquidator",
								"label": "minCollateralValue",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 220,
								"contract": "Contracts/Liquidator.sol:Liquidator",
								"label": "liquidationFeeBps",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 223,
								"contract": "Contracts/Liquidator.sol:Liquidator",
								"label": "maxLiquidationBps",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor calls the Ownable base constructor with `initialOwner`          and initializes the liquidation parameters."
							},
							"liquidate(address,address,uint256)": {
								"notice": "Liquidates a user if they are undercollateralized by seizing a specified          number of shares (plus a fee) and transferring them to this contract's owner."
							},
							"setLiquidationFeeBps(uint256)": {
								"notice": "Updates the liquidation fee in basis points (onlyOwner)."
							},
							"setMaxLiquidationBps(uint256)": {
								"notice": "Updates the max fraction of user shares that can be seized in one call (onlyOwner)."
							},
							"setMinCollateralValue(uint256)": {
								"notice": "Updates the minimum collateral value (onlyOwner)."
							}
						},
						"notice": "A contract that can forcibly seize user shares from an undercollateralized position         in a vault. The seized shares are transferred to this contract's owner (the deployer),         who can then decide how to handle them (e.g., distribute to a hired liquidator,         return partially to a pool, penalize the user, etc.).         Key parameters:         - minCollateralValue: The required value below which a user is undercollateralized.         - liquidationFeeBps: A fee in basis points added on top of the seizeAmount,            also sent to the owner (deployer).         - maxLiquidationBps: The maximum fraction (in BPS) of a user's shares            that can be seized in one call.         This contract calls `seizeShares(user, totalSeize, owner())` on the vault,          transferring forcibly removed shares to the contract's owner.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"Contracts/Liquidator.sol": {
				"ast": {
					"absolutePath": "Contracts/Liquidator.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"IVaultLiquidation": [
							211
						],
						"Liquidator": [
							581
						],
						"Ownable": [
							147
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultLiquidation",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "112:476:2",
								"text": " @dev Minimal interface for a Vault that supports forcibly reassigning user shares \n      to a recipient during liquidation. The Liquidator calls:\n        1. balanceOf(user) - checks user share balance\n        2. totalSupply()   - used for ratio-based calculations\n        3. getUnderlyingPrice() - to compute user's share value in the chosen unit (e.g. USD)\n        4. seizeShares(...) - forcibly remove shares from one user and assign them to a recipient"
							},
							"fullyImplemented": false,
							"id": 211,
							"linearizedBaseContracts": [
								211
							],
							"name": "IVaultLiquidation",
							"nameLocation": "599:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "632:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "650:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "642:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:14:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "679:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:2"
									},
									"scope": 211,
									"src": "623:65:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "702:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "739:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:9:2"
									},
									"scope": 211,
									"src": "693:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "468f02d2",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingPrice",
									"nameLocation": "762:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "814:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "806:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "827:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "821:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 197,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:31:2"
									},
									"scope": 211,
									"src": "753:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "843:172:2",
										"text": " @notice Forcibly removes `shares` from `from` and transfers them to `recipient`.\n         Used by the Liquidator for undercollateralized positions."
									},
									"functionSelector": "1d14cd0f",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "seizeShares",
									"nameLocation": "1029:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1049:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1041:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1063:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1055:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1079:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1071:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:49:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:2"
									},
									"scope": 211,
									"src": "1020:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "589:512:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Ownable",
										"nameLocations": [
											"2055:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2055:7:2"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "2055:7:2"
								}
							],
							"canonicalName": "Liquidator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "1103:928:2",
								"text": " @title Liquidator\n @notice A contract that can forcibly seize user shares from an undercollateralized position\n         in a vault. The seized shares are transferred to this contract's owner (the deployer),\n         who can then decide how to handle them (e.g., distribute to a hired liquidator,\n         return partially to a pool, penalize the user, etc.).\n         Key parameters:\n         - minCollateralValue: The required value below which a user is undercollateralized.\n         - liquidationFeeBps: A fee in basis points added on top of the seizeAmount, \n           also sent to the owner (deployer).\n         - maxLiquidationBps: The maximum fraction (in BPS) of a user's shares \n           that can be seized in one call.\n         This contract calls `seizeShares(user, totalSeize, owner())` on the vault, \n         transferring forcibly removed shares to the contract's owner."
							},
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581,
								147,
								177
							],
							"name": "Liquidator",
							"nameLocation": "2041:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "2069:201:2",
										"text": " @dev The minimum value (in the same unit as the vault's price feed) \n      a user must maintain. If their share value < minCollateralValue, \n      they can be liquidated."
									},
									"functionSelector": "29880339",
									"id": 217,
									"mutability": "mutable",
									"name": "minCollateralValue",
									"nameLocation": "2290:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "2275:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2275:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2315:201:2",
										"text": " @dev A liquidation fee in basis points (e.g., 500 => 5%). \n      This is added on top of `seizeAmount` and also transferred \n      to the contract owner upon liquidation."
									},
									"functionSelector": "e031a824",
									"id": 220,
									"mutability": "mutable",
									"name": "liquidationFeeBps",
									"nameLocation": "2536:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "2521:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2521:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2560:165:2",
										"text": " @dev The maximum proportion of a user's total shares that can be seized \n      in one liquidation call, in basis points (e.g., 5000 => 50%)."
									},
									"functionSelector": "11299f11",
									"id": 223,
									"mutability": "mutable",
									"name": "maxLiquidationBps",
									"nameLocation": "2745:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "2730:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2730:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2769:71:2",
										"text": " @dev Emitted when the minCollateralValue is updated."
									},
									"eventSelector": "5d513dd15e422e7bcf5473fd0705fb8ca9c338ecc0edda3a3e29003202dc921e",
									"id": 230,
									"name": "MinCollateralValueUpdated",
									"nameLocation": "2851:25:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldValue",
												"nameLocation": "2885:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2877:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "2903:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2895:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:36:2"
									},
									"src": "2845:68:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2919:68:2",
										"text": " @dev Emitted when the liquidation fee is updated."
									},
									"eventSelector": "557b0d960e10511641485a3dc861fdc0e7940df3f9fef08d56df8f709625d108",
									"id": 237,
									"name": "LiquidationFeeBpsUpdated",
									"nameLocation": "2998:24:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "3031:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "3047:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3039:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:32:2"
									},
									"src": "2992:63:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3061:78:2",
										"text": " @dev Emitted when the maximum liquidation ratio is updated."
									},
									"eventSelector": "0c97e48d448ea4d00e9a3d604eea0e39315d280ccdeb06185e2c53efe38debcd",
									"id": 244,
									"name": "MaxLiquidationBpsUpdated",
									"nameLocation": "3150:24:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldMaxBps",
												"nameLocation": "3183:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3175:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxBps",
												"nameLocation": "3202:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3194:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:38:2"
									},
									"src": "3144:69:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "3219:522:2",
										"text": " @dev Emitted after a successful liquidation.\n @param vault          The vault being liquidated.\n @param liquidator     The caller who triggered the liquidation action.\n @param userLiquidated The user whose shares were seized.\n @param seizedShares   The base amount of shares seized from the user.\n @param feeShares      The fee portion of shares, also seized and given to owner.\n @param recipient      The address that receives the seized shares (the contract owner)."
									},
									"eventSelector": "900e49b75dd80ec3bea4347fabcc52ca262a91cdca47776af2875399e4b26dbe",
									"id": 259,
									"name": "LiquidationExecuted",
									"nameLocation": "3752:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3797:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3781:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "3828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3812:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "userLiquidated",
												"nameLocation": "3864:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3848:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "seizedShares",
												"nameLocation": "3896:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeShares",
												"nameLocation": "3926:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3918:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3953:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3945:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:197:2"
									},
									"src": "3746:223:2"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "4675:317:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "_maxLiquidationBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "4693:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4715:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "4693:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a206d61784c69717569646174696f6e427073203e2031303025",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4722:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4",
																"typeString": "literal_string \"Liquidator: maxLiquidationBps > 100%\""
															},
															"value": "Liquidator: maxLiquidationBps > 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4",
																"typeString": "literal_string \"Liquidator: maxLiquidationBps > 100%\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4685:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4685:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4685:76:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "_liquidationFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "4779:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35303030",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4801:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000_by_1",
																	"typeString": "int_const 5000"
																},
																"value": "5000"
															},
															"src": "4779:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a2066656542707320746f6f206c61726765",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4807:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3666b3383664b07c6f5ca2238b0ba6d16f131c3f874d7c1b35b16e3deed2f19a",
																"typeString": "literal_string \"Liquidator: feeBps too large\""
															},
															"value": "Liquidator: feeBps too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3666b3383664b07c6f5ca2238b0ba6d16f131c3f874d7c1b35b16e3deed2f19a",
																"typeString": "literal_string \"Liquidator: feeBps too large\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4771:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4771:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "4771:67:2"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "minCollateralValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "4849:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "_minCollateralValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4870:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4849:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "4849:40:2"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "liquidationFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4899:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 293,
														"name": "_liquidationFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4919:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4899:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4899:38:2"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "maxLiquidationBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4947:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_maxLiquidationBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "4967:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4947:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4947:38:2"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "3975:516:2",
										"text": " @notice Constructor calls the Ownable base constructor with `initialOwner` \n         and initializes the liquidation parameters.\n @param initialOwner         The address that will own this Liquidator contract.\n @param _minCollateralValue  The minimum user share value required to avoid liquidation.\n @param _liquidationFeeBps   A fee in basis points added on top of `seizeAmount`.\n @param _maxLiquidationBps   The maximum fraction of user shares seizable in one call."
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 271,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 262,
													"src": "4661:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 272,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 270,
												"name": "Ownable",
												"nameLocations": [
													"4653:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4653:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4653:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "4525:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4517:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4517:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "_minCollateralValue",
												"nameLocation": "4555:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4547:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_liquidationFeeBps",
												"nameLocation": "4592:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4584:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "_maxLiquidationBps",
												"nameLocation": "4628:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "4620:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4507:145:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4675:0:2"
									},
									"scope": 581,
									"src": "4496:496:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "5198:149:2",
										"statements": [
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "oldVal",
														"nameLocation": "5216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 322,
														"src": "5208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"id": 311,
													"name": "minCollateralValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "5225:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5208:35:2"
											},
											{
												"expression": {
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 313,
														"name": "minCollateralValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5253:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 314,
														"name": "newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "5274:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5253:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "5253:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 318,
															"name": "oldVal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "5323:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 319,
															"name": "newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5331:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "MinCollateralValueUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5297:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "EmitStatement",
												"src": "5292:48:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "4998:127:2",
										"text": " @notice Updates the minimum collateral value (onlyOwner).\n @param newValue The new minCollateralValue."
									},
									"functionSelector": "c4a34f37",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyOwner",
												"nameLocations": [
													"5188:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5188:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5188:9:2"
										}
									],
									"name": "setMinCollateralValue",
									"nameLocation": "5139:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "5169:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "5161:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:18:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:2"
									},
									"scope": 581,
									"src": "5130:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "5558:213:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "newFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5576:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35303030",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5589:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000_by_1",
																	"typeString": "int_const 5000"
																},
																"value": "5000"
															},
															"src": "5576:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a2066656520746f6f206c61726765",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5595:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00e6e29de0548fa50ed0ab8d678d8f6433e8c9455ffa823b1c570bc264c7cf44",
																"typeString": "literal_string \"Liquidator: fee too large\""
															},
															"value": "Liquidator: fee too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00e6e29de0548fa50ed0ab8d678d8f6433e8c9455ffa823b1c570bc264c7cf44",
																"typeString": "literal_string \"Liquidator: fee too large\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5568:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5568:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5568:55:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "oldFee",
														"nameLocation": "5641:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "5633:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5633:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"id": 340,
													"name": "liquidationFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "5650:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5633:34:2"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "liquidationFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "5677:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "5697:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5677:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "5677:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 347,
															"name": "oldFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5746:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 348,
															"name": "newFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5754:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "LiquidationFeeBpsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "5721:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5721:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "5716:48:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5353:132:2",
										"text": " @notice Updates the liquidation fee in basis points (onlyOwner).\n @param newFeeBps The new liquidation fee."
									},
									"functionSelector": "8951b054",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 328,
												"name": "onlyOwner",
												"nameLocations": [
													"5548:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5548:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5548:9:2"
										}
									],
									"name": "setLiquidationFeeBps",
									"nameLocation": "5499:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "newFeeBps",
												"nameLocation": "5528:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5520:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5519:19:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5558:0:2"
									},
									"scope": 581,
									"src": "5490:281:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "6015:225:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 361,
																"name": "newMaxBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6033:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6046:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "6033:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a206d61784c69717569646174696f6e427073203e2031303025",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6053:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4",
																"typeString": "literal_string \"Liquidator: maxLiquidationBps > 100%\""
															},
															"value": "Liquidator: maxLiquidationBps > 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ad78cd795229b62eb9af9c8eaba03c81fdff9c6c27aa583b668bbad4da831c4",
																"typeString": "literal_string \"Liquidator: maxLiquidationBps > 100%\""
															}
														],
														"id": 360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6025:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6025:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "6025:67:2"
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "oldMax",
														"nameLocation": "6110:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "6102:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"id": 369,
													"name": "maxLiquidationBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "6119:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6102:34:2"
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "maxLiquidationBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "6146:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 372,
														"name": "newMaxBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "6166:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6146:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "6146:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 376,
															"name": "oldMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6215:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 377,
															"name": "newMaxBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6223:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 375,
														"name": "MaxLiquidationBpsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "6190:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6190:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "6185:48:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5777:165:2",
										"text": " @notice Updates the max fraction of user shares that can be seized in one call (onlyOwner).\n @param newMaxBps The new ratio in basis points."
									},
									"functionSelector": "e81b5a8c",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "onlyOwner",
												"nameLocations": [
													"6005:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6005:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6005:9:2"
										}
									],
									"name": "setMaxLiquidationBps",
									"nameLocation": "5956:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "newMaxBps",
												"nameLocation": "5985:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5977:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5976:19:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6015:0:2"
									},
									"scope": 581,
									"src": "5947:293:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "6849:661:2",
										"statements": [
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "6877:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "6859:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
															"typeString": "contract IVaultLiquidation"
														},
														"typeName": {
															"id": 394,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 393,
																"name": "IVaultLiquidation",
																"nameLocations": [
																	"6859:17:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 211,
																"src": "6859:17:2"
															},
															"referencedDeclaration": 211,
															"src": "6859:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [
														{
															"id": 397,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6899:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 396,
														"name": "IVaultLiquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "6881:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IVaultLiquidation_$211_$",
															"typeString": "type(contract IVaultLiquidation)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
														"typeString": "contract IVaultLiquidation"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6859:46:2"
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "userShares",
														"nameLocation": "6923:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "6915:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6915:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [
														{
															"id": 404,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6948:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 402,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6938:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "6936:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6915:38:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 407,
														"name": "userShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "6967:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6981:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6967:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "6963:236:2",
												"trueBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "6984:215:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7179:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7186:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7178:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 392,
															"id": 413,
															"nodeType": "Return",
															"src": "7171:17:2"
														}
													]
												}
											},
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "7217:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "7209:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7209:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 418,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7232:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7234:11:2",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 193,
														"src": "7232:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7232:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7209:38:2"
											},
											{
												"assignments": [
													423,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7266:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "7258:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7258:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 427,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 424,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7277:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7279:18:2",
														"memberName": "getUnderlyingPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 200,
														"src": "7277:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint8_$",
															"typeString": "function () view external returns (uint256,uint8)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7277:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(uint256,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7257:42:2"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "userValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "7367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 429,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "7380:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 430,
																		"name": "userShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7388:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7380:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 432,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7379:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "7403:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7419:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7403:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 437,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "7427:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7403:36:2",
																	"trueExpression": {
																		"hexValue": "31",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7423:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7402:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7379:61:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7367:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "7367:73:2"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 443,
														"name": "isUnderCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "7451:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 444,
																	"name": "userValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7472:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 445,
																	"name": "minCollateralValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7484:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7472:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7471:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7451:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "7451:52:2"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "6246:447:2",
										"text": " @dev Checks if a user is undercollateralized by computing their share value \n      from the vault's price feed and comparing it to `minCollateralValue`.\n @param vault The vault implementing IVaultLiquidation.\n @param user  The user to check.\n @return isUnderCollateral True if user's share value < minCollateralValue.\n @return userValue         The user's computed share value (in the feed's unit)."
									},
									"functionSelector": "5fee4865",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUnderCollateral",
									"nameLocation": "6707:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "6728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6728:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6751:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "6743:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6727:29:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "isUnderCollateral",
												"nameLocation": "6807:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "6802:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6802:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "userValue",
												"nameLocation": "6834:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "6826:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:43:2"
									},
									"scope": 581,
									"src": "6698:812:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "8045:1350:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8063:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8080:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8072:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8072:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8072:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8063:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a20696e76616c6964207661756c74",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8084:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dbe8c1210af0604f8ca88a15332940a0b394f8877ac55e66d60b28f9c8d2dbf",
																"typeString": "literal_string \"Liquidator: invalid vault\""
															},
															"value": "Liquidator: invalid vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dbe8c1210af0604f8ca88a15332940a0b394f8877ac55e66d60b28f9c8d2dbf",
																"typeString": "literal_string \"Liquidator: invalid vault\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "8055:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8130:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8146:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8138:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 473,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8138:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8138:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8130:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a20696e76616c69642075736572",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8150:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c9390100bf22e976d198f475149626ee04fce5c5bb189a1925d231e60a432fb",
																"typeString": "literal_string \"Liquidator: invalid user\""
															},
															"value": "Liquidator: invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c9390100bf22e976d198f475149626ee04fce5c5bb189a1925d231e60a432fb",
																"typeString": "literal_string \"Liquidator: invalid user\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8122:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8122:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8122:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "seizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8195:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8195:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a207a65726f207365697a65416d6f756e74",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8212:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db6c04df7aabef17ba4cbf28e1ac9a08e71d0af1882a5dd881f6c863724125aa",
																"typeString": "literal_string \"Liquidator: zero seizeAmount\""
															},
															"value": "Liquidator: zero seizeAmount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db6c04df7aabef17ba4cbf28e1ac9a08e71d0af1882a5dd881f6c863724125aa",
																"typeString": "literal_string \"Liquidator: zero seizeAmount\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8187:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8187:56:2"
											},
											{
												"assignments": [
													489,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "underCollateral",
														"nameLocation": "8260:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8255:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 494,
												"initialValue": {
													"arguments": [
														{
															"id": 491,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8309:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 490,
														"name": "checkUnderCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "8281:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address,address) view returns (bool,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8281:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8254:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "underCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "8332:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a2075736572206e6f7420756e646572636f6c6c61746572616c697a6564",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8349:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51a6811835e05b9989dd98b6f1761417bc001241f05fb9237192f053f7995e2c",
																"typeString": "literal_string \"Liquidator: user not undercollateralized\""
															},
															"value": "Liquidator: user not undercollateralized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51a6811835e05b9989dd98b6f1761417bc001241f05fb9237192f053f7995e2c",
																"typeString": "literal_string \"Liquidator: user not undercollateralized\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8324:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "8324:68:2"
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "8421:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8403:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
															"typeString": "contract IVaultLiquidation"
														},
														"typeName": {
															"id": 501,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 500,
																"name": "IVaultLiquidation",
																"nameLocations": [
																	"8403:17:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 211,
																"src": "8403:17:2"
															},
															"referencedDeclaration": 211,
															"src": "8403:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"arguments": [
														{
															"id": 504,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8443:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 503,
														"name": "IVaultLiquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "8425:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IVaultLiquidation_$211_$",
															"typeString": "type(contract IVaultLiquidation)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
														"typeString": "contract IVaultLiquidation"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8403:46:2"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "userShares",
														"nameLocation": "8467:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8459:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8459:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"arguments": [
														{
															"id": 511,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8492:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 509,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "8480:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8482:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "8480:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8480:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8459:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "userShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "8515:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 516,
																"name": "seizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8529:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8515:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a20757365722068617320666577657220736861726573207468616e207365697a65416d6f756e74",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8542:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_421850d34df33112d2e113ba8372f7bea6e78c885a224bb7a067eec93abb96ce",
																"typeString": "literal_string \"Liquidator: user has fewer shares than seizeAmount\""
															},
															"value": "Liquidator: user has fewer shares than seizeAmount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_421850d34df33112d2e113ba8372f7bea6e78c885a224bb7a067eec93abb96ce",
																"typeString": "literal_string \"Liquidator: user has fewer shares than seizeAmount\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8507:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:88:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "8507:88:2"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "maxSeizable",
														"nameLocation": "8655:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8647:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 523,
																	"name": "userShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "8670:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 524,
																	"name": "maxLiquidationBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "8683:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8670:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 526,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8669:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8704:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "8669:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 531,
																"name": "seizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8727:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 532,
																"name": "maxSeizable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "8742:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8727:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a20657863656564206d6178206c69717569646174696f6e20726174696f",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8755:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c557334a96232afa903923fb17fcf36722f822508c3703a1d55f537253c2bbfc",
																"typeString": "literal_string \"Liquidator: exceed max liquidation ratio\""
															},
															"value": "Liquidator: exceed max liquidation ratio"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c557334a96232afa903923fb17fcf36722f822508c3703a1d55f537253c2bbfc",
																"typeString": "literal_string \"Liquidator: exceed max liquidation ratio\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8719:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8719:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "8719:79:2"
											},
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "feeShares",
														"nameLocation": "8850:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8842:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 539,
																	"name": "seizeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "8863:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 540,
																	"name": "liquidationFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "8877:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8863:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 542,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8862:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8898:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "8862:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:61:2"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "totalSeize",
														"nameLocation": "8921:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "8913:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8913:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 548,
														"name": "seizeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8934:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 549,
														"name": "feeShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "8948:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8934:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8913:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 553,
																"name": "userShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "8975:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 554,
																"name": "totalSeize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "8989:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8975:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696461746f723a20746f74616c5365697a65203e2075736572536861726573",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9001:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55e84075a38951068c7a3ae0db8f31c0efc50714b4ef19a3e2f8409960d05fee",
																"typeString": "literal_string \"Liquidator: totalSeize > userShares\""
															},
															"value": "Liquidator: totalSeize > userShares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55e84075a38951068c7a3ae0db8f31c0efc50714b4ef19a3e2f8409960d05fee",
																"typeString": "literal_string \"Liquidator: totalSeize > userShares\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8967:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8967:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "8967:72:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9269:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "totalSeize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 564,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9287:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9287:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 559,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "9255:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultLiquidation_$211",
																"typeString": "contract IVaultLiquidation"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9257:11:2",
														"memberName": "seizeShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 210,
														"src": "9255:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address) external"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9255:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "9255:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 569,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9331:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 570,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9338:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9342:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9338:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9350:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "seizeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "9356:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 574,
															"name": "feeShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "9369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 575,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "9380:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9380:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 568,
														"name": "LiquidationExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "9311:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,address)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9311:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "9306:82:2"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "7516:416:2",
										"text": " @notice Liquidates a user if they are undercollateralized by seizing a specified \n         number of shares (plus a fee) and transferring them to this contract's owner.\n @param vault       The vault address implementing IVaultLiquidation.\n @param user        The undercollateralized user to liquidate.\n @param seizeAmount The base number of shares to seize (excluding fee)."
									},
									"functionSelector": "26c01303",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidate",
									"nameLocation": "7946:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7973:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "7965:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7965:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7996:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "7988:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "seizeAmount",
												"nameLocation": "8018:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8010:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8010:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7955:80:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8045:0:2"
									},
									"scope": 581,
									"src": "7937:1458:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "2032:7365:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								230,
								237,
								244,
								259
							]
						}
					],
					"src": "32:9366:2"
				},
				"id": 2
			}
		}
	}
}