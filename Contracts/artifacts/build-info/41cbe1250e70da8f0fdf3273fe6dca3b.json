{
	"id": "41cbe1250e70da8f0fdf3273fe6dca3b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/OracleManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title OracleManager\n * @notice Manages aggregator references (Chainlink) for normal tokens,\n *         plus specialized logic for Uniswap V3 vault tokens. \n *         Aggressively refactored to avoid \"Stack too deep\" errors by:\n *           1) Using helper structs.\n *           2) Splitting logic into multiple smaller functions.\n */\n\n// ---------------------------------------------------------------------\n// External GitHub Imports\n// ---------------------------------------------------------------------\n\n// 1) Chainlink aggregator interface\nimport \"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n// 2) OpenZeppelin v4.8.3\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\";\n\n// 3) Uniswap v3-core (0.8) for TickMath\nimport \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\";\n\n// 4) Uniswap v3-periphery (0.8) for LiquidityAmounts\nimport \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\";\n\n// ---------------------------------------------------------------------\n// Minimal Interfaces\n// ---------------------------------------------------------------------\n\ninterface IVaultToken {\n    function totalSupply() external view returns (uint256);\n    function vaultTokenId() external view returns (uint256);\n    function positionManager() external view returns (address);\n    function v3Pool() external view returns (address);\n}\n\ninterface INonfungiblePositionManager {\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n}\n\ninterface IUniswapV3Pool {\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n}\n\n// ---------------------------------------------------------------------\n// OracleManager\n// ---------------------------------------------------------------------\n\ncontract OracleManager is Ownable {\n    /// @dev config for normal tokens or direct pool addresses\n    struct OracleData {\n        address primaryAggregator;   \n        address fallbackAggregator;  \n        bool useFallbackIfError;     \n        uint8 decimalsOverride;      \n        bool isVaultToken;           \n    }\n\n    /// @dev For vault tokens, aggregator references for token0/token1\n    struct VaultUnderlyingFeeds {\n        address token0Aggregator;\n        address token1Aggregator;\n        uint8 token0Decimals;\n        uint8 token1Decimals;\n        bool exists;\n    }\n\n    /// token -> OracleData\n    mapping(address => OracleData) public oracleConfigs;\n\n    /// vaultToken -> VaultUnderlyingFeeds\n    mapping(address => VaultUnderlyingFeeds) public vaultFeeds;\n\n    event OracleConfigUpdated(\n        address indexed token,\n        address primaryAggregator,\n        address fallbackAggregator,\n        bool useFallbackIfError,\n        uint8 decimalsOverride,\n        bool isVaultToken\n    );\n\n    event VaultUnderlyingFeedsUpdated(\n        address indexed vaultToken,\n        address token0Aggregator,\n        address token1Aggregator,\n        uint8 token0Decimals,\n        uint8 token1Decimals\n    );\n\n    constructor(address initialOwner) {\n        require(initialOwner != address(0), \"OracleManager: invalid owner\");\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @notice Sets or updates an oracle config for a given token or vault.\n     */\n    function setOracleConfig(\n        address token,\n        address primaryAggregator,\n        address fallbackAggregator,\n        bool useFallbackIfErr,\n        uint8 decimalsOvr,\n        bool isVaultToken\n    ) external onlyOwner {\n        require(token != address(0), \"OracleManager: invalid token\");\n        if (!isVaultToken) {\n            require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\");\n        }\n\n        oracleConfigs[token] = OracleData({\n            primaryAggregator: primaryAggregator,\n            fallbackAggregator: fallbackAggregator,\n            useFallbackIfError: useFallbackIfErr,\n            decimalsOverride: decimalsOvr,\n            isVaultToken: isVaultToken\n        });\n\n        emit OracleConfigUpdated(\n            token,\n            primaryAggregator,\n            fallbackAggregator,\n            useFallbackIfErr,\n            decimalsOvr,\n            isVaultToken\n        );\n    }\n\n    /**\n     * @notice Sets aggregator references for a vault tokenâ€™s underlying token0, token1\n     */\n    function setVaultUnderlyingFeeds(\n        address vaultToken,\n        address token0Agg,\n        address token1Agg,\n        uint8 token0Dec,\n        uint8 token1Dec\n    ) external onlyOwner {\n        require(vaultToken != address(0), \"OracleManager: invalid vaultToken\");\n\n        vaultFeeds[vaultToken] = VaultUnderlyingFeeds({\n            token0Aggregator: token0Agg,\n            token1Aggregator: token1Agg,\n            token0Decimals: token0Dec,\n            token1Decimals: token1Dec,\n            exists: true\n        });\n\n        emit VaultUnderlyingFeedsUpdated(\n            vaultToken,\n            token0Agg,\n            token1Agg,\n            token0Dec,\n            token1Dec\n        );\n    }\n\n    /**\n     * @notice Get the current price for a token or vault token in aggregator decimals (commonly 1e8).\n     */\n    function getPrice(address token) external view returns (uint256 price, uint8 decimals) {\n        OracleData memory cfg = oracleConfigs[token];\n        require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator or vault logic\");\n\n        if (!cfg.isVaultToken) {\n            (price, decimals) = _getPriceFromConfig(cfg);\n        } else {\n            VaultUnderlyingFeeds memory vf = vaultFeeds[token];\n            require(vf.exists, \"OracleManager: vault feeds not set\");\n            (price, decimals) = _computeVaultTokenPrice(token, vf);\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    // Internal Logic\n    // ---------------------------------------------------------------------\n\n    function _getPriceFromConfig(OracleData memory cfg)\n        internal\n        view\n        returns (uint256 price, uint8 decimals)\n    {\n        (bool okPrimary, uint256 p, uint8 d) = _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride);\n        if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {\n            (bool okFallback, uint256 pFallback, uint8 dFallback) =\n                _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride);\n            require(okFallback, \"OracleManager: fallback aggregator fail\");\n            return (pFallback, dFallback);\n        }\n        require(okPrimary, \"OracleManager: primary aggregator fail\");\n        return (p, d);\n    }\n\n    /**\n     * @dev aggregator references for a vault's token0/token1\n     */\n    struct AggregatorPair {\n        address agg0;\n        address agg1;\n        uint8 dec0;\n        uint8 dec1;\n    }\n\n    /**\n     * @dev position data from NFPM\n     */\n    struct PositionResult {\n        address token0;\n        address token1;\n        int24 tickLower;\n        int24 tickUpper;\n        uint128 liquidity;\n        uint128 owed0;\n        uint128 owed1;\n    }\n\n    function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)\n        internal\n        view\n        returns (uint256 price, uint8 decimals)\n    {\n        // fetch basic vault info\n        (uint256 totalShares, uint256 tokenId, address posMgr) = _fetchVaultInfo(vaultToken);\n\n        // fetch position data\n        PositionResult memory pos = _fetchPositionData(posMgr, tokenId);\n\n        // read the current sqrtPrice\n        (uint160 sqrtPriceX96, ) = _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool());\n\n        // compute active amounts\n        (uint256 amtActive0, uint256 amtActive1) = _computeLiquidityAmounts(\n            sqrtPriceX96,\n            pos.tickLower,\n            pos.tickUpper,\n            pos.liquidity\n        );\n\n        // sum active + owed\n        uint256 amt0 = amtActive0 + pos.owed0;\n        uint256 amt1 = amtActive1 + pos.owed1;\n\n        // aggregator references\n        AggregatorPair memory ap = AggregatorPair({\n            agg0: vf.token0Aggregator,\n            agg1: vf.token1Aggregator,\n            dec0: vf.token0Decimals,\n            dec1: vf.token1Decimals\n        });\n\n        // aggregator-based totalValue\n        uint256 totalValue = _convertVaultTokensToValue(amt0, amt1, ap);\n\n        price = totalValue / (totalShares == 0 ? 1 : totalShares);\n        decimals = 8;\n    }\n\n    function _fetchVaultInfo(address vaultToken)\n        internal\n        view\n        returns (uint256 totalShares, uint256 tokenId, address posMgr)\n    {\n        IVaultToken v = IVaultToken(vaultToken);\n        totalShares = v.totalSupply();\n        require(totalShares > 0, \"OracleManager: vault totalSupply=0\");\n\n        tokenId = v.vaultTokenId();\n        require(tokenId != 0, \"OracleManager: no NFT in vault\");\n\n        posMgr = v.positionManager();\n        require(posMgr != address(0), \"OracleManager: invalid positionMgr\");\n    }\n\n    function _fetchPositionData(address posMgr, uint256 tokenId)\n        internal\n        view\n        returns (PositionResult memory pos)\n    {\n        (bool success, bytes memory data) = posMgr.staticcall(\n            abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId)\n        );\n        require(success, _getRevertMsg(data));\n\n        (\n            ,\n            ,\n            pos.token0,\n            pos.token1,\n            ,\n            pos.tickLower,\n            pos.tickUpper,\n            pos.liquidity,\n            ,\n            ,\n            pos.owed0,\n            pos.owed1\n        ) = abi.decode(\n            data,\n            (uint96, address, address, address, uint24, int24, int24, uint128, uint256, uint256, uint128, uint128)\n        );\n    }\n\n    function _convertVaultTokensToValue(\n        uint256 amt0,\n        uint256 amt1,\n        AggregatorPair memory ap\n    ) internal view returns (uint256) {\n        uint256 val0 = _convertToAggregatorValue(amt0, ap.agg0, ap.dec0);\n        uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1);\n        return val0 + val1;\n    }\n\n    function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {\n        require(poolAddr != address(0), \"OracleManager: invalid pool\");\n        (bool success, bytes memory data) = poolAddr.staticcall(\n            abi.encodeWithSelector(IUniswapV3Pool.slot0.selector)\n        );\n        require(success, _getRevertMsg(data));\n        (sqrtPriceX96, tick, , , , , ) = abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool));\n    }\n\n    function _computeLiquidityAmounts(\n        uint160 sqrtPriceX96,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal pure returns (uint256 amt0, uint256 amt1) {\n        if (liquidity == 0) {\n            return (0, 0);\n        }\n        uint160 sqrtLower = TickMath.getSqrtRatioAtTick(tickLower);\n        uint160 sqrtUpper = TickMath.getSqrtRatioAtTick(tickUpper);\n        (amt0, amt1) = LiquidityAmounts.getAmountsForLiquidity(\n            sqrtPriceX96,\n            sqrtLower,\n            sqrtUpper,\n            liquidity\n        );\n    }\n\n    function _convertToAggregatorValue(\n        uint256 amt,\n        address aggregatorAddr,\n        uint8 decimalsOvr\n    ) internal view returns (uint256) {\n        if (amt == 0 || aggregatorAddr == address(0)) {\n            return 0;\n        }\n        (bool ok, uint256 p, uint8 d) = _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr);\n        require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\");\n        // unify to 1e8\n        return (amt * p) / (10 ** d);\n    }\n\n    function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)\n        internal\n        view\n        returns (bool success, uint256 price, uint8 decimals)\n    {\n        if (aggregator == address(0)) {\n            return (false, 0, 0);\n        }\n        bytes memory payload = abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector);\n        (bool callSuccess, bytes memory returnData) = aggregator.staticcall(payload);\n        if (!callSuccess || returnData.length < 160) {\n            return (false, 0, 0);\n        }\n        ( , int256 answer, , , ) = abi.decode(returnData, (uint80, int256, uint256, uint256, uint80));\n        if (answer <= 0) {\n            return (false, 0, 0);\n        }\n\n        uint8 aggDecimals = decimalsOvr;\n        if (aggDecimals == 0) {\n            (bool decSuccess, bytes memory decData) = aggregator.staticcall(\n                abi.encodeWithSelector(AggregatorV3Interface.decimals.selector)\n            );\n            if (!decSuccess || decData.length < 32) {\n                return (false, 0, 0);\n            }\n            aggDecimals = abi.decode(decData, (uint8));\n        }\n        return (true, uint256(answer), aggDecimals);\n    }\n\n    function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {\n        if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\";\n        assembly {\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string));\n    }\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport '@uniswap/v3-core/contracts/libraries/FullMath.sol';\nimport '@uniswap/v3-core/contracts/libraries/FixedPoint96.sol';\n\n/// @title Liquidity amount functions\n/// @notice Provides functions for computing liquidity amounts from token amounts and prices\nlibrary LiquidityAmounts {\n    /// @notice Downcasts uint256 to uint128\n    /// @param x The uint258 to be downcasted\n    /// @return y The passed value, downcasted to uint128\n    function toUint128(uint256 x) private pure returns (uint128 y) {\n        require((y = uint128(x)) == x);\n    }\n\n    /// @notice Computes the amount of liquidity received for a given amount of token0 and price range\n    /// @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount0 The amount0 being sent in\n    /// @return liquidity The amount of returned liquidity\n    function getLiquidityForAmount0(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount0\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n        uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96);\n        unchecked {\n            return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96));\n        }\n    }\n\n    /// @notice Computes the amount of liquidity received for a given amount of token1 and price range\n    /// @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount1 The amount1 being sent in\n    /// @return liquidity The amount of returned liquidity\n    function getLiquidityForAmount1(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount1\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n        unchecked {\n            return toUint128(FullMath.mulDiv(amount1, FixedPoint96.Q96, sqrtRatioBX96 - sqrtRatioAX96));\n        }\n    }\n\n    /// @notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n    /// pool prices and the prices at the tick boundaries\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount0 The amount of token0 being sent in\n    /// @param amount1 The amount of token1 being sent in\n    /// @return liquidity The maximum amount of liquidity received\n    function getLiquidityForAmounts(\n        uint160 sqrtRatioX96,\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount0,\n        uint256 amount1\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\n            liquidity = getLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\n            uint128 liquidity0 = getLiquidityForAmount0(sqrtRatioX96, sqrtRatioBX96, amount0);\n            uint128 liquidity1 = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioX96, amount1);\n\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\n        } else {\n            liquidity = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\n        }\n    }\n\n    /// @notice Computes the amount of token0 for a given amount of liquidity and a price range\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount0 The amount of token0\n    function getAmount0ForLiquidity(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0) {\n        unchecked {\n            if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n            return\n                FullMath.mulDiv(\n                    uint256(liquidity) << FixedPoint96.RESOLUTION,\n                    sqrtRatioBX96 - sqrtRatioAX96,\n                    sqrtRatioBX96\n                ) / sqrtRatioAX96;\n        }\n    }\n\n    /// @notice Computes the amount of token1 for a given amount of liquidity and a price range\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount1 The amount of token1\n    function getAmount1ForLiquidity(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount1) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        unchecked {\n            return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\n        }\n    }\n\n    /// @notice Computes the token0 and token1 value for a given amount of liquidity, the current\n    /// pool prices and the prices at the tick boundaries\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function getAmountsForLiquidity(\n        uint160 sqrtRatioX96,\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0, uint256 amount1) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\n            amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\n            amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity);\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity);\n        } else {\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\n        }\n    }\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    error T();\n    error R();\n\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        unchecked {\n            uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n            if (absTick > uint256(int256(MAX_TICK))) revert T();\n\n            uint256 ratio = absTick & 0x1 != 0\n                ? 0xfffcb933bd6fad37aa2d162d1a594001\n                : 0x100000000000000000000000000000000;\n            if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n            if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n            if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n            if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n            if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n            if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n            if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n            if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n            if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n            if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n            if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n            if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n            if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n            if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n            if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n            if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n            if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n            if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n            if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n            if (tick > 0) ratio = type(uint256).max / ratio;\n\n            // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n            // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n            // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n            sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n        }\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        unchecked {\n            // second inequality must be < because the price can never reach the price at the max tick\n            if (!(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO)) revert R();\n            uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n            uint256 r = ratio;\n            uint256 msb = 0;\n\n            assembly {\n                let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(5, gt(r, 0xFFFFFFFF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(4, gt(r, 0xFFFF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(3, gt(r, 0xFF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(2, gt(r, 0xF))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := shl(1, gt(r, 0x3))\n                msb := or(msb, f)\n                r := shr(f, r)\n            }\n            assembly {\n                let f := gt(r, 0x1)\n                msb := or(msb, f)\n            }\n\n            if (msb >= 128) r = ratio >> (msb - 127);\n            else r = ratio << (127 - msb);\n\n            int256 log_2 = (int256(msb) - 128) << 64;\n\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(63, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(62, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(61, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(60, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(59, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(58, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(57, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(56, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(55, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(54, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(53, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(52, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(51, f))\n                r := shr(f, r)\n            }\n            assembly {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(50, f))\n            }\n\n            int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n            int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n            int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n            tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(aÃ—bÃ·denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = a * b\n            // Compute the product mod 2**256 and mod 2**256 - 1\n            // then use the Chinese Remainder Theorem to reconstruct\n            // the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2**256 + prod0\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(a, b, not(0))\n                prod0 := mul(a, b)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division\n            if (prod1 == 0) {\n                require(denominator > 0);\n                assembly {\n                    result := div(prod0, denominator)\n                }\n                return result;\n            }\n\n            // Make sure the result is less than 2**256.\n            // Also prevents denominator == 0\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0]\n            // Compute remainder using mulmod\n            uint256 remainder;\n            assembly {\n                remainder := mulmod(a, b, denominator)\n            }\n            // Subtract 256 bit number from 512 bit number\n            assembly {\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator\n            // Compute largest power of two divisor of denominator.\n            // Always >= 1.\n            uint256 twos = (0 - denominator) & denominator;\n            // Divide denominator by power of two\n            assembly {\n                denominator := div(denominator, twos)\n            }\n\n            // Divide [prod1 prod0] by the factors of two\n            assembly {\n                prod0 := div(prod0, twos)\n            }\n            // Shift in bits from prod1 into prod0. For this we need\n            // to flip `twos` such that it is 2**256 / twos.\n            // If twos is zero, then it becomes one\n            assembly {\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2**256\n            // Now that denominator is an odd number, it has an inverse\n            // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n            // Compute the inverse by starting with a seed that is correct\n            // correct for four bits. That is, denominator * inv = 1 mod 2**4\n            uint256 inv = (3 * denominator) ^ 2;\n            // Now use Newton-Raphson iteration to improve the precision.\n            // Thanks to Hensel's lifting lemma, this also works in modular\n            // arithmetic, doubling the correct bits in each step.\n            inv *= 2 - denominator * inv; // inverse mod 2**8\n            inv *= 2 - denominator * inv; // inverse mod 2**16\n            inv *= 2 - denominator * inv; // inverse mod 2**32\n            inv *= 2 - denominator * inv; // inverse mod 2**64\n            inv *= 2 - denominator * inv; // inverse mod 2**128\n            inv *= 2 - denominator * inv; // inverse mod 2**256\n\n            // Because the division is now exact we can divide by multiplying\n            // with the modular inverse of denominator. This will give us the\n            // correct result modulo 2**256. Since the precoditions guarantee\n            // that the outcome is less than 2**256, this is the final result.\n            // We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inv;\n            return result;\n        }\n    }\n\n    /// @notice Calculates ceil(aÃ—bÃ·denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            result = mulDiv(a, b, denominator);\n            if (mulmod(a, b, denominator) > 0) {\n                require(result < type(uint256).max);\n                result++;\n            }\n        }\n    }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "constantinople"
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220463c4698f0920c35505536d01b3bc9237a5716bf88ed24376e553f35311921d764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220463c4698f0920c35505536d01b3bc9237a5716bf88ed24376e553f35311921d764736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID EXTCODECOPY CHAINID SWAP9 CREATE SWAP3 0xC CALLDATALOAD POP SSTORE CALLDATASIZE 0xD0 SHL EXTCODESIZE 0xC9 0x23 PUSH27 0x5716BF88ED24376E553F35311921D764736F6C634300081C003300 ",
							"sourceMap": "245:134:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220463c4698f0920c35505536d01b3bc9237a5716bf88ed24376e553f35311921d764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID EXTCODECOPY CHAINID SWAP9 CREATE SWAP3 0xC CALLDATALOAD POP SSTORE CALLDATASIZE 0xD0 SHL EXTCODESIZE 0xC9 0x23 PUSH27 0x5716BF88ED24376E553F35311921D764736F6C634300081C003300 ",
							"sourceMap": "245:134:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220463c4698f0920c35505536d01b3bc9237a5716bf88ed24376e553f35311921d764736f6c634300081c0033",
									".code": [
										{
											"begin": 245,
											"end": 379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":354:5517  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":354:5517  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f66213e9fd98254a28403cfb558176b7852973a3ce4278e1c59fb7b2ff8880b564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66213e9fd98254a28403cfb558176b7852973a3ce4278e1c59fb7b2ff8880b564736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH3 0x13E9FD SWAP9 0x25 BLOBBASEFEE 0x28 BLOCKHASH EXTCODECOPY 0xFB SSTORE DUP2 PUSH23 0xB7852973A3CE4278E1C59FB7B2FF8880B564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "354:5163:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66213e9fd98254a28403cfb558176b7852973a3ce4278e1c59fb7b2ff8880b564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH3 0x13E9FD SWAP9 0x25 BLOBBASEFEE 0x28 BLOCKHASH EXTCODECOPY 0xFB SSTORE DUP2 PUSH23 0xB7852973A3CE4278E1C59FB7B2FF8880B564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "354:5163:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f66213e9fd98254a28403cfb558176b7852973a3ce4278e1c59fb7b2ff8880b564736f6c634300081c0033",
									".code": [
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"Contracts/OracleManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"positions(uint256)": "99fbab88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x63f95a9c0f4be1b0ee3ff7836f35927c36d6669e074ee4494b4249daa72ba7b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51d91fb484185fa58a5f1b08965e6d985e2a727502e058d8e5cc961179e23baa\",\"dweb:/ipfs/QmY2rGRvEQba55FHWL8kKLSGG25jZopdajD3yYVuMCPyGW\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"slot0()": "3850c7bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x63f95a9c0f4be1b0ee3ff7836f35927c36d6669e074ee4494b4249daa72ba7b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51d91fb484185fa58a5f1b08965e6d985e2a727502e058d8e5cc961179e23baa\",\"dweb:/ipfs/QmY2rGRvEQba55FHWL8kKLSGG25jZopdajD3yYVuMCPyGW\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVaultToken": {
					"abi": [
						{
							"inputs": [],
							"name": "positionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "v3Pool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"positionManager()": "791b98bc",
							"totalSupply()": "18160ddd",
							"v3Pool()": "3a924d5b",
							"vaultTokenId()": "f657a7fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v3Pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"IVaultToken\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x63f95a9c0f4be1b0ee3ff7836f35927c36d6669e074ee4494b4249daa72ba7b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51d91fb484185fa58a5f1b08965e6d985e2a727502e058d8e5cc961179e23baa\",\"dweb:/ipfs/QmY2rGRvEQba55FHWL8kKLSGG25jZopdajD3yYVuMCPyGW\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OracleManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "T",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useFallbackIfError",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "decimalsOverride",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"name": "OracleConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vaultToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token0Aggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token1Aggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "token0Decimals",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "token1Decimals",
									"type": "uint8"
								}
							],
							"name": "VaultUnderlyingFeedsUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "oracleConfigs",
							"outputs": [
								{
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useFallbackIfError",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "decimalsOverride",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useFallbackIfErr",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "decimalsOvr",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"name": "setOracleConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vaultToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0Agg",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1Agg",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "token0Dec",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "token1Dec",
									"type": "uint8"
								}
							],
							"name": "setVaultUnderlyingFeeds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vaultFeeds",
							"outputs": [
								{
									"internalType": "address",
									"name": "token0Aggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1Aggregator",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "token0Decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "token1Decimals",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/OracleManager.sol\":2736:14147  contract OracleManager is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/OracleManager.sol\":3957:4117  constructor(address initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Contracts/OracleManager.sol\":4009:4035  initialOwner != address(0) */\n  dup2\n  and\n    /* \"Contracts/OracleManager.sol\":4001:4068  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"Contracts/OracleManager.sol\":4001:4068  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x1c\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:619   */\n  0x4f7261636c654d616e616765723a20696e76616c6964206f776e657200000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:620   */\n  mstore\n    /* \"#utility.yul\":637:655   */\n  0x64\n  add\n    /* \"Contracts/OracleManager.sol\":4001:4068  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"Contracts/OracleManager.sol\":4078:4110  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"Contracts/OracleManager.sol\":4097:4109  initialOwner */\n  dup2\n    /* \"Contracts/OracleManager.sol\":4078:4096  _transferOwnership */\n  tag_10\n    /* \"Contracts/OracleManager.sol\":4078:4110  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"Contracts/OracleManager.sol\":3957:4117  constructor(address initialOwner) {... */\n  pop\n    /* \"Contracts/OracleManager.sol\":2736:14147  contract OracleManager is Ownable {... */\n  jump(tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:661   */\ntag_19:\n    /* \"Contracts/OracleManager.sol\":2736:14147  contract OracleManager is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/OracleManager.sol\":2736:14147  contract OracleManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9b05fc75\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2ac1ec5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x067a4b06\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x41976e09\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f4a3102\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/OracleManager.sol\":3349:3400  mapping(address => OracleData) public oracleConfigs */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0xb0, 0x01)\n      swap1\n      swap2\n      div\n      and\n      dup6\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:695   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":645:696   */\n      dup2\n      mstore\n        /* \"#utility.yul\":732:764   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":712:730   */\n      dup7\n      add\n        /* \"#utility.yul\":705:765   */\n      mstore\n        /* \"#utility.yul\":808:822   */\n      swap2\n      iszero\n        /* \"#utility.yul\":801:823   */\n      iszero\n        /* \"#utility.yul\":781:799   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":774:824   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":872:876   */\n      0xff\n        /* \"#utility.yul\":860:877   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":855:857   */\n      0x60\n        /* \"#utility.yul\":840:858   */\n      dup4\n      add\n        /* \"#utility.yul\":833:878   */\n      mstore\n        /* \"#utility.yul\":922:936   */\n      iszero\n        /* \"#utility.yul\":915:937   */\n      iszero\n        /* \"#utility.yul\":909:912   */\n      0x80\n        /* \"#utility.yul\":894:913   */\n      dup3\n      add\n        /* \"#utility.yul\":887:938   */\n      mstore\n        /* \"#utility.yul\":632:635   */\n      0xa0\n        /* \"#utility.yul\":617:636   */\n      add\n        /* \"Contracts/OracleManager.sol\":3349:3400  mapping(address => OracleData) public oracleConfigs */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/OracleManager.sol\":6102:6692  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1119:1144   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1192:1196   */\n      0xff\n        /* \"#utility.yul\":1180:1197   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1175:1177   */\n      0x20\n        /* \"#utility.yul\":1160:1178   */\n      dup4\n      add\n        /* \"#utility.yul\":1153:1198   */\n      mstore\n        /* \"#utility.yul\":1092:1110   */\n      add\n        /* \"Contracts/OracleManager.sol\":6102:6692  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n      tag_16\n        /* \"#utility.yul\":949:1204   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Contracts/OracleManager.sol\":3450:3508  mapping(address => VaultUnderlyingFeeds) public vaultFeeds */\n    tag_6:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0xb0, 0x01)\n      swap1\n      swap2\n      div\n      and\n      dup6\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1472:1504   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":1454:1505   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1541:1573   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      dup7\n      add\n        /* \"#utility.yul\":1514:1574   */\n      mstore\n        /* \"#utility.yul\":1622:1626   */\n      0xff\n        /* \"#utility.yul\":1610:1627   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":1590:1608   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":1583:1628   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1664:1681   */\n      and\n        /* \"#utility.yul\":1659:1661   */\n      0x60\n        /* \"#utility.yul\":1644:1662   */\n      dup4\n      add\n        /* \"#utility.yul\":1637:1682   */\n      mstore\n        /* \"#utility.yul\":1726:1740   */\n      iszero\n        /* \"#utility.yul\":1719:1741   */\n      iszero\n        /* \"#utility.yul\":1713:1716   */\n      0x80\n        /* \"#utility.yul\":1698:1717   */\n      dup3\n      add\n        /* \"#utility.yul\":1691:1742   */\n      mstore\n        /* \"#utility.yul\":1441:1444   */\n      0xa0\n        /* \"#utility.yul\":1426:1445   */\n      add\n        /* \"Contracts/OracleManager.sol\":3450:3508  mapping(address => VaultUnderlyingFeeds) public vaultFeeds */\n      tag_16\n        /* \"#utility.yul\":1209:1748   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1899:1950   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1887:1889   */\n      0x20\n        /* \"#utility.yul\":1872:1890   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":1753:1956   */\n      jump\n        /* \"Contracts/OracleManager.sol\":5277:5977  function setVaultUnderlyingFeeds(... */\n    tag_8:\n      tag_23\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"Contracts/OracleManager.sol\":4215:5165  function setOracleConfig(... */\n    tag_9:\n      tag_23\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Contracts/OracleManager.sol\":6102:6692  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":6223:6243  oracleConfigs[token] */\n      dup1\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":6158:6171  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":6223:6243  oracleConfigs[token] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":6223:6236  oracleConfigs */\n      0x01\n        /* \"Contracts/OracleManager.sol\":6223:6243  oracleConfigs[token] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Contracts/OracleManager.sol\":6199:6243  OracleData memory cfg = oracleConfigs[token] */\n      dup2\n      mload\n      0xa0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap5\n      add\n      sload\n      swap6\n      dup7\n      and\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0xff\n      shl(0xa0, 0x01)\n      dup7\n      div\n      dup2\n      and\n      iszero\n      iszero\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      shl(0xa8, 0x01)\n      dup6\n      div\n      dup2\n      and\n      0x60\n      dup5\n      add\n      mstore\n      shl(0xb0, 0x01)\n      swap1\n      swap5\n      div\n      swap1\n      swap4\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n        /* \"Contracts/OracleManager.sol\":6158:6171  uint256 price */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"Contracts/OracleManager.sol\":6199:6243  OracleData memory cfg = oracleConfigs[token] */\n      swap1\n        /* \"Contracts/OracleManager.sol\":6261:6296  cfg.primaryAggregator != address(0) */\n      iszero\n      iszero\n      dup1\n        /* \"Contracts/OracleManager.sol\":6261:6316  cfg.primaryAggregator != address(0) || cfg.isVaultToken */\n      tag_46\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":6300:6303  cfg */\n      dup1\n        /* \"Contracts/OracleManager.sol\":6300:6316  cfg.isVaultToken */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":6261:6316  cfg.primaryAggregator != address(0) || cfg.isVaultToken */\n    tag_46:\n        /* \"Contracts/OracleManager.sol\":6253:6364  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator or vault logic\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":6253:6364  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator or vault logic\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4141:4162   */\n      mstore\n        /* \"#utility.yul\":4198:4200   */\n      0x2b\n        /* \"#utility.yul\":4178:4196   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4171:4201   */\n      mstore\n        /* \"#utility.yul\":4237:4271   */\n      0x4f7261636c654d616e616765723a206e6f2061676772656761746f72206f7220\n        /* \"#utility.yul\":4217:4235   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4210:4272   */\n      mstore\n      shl(0xa8, 0x7661756c74206c6f676963)\n        /* \"#utility.yul\":4288:4306   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4281:4322   */\n      mstore\n        /* \"#utility.yul\":4339:4358   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":6253:6364  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator or vault logic\") */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"Contracts/OracleManager.sol\":6380:6383  cfg */\n      dup1\n        /* \"Contracts/OracleManager.sol\":6380:6396  cfg.isVaultToken */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":6375:6686  if (!cfg.isVaultToken) {... */\n      tag_50\n      jumpi\n        /* \"Contracts/OracleManager.sol\":6432:6456  _getPriceFromConfig(cfg) */\n      tag_51\n        /* \"Contracts/OracleManager.sol\":6452:6455  cfg */\n      dup2\n        /* \"Contracts/OracleManager.sol\":6432:6451  _getPriceFromConfig */\n      tag_52\n        /* \"Contracts/OracleManager.sol\":6432:6456  _getPriceFromConfig(cfg) */\n      jump\t// in\n    tag_51:\n        /* \"Contracts/OracleManager.sol\":6412:6456  (price, decimals) = _getPriceFromConfig(cfg) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":6375:6686  if (!cfg.isVaultToken) {... */\n      jump(tag_53)\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":6520:6537  vaultFeeds[token] */\n      dup1\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":6487:6517  VaultUnderlyingFeeds memory vf */\n      0x00\n        /* \"Contracts/OracleManager.sol\":6520:6537  vaultFeeds[token] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":6520:6530  vaultFeeds */\n      0x02\n        /* \"Contracts/OracleManager.sol\":6520:6537  vaultFeeds[token] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":6487:6537  VaultUnderlyingFeeds memory vf = vaultFeeds[token] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup6\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap4\n      dup5\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xff\n      shl(0xa0, 0x01)\n      dup5\n      div\n      dup2\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      shl(0xa8, 0x01)\n      dup4\n      div\n      dup3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x01)\n      swap1\n      swap3\n      div\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":6551:6607  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4571:4573   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":6551:6607  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4553:4574   */\n      mstore\n        /* \"#utility.yul\":4610:4612   */\n      0x22\n        /* \"#utility.yul\":4590:4608   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4583:4613   */\n      mstore\n        /* \"#utility.yul\":4649:4683   */\n      0x4f7261636c654d616e616765723a207661756c74206665656473206e6f742073\n        /* \"#utility.yul\":4629:4647   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4622:4684   */\n      mstore\n      shl(0xf2, 0x195d)\n        /* \"#utility.yul\":4700:4718   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4693:4725   */\n      mstore\n        /* \"#utility.yul\":4742:4761   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":6551:6607  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      tag_48\n        /* \"#utility.yul\":4369:4767   */\n      jump\n        /* \"Contracts/OracleManager.sol\":6551:6607  require(vf.exists, \"OracleManager: vault feeds not set\") */\n    tag_54:\n        /* \"Contracts/OracleManager.sol\":6641:6675  _computeVaultTokenPrice(token, vf) */\n      tag_57\n        /* \"Contracts/OracleManager.sol\":6665:6670  token */\n      dup6\n        /* \"Contracts/OracleManager.sol\":6672:6674  vf */\n      dup3\n        /* \"Contracts/OracleManager.sol\":6641:6664  _computeVaultTokenPrice */\n      tag_58\n        /* \"Contracts/OracleManager.sol\":6641:6675  _computeVaultTokenPrice(token, vf) */\n      jump\t// in\n    tag_57:\n        /* \"Contracts/OracleManager.sol\":6621:6675  (price, decimals) = _computeVaultTokenPrice(token, vf) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":6375:6686  if (!cfg.isVaultToken) {... */\n    tag_53:\n        /* \"Contracts/OracleManager.sol\":6189:6692  {... */\n      pop\n        /* \"Contracts/OracleManager.sol\":6102:6692  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":5277:5977  function setVaultUnderlyingFeeds(... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":5485:5509  vaultToken != address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":5477:5547  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4974:4976   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":5477:5547  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4956:4977   */\n      mstore\n        /* \"#utility.yul\":5013:5015   */\n      0x21\n        /* \"#utility.yul\":4993:5011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4986:5016   */\n      mstore\n        /* \"#utility.yul\":5052:5086   */\n      0x4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b65\n        /* \"#utility.yul\":5032:5050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5025:5087   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":5103:5121   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5096:5127   */\n      mstore\n        /* \"#utility.yul\":5144:5163   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":5477:5547  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      tag_48\n        /* \"#utility.yul\":4772:5169   */\n      jump\n        /* \"Contracts/OracleManager.sol\":5477:5547  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n    tag_69:\n        /* \"Contracts/OracleManager.sol\":5583:5801  VaultUnderlyingFeeds({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      dup3\n      mstore\n      dup6\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      0xff\n      dup1\n      dup9\n      and\n      dup6\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      dup8\n      dup3\n      and\n      0x60\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":5786:5790  true */\n      0x01\n        /* \"Contracts/OracleManager.sol\":5583:5801  VaultUnderlyingFeeds({... */\n      0x80\n      dup9\n      add\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":5558:5580  vaultFeeds[vaultToken] */\n      dup15\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":5558:5568  vaultFeeds */\n      0x02\n        /* \"Contracts/OracleManager.sol\":5558:5580  vaultFeeds[vaultToken] */\n      swap1\n      swap8\n      mstore\n      swap6\n      dup11\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":5558:5801  vaultFeeds[vaultToken] = VaultUnderlyingFeeds({... */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      dup10\n      sstore\n      swap6\n      mload\n      swap8\n      add\n      dup1\n      sload\n      swap3\n      mload\n      swap2\n      mload\n      swap6\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      not(shl(0xb0, 0xff))\n      swap7\n      dup6\n      and\n      shl(0xa8, 0x01)\n      mul\n      swap7\n      swap1\n      swap7\n      and\n      not(shl(0xa8, 0xffff))\n      swap3\n      swap1\n      swap5\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap8\n      swap1\n      swap7\n      and\n      swap7\n      swap1\n      swap7\n      or\n      or\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      or\n      swap1\n      sstore\n        /* \"Contracts/OracleManager.sol\":5817:5970  VaultUnderlyingFeedsUpdated(... */\n      swap1\n      mload\n      0x2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba\n      swap1\n      tag_72\n      swap1\n        /* \"Contracts/OracleManager.sol\":5636:5645  token0Agg */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":5677:5686  token1Agg */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":5716:5725  token0Dec */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":5755:5764  token1Dec */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5415:5447   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5397:5448   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5484:5516   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5479:5481   */\n      0x20\n        /* \"#utility.yul\":5464:5482   */\n      dup4\n      add\n        /* \"#utility.yul\":5457:5517   */\n      mstore\n        /* \"#utility.yul\":5565:5569   */\n      0xff\n        /* \"#utility.yul\":5553:5570   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5548:5550   */\n      0x40\n        /* \"#utility.yul\":5533:5551   */\n      dup4\n      add\n        /* \"#utility.yul\":5526:5571   */\n      mstore\n        /* \"#utility.yul\":5607:5624   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5602:5604   */\n      0x60\n        /* \"#utility.yul\":5587:5605   */\n      dup3\n      add\n        /* \"#utility.yul\":5580:5625   */\n      mstore\n        /* \"#utility.yul\":5384:5387   */\n      0x80\n        /* \"#utility.yul\":5369:5388   */\n      add\n      swap1\n        /* \"#utility.yul\":5174:5631   */\n      jump\n        /* \"Contracts/OracleManager.sol\":5817:5970  VaultUnderlyingFeedsUpdated(... */\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/OracleManager.sol\":5277:5977  function setVaultUnderlyingFeeds(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":4215:5165  function setOracleConfig(... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":4462:4481  token != address(0) */\n      dup7\n      and\n        /* \"Contracts/OracleManager.sol\":4454:4514  require(token != address(0), \"OracleManager: invalid token\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5838:5840   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":4454:4514  require(token != address(0), \"OracleManager: invalid token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5820:5841   */\n      mstore\n        /* \"#utility.yul\":5877:5879   */\n      0x1c\n        /* \"#utility.yul\":5857:5875   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5850:5880   */\n      mstore\n        /* \"#utility.yul\":5916:5946   */\n      0x4f7261636c654d616e616765723a20696e76616c696420746f6b656e00000000\n        /* \"#utility.yul\":5896:5914   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5889:5947   */\n      mstore\n        /* \"#utility.yul\":5964:5982   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":4454:4514  require(token != address(0), \"OracleManager: invalid token\") */\n      tag_48\n        /* \"#utility.yul\":5636:5988   */\n      jump\n        /* \"Contracts/OracleManager.sol\":4454:4514  require(token != address(0), \"OracleManager: invalid token\") */\n    tag_77:\n        /* \"Contracts/OracleManager.sol\":4529:4541  isVaultToken */\n      dup1\n        /* \"Contracts/OracleManager.sol\":4524:4660  if (!isVaultToken) {... */\n      tag_81\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":4565:4596  primaryAggregator != address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":4557:4649  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":4557:4649  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6177:6198   */\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x30\n        /* \"#utility.yul\":6214:6232   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4f7261636c654d616e616765723a2061676772656761746f7220726571756972\n        /* \"#utility.yul\":6253:6271   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x82, 0x195908199bdc881b9bdb8b5d985d5b1d)\n        /* \"#utility.yul\":6324:6342   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6317:6363   */\n      mstore\n        /* \"#utility.yul\":6380:6399   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":4557:4649  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      tag_48\n        /* \"#utility.yul\":5993:6405   */\n      jump\n        /* \"Contracts/OracleManager.sol\":4557:4649  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n    tag_81:\n        /* \"Contracts/OracleManager.sol\":4693:4950  OracleData({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup9\n      and\n      dup3\n      mstore\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      dup8\n      iszero\n      iszero\n      dup5\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0xff\n      dup1\n      dup10\n      and\n      0x60\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      dup9\n      iszero\n      iszero\n      0x80\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":4670:4690  oracleConfigs[token] */\n      dup15\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":4670:4683  oracleConfigs */\n      0x01\n        /* \"Contracts/OracleManager.sol\":4670:4690  oracleConfigs[token] */\n      swap7\n      dup8\n      swap1\n      mstore\n      dup11\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":4670:4950  oracleConfigs[token] = OracleData({... */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      dup10\n      sstore\n      swap6\n      mload\n      swap8\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      swap4\n      mload\n      swap2\n      mload\n      swap5\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      not(shl(0xb0, 0xff))\n      swap6\n      swap1\n      swap4\n      and\n      shl(0xa8, 0x01)\n      mul\n      swap5\n      swap1\n      swap5\n      and\n      not(shl(0xa8, 0xffff))\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap8\n      swap1\n      swap7\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap5\n      swap1\n      swap5\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Contracts/OracleManager.sol\":4966:5158  OracleConfigUpdated(... */\n      swap1\n      mload\n      0x5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8\n      swap1\n      tag_84\n      swap1\n        /* \"Contracts/OracleManager.sol\":4737:4754  primaryAggregator */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":4788:4806  fallbackAggregator */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":4840:4856  useFallbackIfErr */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":4888:4899  decimalsOvr */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":4927:4939  isVaultToken */\n      dup9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:695   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":645:696   */\n      dup2\n      mstore\n        /* \"#utility.yul\":732:764   */\n      swap4\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":712:730   */\n      dup5\n      add\n        /* \"#utility.yul\":705:765   */\n      mstore\n        /* \"#utility.yul\":808:822   */\n      swap1\n      iszero\n        /* \"#utility.yul\":801:823   */\n      iszero\n        /* \"#utility.yul\":796:798   */\n      0x40\n        /* \"#utility.yul\":781:799   */\n      dup4\n      add\n        /* \"#utility.yul\":774:824   */\n      mstore\n        /* \"#utility.yul\":872:876   */\n      0xff\n        /* \"#utility.yul\":860:877   */\n      and\n        /* \"#utility.yul\":855:857   */\n      0x60\n        /* \"#utility.yul\":840:858   */\n      dup3\n      add\n        /* \"#utility.yul\":833:878   */\n      mstore\n        /* \"#utility.yul\":922:936   */\n      swap1\n      iszero\n        /* \"#utility.yul\":915:937   */\n      iszero\n        /* \"#utility.yul\":909:912   */\n      0x80\n        /* \"#utility.yul\":894:913   */\n      dup3\n      add\n        /* \"#utility.yul\":887:938   */\n      mstore\n        /* \"#utility.yul\":632:635   */\n      0xa0\n        /* \"#utility.yul\":617:636   */\n      add\n      swap1\n        /* \"#utility.yul\":402:944   */\n      jump\n        /* \"Contracts/OracleManager.sol\":4966:5158  OracleConfigUpdated(... */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/OracleManager.sol\":4215:5165  function setOracleConfig(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6612:6614   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6594:6615   */\n      mstore\n        /* \"#utility.yul\":6651:6653   */\n      0x26\n        /* \"#utility.yul\":6631:6649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6624:6654   */\n      mstore\n        /* \"#utility.yul\":6690:6724   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6670:6688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6663:6725   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6741:6759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6734:6770   */\n      mstore\n        /* \"#utility.yul\":6787:6806   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_48\n        /* \"#utility.yul\":6410:6812   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":6875:7598  function _getPriceFromConfig(OracleData memory cfg)... */\n    tag_52:\n        /* \"Contracts/OracleManager.sol\":6974:6987  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":6989:7003  uint8 decimals */\n      dup1\n        /* \"Contracts/OracleManager.sol\":7020:7034  bool okPrimary */\n      0x00\n        /* \"Contracts/OracleManager.sol\":7036:7045  uint256 p */\n      dup1\n        /* \"Contracts/OracleManager.sol\":7047:7054  uint8 d */\n      0x00\n        /* \"Contracts/OracleManager.sol\":7058:7124  _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      tag_93\n        /* \"Contracts/OracleManager.sol\":7080:7083  cfg */\n      dup7\n        /* \"Contracts/OracleManager.sol\":7080:7101  cfg.primaryAggregator */\n      0x00\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":7103:7106  cfg */\n      dup8\n        /* \"Contracts/OracleManager.sol\":7103:7123  cfg.decimalsOverride */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":7058:7079  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":7058:7124  _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      jump\t// in\n    tag_93:\n        /* \"Contracts/OracleManager.sol\":7019:7124  (bool okPrimary, uint256 p, uint8 d) = _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":7139:7148  okPrimary */\n      dup3\n        /* \"Contracts/OracleManager.sol\":7138:7148  !okPrimary */\n      iszero\n        /* \"Contracts/OracleManager.sol\":7138:7174  !okPrimary && cfg.useFallbackIfError */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":7152:7155  cfg */\n      dup6\n        /* \"Contracts/OracleManager.sol\":7152:7174  cfg.useFallbackIfError */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":7138:7174  !okPrimary && cfg.useFallbackIfError */\n    tag_95:\n        /* \"Contracts/OracleManager.sol\":7138:7214  !okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0) */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":7178:7200  cfg.fallbackAggregator */\n      0x20\n      dup7\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":7178:7214  cfg.fallbackAggregator != address(0) */\n      and\n      iszero\n      iszero\n        /* \"Contracts/OracleManager.sol\":7138:7214  !okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0) */\n    tag_96:\n        /* \"Contracts/OracleManager.sol\":7134:7499  if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"Contracts/OracleManager.sol\":7231:7246  bool okFallback */\n      0x00\n        /* \"Contracts/OracleManager.sol\":7248:7265  uint256 pFallback */\n      dup1\n        /* \"Contracts/OracleManager.sol\":7267:7282  uint8 dFallback */\n      0x00\n        /* \"Contracts/OracleManager.sol\":7302:7369  _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride) */\n      tag_98\n        /* \"Contracts/OracleManager.sol\":7324:7327  cfg */\n      dup10\n        /* \"Contracts/OracleManager.sol\":7324:7346  cfg.fallbackAggregator */\n      0x20\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":7348:7351  cfg */\n      dup11\n        /* \"Contracts/OracleManager.sol\":7348:7368  cfg.decimalsOverride */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":7302:7323  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":7302:7369  _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride) */\n      jump\t// in\n    tag_98:\n        /* \"Contracts/OracleManager.sol\":7230:7369  (bool okFallback, uint256 pFallback, uint8 dFallback) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":7391:7401  okFallback */\n      dup3\n        /* \"Contracts/OracleManager.sol\":7383:7445  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7019:7021   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":7383:7445  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7001:7022   */\n      mstore\n        /* \"#utility.yul\":7058:7060   */\n      0x27\n        /* \"#utility.yul\":7038:7056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7031:7061   */\n      mstore\n        /* \"#utility.yul\":7097:7131   */\n      0x4f7261636c654d616e616765723a2066616c6c6261636b206167677265676174\n        /* \"#utility.yul\":7077:7095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7070:7132   */\n      mstore\n      shl(0xca, 0x1bdc8819985a5b)\n        /* \"#utility.yul\":7148:7166   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7141:7178   */\n      mstore\n        /* \"#utility.yul\":7195:7214   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":7383:7445  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      tag_48\n        /* \"#utility.yul\":6817:7220   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7383:7445  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n    tag_99:\n        /* \"Contracts/OracleManager.sol\":7467:7476  pFallback */\n      swap1\n      swap9\n        /* \"Contracts/OracleManager.sol\":7478:7487  dFallback */\n      swap1\n      swap8\n      pop\n        /* \"Contracts/OracleManager.sol\":6875:7598  function _getPriceFromConfig(OracleData memory cfg)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":7134:7499  if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {... */\n    tag_97:\n        /* \"Contracts/OracleManager.sol\":7516:7525  okPrimary */\n      dup3\n        /* \"Contracts/OracleManager.sol\":7508:7568  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7427:7429   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":7508:7568  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7409:7430   */\n      mstore\n        /* \"#utility.yul\":7466:7468   */\n      0x26\n        /* \"#utility.yul\":7446:7464   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7439:7469   */\n      mstore\n        /* \"#utility.yul\":7505:7539   */\n      0x4f7261636c654d616e616765723a207072696d6172792061676772656761746f\n        /* \"#utility.yul\":7485:7503   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7478:7540   */\n      mstore\n      shl(0xd2, 0x1c8819985a5b)\n        /* \"#utility.yul\":7556:7574   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7549:7585   */\n      mstore\n        /* \"#utility.yul\":7602:7621   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":7508:7568  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      tag_48\n        /* \"#utility.yul\":7225:7627   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7508:7568  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n    tag_102:\n        /* \"Contracts/OracleManager.sol\":7586:7587  p */\n      swap1\n      swap6\n        /* \"Contracts/OracleManager.sol\":7589:7590  d */\n      swap1\n      swap5\n      pop\n        /* \"Contracts/OracleManager.sol\":6875:7598  function _getPriceFromConfig(OracleData memory cfg)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":8059:9400  function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)... */\n    tag_58:\n        /* \"Contracts/OracleManager.sol\":8191:8204  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8206:8220  uint8 decimals */\n      dup1\n        /* \"Contracts/OracleManager.sol\":8271:8290  uint256 totalShares */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8292:8307  uint256 tokenId */\n      dup1\n        /* \"Contracts/OracleManager.sol\":8309:8323  address posMgr */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8327:8354  _fetchVaultInfo(vaultToken) */\n      tag_106\n        /* \"Contracts/OracleManager.sol\":8343:8353  vaultToken */\n      dup8\n        /* \"Contracts/OracleManager.sol\":8327:8342  _fetchVaultInfo */\n      tag_107\n        /* \"Contracts/OracleManager.sol\":8327:8354  _fetchVaultInfo(vaultToken) */\n      jump\t// in\n    tag_106:\n        /* \"Contracts/OracleManager.sol\":8270:8354  (uint256 totalShares, uint256 tokenId, address posMgr) = _fetchVaultInfo(vaultToken) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":8396:8421  PositionResult memory pos */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8424:8459  _fetchPositionData(posMgr, tokenId) */\n      tag_108\n        /* \"Contracts/OracleManager.sol\":8443:8449  posMgr */\n      dup3\n        /* \"Contracts/OracleManager.sol\":8451:8458  tokenId */\n      dup5\n        /* \"Contracts/OracleManager.sol\":8424:8442  _fetchPositionData */\n      tag_109\n        /* \"Contracts/OracleManager.sol\":8424:8459  _fetchPositionData(posMgr, tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"Contracts/OracleManager.sol\":8396:8459  PositionResult memory pos = _fetchPositionData(posMgr, tokenId) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":8509:8529  uint160 sqrtPriceX96 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8535:8588  _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      tag_110\n        /* \"Contracts/OracleManager.sol\":8567:8577  vaultToken */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":8555:8585  IVaultToken(vaultToken).v3Pool */\n      and\n      0x3a924d5b\n        /* \"Contracts/OracleManager.sol\":8555:8587  IVaultToken(vaultToken).v3Pool() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"Contracts/OracleManager.sol\":8535:8554  _getPoolSqrtAndTick */\n      tag_115\n        /* \"Contracts/OracleManager.sol\":8535:8588  _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      jump\t// in\n    tag_110:\n        /* \"Contracts/OracleManager.sol\":8508:8588  (uint160 sqrtPriceX96, ) = _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      pop\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":8634:8652  uint256 amtActive0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8654:8672  uint256 amtActive1 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":8676:8817  _computeLiquidityAmounts(... */\n      tag_116\n        /* \"Contracts/OracleManager.sol\":8714:8726  sqrtPriceX96 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":8740:8743  pos */\n      dup6\n        /* \"Contracts/OracleManager.sol\":8740:8753  pos.tickLower */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":8767:8770  pos */\n      dup7\n        /* \"Contracts/OracleManager.sol\":8767:8780  pos.tickUpper */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":8794:8797  pos */\n      dup8\n        /* \"Contracts/OracleManager.sol\":8794:8807  pos.liquidity */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":8676:8700  _computeLiquidityAmounts */\n      tag_117\n        /* \"Contracts/OracleManager.sol\":8676:8817  _computeLiquidityAmounts(... */\n      jump\t// in\n    tag_116:\n        /* \"Contracts/OracleManager.sol\":8633:8817  (uint256 amtActive0, uint256 amtActive1) = _computeLiquidityAmounts(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":8857:8869  uint256 amt0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8885:8888  pos */\n      dup5\n        /* \"Contracts/OracleManager.sol\":8885:8894  pos.owed0 */\n      0xa0\n      add\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":8872:8894  amtActive0 + pos.owed0 */\n      and\n        /* \"Contracts/OracleManager.sol\":8872:8882  amtActive0 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":8872:8894  amtActive0 + pos.owed0 */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Contracts/OracleManager.sol\":8857:8894  uint256 amt0 = amtActive0 + pos.owed0 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":8904:8916  uint256 amt1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8932:8935  pos */\n      dup6\n        /* \"Contracts/OracleManager.sol\":8932:8941  pos.owed1 */\n      0xc0\n      add\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":8919:8941  amtActive1 + pos.owed1 */\n      and\n        /* \"Contracts/OracleManager.sol\":8919:8929  amtActive1 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":8919:8941  amtActive1 + pos.owed1 */\n      tag_120\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n        /* \"Contracts/OracleManager.sol\":8904:8941  uint256 amt1 = amtActive1 + pos.owed1 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":8985:9009  AggregatorPair memory ap */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9012:9190  AggregatorPair({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Contracts/OracleManager.sol\":9047:9049  vf */\n      dup15\n        /* \"Contracts/OracleManager.sol\":9047:9066  vf.token0Aggregator */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9012:9190  AggregatorPair({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":9086:9088  vf */\n      dup15\n        /* \"Contracts/OracleManager.sol\":9086:9105  vf.token1Aggregator */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9012:9190  AggregatorPair({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":9125:9127  vf */\n      dup15\n        /* \"Contracts/OracleManager.sol\":9125:9142  vf.token0Decimals */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9012:9190  AggregatorPair({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":9162:9164  vf */\n      dup15\n        /* \"Contracts/OracleManager.sol\":9162:9179  vf.token1Decimals */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9012:9190  AggregatorPair({... */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Contracts/OracleManager.sol\":8985:9190  AggregatorPair memory ap = AggregatorPair({... */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":9240:9258  uint256 totalValue */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9261:9303  _convertVaultTokensToValue(amt0, amt1, ap) */\n      tag_121\n        /* \"Contracts/OracleManager.sol\":9288:9292  amt0 */\n      dup5\n        /* \"Contracts/OracleManager.sol\":9294:9298  amt1 */\n      dup5\n        /* \"Contracts/OracleManager.sol\":9300:9302  ap */\n      dup5\n        /* \"Contracts/OracleManager.sol\":9261:9287  _convertVaultTokensToValue */\n      tag_122\n        /* \"Contracts/OracleManager.sol\":9261:9303  _convertVaultTokensToValue(amt0, amt1, ap) */\n      jump\t// in\n    tag_121:\n        /* \"Contracts/OracleManager.sol\":9240:9303  uint256 totalValue = _convertVaultTokensToValue(amt0, amt1, ap) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":9336:9352  totalShares == 0 */\n      dup11\n      iszero\n        /* \"Contracts/OracleManager.sol\":9336:9370  totalShares == 0 ? 1 : totalShares */\n      tag_123\n      jumpi\n        /* \"Contracts/OracleManager.sol\":9359:9370  totalShares */\n      dup11\n        /* \"Contracts/OracleManager.sol\":9336:9370  totalShares == 0 ? 1 : totalShares */\n      jump(tag_124)\n    tag_123:\n        /* \"Contracts/OracleManager.sol\":9355:9356  1 */\n      0x01\n        /* \"Contracts/OracleManager.sol\":9336:9370  totalShares == 0 ? 1 : totalShares */\n    tag_124:\n        /* \"Contracts/OracleManager.sol\":9322:9371  totalValue / (totalShares == 0 ? 1 : totalShares) */\n      tag_125\n      swap1\n        /* \"Contracts/OracleManager.sol\":9322:9332  totalValue */\n      dup3\n        /* \"Contracts/OracleManager.sol\":9322:9371  totalValue / (totalShares == 0 ? 1 : totalShares) */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"Contracts/OracleManager.sol\":9314:9371  price = totalValue / (totalShares == 0 ? 1 : totalShares) */\n      swap16\n        /* \"Contracts/OracleManager.sol\":9392:9393  8 */\n      0x08\n      swap16\n      pop\n        /* \"Contracts/OracleManager.sol\":8059:9400  function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)... */\n      swap14\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8706:8708   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8688:8709   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8725:8743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8718:8748   */\n      mstore\n        /* \"#utility.yul\":8784:8818   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8764:8782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8757:8819   */\n      mstore\n        /* \"#utility.yul\":8836:8854   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_48\n        /* \"#utility.yul\":8504:8860   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":12643:13833  function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)... */\n    tag_94:\n        /* \"Contracts/OracleManager.sol\":12760:12772  bool success */\n      0x00\n      dup1\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":12823:12847  aggregator == address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":12819:12894  if (aggregator == address(0)) {... */\n      tag_136\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":12871:12876  false */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"Contracts/OracleManager.sol\":12863:12883  return (false, 0, 0) */\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":12819:12894  if (aggregator == address(0)) {... */\n    tag_136:\n        /* \"Contracts/OracleManager.sol\":12926:12996  abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe2, 0x3fabe5a3)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":13052:13082  aggregator.staticcall(payload) */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":12903:12923  bytes memory payload */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":13052:13073  aggregator.staticcall */\n      dup10\n      and\n      swap1\n        /* \"Contracts/OracleManager.sol\":13052:13082  aggregator.staticcall(payload) */\n      tag_137\n      swap1\n        /* \"Contracts/OracleManager.sol\":12926:12996  abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector) */\n      dup6\n      swap1\n        /* \"Contracts/OracleManager.sol\":13052:13082  aggregator.staticcall(payload) */\n      tag_138\n      jump\t// in\n    tag_137:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_141\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_140)\n    tag_141:\n      0x60\n      swap2\n      pop\n    tag_140:\n      pop\n        /* \"Contracts/OracleManager.sol\":13006:13082  (bool callSuccess, bytes memory returnData) = aggregator.staticcall(payload) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":13097:13108  callSuccess */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13096:13108  !callSuccess */\n      iszero\n        /* \"Contracts/OracleManager.sol\":13096:13135  !callSuccess || returnData.length < 160 */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":13132:13135  160 */\n      0xa0\n        /* \"Contracts/OracleManager.sol\":13112:13122  returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13112:13129  returnData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":13112:13135  returnData.length < 160 */\n      lt\n        /* \"Contracts/OracleManager.sol\":13096:13135  !callSuccess || returnData.length < 160 */\n    tag_142:\n        /* \"Contracts/OracleManager.sol\":13092:13182  if (!callSuccess || returnData.length < 160) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"Contracts/OracleManager.sol\":13159:13164  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13166:13167  0 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":13169:13170  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13151:13171  return (false, 0, 0) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":13092:13182  if (!callSuccess || returnData.length < 160) {... */\n    tag_143:\n        /* \"Contracts/OracleManager.sol\":13195:13208  int256 answer */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13229:13239  returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13218:13284  abi.decode(returnData, (uint80, int256, uint256, uint256, uint80)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"Contracts/OracleManager.sol\":13191:13284  ( , int256 answer, , , ) = abi.decode(returnData, (uint80, int256, uint256, uint256, uint80)) */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":13308:13309  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13298:13304  answer */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13298:13309  answer <= 0 */\n      sgt\n        /* \"Contracts/OracleManager.sol\":13294:13356  if (answer <= 0) {... */\n      tag_146\n      jumpi\n        /* \"Contracts/OracleManager.sol\":13333:13338  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13340:13341  0 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":13343:13344  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13325:13345  return (false, 0, 0) */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":13294:13356  if (answer <= 0) {... */\n    tag_146:\n        /* \"Contracts/OracleManager.sol\":13386:13397  decimalsOvr */\n      dup8\n        /* \"Contracts/OracleManager.sol\":13411:13427  aggDecimals == 0 */\n      0xff\n      dup2\n      and\n        /* \"Contracts/OracleManager.sol\":13366:13383  uint8 aggDecimals */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13411:13427  aggDecimals == 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":13407:13774  if (aggDecimals == 0) {... */\n      tag_147\n      jumpi\n        /* \"Contracts/OracleManager.sol\":13524:13587  abi.encodeWithSelector(AggregatorV3Interface.decimals.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x313ce567)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":13485:13601  aggregator.staticcall(... */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":13444:13459  bool decSuccess */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":13485:13506  aggregator.staticcall */\n      dup15\n      and\n      swap2\n        /* \"Contracts/OracleManager.sol\":13485:13601  aggregator.staticcall(... */\n      tag_148\n      swap2\n      tag_138\n      jump\t// in\n    tag_148:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_151\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_150)\n    tag_151:\n      0x60\n      swap2\n      pop\n    tag_150:\n      pop\n        /* \"Contracts/OracleManager.sol\":13443:13601  (bool decSuccess, bytes memory decData) = aggregator.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":13620:13630  decSuccess */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13619:13630  !decSuccess */\n      iszero\n        /* \"Contracts/OracleManager.sol\":13619:13653  !decSuccess || decData.length < 32 */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":13651:13653  32 */\n      0x20\n        /* \"Contracts/OracleManager.sol\":13634:13641  decData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13634:13648  decData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":13634:13653  decData.length < 32 */\n      lt\n        /* \"Contracts/OracleManager.sol\":13619:13653  !decSuccess || decData.length < 32 */\n    tag_152:\n        /* \"Contracts/OracleManager.sol\":13615:13708  if (!decSuccess || decData.length < 32) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"Contracts/OracleManager.sol\":13681:13686  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13688:13689  0 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":13691:13692  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13673:13693  return (false, 0, 0) */\n      swap10\n      pop\n      swap10\n      pop\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":13615:13708  if (!decSuccess || decData.length < 32) {... */\n    tag_153:\n        /* \"Contracts/OracleManager.sol\":13746:13753  decData */\n      dup1\n        /* \"Contracts/OracleManager.sol\":13735:13763  abi.decode(decData, (uint8)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"Contracts/OracleManager.sol\":13721:13763  aggDecimals = abi.decode(decData, (uint8)) */\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":13429:13774  {... */\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":13407:13774  if (aggDecimals == 0) {... */\n    tag_147:\n        /* \"Contracts/OracleManager.sol\":13791:13795  true */\n      0x01\n      swap8\n      pop\n        /* \"Contracts/OracleManager.sol\":13805:13811  answer */\n      swap1\n      swap6\n      pop\n        /* \"Contracts/OracleManager.sol\":13814:13825  aggDecimals */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":12643:13833  function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)... */\n    tag_135:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":9406:9941  function _fetchVaultInfo(address vaultToken)... */\n    tag_107:\n        /* \"Contracts/OracleManager.sol\":9498:9517  uint256 totalShares */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9519:9534  uint256 tokenId */\n      dup1\n        /* \"Contracts/OracleManager.sol\":9536:9550  address posMgr */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9566:9579  IVaultToken v */\n      dup1\n        /* \"Contracts/OracleManager.sol\":9594:9604  vaultToken */\n      dup5\n        /* \"Contracts/OracleManager.sol\":9566:9605  IVaultToken v = IVaultToken(vaultToken) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":9629:9630  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9629:9642  v.totalSupply */\n      and\n      0x18160ddd\n        /* \"Contracts/OracleManager.sol\":9629:9644  v.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"Contracts/OracleManager.sol\":9615:9644  totalShares = v.totalSupply() */\n      swap4\n      pop\n        /* \"Contracts/OracleManager.sol\":9676:9677  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9662:9673  totalShares */\n      dup5\n        /* \"Contracts/OracleManager.sol\":9662:9677  totalShares > 0 */\n      gt\n        /* \"Contracts/OracleManager.sol\":9654:9716  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10861:10863   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":9654:9716  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10843:10864   */\n      mstore\n        /* \"#utility.yul\":10900:10902   */\n      0x22\n        /* \"#utility.yul\":10880:10898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10873:10903   */\n      mstore\n        /* \"#utility.yul\":10939:10973   */\n      0x4f7261636c654d616e616765723a207661756c7420746f74616c537570706c79\n        /* \"#utility.yul\":10919:10937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10912:10974   */\n      mstore\n      shl(0xf4, 0x03d3)\n        /* \"#utility.yul\":10990:11008   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10983:11015   */\n      mstore\n        /* \"#utility.yul\":11032:11051   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":9654:9716  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      tag_48\n        /* \"#utility.yul\":10659:11057   */\n      jump\n        /* \"Contracts/OracleManager.sol\":9654:9716  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n    tag_161:\n        /* \"Contracts/OracleManager.sol\":9737:9738  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9737:9751  v.vaultTokenId */\n      and\n      0xf657a7fe\n        /* \"Contracts/OracleManager.sol\":9737:9753  v.vaultTokenId() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_166:\n        /* \"Contracts/OracleManager.sol\":9727:9753  tokenId = v.vaultTokenId() */\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":9771:9778  tokenId */\n      dup3\n        /* \"Contracts/OracleManager.sol\":9782:9783  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9771:9783  tokenId != 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":9763:9818  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11264:11266   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":9763:9818  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11246:11267   */\n      mstore\n        /* \"#utility.yul\":11303:11305   */\n      0x1e\n        /* \"#utility.yul\":11283:11301   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11276:11306   */\n      mstore\n        /* \"#utility.yul\":11342:11374   */\n      0x4f7261636c654d616e616765723a206e6f204e465420696e207661756c740000\n        /* \"#utility.yul\":11322:11340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11315:11375   */\n      mstore\n        /* \"#utility.yul\":11392:11410   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":9763:9818  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      tag_48\n        /* \"#utility.yul\":11062:11416   */\n      jump\n        /* \"Contracts/OracleManager.sol\":9763:9818  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n    tag_167:\n        /* \"Contracts/OracleManager.sol\":9838:9839  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9838:9855  v.positionManager */\n      and\n      0x791b98bc\n        /* \"Contracts/OracleManager.sol\":9838:9857  v.positionManager() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"Contracts/OracleManager.sol\":9829:9857  posMgr = v.positionManager() */\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9875:9895  posMgr != address(0) */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":9867:9934  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11623:11625   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":9867:9934  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11605:11626   */\n      mstore\n        /* \"#utility.yul\":11662:11664   */\n      0x22\n        /* \"#utility.yul\":11642:11660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11635:11665   */\n      mstore\n        /* \"#utility.yul\":11701:11735   */\n      0x4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d\n        /* \"#utility.yul\":11681:11699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11674:11736   */\n      mstore\n      shl(0xf1, 0x33b9)\n        /* \"#utility.yul\":11752:11770   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11745:11777   */\n      mstore\n        /* \"#utility.yul\":11794:11813   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":9867:9934  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      tag_48\n        /* \"#utility.yul\":11421:11819   */\n      jump\n        /* \"Contracts/OracleManager.sol\":9867:9934  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n    tag_173:\n        /* \"Contracts/OracleManager.sol\":9556:9941  {... */\n      pop\n        /* \"Contracts/OracleManager.sol\":9406:9941  function _fetchVaultInfo(address vaultToken)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":9947:10729  function _fetchPositionData(address posMgr, uint256 tokenId)... */\n    tag_109:\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Contracts/OracleManager.sol\":10097:10109  bool success */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10111:10128  bytes memory data */\n      dup1\n        /* \"Contracts/OracleManager.sol\":10132:10138  posMgr */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10132:10149  posMgr.staticcall */\n      and\n        /* \"Contracts/OracleManager.sol\":10186:10232  INonfungiblePositionManager.positions.selector */\n      shl(0xe0, 0x99fbab88)\n        /* \"Contracts/OracleManager.sol\":10234:10241  tokenId */\n      dup6\n        /* \"Contracts/OracleManager.sol\":10163:10242  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n      add(0x24, mload(0x40))\n      tag_179\n      swap2\n        /* \"#utility.yul\":11970:11995   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11958:11960   */\n      0x20\n        /* \"#utility.yul\":11943:11961   */\n      add\n      swap1\n        /* \"#utility.yul\":11824:12001   */\n      jump\n        /* \"Contracts/OracleManager.sol\":10163:10242  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n    tag_179:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"Contracts/OracleManager.sol\":10132:10252  posMgr.staticcall(... */\n      swap1\n      mload\n      tag_181\n      swap2\n        /* \"Contracts/OracleManager.sol\":10163:10242  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n      swap1\n        /* \"Contracts/OracleManager.sol\":10132:10252  posMgr.staticcall(... */\n      tag_138\n      jump\t// in\n    tag_181:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_184\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_183)\n    tag_184:\n      0x60\n      swap2\n      pop\n    tag_183:\n      pop\n        /* \"Contracts/OracleManager.sol\":10096:10252  (bool success, bytes memory data) = posMgr.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":10270:10277  success */\n      dup2\n        /* \"Contracts/OracleManager.sol\":10279:10298  _getRevertMsg(data) */\n      tag_185\n        /* \"Contracts/OracleManager.sol\":10293:10297  data */\n      dup3\n        /* \"Contracts/OracleManager.sol\":10279:10292  _getRevertMsg */\n      tag_186\n        /* \"Contracts/OracleManager.sol\":10279:10298  _getRevertMsg(data) */\n      jump\t// in\n    tag_185:\n        /* \"Contracts/OracleManager.sol\":10262:10299  require(success, _getRevertMsg(data)) */\n      swap1\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n      pop\n        /* \"Contracts/OracleManager.sol\":10592:10596  data */\n      dup1\n        /* \"Contracts/OracleManager.sol\":10568:10722  abi.decode(... */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"Contracts/OracleManager.sol\":10310:10722  (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      swap11\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      pop\n      swap1\n      swap2\n      swap3\n      pop\n      swap1\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":10352:10355  pos */\n      dup10\n        /* \"Contracts/OracleManager.sol\":10352:10362  pos.token0 */\n      0x00\n      add\n        /* \"Contracts/OracleManager.sol\":10376:10379  pos */\n      dup11\n        /* \"Contracts/OracleManager.sol\":10376:10386  pos.token1 */\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":10414:10417  pos */\n      dup12\n        /* \"Contracts/OracleManager.sol\":10414:10427  pos.tickLower */\n      0x40\n      add\n        /* \"Contracts/OracleManager.sol\":10441:10444  pos */\n      dup13\n        /* \"Contracts/OracleManager.sol\":10441:10454  pos.tickUpper */\n      0x60\n      add\n        /* \"Contracts/OracleManager.sol\":10468:10471  pos */\n      dup14\n        /* \"Contracts/OracleManager.sol\":10468:10481  pos.liquidity */\n      0x80\n      add\n        /* \"Contracts/OracleManager.sol\":10523:10526  pos */\n      dup15\n        /* \"Contracts/OracleManager.sol\":10523:10532  pos.owed0 */\n      0xa0\n      add\n        /* \"Contracts/OracleManager.sol\":10546:10549  pos */\n      dup16\n        /* \"Contracts/OracleManager.sol\":10546:10555  pos.owed1 */\n      0xc0\n      add\n        /* \"Contracts/OracleManager.sol\":10310:10722  (... */\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      dup8\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":10086:10729  {... */\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":9947:10729  function _fetchPositionData(address posMgr, uint256 tokenId)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":11076:11562  function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {... */\n    tag_115:\n        /* \"Contracts/OracleManager.sol\":11146:11166  uint160 sqrtPriceX96 */\n      0x00\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11198:11220  poolAddr != address(0) */\n      dup4\n      and\n        /* \"Contracts/OracleManager.sol\":11190:11252  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14639:14641   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":11190:11252  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14621:14642   */\n      mstore\n        /* \"#utility.yul\":14678:14680   */\n      0x1b\n        /* \"#utility.yul\":14658:14676   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14651:14681   */\n      mstore\n        /* \"#utility.yul\":14717:14746   */\n      0x4f7261636c654d616e616765723a20696e76616c696420706f6f6c0000000000\n        /* \"#utility.yul\":14697:14715   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14690:14747   */\n      mstore\n        /* \"#utility.yul\":14764:14782   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":11190:11252  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      tag_48\n        /* \"#utility.yul\":14437:14788   */\n      jump\n        /* \"Contracts/OracleManager.sol\":11190:11252  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n    tag_193:\n        /* \"Contracts/OracleManager.sol\":11331:11384  abi.encodeWithSelector(IUniswapV3Pool.slot0.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x3850c7bd)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":11298:11394  poolAddr.staticcall(... */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":11263:11275  bool success */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11298:11317  poolAddr.staticcall */\n      dup8\n      and\n      swap2\n        /* \"Contracts/OracleManager.sol\":11298:11394  poolAddr.staticcall(... */\n      tag_196\n      swap2\n      tag_138\n      jump\t// in\n    tag_196:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"Contracts/OracleManager.sol\":11262:11394  (bool success, bytes memory data) = poolAddr.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":11412:11419  success */\n      dup2\n        /* \"Contracts/OracleManager.sol\":11421:11440  _getRevertMsg(data) */\n      tag_200\n        /* \"Contracts/OracleManager.sol\":11435:11439  data */\n      dup3\n        /* \"Contracts/OracleManager.sol\":11421:11434  _getRevertMsg */\n      tag_186\n        /* \"Contracts/OracleManager.sol\":11421:11440  _getRevertMsg(data) */\n      jump\t// in\n    tag_200:\n        /* \"Contracts/OracleManager.sol\":11404:11441  require(success, _getRevertMsg(data)) */\n      swap1\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_201:\n      pop\n        /* \"Contracts/OracleManager.sol\":11495:11499  data */\n      dup1\n        /* \"Contracts/OracleManager.sol\":11484:11555  abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      pop\n        /* \"Contracts/OracleManager.sol\":11451:11555  (sqrtPriceX96, tick, , , , , ) = abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool)) */\n      swap5\n      swap11\n      swap4\n      swap10\n      pop\n        /* \"Contracts/OracleManager.sol\":11076:11562  function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {... */\n      swap3\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":11568:12145  function _computeLiquidityAmounts(... */\n    tag_117:\n        /* \"Contracts/OracleManager.sol\":11738:11750  uint256 amt0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11752:11764  uint256 amt1 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":11780:11789  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11780:11794  liquidity == 0 */\n      and\n        /* \"Contracts/OracleManager.sol\":11793:11794  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11780:11794  liquidity == 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":11776:11834  if (liquidity == 0) {... */\n      tag_206\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":11818:11819  0 */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"Contracts/OracleManager.sol\":11810:11823  return (0, 0) */\n      jump(tag_205)\n        /* \"Contracts/OracleManager.sol\":11776:11834  if (liquidity == 0) {... */\n    tag_206:\n        /* \"Contracts/OracleManager.sol\":11843:11860  uint160 sqrtLower */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11863:11901  TickMath.getSqrtRatioAtTick(tickLower) */\n      tag_207\n        /* \"Contracts/OracleManager.sol\":11891:11900  tickLower */\n      dup7\n        /* \"Contracts/OracleManager.sol\":11863:11890  TickMath.getSqrtRatioAtTick */\n      tag_208\n        /* \"Contracts/OracleManager.sol\":11863:11901  TickMath.getSqrtRatioAtTick(tickLower) */\n      jump\t// in\n    tag_207:\n        /* \"Contracts/OracleManager.sol\":11843:11901  uint160 sqrtLower = TickMath.getSqrtRatioAtTick(tickLower) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11911:11928  uint160 sqrtUpper */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11931:11969  TickMath.getSqrtRatioAtTick(tickUpper) */\n      tag_209\n        /* \"Contracts/OracleManager.sol\":11959:11968  tickUpper */\n      dup7\n        /* \"Contracts/OracleManager.sol\":11931:11958  TickMath.getSqrtRatioAtTick */\n      tag_208\n        /* \"Contracts/OracleManager.sol\":11931:11969  TickMath.getSqrtRatioAtTick(tickUpper) */\n      jump\t// in\n    tag_209:\n        /* \"Contracts/OracleManager.sol\":11911:11969  uint160 sqrtUpper = TickMath.getSqrtRatioAtTick(tickUpper) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11994:12138  LiquidityAmounts.getAmountsForLiquidity(... */\n      tag_210\n        /* \"Contracts/OracleManager.sol\":12047:12059  sqrtPriceX96 */\n      dup9\n        /* \"Contracts/OracleManager.sol\":12073:12082  sqrtLower */\n      dup4\n        /* \"Contracts/OracleManager.sol\":12096:12105  sqrtUpper */\n      dup4\n        /* \"Contracts/OracleManager.sol\":12119:12128  liquidity */\n      dup9\n        /* \"Contracts/OracleManager.sol\":11994:12033  LiquidityAmounts.getAmountsForLiquidity */\n      tag_211\n        /* \"Contracts/OracleManager.sol\":11994:12138  LiquidityAmounts.getAmountsForLiquidity(... */\n      jump\t// in\n    tag_210:\n        /* \"Contracts/OracleManager.sol\":11979:12138  (amt0, amt1) = LiquidityAmounts.getAmountsForLiquidity(... */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":11568:12145  function _computeLiquidityAmounts(... */\n    tag_205:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":10735:11070  function _convertVaultTokensToValue(... */\n    tag_122:\n        /* \"Contracts/OracleManager.sol\":10878:10885  uint256 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10897:10909  uint256 val0 */\n      dup1\n        /* \"Contracts/OracleManager.sol\":10912:10961  _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      tag_213\n        /* \"Contracts/OracleManager.sol\":10938:10942  amt0 */\n      dup6\n        /* \"Contracts/OracleManager.sol\":10944:10946  ap */\n      dup5\n        /* \"Contracts/OracleManager.sol\":10944:10951  ap.agg0 */\n      0x00\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10953:10955  ap */\n      dup6\n        /* \"Contracts/OracleManager.sol\":10953:10960  ap.dec0 */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10912:10937  _convertToAggregatorValue */\n      tag_214\n        /* \"Contracts/OracleManager.sol\":10912:10961  _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      jump\t// in\n    tag_213:\n        /* \"Contracts/OracleManager.sol\":10897:10961  uint256 val0 = _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":10971:10983  uint256 val1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10986:11035  _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      tag_215\n        /* \"Contracts/OracleManager.sol\":11012:11016  amt1 */\n      dup6\n        /* \"Contracts/OracleManager.sol\":11018:11020  ap */\n      dup6\n        /* \"Contracts/OracleManager.sol\":11018:11025  ap.agg1 */\n      0x20\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":11027:11029  ap */\n      dup7\n        /* \"Contracts/OracleManager.sol\":11027:11034  ap.dec1 */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10986:11011  _convertToAggregatorValue */\n      tag_214\n        /* \"Contracts/OracleManager.sol\":10986:11035  _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      jump\t// in\n    tag_215:\n        /* \"Contracts/OracleManager.sol\":10971:11035  uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11052:11063  val0 + val1 */\n      tag_216\n        /* \"Contracts/OracleManager.sol\":10971:11035  uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      dup2\n        /* \"Contracts/OracleManager.sol\":11052:11056  val0 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":11052:11063  val0 + val1 */\n      tag_119\n      jump\t// in\n    tag_216:\n        /* \"Contracts/OracleManager.sol\":11045:11063  return val0 + val1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":10735:11070  function _convertVaultTokensToValue(... */\n    tag_212:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":13839:14145  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n    tag_186:\n        /* \"Contracts/OracleManager.sol\":13910:13923  string memory */\n      0x60\n        /* \"Contracts/OracleManager.sol\":13960:13962  68 */\n      0x44\n        /* \"Contracts/OracleManager.sol\":13939:13950  _returnData */\n      dup3\n        /* \"Contracts/OracleManager.sol\":13939:13957  _returnData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":13939:13962  _returnData.length < 68 */\n      lt\n        /* \"Contracts/OracleManager.sol\":13935:14009  if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\" */\n      iszero\n      tag_219\n      jumpi\n        /* \"Contracts/OracleManager.sol\":13964:14009  return \"OracleManager: call reverted w/o msg\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f\n      0x24\n      swap2\n      codecopy\n      swap3\n        /* \"Contracts/OracleManager.sol\":13839:14145  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":13935:14009  if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\" */\n    tag_219:\n        /* \"Contracts/OracleManager.sol\":14074:14078  0x04 */\n      0x04\n        /* \"Contracts/OracleManager.sol\":14061:14072  _returnData */\n      dup3\n        /* \"Contracts/OracleManager.sol\":14057:14079  add(_returnData, 0x04) */\n      add\n        /* \"Contracts/OracleManager.sol\":14042:14079  _returnData := add(_returnData, 0x04) */\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":14116:14127  _returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":14105:14138  abi.decode(_returnData, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"Contracts/OracleManager.sol\":14098:14138  return abi.decode(_returnData, (string)) */\n      swap3\n        /* \"Contracts/OracleManager.sol\":13839:14145  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1385:4144  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_208:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1448:1468  uint160 sqrtPriceX96 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1504:1519  uint256 absTick */\n      dup1\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1529:1530  0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1522:1526  tick */\n      dup4\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1522:1530  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1522:1579  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_223\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1573:1577  tick */\n      dup3\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1566:1578  int256(tick) */\n      0x02\n      signextend\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1522:1579  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_224)\n    tag_223:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1549:1553  tick */\n      dup3\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1542:1554  int256(tick) */\n      0x02\n      signextend\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1541:1554  -int256(tick) */\n      0x00\n      sub\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1522:1579  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_224:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1504:1579  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":667:676  -MIN_TICK */\n      0x0d89e8\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1597:1632  absTick > uint256(int256(MAX_TICK)) */\n      dup2\n      gt\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1593:1644  if (absTick > uint256(int256(MAX_TICK))) revert T() */\n      iszero\n      tag_225\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1641:1644  T() */\n      mload(0x40)\n      shl(0xe1, 0x15e4079d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1593:1644  if (absTick > uint256(int256(MAX_TICK))) revert T() */\n    tag_225:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1659:1672  uint256 ratio */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1675:1682  absTick */\n      dup2\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1685:1688  0x1 */\n      0x01\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1675:1688  absTick & 0x1 */\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1692:1693  0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1675:1693  absTick & 0x1 != 0 */\n      sub\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1675:1800  absTick & 0x1 != 0... */\n      tag_226\n      jumpi\n      shl(0x80, 0x01)\n      jump(tag_227)\n    tag_226:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1712:1746  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1675:1800  absTick & 0x1 != 0... */\n    tag_227:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1659:1800  uint256 ratio = absTick & 0x1 != 0... */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1828:1831  0x2 */\n      0x02\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1818:1831  absTick & 0x2 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1818:1836  absTick & 0x2 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1814:1897  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_228\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1855:1889  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1847:1889  ratio * 0xfff97272373d413259a46990580e213a */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1894:1897  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1846:1897  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1814:1897  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_228:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1925:1928  0x4 */\n      0x04\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1915:1928  absTick & 0x4 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1915:1933  absTick & 0x4 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1911:1994  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_229\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1952:1986  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1944:1986  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1991:1994  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1943:1994  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1911:1994  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_229:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2022:2025  0x8 */\n      0x08\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2012:2025  absTick & 0x8 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2012:2030  absTick & 0x8 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2008:2091  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_230\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2049:2083  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2041:2083  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2088:2091  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2040:2091  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2008:2091  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_230:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2119:2123  0x10 */\n      0x10\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2109:2123  absTick & 0x10 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2109:2128  absTick & 0x10 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2105:2189  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_231\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2147:2181  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2139:2181  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2186:2189  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2138:2189  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2105:2189  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_231:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2217:2221  0x20 */\n      0x20\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2207:2221  absTick & 0x20 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2207:2226  absTick & 0x20 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2203:2287  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_232\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2245:2279  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2237:2279  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2284:2287  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2236:2287  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2203:2287  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_232:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2315:2319  0x40 */\n      0x40\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2305:2319  absTick & 0x40 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2305:2324  absTick & 0x40 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2301:2385  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_233\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2343:2377  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2335:2377  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2382:2385  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2334:2385  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2301:2385  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_233:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2413:2417  0x80 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2403:2417  absTick & 0x80 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2403:2422  absTick & 0x80 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2399:2483  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_234\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2441:2475  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2433:2475  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2480:2483  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2432:2483  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2399:2483  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_234:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2511:2516  0x100 */\n      0x0100\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2501:2516  absTick & 0x100 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2501:2521  absTick & 0x100 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2497:2582  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_235\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2540:2574  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2532:2574  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2579:2582  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2531:2582  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2497:2582  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_235:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2610:2615  0x200 */\n      0x0200\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2600:2615  absTick & 0x200 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2600:2620  absTick & 0x200 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2596:2681  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_236\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2639:2673  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2631:2673  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2678:2681  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2630:2681  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2596:2681  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_236:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2709:2714  0x400 */\n      0x0400\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2699:2714  absTick & 0x400 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2699:2719  absTick & 0x400 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2695:2780  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_237\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2738:2772  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2730:2772  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2777:2780  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2729:2780  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2695:2780  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_237:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2808:2813  0x800 */\n      0x0800\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2798:2813  absTick & 0x800 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2798:2818  absTick & 0x800 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2794:2879  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_238\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2837:2871  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2829:2871  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2876:2879  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2828:2879  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2794:2879  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_238:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2907:2913  0x1000 */\n      0x1000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2897:2913  absTick & 0x1000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2897:2918  absTick & 0x1000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2893:2979  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_239\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2937:2971  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2929:2971  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2976:2979  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2928:2979  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2893:2979  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_239:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3007:3013  0x2000 */\n      0x2000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2997:3013  absTick & 0x2000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2997:3018  absTick & 0x2000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2993:3079  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_240\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3037:3071  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3029:3071  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3076:3079  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3028:3079  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":2993:3079  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_240:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3107:3113  0x4000 */\n      0x4000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3097:3113  absTick & 0x4000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3097:3118  absTick & 0x4000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3093:3179  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_241\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3137:3171  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3129:3171  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3176:3179  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3128:3179  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3093:3179  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_241:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3207:3213  0x8000 */\n      0x8000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3197:3213  absTick & 0x8000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3197:3218  absTick & 0x8000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3193:3279  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_242\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3237:3271  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3229:3271  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3276:3279  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3228:3279  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3193:3279  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_242:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3307:3314  0x10000 */\n      0x010000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3297:3314  absTick & 0x10000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3297:3319  absTick & 0x10000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3293:3379  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_243\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3338:3371  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3330:3371  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3376:3379  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3329:3379  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3293:3379  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_243:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3407:3414  0x20000 */\n      0x020000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3397:3414  absTick & 0x20000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3397:3419  absTick & 0x20000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3393:3478  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_244\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3438:3470  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3430:3470  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3475:3478  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3429:3478  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3393:3478  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_244:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3506:3513  0x40000 */\n      0x040000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3496:3513  absTick & 0x40000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3496:3518  absTick & 0x40000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3492:3575  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_245\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3537:3567  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3529:3567  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3572:3575  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3528:3575  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3492:3575  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_245:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3603:3610  0x80000 */\n      0x080000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3593:3610  absTick & 0x80000 */\n      dup3\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3593:3615  absTick & 0x80000 != 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3589:3667  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_246\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3634:3659  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3626:3659  ratio * 0x48a170391f7dc42444e8fa2 */\n      mul\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3664:3667  128 */\n      0x80\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3625:3667  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3589:3667  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_246:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3693:3694  0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3686:3690  tick */\n      dup5\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3686:3694  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3682:3729  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_247\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3724:3729  ratio */\n      dup1\n      not(0x00)\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3704:3729  type(uint256).max / ratio */\n      dup2\n      tag_249\n      jumpi\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n      div\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3696:3729  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":3682:3729  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_247:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4104:4111  1 << 32 */\n      0x0100000000\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4100  ratio */\n      dup2\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4112  ratio % (1 << 32) */\n      mod\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4117  ratio % (1 << 32) == 0 */\n      iszero\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4125  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_253\n      jumpi\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4124:4125  1 */\n      0x01\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4125  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_254)\n    tag_253:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4120:4121  0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4095:4125  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_254:\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4078:4126  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4088:4090  32 */\n      0x20\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4079:4084  ratio */\n      dup3\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4079:4090  ratio >> 32 */\n      swap1\n      shr\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4078:4126  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      add\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":4055:4127  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1480:4138  unchecked {... */\n      pop\n      pop\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":1385:4144  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6173:6972  function getAmountsForLiquidity(... */\n    tag_211:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6353:6368  uint256 amount0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6370:6385  uint256 amount1 */\n      dup1\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6417:6430  sqrtRatioBX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6430  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6414  sqrtRatioAX96 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6430  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6397:6495  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_256\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6466:6479  sqrtRatioBX96 */\n      swap3\n      swap4\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6481:6494  sqrtRatioAX96 */\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6397:6495  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_256:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6526:6539  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6539  sqrtRatioX96 <= sqrtRatioAX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6522  sqrtRatioX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6539  sqrtRatioX96 <= sqrtRatioAX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6506:6966  if (sqrtRatioX96 <= sqrtRatioAX96) {... */\n      tag_257\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6628  getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      tag_258\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6588:6601  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6603:6616  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6618:6627  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6587  getAmount0ForLiquidity */\n      tag_259\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6628  getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_258:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6555:6628  amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      swap2\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6506:6966  if (sqrtRatioX96 <= sqrtRatioAX96) {... */\n      jump(tag_205)\n    tag_257:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6664:6677  sqrtRatioBX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6677  sqrtRatioX96 < sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6661  sqrtRatioX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6677  sqrtRatioX96 < sqrtRatioBX96 */\n      and\n      lt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6645:6966  if (sqrtRatioX96 < sqrtRatioBX96) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6765  getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      tag_262\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6726:6738  sqrtRatioX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6740:6753  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6755:6764  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6725  getAmount0ForLiquidity */\n      tag_259\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6765  getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_262:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6693:6765  amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      swap2\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6851  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      tag_263\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6812:6825  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6827:6839  sqrtRatioX96 */\n      dup8\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6841:6850  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6811  getAmount1ForLiquidity */\n      tag_264\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6851  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      jump\t// in\n    tag_263:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6779:6851  amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6645:6966  if (sqrtRatioX96 < sqrtRatioBX96) {... */\n      jump(tag_205)\n    tag_261:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6955  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      tag_266\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6915:6928  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6930:6943  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6945:6954  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6914  getAmount1ForLiquidity */\n      tag_264\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6955  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_266:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6882:6955  amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6173:6972  function getAmountsForLiquidity(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":12151:12637  function _convertToAggregatorValue(... */\n    tag_214:\n        /* \"Contracts/OracleManager.sol\":12295:12302  uint256 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12318:12326  amt == 0 */\n      dup4\n      iszero\n      dup1\n        /* \"Contracts/OracleManager.sol\":12318:12358  amt == 0 || aggregatorAddr == address(0) */\n      tag_268\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":12330:12358  aggregatorAddr == address(0) */\n      dup4\n      and\n      iszero\n        /* \"Contracts/OracleManager.sol\":12318:12358  amt == 0 || aggregatorAddr == address(0) */\n    tag_268:\n        /* \"Contracts/OracleManager.sol\":12314:12393  if (amt == 0 || aggregatorAddr == address(0)) {... */\n      iszero\n      tag_269\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":12381:12382  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12374:12382  return 0 */\n      jump(tag_212)\n        /* \"Contracts/OracleManager.sol\":12314:12393  if (amt == 0 || aggregatorAddr == address(0)) {... */\n    tag_269:\n        /* \"Contracts/OracleManager.sol\":12403:12410  bool ok */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12412:12421  uint256 p */\n      dup1\n        /* \"Contracts/OracleManager.sol\":12423:12430  uint8 d */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12434:12484  _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      tag_270\n        /* \"Contracts/OracleManager.sol\":12456:12470  aggregatorAddr */\n      dup7\n        /* \"Contracts/OracleManager.sol\":12472:12483  decimalsOvr */\n      dup7\n        /* \"Contracts/OracleManager.sol\":12434:12455  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":12434:12484  _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      jump\t// in\n    tag_270:\n        /* \"Contracts/OracleManager.sol\":12402:12484  (bool ok, uint256 p, uint8 d) = _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":12502:12504  ok */\n      dup3\n        /* \"Contracts/OracleManager.sol\":12494:12568  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17064:17066   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":12494:12568  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17046:17067   */\n      mstore\n        /* \"#utility.yul\":17103:17105   */\n      0x3b\n        /* \"#utility.yul\":17083:17101   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17076:17106   */\n      mstore\n        /* \"#utility.yul\":17142:17176   */\n      0x4f7261636c654d616e616765723a2061676772656761746f72206661696c2069\n        /* \"#utility.yul\":17122:17140   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17115:17177   */\n      mstore\n        /* \"#utility.yul\":17213:17242   */\n      0x6e205f636f6e76657274546f41676772656761746f7256616c75650000000000\n        /* \"#utility.yul\":17193:17211   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17186:17243   */\n      mstore\n        /* \"#utility.yul\":17260:17279   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":12494:12568  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      tag_48\n        /* \"#utility.yul\":16862:17285   */\n      jump\n        /* \"Contracts/OracleManager.sol\":12494:12568  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n    tag_271:\n        /* \"Contracts/OracleManager.sol\":12622:12629  10 ** d */\n      tag_274\n        /* \"Contracts/OracleManager.sol\":12628:12629  d */\n      dup2\n        /* \"Contracts/OracleManager.sol\":12622:12624  10 */\n      0x0a\n        /* \"Contracts/OracleManager.sol\":12622:12629  10 ** d */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"Contracts/OracleManager.sol\":12610:12617  amt * p */\n      tag_276\n        /* \"Contracts/OracleManager.sol\":12616:12617  p */\n      dup4\n        /* \"Contracts/OracleManager.sol\":12610:12613  amt */\n      dup10\n        /* \"Contracts/OracleManager.sol\":12610:12617  amt * p */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"Contracts/OracleManager.sol\":12609:12630  (amt * p) / (10 ** d) */\n      tag_278\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_278:\n        /* \"Contracts/OracleManager.sol\":12602:12630  return (amt * p) / (10 ** d) */\n      swap8\n        /* \"Contracts/OracleManager.sol\":12151:12637  function _convertToAggregatorValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4309:4865  function getAmount0ForLiquidity(... */\n    tag_259:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4459:4474  uint256 amount0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4530:4543  sqrtRatioBX96 */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4543  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4527  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4543  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4510:4608  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_280\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4579:4592  sqrtRatioBX96 */\n      swap2\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4594:4607  sqrtRatioAX96 */\n      swap2\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4510:4608  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_280:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4835:4848  sqrtRatioAX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4848  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      tag_281\n        /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":309:311  96 */\n      0x60\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4728  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4691:4700  liquidity */\n      dup5\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4701  uint256(liquidity) */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4728  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4766:4779  sqrtRatioAX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4750:4763  sqrtRatioBX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4750:4779  sqrtRatioBX96 - sqrtRatioAX96 */\n      sub\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4801:4814  sqrtRatioBX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4661  FullMath.mulDiv */\n      tag_282\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      jump\t// in\n    tag_281:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4848  FullMath.mulDiv(... */\n      dup2\n      tag_284\n      jumpi\n      tag_284\n      tag_250\n      jump\t// in\n    tag_284:\n      div\n      swap5\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4309:4865  function getAmount0ForLiquidity(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5223:5632  function getAmount1ForLiquidity(... */\n    tag_264:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5373:5388  uint256 amount1 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5420:5433  sqrtRatioBX96 */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5433  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5417  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5433  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5400:5498  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_286\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5469:5482  sqrtRatioBX96 */\n      swap2\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5484:5497  sqrtRatioAX96 */\n      swap2\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5400:5498  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_286:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      tag_287\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5556:5565  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5583:5596  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5567:5580  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5567:5596  sqrtRatioBX96 - sqrtRatioAX96 */\n      sub\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      and\n      shl(0x60, 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5555  FullMath.mulDiv */\n      tag_282\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      jump\t// in\n    tag_287:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5533:5615  return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      swap5\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5223:5632  function getAmount1ForLiquidity(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":741:4868  function mulDiv(... */\n    tag_282:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":853:867  uint256 result */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1416:1417  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1413:1414  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1406:1426  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1459:1460  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1456:1457  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1452:1461  mul(a, b) */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1443:1461  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1514:1519  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1510:1512  mm */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1507:1520  lt(mm, prod0) */\n      lt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1499:1504  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1495:1497  mm */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1491:1505  sub(mm, prod0) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1487:1521  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1478:1521  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1615:1620  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1624:1625  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1615:1625  prod1 == 0 */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1611:1814  if (prod1 == 0) {... */\n      tag_289\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1667:1668  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1653:1664  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1653:1668  denominator > 0 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1645:1669  require(denominator > 0) */\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1728:1751  div(prod0, denominator) */\n      dup3\n      swap1\n      div\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1786:1799  return result */\n      jump(tag_212)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1611:1814  if (prod1 == 0) {... */\n    tag_289:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1953:1958  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1939:1950  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1939:1958  denominator > prod1 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1931:1959  require(denominator > prod1) */\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2260:2277  uint256 remainder */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2344:2355  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2341:2342  b */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2338:2339  a */\n      dup9\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2331:2356  mulmod(a, b, denominator) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2736:2748  uint256 twos */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2752:2767  0 - denominator */\n      dup7\n      dup2\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2751:2782  (0 - denominator) & denominator */\n      dup8\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2888:2910  div(denominator, twos) */\n      swap7\n      dup8\n      swap1\n      div\n      swap7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3763:3764  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3744:3745  3 */\n      0x03\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3744:3759  3 * denominator */\n      dup10\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3743:3764  (3 * denominator) ^ 2 */\n      dup2\n      xor\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4006:4023  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4002:4023  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3995:4023  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4068:4085  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4064:4085  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4057:4085  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4131:4148  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4127:4148  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4120:4148  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4194:4211  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4190:4211  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4183:4211  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4257:4274  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4253:4274  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4246:4274  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4321:4338  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4317:4338  2 - denominator * inv */\n      swap1\n      swap2\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4310:4338  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3300:3312  sub(0, twos) */\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3296:3319  div(sub(0, twos), twos) */\n      dup2\n      swap1\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3321:3322  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3292:3323  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2489:2509  gt(remainder, prod0) */\n      dup7\n      dup5\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2478:2510  sub(prod1, gt(remainder, prod0)) */\n      swap1\n      swap6\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3359:3371  prod1 * twos */\n      swap5\n      swap1\n      swap5\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2536:2557  sub(prod0, remainder) */\n      swap2\n      swap1\n      swap5\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3032:3048  div(prod0, twos) */\n      swap3\n      swap1\n      swap3\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3350:3371  prod0 |= prod1 * twos */\n      swap2\n      swap1\n      swap2\n      or\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4813:4824  prod0 * inv */\n      swap2\n      swap1\n      swap2\n      mul\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":741:4868  function mulDiv(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_14:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_310:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_212\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":1961:2075   */\n    tag_293:\n        /* \"#utility.yul\":2045:2049   */\n      0xff\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2034:2050   */\n      and\n        /* \"#utility.yul\":2027:2032   */\n      dup2\n        /* \"#utility.yul\":2024:2051   */\n      eq\n        /* \"#utility.yul\":2014:2069   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2080:2885   */\n    tag_36:\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2179:2185   */\n      dup1\n        /* \"#utility.yul\":2187:2193   */\n      0x00\n        /* \"#utility.yul\":2195:2201   */\n      dup1\n        /* \"#utility.yul\":2203:2209   */\n      0x00\n        /* \"#utility.yul\":2256:2259   */\n      0xa0\n        /* \"#utility.yul\":2244:2253   */\n      dup7\n        /* \"#utility.yul\":2235:2242   */\n      dup9\n        /* \"#utility.yul\":2231:2254   */\n      sub\n        /* \"#utility.yul\":2227:2260   */\n      slt\n        /* \"#utility.yul\":2224:2277   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2270:2271   */\n      dup1\n        /* \"#utility.yul\":2263:2275   */\n      revert\n        /* \"#utility.yul\":2224:2277   */\n    tag_319:\n        /* \"#utility.yul\":2312:2321   */\n      dup6\n        /* \"#utility.yul\":2299:2322   */\n      calldataload\n        /* \"#utility.yul\":2331:2362   */\n      tag_320\n        /* \"#utility.yul\":2356:2361   */\n      dup2\n        /* \"#utility.yul\":2331:2362   */\n      tag_292\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2381:2386   */\n      swap5\n      pop\n        /* \"#utility.yul\":2438:2440   */\n      0x20\n        /* \"#utility.yul\":2423:2441   */\n      dup7\n      add\n        /* \"#utility.yul\":2410:2442   */\n      calldataload\n        /* \"#utility.yul\":2451:2484   */\n      tag_321\n        /* \"#utility.yul\":2410:2442   */\n      dup2\n        /* \"#utility.yul\":2451:2484   */\n      tag_292\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2503:2510   */\n      swap4\n      pop\n        /* \"#utility.yul\":2562:2564   */\n      0x40\n        /* \"#utility.yul\":2547:2565   */\n      dup7\n      add\n        /* \"#utility.yul\":2534:2566   */\n      calldataload\n        /* \"#utility.yul\":2575:2608   */\n      tag_322\n        /* \"#utility.yul\":2534:2566   */\n      dup2\n        /* \"#utility.yul\":2575:2608   */\n      tag_292\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2627:2634   */\n      swap3\n      pop\n        /* \"#utility.yul\":2686:2688   */\n      0x60\n        /* \"#utility.yul\":2671:2689   */\n      dup7\n      add\n        /* \"#utility.yul\":2658:2690   */\n      calldataload\n        /* \"#utility.yul\":2699:2730   */\n      tag_323\n        /* \"#utility.yul\":2658:2690   */\n      dup2\n        /* \"#utility.yul\":2699:2730   */\n      tag_293\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2749:2756   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2811   */\n      0x80\n        /* \"#utility.yul\":2793:2812   */\n      dup7\n      add\n        /* \"#utility.yul\":2780:2813   */\n      calldataload\n        /* \"#utility.yul\":2822:2853   */\n      tag_324\n        /* \"#utility.yul\":2780:2813   */\n      dup2\n        /* \"#utility.yul\":2822:2853   */\n      tag_293\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2872:2879   */\n      dup1\n        /* \"#utility.yul\":2862:2879   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2080:2885   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:3008   */\n    tag_294:\n        /* \"#utility.yul\":2976:2981   */\n      dup1\n        /* \"#utility.yul\":2969:2982   */\n      iszero\n        /* \"#utility.yul\":2962:2983   */\n      iszero\n        /* \"#utility.yul\":2955:2960   */\n      dup2\n        /* \"#utility.yul\":2952:2984   */\n      eq\n        /* \"#utility.yul\":2942:3002   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2995:2996   */\n      dup1\n        /* \"#utility.yul\":2988:3000   */\n      revert\n        /* \"#utility.yul\":3013:3952   */\n    tag_40:\n        /* \"#utility.yul\":3109:3115   */\n      0x00\n        /* \"#utility.yul\":3117:3123   */\n      dup1\n        /* \"#utility.yul\":3125:3131   */\n      0x00\n        /* \"#utility.yul\":3133:3139   */\n      dup1\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3149:3155   */\n      dup1\n        /* \"#utility.yul\":3202:3205   */\n      0xc0\n        /* \"#utility.yul\":3190:3199   */\n      dup8\n        /* \"#utility.yul\":3181:3188   */\n      dup10\n        /* \"#utility.yul\":3177:3200   */\n      sub\n        /* \"#utility.yul\":3173:3206   */\n      slt\n        /* \"#utility.yul\":3170:3223   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3216:3217   */\n      dup1\n        /* \"#utility.yul\":3209:3221   */\n      revert\n        /* \"#utility.yul\":3170:3223   */\n    tag_328:\n        /* \"#utility.yul\":3258:3267   */\n      dup7\n        /* \"#utility.yul\":3245:3268   */\n      calldataload\n        /* \"#utility.yul\":3277:3308   */\n      tag_329\n        /* \"#utility.yul\":3302:3307   */\n      dup2\n        /* \"#utility.yul\":3277:3308   */\n      tag_292\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3327:3332   */\n      swap6\n      pop\n        /* \"#utility.yul\":3384:3386   */\n      0x20\n        /* \"#utility.yul\":3369:3387   */\n      dup8\n      add\n        /* \"#utility.yul\":3356:3388   */\n      calldataload\n        /* \"#utility.yul\":3397:3430   */\n      tag_330\n        /* \"#utility.yul\":3356:3388   */\n      dup2\n        /* \"#utility.yul\":3397:3430   */\n      tag_292\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3449:3456   */\n      swap5\n      pop\n        /* \"#utility.yul\":3508:3510   */\n      0x40\n        /* \"#utility.yul\":3493:3511   */\n      dup8\n      add\n        /* \"#utility.yul\":3480:3512   */\n      calldataload\n        /* \"#utility.yul\":3521:3554   */\n      tag_331\n        /* \"#utility.yul\":3480:3512   */\n      dup2\n        /* \"#utility.yul\":3521:3554   */\n      tag_292\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3573:3580   */\n      swap4\n      pop\n        /* \"#utility.yul\":3632:3634   */\n      0x60\n        /* \"#utility.yul\":3617:3635   */\n      dup8\n      add\n        /* \"#utility.yul\":3604:3636   */\n      calldataload\n        /* \"#utility.yul\":3645:3675   */\n      tag_332\n        /* \"#utility.yul\":3604:3636   */\n      dup2\n        /* \"#utility.yul\":3645:3675   */\n      tag_294\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3694:3701   */\n      swap3\n      pop\n        /* \"#utility.yul\":3753:3756   */\n      0x80\n        /* \"#utility.yul\":3738:3757   */\n      dup8\n      add\n        /* \"#utility.yul\":3725:3758   */\n      calldataload\n        /* \"#utility.yul\":3767:3798   */\n      tag_333\n        /* \"#utility.yul\":3725:3758   */\n      dup2\n        /* \"#utility.yul\":3767:3798   */\n      tag_293\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3817:3824   */\n      swap2\n      pop\n        /* \"#utility.yul\":3876:3879   */\n      0xa0\n        /* \"#utility.yul\":3861:3880   */\n      dup8\n      add\n        /* \"#utility.yul\":3848:3881   */\n      calldataload\n        /* \"#utility.yul\":3890:3920   */\n      tag_334\n        /* \"#utility.yul\":3848:3881   */\n      dup2\n        /* \"#utility.yul\":3890:3920   */\n      tag_294\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3939:3946   */\n      dup1\n        /* \"#utility.yul\":3929:3946   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3013:3952   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7632:7883   */\n    tag_114:\n        /* \"#utility.yul\":7702:7708   */\n      0x00\n        /* \"#utility.yul\":7755:7757   */\n      0x20\n        /* \"#utility.yul\":7743:7752   */\n      dup3\n        /* \"#utility.yul\":7734:7741   */\n      dup5\n        /* \"#utility.yul\":7730:7753   */\n      sub\n        /* \"#utility.yul\":7726:7758   */\n      slt\n        /* \"#utility.yul\":7723:7775   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7771:7772   */\n      0x00\n        /* \"#utility.yul\":7768:7769   */\n      dup1\n        /* \"#utility.yul\":7761:7773   */\n      revert\n        /* \"#utility.yul\":7723:7775   */\n    tag_345:\n        /* \"#utility.yul\":7803:7812   */\n      dup2\n        /* \"#utility.yul\":7797:7813   */\n      mload\n        /* \"#utility.yul\":7822:7853   */\n      tag_212\n        /* \"#utility.yul\":7847:7852   */\n      dup2\n        /* \"#utility.yul\":7822:7853   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":7888:8015   */\n    tag_295:\n        /* \"#utility.yul\":7949:7959   */\n      0x4e487b71\n        /* \"#utility.yul\":7944:7947   */\n      0xe0\n        /* \"#utility.yul\":7940:7960   */\n      shl\n        /* \"#utility.yul\":7937:7938   */\n      0x00\n        /* \"#utility.yul\":7930:7961   */\n      mstore\n        /* \"#utility.yul\":7980:7984   */\n      0x11\n        /* \"#utility.yul\":7977:7978   */\n      0x04\n        /* \"#utility.yul\":7970:7985   */\n      mstore\n        /* \"#utility.yul\":8004:8008   */\n      0x24\n        /* \"#utility.yul\":8001:8002   */\n      0x00\n        /* \"#utility.yul\":7994:8009   */\n      revert\n        /* \"#utility.yul\":8020:8145   */\n    tag_119:\n        /* \"#utility.yul\":8085:8094   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8106:8116   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8103:8139   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":8119:8137   */\n      tag_220\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":8150:8277   */\n    tag_250:\n        /* \"#utility.yul\":8211:8221   */\n      0x4e487b71\n        /* \"#utility.yul\":8206:8209   */\n      0xe0\n        /* \"#utility.yul\":8202:8222   */\n      shl\n        /* \"#utility.yul\":8199:8200   */\n      0x00\n        /* \"#utility.yul\":8192:8223   */\n      mstore\n        /* \"#utility.yul\":8242:8246   */\n      0x12\n        /* \"#utility.yul\":8239:8240   */\n      0x04\n        /* \"#utility.yul\":8232:8247   */\n      mstore\n        /* \"#utility.yul\":8266:8270   */\n      0x24\n        /* \"#utility.yul\":8263:8264   */\n      0x00\n        /* \"#utility.yul\":8256:8271   */\n      revert\n        /* \"#utility.yul\":8282:8499   */\n    tag_126:\n        /* \"#utility.yul\":8322:8323   */\n      0x00\n        /* \"#utility.yul\":8348:8349   */\n      dup3\n        /* \"#utility.yul\":8338:8470   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8392:8402   */\n      0x4e487b71\n        /* \"#utility.yul\":8387:8390   */\n      0xe0\n        /* \"#utility.yul\":8383:8403   */\n      shl\n        /* \"#utility.yul\":8380:8381   */\n      0x00\n        /* \"#utility.yul\":8373:8404   */\n      mstore\n        /* \"#utility.yul\":8427:8431   */\n      0x12\n        /* \"#utility.yul\":8424:8425   */\n      0x04\n        /* \"#utility.yul\":8417:8432   */\n      mstore\n        /* \"#utility.yul\":8455:8459   */\n      0x24\n        /* \"#utility.yul\":8452:8453   */\n      0x00\n        /* \"#utility.yul\":8445:8460   */\n      revert\n        /* \"#utility.yul\":8338:8470   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":8484:8493   */\n      div\n      swap1\n        /* \"#utility.yul\":8282:8499   */\n      jump\t// out\n        /* \"#utility.yul\":8865:9115   */\n    tag_296:\n        /* \"#utility.yul\":8950:8951   */\n      0x00\n        /* \"#utility.yul\":8960:9073   */\n    tag_356:\n        /* \"#utility.yul\":8974:8980   */\n      dup4\n        /* \"#utility.yul\":8971:8972   */\n      dup2\n        /* \"#utility.yul\":8968:8981   */\n      lt\n        /* \"#utility.yul\":8960:9073   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9050:9061   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9044:9062   */\n      mload\n        /* \"#utility.yul\":9031:9042   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9024:9063   */\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8989:8999   */\n      add\n        /* \"#utility.yul\":8960:9073   */\n      jump(tag_356)\n    tag_358:\n      pop\n      pop\n        /* \"#utility.yul\":9107:9108   */\n      0x00\n        /* \"#utility.yul\":9089:9105   */\n      swap2\n      add\n        /* \"#utility.yul\":9082:9109   */\n      mstore\n        /* \"#utility.yul\":8865:9115   */\n      jump\t// out\n        /* \"#utility.yul\":9120:9407   */\n    tag_138:\n        /* \"#utility.yul\":9249:9252   */\n      0x00\n        /* \"#utility.yul\":9287:9293   */\n      dup3\n        /* \"#utility.yul\":9281:9294   */\n      mload\n        /* \"#utility.yul\":9303:9369   */\n      tag_360\n        /* \"#utility.yul\":9362:9368   */\n      dup2\n        /* \"#utility.yul\":9357:9360   */\n      dup5\n        /* \"#utility.yul\":9350:9354   */\n      0x20\n        /* \"#utility.yul\":9342:9348   */\n      dup8\n        /* \"#utility.yul\":9338:9355   */\n      add\n        /* \"#utility.yul\":9303:9369   */\n      tag_296\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9385:9401   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9120:9407   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9412:9591   */\n    tag_297:\n        /* \"#utility.yul\":9490:9503   */\n      dup1\n      mload\n        /* \"#utility.yul\":9543:9565   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9532:9566   */\n      dup2\n      and\n        /* \"#utility.yul\":9522:9567   */\n      dup2\n      eq\n        /* \"#utility.yul\":9512:9585   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":9581:9582   */\n      0x00\n        /* \"#utility.yul\":9578:9579   */\n      dup1\n        /* \"#utility.yul\":9571:9583   */\n      revert\n        /* \"#utility.yul\":9512:9585   */\n    tag_362:\n        /* \"#utility.yul\":9412:9591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9596:10167   */\n    tag_145:\n        /* \"#utility.yul\":9699:9705   */\n      0x00\n        /* \"#utility.yul\":9707:9713   */\n      dup1\n        /* \"#utility.yul\":9715:9721   */\n      0x00\n        /* \"#utility.yul\":9723:9729   */\n      dup1\n        /* \"#utility.yul\":9731:9737   */\n      0x00\n        /* \"#utility.yul\":9784:9787   */\n      0xa0\n        /* \"#utility.yul\":9772:9781   */\n      dup7\n        /* \"#utility.yul\":9763:9770   */\n      dup9\n        /* \"#utility.yul\":9759:9782   */\n      sub\n        /* \"#utility.yul\":9755:9788   */\n      slt\n        /* \"#utility.yul\":9752:9805   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":9801:9802   */\n      0x00\n        /* \"#utility.yul\":9798:9799   */\n      dup1\n        /* \"#utility.yul\":9791:9803   */\n      revert\n        /* \"#utility.yul\":9752:9805   */\n    tag_364:\n        /* \"#utility.yul\":9824:9863   */\n      tag_365\n        /* \"#utility.yul\":9853:9862   */\n      dup7\n        /* \"#utility.yul\":9824:9863   */\n      tag_297\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9903:9905   */\n      0x20\n        /* \"#utility.yul\":9888:9906   */\n      dup8\n      add\n        /* \"#utility.yul\":9882:9907   */\n      mload\n        /* \"#utility.yul\":9969:9971   */\n      0x40\n        /* \"#utility.yul\":9954:9972   */\n      dup9\n      add\n        /* \"#utility.yul\":9948:9973   */\n      mload\n        /* \"#utility.yul\":10063:10065   */\n      0x60\n        /* \"#utility.yul\":10048:10066   */\n      dup10\n      add\n        /* \"#utility.yul\":10042:10067   */\n      mload\n        /* \"#utility.yul\":9814:9863   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":9882:9907   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":9948:9973   */\n      swap4\n      pop\n        /* \"#utility.yul\":10042:10067   */\n      swap2\n      pop\n        /* \"#utility.yul\":10112:10161   */\n      tag_366\n        /* \"#utility.yul\":10156:10159   */\n      0x80\n        /* \"#utility.yul\":10141:10160   */\n      dup8\n      add\n        /* \"#utility.yul\":10112:10161   */\n      tag_297\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10102:10161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9596:10167   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10172:10419   */\n    tag_155:\n        /* \"#utility.yul\":10240:10246   */\n      0x00\n        /* \"#utility.yul\":10293:10295   */\n      0x20\n        /* \"#utility.yul\":10281:10290   */\n      dup3\n        /* \"#utility.yul\":10272:10279   */\n      dup5\n        /* \"#utility.yul\":10268:10291   */\n      sub\n        /* \"#utility.yul\":10264:10296   */\n      slt\n        /* \"#utility.yul\":10261:10313   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":10309:10310   */\n      0x00\n        /* \"#utility.yul\":10306:10307   */\n      dup1\n        /* \"#utility.yul\":10299:10311   */\n      revert\n        /* \"#utility.yul\":10261:10313   */\n    tag_368:\n        /* \"#utility.yul\":10341:10350   */\n      dup2\n        /* \"#utility.yul\":10335:10351   */\n      mload\n        /* \"#utility.yul\":10360:10389   */\n      tag_212\n        /* \"#utility.yul\":10383:10388   */\n      dup2\n        /* \"#utility.yul\":10360:10389   */\n      tag_293\n      jump\t// in\n        /* \"#utility.yul\":10424:10654   */\n    tag_160:\n        /* \"#utility.yul\":10494:10500   */\n      0x00\n        /* \"#utility.yul\":10547:10549   */\n      0x20\n        /* \"#utility.yul\":10535:10544   */\n      dup3\n        /* \"#utility.yul\":10526:10533   */\n      dup5\n        /* \"#utility.yul\":10522:10545   */\n      sub\n        /* \"#utility.yul\":10518:10550   */\n      slt\n        /* \"#utility.yul\":10515:10567   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10560:10561   */\n      dup1\n        /* \"#utility.yul\":10553:10565   */\n      revert\n        /* \"#utility.yul\":10515:10567   */\n    tag_371:\n      pop\n        /* \"#utility.yul\":10608:10624   */\n      mload\n      swap2\n        /* \"#utility.yul\":10424:10654   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12402   */\n    tag_189:\n        /* \"#utility.yul\":12155:12157   */\n      0x20\n        /* \"#utility.yul\":12144:12153   */\n      dup2\n        /* \"#utility.yul\":12137:12158   */\n      mstore\n        /* \"#utility.yul\":12118:12122   */\n      0x00\n        /* \"#utility.yul\":12187:12193   */\n      dup3\n        /* \"#utility.yul\":12181:12194   */\n      mload\n        /* \"#utility.yul\":12230:12236   */\n      dup1\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12237   */\n      mstore\n        /* \"#utility.yul\":12246:12325   */\n      tag_377\n        /* \"#utility.yul\":12318:12324   */\n      dup2\n        /* \"#utility.yul\":12313:12315   */\n      0x40\n        /* \"#utility.yul\":12302:12311   */\n      dup6\n        /* \"#utility.yul\":12298:12316   */\n      add\n        /* \"#utility.yul\":12293:12295   */\n      0x20\n        /* \"#utility.yul\":12285:12291   */\n      dup8\n        /* \"#utility.yul\":12281:12296   */\n      add\n        /* \"#utility.yul\":12246:12325   */\n      tag_296\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12386:12388   */\n      0x1f\n        /* \"#utility.yul\":12365:12380   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12361:12390   */\n      and\n        /* \"#utility.yul\":12346:12391   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12393:12395   */\n      0x40\n        /* \"#utility.yul\":12342:12396   */\n      add\n      swap3\n        /* \"#utility.yul\":12006:12402   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12407:12553   */\n    tag_298:\n        /* \"#utility.yul\":12494:12507   */\n      dup1\n      mload\n        /* \"#utility.yul\":12516:12547   */\n      tag_362\n        /* \"#utility.yul\":12494:12507   */\n      dup2\n        /* \"#utility.yul\":12516:12547   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":12558:12723   */\n    tag_299:\n        /* \"#utility.yul\":12636:12649   */\n      dup1\n      mload\n        /* \"#utility.yul\":12689:12697   */\n      0xffffff\n        /* \"#utility.yul\":12678:12698   */\n      dup2\n      and\n        /* \"#utility.yul\":12668:12699   */\n      dup2\n      eq\n        /* \"#utility.yul\":12658:12717   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":12713:12714   */\n      0x00\n        /* \"#utility.yul\":12710:12711   */\n      dup1\n        /* \"#utility.yul\":12703:12715   */\n      revert\n        /* \"#utility.yul\":12728:12892   */\n    tag_300:\n        /* \"#utility.yul\":12805:12818   */\n      dup1\n      mload\n        /* \"#utility.yul\":12858:12859   */\n      0x02\n        /* \"#utility.yul\":12847:12867   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":12837:12868   */\n      dup2\n      eq\n        /* \"#utility.yul\":12827:12886   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":12882:12883   */\n      0x00\n        /* \"#utility.yul\":12879:12880   */\n      dup1\n        /* \"#utility.yul\":12872:12884   */\n      revert\n        /* \"#utility.yul\":12897:13089   */\n    tag_301:\n        /* \"#utility.yul\":12976:12989   */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":13018:13064   */\n      dup2\n      and\n        /* \"#utility.yul\":13008:13065   */\n      dup2\n      eq\n        /* \"#utility.yul\":12998:13083   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":13079:13080   */\n      0x00\n        /* \"#utility.yul\":13076:13077   */\n      dup1\n        /* \"#utility.yul\":13069:13081   */\n      revert\n        /* \"#utility.yul\":13094:14432   */\n    tag_191:\n        /* \"#utility.yul\":13281:13287   */\n      0x00\n        /* \"#utility.yul\":13289:13295   */\n      dup1\n        /* \"#utility.yul\":13297:13303   */\n      0x00\n        /* \"#utility.yul\":13305:13311   */\n      dup1\n        /* \"#utility.yul\":13313:13319   */\n      0x00\n        /* \"#utility.yul\":13321:13327   */\n      dup1\n        /* \"#utility.yul\":13329:13335   */\n      0x00\n        /* \"#utility.yul\":13337:13343   */\n      dup1\n        /* \"#utility.yul\":13345:13351   */\n      0x00\n        /* \"#utility.yul\":13353:13359   */\n      dup1\n        /* \"#utility.yul\":13361:13368   */\n      0x00\n        /* \"#utility.yul\":13370:13377   */\n      dup1\n        /* \"#utility.yul\":13424:13427   */\n      0x0180\n        /* \"#utility.yul\":13412:13421   */\n      dup14\n        /* \"#utility.yul\":13403:13410   */\n      dup16\n        /* \"#utility.yul\":13399:13422   */\n      sub\n        /* \"#utility.yul\":13395:13428   */\n      slt\n        /* \"#utility.yul\":13392:13445   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":13441:13442   */\n      0x00\n        /* \"#utility.yul\":13438:13439   */\n      dup1\n        /* \"#utility.yul\":13431:13443   */\n      revert\n        /* \"#utility.yul\":13392:13445   */\n    tag_387:\n        /* \"#utility.yul\":13473:13482   */\n      dup13\n        /* \"#utility.yul\":13467:13483   */\n      mload\n        /* \"#utility.yul\":13523:13549   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":13516:13521   */\n      dup2\n        /* \"#utility.yul\":13512:13550   */\n      and\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13502:13551   */\n      eq\n        /* \"#utility.yul\":13492:13569   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":13565:13566   */\n      0x00\n        /* \"#utility.yul\":13562:13563   */\n      dup1\n        /* \"#utility.yul\":13555:13567   */\n      revert\n        /* \"#utility.yul\":13492:13569   */\n    tag_388:\n        /* \"#utility.yul\":13588:13593   */\n      swap12\n      pop\n        /* \"#utility.yul\":13612:13669   */\n      tag_389\n        /* \"#utility.yul\":13665:13667   */\n      0x20\n        /* \"#utility.yul\":13650:13668   */\n      dup15\n      add\n        /* \"#utility.yul\":13612:13669   */\n      tag_298\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13602:13669   */\n      swap11\n      pop\n        /* \"#utility.yul\":13688:13745   */\n      tag_390\n        /* \"#utility.yul\":13741:13743   */\n      0x40\n        /* \"#utility.yul\":13730:13739   */\n      dup15\n        /* \"#utility.yul\":13726:13744   */\n      add\n        /* \"#utility.yul\":13688:13745   */\n      tag_298\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13678:13745   */\n      swap10\n      pop\n        /* \"#utility.yul\":13764:13821   */\n      tag_391\n        /* \"#utility.yul\":13817:13819   */\n      0x60\n        /* \"#utility.yul\":13806:13815   */\n      dup15\n        /* \"#utility.yul\":13802:13820   */\n      add\n        /* \"#utility.yul\":13764:13821   */\n      tag_298\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13754:13821   */\n      swap9\n      pop\n        /* \"#utility.yul\":13840:13889   */\n      tag_392\n        /* \"#utility.yul\":13884:13887   */\n      0x80\n        /* \"#utility.yul\":13873:13882   */\n      dup15\n        /* \"#utility.yul\":13869:13888   */\n      add\n        /* \"#utility.yul\":13840:13889   */\n      tag_299\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13830:13889   */\n      swap8\n      pop\n        /* \"#utility.yul\":13908:13956   */\n      tag_393\n        /* \"#utility.yul\":13951:13954   */\n      0xa0\n        /* \"#utility.yul\":13940:13949   */\n      dup15\n        /* \"#utility.yul\":13936:13955   */\n      add\n        /* \"#utility.yul\":13908:13956   */\n      tag_300\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13898:13956   */\n      swap7\n      pop\n        /* \"#utility.yul\":13975:14023   */\n      tag_394\n        /* \"#utility.yul\":14018:14021   */\n      0xc0\n        /* \"#utility.yul\":14007:14016   */\n      dup15\n        /* \"#utility.yul\":14003:14022   */\n      add\n        /* \"#utility.yul\":13975:14023   */\n      tag_300\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13965:14023   */\n      swap6\n      pop\n        /* \"#utility.yul\":14042:14092   */\n      tag_395\n        /* \"#utility.yul\":14087:14090   */\n      0xe0\n        /* \"#utility.yul\":14076:14085   */\n      dup15\n        /* \"#utility.yul\":14072:14091   */\n      add\n        /* \"#utility.yul\":14042:14092   */\n      tag_301\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14158:14161   */\n      0x0100\n        /* \"#utility.yul\":14143:14162   */\n      dup15\n      add\n        /* \"#utility.yul\":14137:14163   */\n      mload\n        /* \"#utility.yul\":14255:14258   */\n      0x0120\n        /* \"#utility.yul\":14240:14259   */\n      dup16\n      add\n        /* \"#utility.yul\":14234:14260   */\n      mload\n        /* \"#utility.yul\":14032:14092   */\n      swap2\n      swap7\n      pop\n        /* \"#utility.yul\":14137:14163   */\n      swap5\n      pop\n        /* \"#utility.yul\":14234:14260   */\n      swap3\n      pop\n        /* \"#utility.yul\":14306:14356   */\n      tag_396\n        /* \"#utility.yul\":14351:14354   */\n      0x0140\n        /* \"#utility.yul\":14336:14355   */\n      dup15\n      add\n        /* \"#utility.yul\":14306:14356   */\n      tag_301\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14295:14356   */\n      swap2\n      pop\n        /* \"#utility.yul\":14376:14426   */\n      tag_397\n        /* \"#utility.yul\":14421:14424   */\n      0x0160\n        /* \"#utility.yul\":14410:14419   */\n      dup15\n        /* \"#utility.yul\":14406:14425   */\n      add\n        /* \"#utility.yul\":14376:14426   */\n      tag_301\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14365:14426   */\n      swap1\n      pop\n        /* \"#utility.yul\":13094:14432   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":14793:14956   */\n    tag_302:\n        /* \"#utility.yul\":14871:14884   */\n      dup1\n      mload\n        /* \"#utility.yul\":14924:14930   */\n      0xffff\n        /* \"#utility.yul\":14913:14931   */\n      dup2\n      and\n        /* \"#utility.yul\":14903:14932   */\n      dup2\n      eq\n        /* \"#utility.yul\":14893:14950   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":14946:14947   */\n      0x00\n        /* \"#utility.yul\":14943:14944   */\n      dup1\n        /* \"#utility.yul\":14936:14948   */\n      revert\n        /* \"#utility.yul\":14961:15804   */\n    tag_204:\n        /* \"#utility.yul\":15075:15081   */\n      0x00\n        /* \"#utility.yul\":15083:15089   */\n      dup1\n        /* \"#utility.yul\":15091:15097   */\n      0x00\n        /* \"#utility.yul\":15099:15105   */\n      dup1\n        /* \"#utility.yul\":15107:15113   */\n      0x00\n        /* \"#utility.yul\":15115:15121   */\n      dup1\n        /* \"#utility.yul\":15123:15129   */\n      0x00\n        /* \"#utility.yul\":15176:15179   */\n      0xe0\n        /* \"#utility.yul\":15164:15173   */\n      dup9\n        /* \"#utility.yul\":15155:15162   */\n      dup11\n        /* \"#utility.yul\":15151:15174   */\n      sub\n        /* \"#utility.yul\":15147:15180   */\n      slt\n        /* \"#utility.yul\":15144:15197   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":15193:15194   */\n      0x00\n        /* \"#utility.yul\":15190:15191   */\n      dup1\n        /* \"#utility.yul\":15183:15195   */\n      revert\n        /* \"#utility.yul\":15144:15197   */\n    tag_402:\n        /* \"#utility.yul\":15225:15234   */\n      dup8\n        /* \"#utility.yul\":15219:15235   */\n      mload\n        /* \"#utility.yul\":15244:15275   */\n      tag_403\n        /* \"#utility.yul\":15269:15274   */\n      dup2\n        /* \"#utility.yul\":15244:15275   */\n      tag_292\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":15294:15299   */\n      swap7\n      pop\n        /* \"#utility.yul\":15318:15365   */\n      tag_404\n        /* \"#utility.yul\":15361:15363   */\n      0x20\n        /* \"#utility.yul\":15346:15364   */\n      dup10\n      add\n        /* \"#utility.yul\":15318:15365   */\n      tag_300\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15308:15365   */\n      swap6\n      pop\n        /* \"#utility.yul\":15384:15432   */\n      tag_405\n        /* \"#utility.yul\":15428:15430   */\n      0x40\n        /* \"#utility.yul\":15417:15426   */\n      dup10\n        /* \"#utility.yul\":15413:15431   */\n      add\n        /* \"#utility.yul\":15384:15432   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15374:15432   */\n      swap5\n      pop\n        /* \"#utility.yul\":15451:15499   */\n      tag_406\n        /* \"#utility.yul\":15495:15497   */\n      0x60\n        /* \"#utility.yul\":15484:15493   */\n      dup10\n        /* \"#utility.yul\":15480:15498   */\n      add\n        /* \"#utility.yul\":15451:15499   */\n      tag_302\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15441:15499   */\n      swap4\n      pop\n        /* \"#utility.yul\":15518:15567   */\n      tag_407\n        /* \"#utility.yul\":15562:15565   */\n      0x80\n        /* \"#utility.yul\":15551:15560   */\n      dup10\n        /* \"#utility.yul\":15547:15566   */\n      add\n        /* \"#utility.yul\":15518:15567   */\n      tag_302\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":15508:15567   */\n      swap3\n      pop\n        /* \"#utility.yul\":15612:15615   */\n      0xa0\n        /* \"#utility.yul\":15601:15610   */\n      dup9\n        /* \"#utility.yul\":15597:15616   */\n      add\n        /* \"#utility.yul\":15591:15617   */\n      mload\n        /* \"#utility.yul\":15626:15657   */\n      tag_408\n        /* \"#utility.yul\":15649:15656   */\n      dup2\n        /* \"#utility.yul\":15626:15657   */\n      tag_293\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":15728:15731   */\n      0xc0\n        /* \"#utility.yul\":15713:15732   */\n      dup10\n      add\n        /* \"#utility.yul\":15707:15733   */\n      mload\n        /* \"#utility.yul\":15676:15683   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":15742:15772   */\n      tag_409\n        /* \"#utility.yul\":15707:15733   */\n      dup2\n        /* \"#utility.yul\":15742:15772   */\n      tag_294\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":15791:15798   */\n      dup1\n        /* \"#utility.yul\":15781:15798   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14961:15804   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15809:15936   */\n    tag_303:\n        /* \"#utility.yul\":15870:15880   */\n      0x4e487b71\n        /* \"#utility.yul\":15865:15868   */\n      0xe0\n        /* \"#utility.yul\":15861:15881   */\n      shl\n        /* \"#utility.yul\":15858:15859   */\n      0x00\n        /* \"#utility.yul\":15851:15882   */\n      mstore\n        /* \"#utility.yul\":15901:15905   */\n      0x41\n        /* \"#utility.yul\":15898:15899   */\n      0x04\n        /* \"#utility.yul\":15891:15906   */\n      mstore\n        /* \"#utility.yul\":15925:15929   */\n      0x24\n        /* \"#utility.yul\":15922:15923   */\n      0x00\n        /* \"#utility.yul\":15915:15930   */\n      revert\n        /* \"#utility.yul\":15941:16857   */\n    tag_221:\n        /* \"#utility.yul\":16021:16027   */\n      0x00\n        /* \"#utility.yul\":16074:16076   */\n      0x20\n        /* \"#utility.yul\":16062:16071   */\n      dup3\n        /* \"#utility.yul\":16053:16060   */\n      dup5\n        /* \"#utility.yul\":16049:16072   */\n      sub\n        /* \"#utility.yul\":16045:16077   */\n      slt\n        /* \"#utility.yul\":16042:16094   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":16090:16091   */\n      0x00\n        /* \"#utility.yul\":16087:16088   */\n      dup1\n        /* \"#utility.yul\":16080:16092   */\n      revert\n        /* \"#utility.yul\":16042:16094   */\n    tag_412:\n        /* \"#utility.yul\":16123:16132   */\n      dup2\n        /* \"#utility.yul\":16117:16133   */\n      mload\n        /* \"#utility.yul\":16156:16174   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16148:16154   */\n      dup2\n        /* \"#utility.yul\":16145:16175   */\n      gt\n        /* \"#utility.yul\":16142:16192   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":16188:16189   */\n      0x00\n        /* \"#utility.yul\":16185:16186   */\n      dup1\n        /* \"#utility.yul\":16178:16190   */\n      revert\n        /* \"#utility.yul\":16142:16192   */\n    tag_413:\n        /* \"#utility.yul\":16211:16233   */\n      dup3\n      add\n        /* \"#utility.yul\":16264:16268   */\n      0x1f\n        /* \"#utility.yul\":16256:16269   */\n      dup2\n      add\n        /* \"#utility.yul\":16252:16279   */\n      dup5\n      sgt\n        /* \"#utility.yul\":16242:16297   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":16293:16294   */\n      0x00\n        /* \"#utility.yul\":16290:16291   */\n      dup1\n        /* \"#utility.yul\":16283:16295   */\n      revert\n        /* \"#utility.yul\":16242:16297   */\n    tag_414:\n        /* \"#utility.yul\":16326:16328   */\n      dup1\n        /* \"#utility.yul\":16320:16329   */\n      mload\n        /* \"#utility.yul\":16352:16370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16344:16350   */\n      dup2\n        /* \"#utility.yul\":16341:16371   */\n      gt\n        /* \"#utility.yul\":16338:16394   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":16374:16392   */\n      tag_416\n      tag_303\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16423:16425   */\n      0x40\n        /* \"#utility.yul\":16417:16426   */\n      mload\n        /* \"#utility.yul\":16515:16517   */\n      0x1f\n        /* \"#utility.yul\":16477:16494   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16473:16504   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":16506:16508   */\n      0x3f\n        /* \"#utility.yul\":16469:16509   */\n      add\n        /* \"#utility.yul\":16465:16519   */\n      and\n        /* \"#utility.yul\":16453:16520   */\n      dup2\n      add\n        /* \"#utility.yul\":16550:16568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16535:16569   */\n      dup2\n      gt\n        /* \"#utility.yul\":16571:16593   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":16532:16594   */\n      or\n        /* \"#utility.yul\":16529:16617   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":16597:16615   */\n      tag_418\n      tag_303\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16633:16635   */\n      0x40\n        /* \"#utility.yul\":16626:16648   */\n      mstore\n        /* \"#utility.yul\":16657:16679   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":16698:16713   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":16715:16717   */\n      0x20\n        /* \"#utility.yul\":16694:16718   */\n      add\n        /* \"#utility.yul\":16691:16728   */\n      dup7\n      lt\n        /* \"#utility.yul\":16688:16745   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":16741:16742   */\n      0x00\n        /* \"#utility.yul\":16738:16739   */\n      dup1\n        /* \"#utility.yul\":16731:16743   */\n      revert\n        /* \"#utility.yul\":16688:16745   */\n    tag_419:\n        /* \"#utility.yul\":16754:16826   */\n      tag_420\n        /* \"#utility.yul\":16819:16825   */\n      dup3\n        /* \"#utility.yul\":16814:16816   */\n      0x20\n        /* \"#utility.yul\":16806:16812   */\n      dup4\n        /* \"#utility.yul\":16802:16817   */\n      add\n        /* \"#utility.yul\":16797:16799   */\n      0x20\n        /* \"#utility.yul\":16793:16795   */\n      dup7\n        /* \"#utility.yul\":16789:16800   */\n      add\n        /* \"#utility.yul\":16754:16826   */\n      tag_296\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16845:16851   */\n      swap6\n        /* \"#utility.yul\":15941:16857   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17290:17665   */\n    tag_304:\n        /* \"#utility.yul\":17378:17379   */\n      0x01\n        /* \"#utility.yul\":17396:17401   */\n      dup2\n        /* \"#utility.yul\":17410:17659   */\n    tag_423:\n        /* \"#utility.yul\":17431:17432   */\n      0x01\n        /* \"#utility.yul\":17421:17429   */\n      dup5\n        /* \"#utility.yul\":17418:17433   */\n      gt\n        /* \"#utility.yul\":17410:17659   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":17481:17485   */\n      dup1\n        /* \"#utility.yul\":17476:17479   */\n      dup6\n        /* \"#utility.yul\":17472:17486   */\n      div\n        /* \"#utility.yul\":17466:17470   */\n      dup2\n        /* \"#utility.yul\":17463:17487   */\n      gt\n        /* \"#utility.yul\":17460:17510   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":17490:17508   */\n      tag_427\n      tag_295\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":17540:17541   */\n      0x01\n        /* \"#utility.yul\":17530:17538   */\n      dup5\n        /* \"#utility.yul\":17526:17542   */\n      and\n        /* \"#utility.yul\":17523:17572   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":17554:17570   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":17523:17572   */\n    tag_428:\n        /* \"#utility.yul\":17637:17638   */\n      0x01\n        /* \"#utility.yul\":17633:17649   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":17593:17608   */\n      dup1\n      mul\n        /* \"#utility.yul\":17410:17659   */\n      jump(tag_423)\n    tag_425:\n        /* \"#utility.yul\":17290:17665   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17670:18572   */\n    tag_305:\n        /* \"#utility.yul\":17719:17724   */\n      0x00\n        /* \"#utility.yul\":17749:17757   */\n      dup3\n        /* \"#utility.yul\":17739:17819   */\n      tag_430\n      jumpi\n      pop\n        /* \"#utility.yul\":17790:17791   */\n      0x01\n        /* \"#utility.yul\":17804:17809   */\n      jump(tag_220)\n        /* \"#utility.yul\":17739:17819   */\n    tag_430:\n        /* \"#utility.yul\":17838:17842   */\n      dup2\n        /* \"#utility.yul\":17828:17904   */\n      tag_431\n      jumpi\n      pop\n        /* \"#utility.yul\":17875:17876   */\n      0x00\n        /* \"#utility.yul\":17889:17894   */\n      jump(tag_220)\n        /* \"#utility.yul\":17828:17904   */\n    tag_431:\n        /* \"#utility.yul\":17920:17924   */\n      dup2\n        /* \"#utility.yul\":17938:17939   */\n      0x01\n        /* \"#utility.yul\":17933:17992   */\n      dup2\n      eq\n      tag_433\n      jumpi\n        /* \"#utility.yul\":18006:18007   */\n      0x02\n        /* \"#utility.yul\":18001:18175   */\n      dup2\n      eq\n      tag_434\n      jumpi\n        /* \"#utility.yul\":17913:18175   */\n      jump(tag_432)\n        /* \"#utility.yul\":17933:17992   */\n    tag_433:\n        /* \"#utility.yul\":17963:17964   */\n      0x01\n        /* \"#utility.yul\":17954:17964   */\n      swap2\n      pop\n        /* \"#utility.yul\":17977:17982   */\n      pop\n      jump(tag_220)\n        /* \"#utility.yul\":18001:18175   */\n    tag_434:\n        /* \"#utility.yul\":18038:18041   */\n      0xff\n        /* \"#utility.yul\":18028:18036   */\n      dup5\n        /* \"#utility.yul\":18025:18042   */\n      gt\n        /* \"#utility.yul\":18022:18065   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":18045:18063   */\n      tag_436\n      tag_295\n      jump\t// in\n    tag_436:\n      pop\n      pop\n        /* \"#utility.yul\":18101:18102   */\n      0x01\n        /* \"#utility.yul\":18087:18103   */\n      dup3\n      shl\n        /* \"#utility.yul\":18160:18165   */\n      jump(tag_220)\n        /* \"#utility.yul\":17913:18175   */\n    tag_432:\n      pop\n        /* \"#utility.yul\":18259:18261   */\n      0x20\n        /* \"#utility.yul\":18249:18257   */\n      dup4\n        /* \"#utility.yul\":18246:18262   */\n      lt\n        /* \"#utility.yul\":18240:18243   */\n      0x0133\n        /* \"#utility.yul\":18234:18238   */\n      dup4\n        /* \"#utility.yul\":18231:18244   */\n      lt\n        /* \"#utility.yul\":18227:18263   */\n      and\n        /* \"#utility.yul\":18221:18223   */\n      0x4e\n        /* \"#utility.yul\":18211:18219   */\n      dup5\n        /* \"#utility.yul\":18208:18224   */\n      lt\n        /* \"#utility.yul\":18203:18205   */\n      0x0b\n        /* \"#utility.yul\":18197:18201   */\n      dup5\n        /* \"#utility.yul\":18194:18206   */\n      lt\n        /* \"#utility.yul\":18190:18225   */\n      and\n        /* \"#utility.yul\":18187:18264   */\n      or\n        /* \"#utility.yul\":18184:18387   */\n      iszero\n      tag_437\n      jumpi\n      pop\n        /* \"#utility.yul\":18296:18315   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":18372:18377   */\n      jump(tag_220)\n        /* \"#utility.yul\":18184:18387   */\n    tag_437:\n        /* \"#utility.yul\":18419:18461   */\n      tag_438\n      not(0x00)\n        /* \"#utility.yul\":18444:18452   */\n      dup5\n        /* \"#utility.yul\":18438:18442   */\n      dup5\n        /* \"#utility.yul\":18419:18461   */\n      tag_304\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":18497:18503   */\n      dup1\n        /* \"#utility.yul\":18493:18494   */\n      0x00\n        /* \"#utility.yul\":18489:18495   */\n      not\n        /* \"#utility.yul\":18485:18504   */\n      div\n        /* \"#utility.yul\":18476:18483   */\n      dup3\n        /* \"#utility.yul\":18473:18505   */\n      gt\n        /* \"#utility.yul\":18470:18528   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":18508:18526   */\n      tag_440\n      tag_295\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":18546:18566   */\n      mul\n      swap4\n        /* \"#utility.yul\":17670:18572   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18577:18717   */\n    tag_275:\n        /* \"#utility.yul\":18635:18640   */\n      0x00\n        /* \"#utility.yul\":18664:18711   */\n      tag_212\n        /* \"#utility.yul\":18705:18709   */\n      0xff\n        /* \"#utility.yul\":18695:18703   */\n      dup5\n        /* \"#utility.yul\":18691:18710   */\n      and\n        /* \"#utility.yul\":18685:18689   */\n      dup4\n        /* \"#utility.yul\":18664:18711   */\n      tag_305\n      jump\t// in\n        /* \"#utility.yul\":18722:18890   */\n    tag_277:\n        /* \"#utility.yul\":18795:18804   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":18826:18835   */\n      dup2\n      iszero\n        /* \"#utility.yul\":18843:18858   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":18837:18859   */\n      dup5\n      eq\n        /* \"#utility.yul\":18823:18860   */\n      or\n        /* \"#utility.yul\":18813:18884   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":18864:18882   */\n      tag_220\n      tag_295\n      jump\t// in\n    stop\n    data_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f 4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367\n\n    auxdata: 0xa264697066735822122004e5aad83a59fb9aef83d52c0ebeefa5cd16c8efc1f0a7bea6e313d4fa67886564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1265": {
									"entryPoint": null,
									"id": 1265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_346": {
									"entryPoint": null,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1696": {
									"entryPoint": null,
									"id": 1696,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1353": {
									"entryPoint": 187,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:663:9",
										"nodeType": "YulBlock",
										"src": "0:663:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:9",
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:9",
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nativeSrc": "143:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nativeSrc": "143:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nativeSrc": "112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nativeSrc": "108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nativeSrc": "105:52:9",
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nativeSrc": "166:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nativeSrc": "179:16:9",
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:9",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:9",
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nativeSrc": "260:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nativeSrc": "260:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:9",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:9",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nativeSrc": "239:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:9",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nativeSrc": "235:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nativeSrc": "224:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nativeSrc": "214:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nativeSrc": "207:50:9",
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nativeSrc": "204:70:9",
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nativeSrc": "283:15:9",
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:9",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:9",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:9",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:9",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											},
											{
												"body": {
													"nativeSrc": "483:178:9",
													"nodeType": "YulBlock",
													"src": "483:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:9",
																		"nodeType": "YulLiteral",
																		"src": "511:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "493:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:9"
																},
																"nativeSrc": "493:21:9",
																"nodeType": "YulFunctionCall",
																"src": "493:21:9"
															},
															"nativeSrc": "493:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "493:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "534:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "545:2:9",
																				"nodeType": "YulLiteral",
																				"src": "545:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "530:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:9"
																		},
																		"nativeSrc": "530:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "550:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:9"
																},
																"nativeSrc": "523:30:9",
																"nodeType": "YulFunctionCall",
																"src": "523:30:9"
															},
															"nativeSrc": "523:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "523:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "573:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "584:2:9",
																				"nodeType": "YulLiteral",
																				"src": "584:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:9"
																		},
																		"nativeSrc": "569:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "589:30:9",
																		"nodeType": "YulLiteral",
																		"src": "589:30:9",
																		"type": "",
																		"value": "OracleManager: invalid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:9"
																},
																"nativeSrc": "562:58:9",
																"nodeType": "YulFunctionCall",
																"src": "562:58:9"
															},
															"nativeSrc": "562:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "562:58:9"
														},
														{
															"nativeSrc": "629:26:9",
															"nodeType": "YulAssignment",
															"src": "629:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "641:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "641:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "652:2:9",
																		"nodeType": "YulLiteral",
																		"src": "652:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "637:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "637:3:9"
																},
																"nativeSrc": "637:18:9",
																"nodeType": "YulFunctionCall",
																"src": "637:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "629:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "629:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "309:352:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "460:9:9",
														"nodeType": "YulTypedName",
														"src": "460:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "474:4:9",
														"nodeType": "YulTypedName",
														"src": "474:4:9",
														"type": ""
													}
												],
												"src": "309:352:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"OracleManager: invalid owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161220d38038061220d83398101604081905261002f9161010b565b610038336100bb565b6001600160a01b0381166100ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f7261636c654d616e616765723a20696e76616c6964206f776e657200000000604482015260640160405180910390fd5b6100b5816100bb565b5061013b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011d57600080fd5b81516001600160a01b038116811461013457600080fd5b9392505050565b6120c38061014a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101e85780639b05fc7514610203578063f2ac1ec514610216578063f2fde38b1461022957600080fd5b8063067a4b061461008d57806341976e0914610124578063715018a61461014e5780637f4a310214610158575b600080fd5b6100e261009b366004611a02565b600160208190526000918252604090912080549101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b0396871681529590941660208601529115159284019290925260ff90911660608301521515608082015260a0015b60405180910390f35b610137610132366004611a02565b61023c565b6040805192835260ff90911660208301520161011b565b610156610419565b005b6101ad610166366004611a02565b600260205260009081526040902080546001909101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b03968716815295909416602086015260ff928316938501939093521660608301521515608082015260a00161011b565b6000546040516001600160a01b03909116815260200161011b565b610156610211366004611a2e565b61042d565b610156610224366004611aad565b6105c2565b610156610237366004611a02565b6107d2565b6001600160a01b038082166000908152600160208181526040808420815160a0810183528154871680825291909401549586169284019290925260ff600160a01b86048116151591840191909152600160a81b850481166060840152600160b01b9094049093161515608082015290918291901515806102bd575080608001515b6103225760405162461bcd60e51b815260206004820152602b60248201527f4f7261636c654d616e616765723a206e6f2061676772656761746f72206f722060448201526a7661756c74206c6f67696360a81b60648201526084015b60405180910390fd5b806080015161033e576103348161084b565b9093509150610413565b6001600160a01b03808516600090815260026020908152604091829020825160a0810184528154851681526001909101549384169181019190915260ff600160a01b8404811692820192909252600160a81b830482166060820152600160b01b909204161515608082018190526104025760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c74206665656473206e6f742073604482015261195d60f21b6064820152608401610319565b61040c8582610986565b9094509250505b50915091565b610421610afe565b61042b6000610b58565b565b610435610afe565b6001600160a01b0385166104955760405162461bcd60e51b815260206004820152602160248201527f4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b656044820152603760f91b6064820152608401610319565b6040805160a0810182526001600160a01b038087168252858116602080840191825260ff808816858701908152878216606087019081526001608088018181528e881660008181526002909752958a9020985189549089166001600160a01b03199091161789559551970180549251915195511515600160b01b0260ff60b01b19968516600160a81b029690961661ffff60a81b1992909416600160a01b026001600160a81b0319909316979096169690961717949094169390931717905590517f2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba906105b39087908790879087906001600160a01b03948516815292909316602083015260ff908116604083015291909116606082015260800190565b60405180910390a25050505050565b6105ca610afe565b6001600160a01b0386166106205760405162461bcd60e51b815260206004820152601c60248201527f4f7261636c654d616e616765723a20696e76616c696420746f6b656e000000006044820152606401610319565b80610694576001600160a01b0385166106945760405162461bcd60e51b815260206004820152603060248201527f4f7261636c654d616e616765723a2061676772656761746f722072657175697260448201526f195908199bdc881b9bdb8b5d985d5b1d60821b6064820152608401610319565b6040805160a0810182526001600160a01b038088168252868116602080840191825287151584860190815260ff80891660608701908152881515608088019081528e871660008181526001968790528a9020985189549089166001600160a01b031990911617895595519790940180549351915194511515600160b01b0260ff60b01b1995909316600160a81b029490941661ffff60a81b19911515600160a01b026001600160a81b0319909416979096169690961791909117949094169290921792909217905590517f5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8906107c290889088908890889088906001600160a01b039586168152939094166020840152901515604083015260ff166060820152901515608082015260a00190565b60405180910390a2505050505050565b6107da610afe565b6001600160a01b03811661083f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610319565b61084881610b58565b50565b600080600080600061086586600001518760600151610ba8565b9250925092508215801561087a575085604001515b8015610892575060208601516001600160a01b031615155b1561091f5760008060006108ae89602001518a60600151610ba8565b925092509250826109115760405162461bcd60e51b815260206004820152602760248201527f4f7261636c654d616e616765723a2066616c6c6261636b2061676772656761746044820152661bdc8819985a5b60ca1b6064820152608401610319565b909890975095505050505050565b8261097b5760405162461bcd60e51b815260206004820152602660248201527f4f7261636c654d616e616765723a207072696d6172792061676772656761746f6044820152651c8819985a5b60d21b6064820152608401610319565b909590945092505050565b600080600080600061099787610d9b565b92509250925060006109a98284610fe4565b90506000610a17896001600160a01b0316633a924d5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190611b2f565b6111d8565b509050600080610a3583856040015186606001518760800151611308565b9150915060008460a001516001600160801b031683610a549190611b62565b905060008560c001516001600160801b031683610a719190611b62565b9050600060405180608001604052808e600001516001600160a01b031681526020018e602001516001600160a01b031681526020018e6040015160ff1681526020018e6060015160ff1681525090506000610acd84848461135e565b90508a15610adb578a610ade565b60015b610ae89082611b8b565b9f60089f509d5050505050505050505050505050565b6000546001600160a01b0316331461042b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610319565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080806001600160a01b038516610bc857506000915081905080610d94565b60408051600481526024810182526020810180516001600160e01b0316633fabe5a360e21b179052905160009081906001600160a01b03891690610c0d908590611bd1565b600060405180830381855afa9150503d8060008114610c48576040519150601f19603f3d011682016040523d82523d6000602084013e610c4d565b606091505b5091509150811580610c60575060a08151105b15610c78576000806000955095509550505050610d94565b600081806020019051810190610c8e9190611c0c565b50505091505060008113610cb057600080600096509650965050505050610d94565b8760ff8116600003610d875760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b038e1691610cff91611bd1565b600060405180830381855afa9150503d8060008114610d3a576040519150601f19603f3d011682016040523d82523d6000602084013e610d3f565b606091505b5091509150811580610d52575060208151105b15610d6e57600080600099509950995050505050505050610d94565b80806020019051810190610d829190611c5e565b925050505b6001975090955093505050505b9250925092565b600080600080849050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e069190611c7b565b935060008411610e635760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c7420746f74616c537570706c7960448201526103d360f41b6064820152608401610319565b806001600160a01b031663f657a7fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec59190611c7b565b925082600003610f175760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c654d616e616765723a206e6f204e465420696e207661756c7400006044820152606401610319565b806001600160a01b031663791b98bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190611b2f565b91506001600160a01b038216610fdc5760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d60448201526133b960f11b6064820152608401610319565b509193909250565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152600080846001600160a01b03166399fbab8860e01b8560405160240161104591815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516110839190611bd1565b600060405180830381855afa9150503d80600081146110be576040519150601f19603f3d011682016040523d82523d6000602084013e6110c3565b606091505b5091509150816110d2826113a3565b906110f05760405162461bcd60e51b81526004016103199190611c94565b50808060200190518101906111059190611d0e565b909192939495969798999a509091929394959697989950909192939495965090919250909150896000018a6020018b6040018c6060018d6080018e60a0018f60c001876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b03168152508760020b60020b8152508760020b60020b815250876001600160a01b03166001600160a01b0316815250876001600160a01b03166001600160a01b031681525050505050505050505092915050565b6000806001600160a01b0383166112315760405162461bcd60e51b815260206004820152601b60248201527f4f7261636c654d616e616765723a20696e76616c696420706f6f6c00000000006044820152606401610319565b60408051600481526024810182526020810180516001600160e01b0316633850c7bd60e01b179052905160009182916001600160a01b0387169161127491611bd1565b600060405180830381855afa9150503d80600081146112af576040519150601f19603f3d011682016040523d82523d6000602084013e6112b4565b606091505b5091509150816112c3826113a3565b906112e15760405162461bcd60e51b81526004016103199190611c94565b50808060200190518101906112f69190611e02565b50949a93995092975050505050505050565b600080826001600160801b031660000361132757506000905080611355565b6000611332866113ee565b9050600061133f866113ee565b905061134d88838388611711565b909450925050505b94509492505050565b60008061137485846000015185604001516117ac565b9050600061138b85856020015186606001516117ac565b90506113978183611b62565b925050505b9392505050565b60606044825110156113ce5760405180606001604052806024815260200161206a6024913992915050565b600482019150818060200190518101906113e89190611ea7565b92915050565b60008060008360020b12611405578260020b61140d565b8260020b6000035b9050620d89e8811115611433576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361144a57600160801b61145c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611490576ffff97272373d413259a46990580e213a0260801c5b60048216156114af576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156114ce576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156114ed576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561150c576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561152b576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561154a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561156a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561158a576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156115aa576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156115ca576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156115ea576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561160a576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561162a576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561164a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561166b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561168b576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156116aa576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156116c7576b048a170391f7dc42444e8fa20260801c5b60008460020b13156116e85780600019816116e4576116e4611b75565b0490505b6401000000008106156116fc5760016116ff565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115611732579293925b846001600160a01b0316866001600160a01b03161161175d57611756858585611881565b9150611355565b836001600160a01b0316866001600160a01b0316101561179657611782868585611881565b915061178f8587856118f0565b9050611355565b6117a18585856118f0565b905094509492505050565b60008315806117c257506001600160a01b038316155b156117cf5750600061139c565b60008060006117de8686610ba8565b925092509250826118575760405162461bcd60e51b815260206004820152603b60248201527f4f7261636c654d616e616765723a2061676772656761746f72206661696c206960448201527f6e205f636f6e76657274546f41676772656761746f7256616c756500000000006064820152608401610319565b61186281600a612043565b61186c8389612052565b6118769190611b8b565b979650505050505050565b6000826001600160a01b0316846001600160a01b031611156118a1579192915b836001600160a01b03166118da606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b031661193b565b816118e7576118e7611b75565b04949350505050565b6000826001600160a01b0316846001600160a01b03161115611910579192915b611933826001600160801b03168585036001600160a01b0316600160601b61193b565b949350505050565b6000808060001985870985870292508281108382030391505080600003611974576000841161196957600080fd5b50829004905061139c565b80841161198057600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6001600160a01b038116811461084857600080fd5b600060208284031215611a1457600080fd5b813561139c816119ed565b60ff8116811461084857600080fd5b600080600080600060a08688031215611a4657600080fd5b8535611a51816119ed565b94506020860135611a61816119ed565b93506040860135611a71816119ed565b92506060860135611a8181611a1f565b91506080860135611a9181611a1f565b809150509295509295909350565b801515811461084857600080fd5b60008060008060008060c08789031215611ac657600080fd5b8635611ad1816119ed565b95506020870135611ae1816119ed565b94506040870135611af1816119ed565b93506060870135611b0181611a9f565b92506080870135611b1181611a1f565b915060a0870135611b2181611a9f565b809150509295509295509295565b600060208284031215611b4157600080fd5b815161139c816119ed565b634e487b7160e01b600052601160045260246000fd5b808201808211156113e8576113e8611b4c565b634e487b7160e01b600052601260045260246000fd5b600082611ba857634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611bc8578181015183820152602001611bb0565b50506000910152565b60008251611be3818460208701611bad565b9190910192915050565b805169ffffffffffffffffffff81168114611c0757600080fd5b919050565b600080600080600060a08688031215611c2457600080fd5b611c2d86611bed565b60208701516040880151606089015192975090955093509150611c5260808701611bed565b90509295509295909350565b600060208284031215611c7057600080fd5b815161139c81611a1f565b600060208284031215611c8d57600080fd5b5051919050565b6020815260008251806020840152611cb3816040850160208701611bad565b601f01601f19169190910160400192915050565b8051611c07816119ed565b805162ffffff81168114611c0757600080fd5b8051600281900b8114611c0757600080fd5b80516001600160801b0381168114611c0757600080fd5b6000806000806000806000806000806000806101808d8f031215611d3157600080fd5b8c516bffffffffffffffffffffffff81168114611d4d57600080fd5b9b50611d5b60208e01611cc7565b9a50611d6960408e01611cc7565b9950611d7760608e01611cc7565b9850611d8560808e01611cd2565b9750611d9360a08e01611ce5565b9650611da160c08e01611ce5565b9550611daf60e08e01611cf7565b6101008e01516101208f015191965094509250611dcf6101408e01611cf7565b9150611dde6101608e01611cf7565b90509295989b509295989b509295989b565b805161ffff81168114611c0757600080fd5b600080600080600080600060e0888a031215611e1d57600080fd5b8751611e28816119ed565b9650611e3660208901611ce5565b9550611e4460408901611df0565b9450611e5260608901611df0565b9350611e6060808901611df0565b925060a0880151611e7081611a1f565b60c0890151909250611e8181611a9f565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611eb957600080fd5b815167ffffffffffffffff811115611ed057600080fd5b8201601f81018413611ee157600080fd5b805167ffffffffffffffff811115611efb57611efb611e91565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611f2a57611f2a611e91565b604052818152828201602001861015611f4257600080fd5b611f53826020830160208601611bad565b95945050505050565b6001815b6001841115611f9757808504811115611f7b57611f7b611b4c565b6001841615611f8957908102905b60019390931c928002611f60565b935093915050565b600082611fae575060016113e8565b81611fbb575060006113e8565b8160018114611fd15760028114611fdb57611ff7565b60019150506113e8565b60ff841115611fec57611fec611b4c565b50506001821b6113e8565b5060208310610133831016604e8410600b841016171561201a575081810a6113e8565b6120276000198484611f5c565b806000190482111561203b5761203b611b4c565b029392505050565b600061139c60ff841683611f9f565b80820281158282048414176113e8576113e8611b4c56fe4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367a264697066735822122004e5aad83a59fb9aef83d52c0ebeefa5cd16c8efc1f0a7bea6e313d4fa67886564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x220D CODESIZE SUB DUP1 PUSH2 0x220D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x10B JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0xBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5 DUP2 PUSH2 0xBB JUMP JUMPDEST POP PUSH2 0x13B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20C3 DUP1 PUSH2 0x14A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x9B05FC75 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2AC1EC5 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67A4B06 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x7F4A3102 EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11B JUMP JUMPDEST PUSH2 0x156 PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11B JUMP JUMPDEST PUSH2 0x156 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP5 ADD SLOAD SWAP6 DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV DUP2 AND ISZERO ISZERO SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP6 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP5 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x2BD JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F2061676772656761746F72206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x7661756C74206C6F676963 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x33E JUMPI PUSH2 0x334 DUP2 PUSH2 0x84B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP4 DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C74206665656473206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x40C DUP6 DUP3 PUSH2 0x986 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x421 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x42B PUSH1 0x0 PUSH2 0xB58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x435 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF DUP1 DUP9 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP8 MSTORE SWAP6 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 ADD DUP1 SLOAD SWAP3 MLOAD SWAP2 MLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP7 DUP6 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP3 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA SWAP1 PUSH2 0x5B3 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH2 0x694 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F7220726571756972 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x195908199BDC881B9BDB8B5D985D5B1D PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP8 ISZERO ISZERO DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF DUP1 DUP10 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP15 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP7 DUP8 SWAP1 MSTORE DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP4 MLOAD SWAP2 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP6 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP5 SWAP1 SWAP5 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR SWAP2 SWAP1 SWAP2 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8 SWAP1 PUSH2 0x7C2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7DA PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0xB58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x865 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD JUMPDEST DUP1 ISZERO PUSH2 0x892 JUMPI POP PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8AE DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1BDC8819985A5B PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207072696D6172792061676772656761746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8819985A5B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x997 DUP8 PUSH2 0xD9B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x9A9 DUP3 DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA17 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A924D5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xA35 DUP4 DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xACD DUP5 DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP1 POP DUP11 ISZERO PUSH2 0xADB JUMPI DUP11 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE8 SWAP1 DUP3 PUSH2 0x1B8B JUMP JUMPDEST SWAP16 PUSH1 0x8 SWAP16 POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBC8 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH2 0xC0D SWAP1 DUP6 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xC60 JUMPI POP PUSH1 0xA0 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST DUP8 PUSH1 0xFF DUP2 AND PUSH1 0x0 SUB PUSH2 0xD87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH2 0xCFF SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xD52 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP5 GT PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3D3 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF657A7FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x0 SUB PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x791B98BC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x33B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 PUSH1 0xE0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1045 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1083 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x10D2 DUP3 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP DUP10 PUSH1 0x0 ADD DUP11 PUSH1 0x20 ADD DUP12 PUSH1 0x40 ADD DUP13 PUSH1 0x60 ADD DUP14 PUSH1 0x80 ADD DUP15 PUSH1 0xA0 ADD DUP16 PUSH1 0xC0 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH2 0x1274 SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x12C3 DUP3 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST POP SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP3 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SUB PUSH2 0x1327 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1332 DUP7 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x133F DUP7 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x134D DUP9 DUP4 DUP4 DUP9 PUSH2 0x1711 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1374 DUP6 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x138B DUP6 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH2 0x1397 DUP2 DUP4 PUSH2 0x1B62 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206A PUSH1 0x24 SWAP2 CODECOPY SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13E8 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1405 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x140D JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15E4079D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0x144A JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x145C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x1490 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x14AF JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x14CE JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x14ED JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x150C JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x152B JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x154A JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x156A JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x158A JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x15AA JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x15CA JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x15EA JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x160A JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x162A JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x164A JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x166B JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x168B JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x16AA JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x16C7 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x16E8 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x16E4 JUMPI PUSH2 0x16E4 PUSH2 0x1B75 JUMP JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x16FC JUMPI PUSH1 0x1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1732 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x175D JUMPI PUSH2 0x1756 DUP6 DUP6 DUP6 PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP PUSH2 0x1355 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1782 DUP7 DUP6 DUP6 PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP PUSH2 0x178F DUP6 DUP8 DUP6 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x17A1 DUP6 DUP6 DUP6 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x17C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x17CF JUMPI POP PUSH1 0x0 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x17DE DUP7 DUP7 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F72206661696C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E205F636F6E76657274546F41676772656761746F7256616C75650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x1862 DUP2 PUSH1 0xA PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x186C DUP4 DUP10 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x1876 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x18A1 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18DA PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193B JUMP JUMPDEST DUP2 PUSH2 0x18E7 JUMPI PUSH2 0x18E7 PUSH2 0x1B75 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1910 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x1933 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x193B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x1974 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x139C JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x139C DUP2 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1A51 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1A61 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1A71 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1A81 DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1A91 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1AD1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1AE1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1AF1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1B01 DUP2 PUSH2 0x1A9F JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1B11 DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1B21 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139C DUP2 PUSH2 0x19ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x1B4C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BC8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BB0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2D DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1C52 PUSH1 0x80 DUP8 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139C DUP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CB3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1C07 DUP2 PUSH2 0x19ED JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x1D5B PUSH1 0x20 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D69 PUSH1 0x40 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP10 POP PUSH2 0x1D77 PUSH1 0x60 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP9 POP PUSH2 0x1D85 PUSH1 0x80 DUP15 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D93 PUSH1 0xA0 DUP15 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP7 POP PUSH2 0x1DA1 PUSH1 0xC0 DUP15 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP6 POP PUSH2 0x1DAF PUSH1 0xE0 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x100 DUP15 ADD MLOAD PUSH2 0x120 DUP16 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0x1DCF PUSH2 0x140 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDE PUSH2 0x160 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x1E28 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP7 POP PUSH2 0x1E36 PUSH1 0x20 DUP10 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E44 PUSH1 0x40 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E52 PUSH1 0x60 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E60 PUSH1 0x80 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1E70 DUP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1E81 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1EE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFB PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F2A PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1F42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F53 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1F7B JUMPI PUSH2 0x1F7B PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1F89 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1F60 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FAE JUMPI POP PUSH1 0x1 PUSH2 0x13E8 JUMP JUMPDEST DUP2 PUSH2 0x1FBB JUMPI POP PUSH1 0x0 PUSH2 0x13E8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FD1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1FDB JUMPI PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FEC JUMPI PUSH2 0x1FEC PUSH2 0x1B4C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x13E8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x201A JUMPI POP DUP2 DUP2 EXP PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x2027 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203B PUSH2 0x1B4C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1F9F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x1B4C JUMP INVALID 0x4F PUSH19 0x61636C654D616E616765723A2063616C6C2072 PUSH6 0x766572746564 KECCAK256 PUSH24 0x2F6F206D7367A264697066735822122004E5AAD83A59FB9A 0xEF DUP4 0xD5 0x2C 0xE 0xBE 0xEF 0xA5 0xCD AND 0xC8 0xEF 0xC1 CREATE 0xA7 0xBE 0xA6 0xE3 SGT 0xD4 STATICCALL PUSH8 0x886564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2736:11411:2:-:0;;;3957:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:3;719:10:5;936:18:3;:32::i;:::-;-1:-1:-1;;;;;4009:26:2;;4001:67;;;;;;;511:2:9;4001:67:2;;;493:21:9;550:2;530:18;;;523:30;589;569:18;;;562:58;637:18;;4001:67:2;;;;;;;;4078:32;4097:12;4078:18;:32::i;:::-;3957:160;2736:11411;;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;309:352::-;2736:11411:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1296": {
									"entryPoint": 2814,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_computeLiquidityAmounts_1022": {
									"entryPoint": 4872,
									"id": 1022,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_computeVaultTokenPrice_728": {
									"entryPoint": 2438,
									"id": 728,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_convertToAggregatorValue_1074": {
									"entryPoint": 6060,
									"id": 1074,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_convertVaultTokensToValue_906": {
									"entryPoint": 4958,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_fetchPositionData_869": {
									"entryPoint": 4068,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_fetchVaultInfo_789": {
									"entryPoint": 3483,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@_getPoolSqrtAndTick_971": {
									"entryPoint": 4568,
									"id": 971,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getPriceFromConfig_595": {
									"entryPoint": 2123,
									"id": 595,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getRevertMsg_1240": {
									"entryPoint": 5027,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1696": {
									"entryPoint": null,
									"id": 1696,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1353": {
									"entryPoint": 2904,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tryGetChainlinkPrice_1216": {
									"entryPoint": 2984,
									"id": 1216,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@getAmount0ForLiquidity_2487": {
									"entryPoint": 6273,
									"id": 2487,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAmount1ForLiquidity_2523": {
									"entryPoint": 6384,
									"id": 2523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAmountsForLiquidity_2595": {
									"entryPoint": 5905,
									"id": 2595,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@getPrice_525": {
									"entryPoint": 572,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getSqrtRatioAtTick_2109": {
									"entryPoint": 5102,
									"id": 2109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mulDiv_141": {
									"entryPoint": 6459,
									"id": 141,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@oracleConfigs_294": {
									"entryPoint": null,
									"id": 294,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1282": {
									"entryPoint": null,
									"id": 1282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1310": {
									"entryPoint": 1049,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOracleConfig_410": {
									"entryPoint": 1474,
									"id": 410,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setVaultUnderlyingFeeds_457": {
									"entryPoint": 1069,
									"id": 457,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transferOwnership_1333": {
									"entryPoint": 2002,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vaultFeeds_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_payable_fromMemory": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_int24_fromMemory": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 12
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint24_fromMemory": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5c52409720bfac5a1e85ffe8335c29ab5586808ac14821ae52ef7379ece28b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 8028,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint8": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18892:9",
										"nodeType": "YulBlock",
										"src": "0:18892:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:9",
													"nodeType": "YulBlock",
													"src": "59:86:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:9",
																"nodeType": "YulBlock",
																"src": "123:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:9",
																					"nodeType": "YulLiteral",
																					"src": "132:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:9",
																					"nodeType": "YulLiteral",
																					"src": "135:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:9"
																			},
																			"nativeSrc": "125:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:9"
																		},
																		"nativeSrc": "125:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:9",
																										"nodeType": "YulLiteral",
																										"src": "108:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:9",
																										"nodeType": "YulLiteral",
																										"src": "113:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:9"
																								},
																								"nativeSrc": "104:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:9",
																								"nodeType": "YulLiteral",
																								"src": "117:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:9"
																						},
																						"nativeSrc": "100:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:9"
																				},
																				"nativeSrc": "89:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:9"
																		},
																		"nativeSrc": "79:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:9"
																},
																"nativeSrc": "72:50:9",
																"nodeType": "YulFunctionCall",
																"src": "72:50:9"
															},
															"nativeSrc": "69:70:9",
															"nodeType": "YulIf",
															"src": "69:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:9",
														"nodeType": "YulTypedName",
														"src": "48:5:9",
														"type": ""
													}
												],
												"src": "14:131:9"
											},
											{
												"body": {
													"nativeSrc": "220:177:9",
													"nodeType": "YulBlock",
													"src": "220:177:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "266:16:9",
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "275:1:9",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "278:1:9",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "268:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nativeSrc": "268:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nativeSrc": "268:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "241:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "250:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "237:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:9"
																		},
																		"nativeSrc": "237:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "262:2:9",
																		"nodeType": "YulLiteral",
																		"src": "262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:9"
																},
																"nativeSrc": "233:32:9",
																"nodeType": "YulFunctionCall",
																"src": "233:32:9"
															},
															"nativeSrc": "230:52:9",
															"nodeType": "YulIf",
															"src": "230:52:9"
														},
														{
															"nativeSrc": "291:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "317:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "304:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:9"
																},
																"nativeSrc": "304:23:9",
																"nodeType": "YulFunctionCall",
																"src": "304:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "295:5:9",
																	"nodeType": "YulTypedName",
																	"src": "295:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "361:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "336:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:9"
																},
																"nativeSrc": "336:31:9",
																"nodeType": "YulFunctionCall",
																"src": "336:31:9"
															},
															"nativeSrc": "336:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:31:9"
														},
														{
															"nativeSrc": "376:15:9",
															"nodeType": "YulAssignment",
															"src": "376:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "386:5:9",
																"nodeType": "YulIdentifier",
																"src": "386:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "376:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "150:247:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "186:9:9",
														"nodeType": "YulTypedName",
														"src": "186:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "197:7:9",
														"nodeType": "YulTypedName",
														"src": "197:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "209:6:9",
														"nodeType": "YulTypedName",
														"src": "209:6:9",
														"type": ""
													}
												],
												"src": "150:247:9"
											},
											{
												"body": {
													"nativeSrc": "599:345:9",
													"nodeType": "YulBlock",
													"src": "599:345:9",
													"statements": [
														{
															"nativeSrc": "609:27:9",
															"nodeType": "YulAssignment",
															"src": "609:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "621:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "621:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:3:9",
																		"nodeType": "YulLiteral",
																		"src": "632:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "617:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:9"
																},
																"nativeSrc": "617:19:9",
																"nodeType": "YulFunctionCall",
																"src": "617:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "609:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "609:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "652:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "652:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "683:3:9",
																								"nodeType": "YulLiteral",
																								"src": "683:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "688:1:9",
																								"nodeType": "YulLiteral",
																								"src": "688:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "679:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:9"
																						},
																						"nativeSrc": "679:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "679:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "692:1:9",
																						"nodeType": "YulLiteral",
																						"src": "692:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "675:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "675:3:9"
																				},
																				"nativeSrc": "675:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "675:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "663:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:9"
																		},
																		"nativeSrc": "663:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "663:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "645:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:9"
																},
																"nativeSrc": "645:51:9",
																"nodeType": "YulFunctionCall",
																"src": "645:51:9"
															},
															"nativeSrc": "645:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "716:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "727:2:9",
																				"nodeType": "YulLiteral",
																				"src": "727:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "712:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:9"
																		},
																		"nativeSrc": "712:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "736:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "736:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "752:3:9",
																								"nodeType": "YulLiteral",
																								"src": "752:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "757:1:9",
																								"nodeType": "YulLiteral",
																								"src": "757:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "748:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "748:3:9"
																						},
																						"nativeSrc": "748:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "748:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "761:1:9",
																						"nodeType": "YulLiteral",
																						"src": "761:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "744:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "744:3:9"
																				},
																				"nativeSrc": "744:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "744:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "732:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:9"
																		},
																		"nativeSrc": "732:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "732:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "705:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:9"
																},
																"nativeSrc": "705:60:9",
																"nodeType": "YulFunctionCall",
																"src": "705:60:9"
															},
															"nativeSrc": "705:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "705:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "785:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "796:2:9",
																				"nodeType": "YulLiteral",
																				"src": "796:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "781:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "781:3:9"
																		},
																		"nativeSrc": "781:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "781:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "815:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "815:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "808:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "808:6:9"
																				},
																				"nativeSrc": "808:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "808:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "801:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "801:6:9"
																		},
																		"nativeSrc": "801:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "801:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "774:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:9"
																},
																"nativeSrc": "774:50:9",
																"nodeType": "YulFunctionCall",
																"src": "774:50:9"
															},
															"nativeSrc": "774:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "774:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "844:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "855:2:9",
																				"nodeType": "YulLiteral",
																				"src": "855:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "864:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "864:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "872:4:9",
																				"nodeType": "YulLiteral",
																				"src": "872:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "860:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:9"
																		},
																		"nativeSrc": "860:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "860:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:9"
																},
																"nativeSrc": "833:45:9",
																"nodeType": "YulFunctionCall",
																"src": "833:45:9"
															},
															"nativeSrc": "833:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "833:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "898:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "898:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "909:3:9",
																				"nodeType": "YulLiteral",
																				"src": "909:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "894:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "894:3:9"
																		},
																		"nativeSrc": "894:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "894:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "929:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "929:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "922:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "922:6:9"
																				},
																				"nativeSrc": "922:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "922:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "915:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "915:6:9"
																		},
																		"nativeSrc": "915:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "915:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "887:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:9"
																},
																"nativeSrc": "887:51:9",
																"nodeType": "YulFunctionCall",
																"src": "887:51:9"
															},
															"nativeSrc": "887:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "887:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed",
												"nativeSrc": "402:542:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "536:9:9",
														"nodeType": "YulTypedName",
														"src": "536:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "547:6:9",
														"nodeType": "YulTypedName",
														"src": "547:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "555:6:9",
														"nodeType": "YulTypedName",
														"src": "555:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "563:6:9",
														"nodeType": "YulTypedName",
														"src": "563:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "571:6:9",
														"nodeType": "YulTypedName",
														"src": "571:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "579:6:9",
														"nodeType": "YulTypedName",
														"src": "579:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "590:4:9",
														"nodeType": "YulTypedName",
														"src": "590:4:9",
														"type": ""
													}
												],
												"src": "402:542:9"
											},
											{
												"body": {
													"nativeSrc": "1074:130:9",
													"nodeType": "YulBlock",
													"src": "1074:130:9",
													"statements": [
														{
															"nativeSrc": "1084:26:9",
															"nodeType": "YulAssignment",
															"src": "1084:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1096:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1096:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1092:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1092:3:9"
																},
																"nativeSrc": "1092:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1092:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1084:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1084:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1126:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1126:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1137:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1137:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1119:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:6:9"
																},
																"nativeSrc": "1119:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1119:25:9"
															},
															"nativeSrc": "1119:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1119:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1164:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1164:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1175:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1175:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1160:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1160:3:9"
																		},
																		"nativeSrc": "1160:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1160:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1184:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1184:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1192:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1192:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1180:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:9"
																		},
																		"nativeSrc": "1180:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1180:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1153:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1153:6:9"
																},
																"nativeSrc": "1153:45:9",
																"nodeType": "YulFunctionCall",
																"src": "1153:45:9"
															},
															"nativeSrc": "1153:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "1153:45:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "949:255:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1035:9:9",
														"nodeType": "YulTypedName",
														"src": "1035:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1046:6:9",
														"nodeType": "YulTypedName",
														"src": "1046:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1054:6:9",
														"nodeType": "YulTypedName",
														"src": "1054:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1065:4:9",
														"nodeType": "YulTypedName",
														"src": "1065:4:9",
														"type": ""
													}
												],
												"src": "949:255:9"
											},
											{
												"body": {
													"nativeSrc": "1408:340:9",
													"nodeType": "YulBlock",
													"src": "1408:340:9",
													"statements": [
														{
															"nativeSrc": "1418:27:9",
															"nodeType": "YulAssignment",
															"src": "1418:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1430:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1430:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1441:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1441:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1426:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:9"
																},
																"nativeSrc": "1426:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1426:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1418:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1418:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1461:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1461:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1476:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1476:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1492:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1492:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1497:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1497:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1488:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1488:3:9"
																						},
																						"nativeSrc": "1488:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1488:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1501:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1501:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1484:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1484:3:9"
																				},
																				"nativeSrc": "1484:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1484:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1472:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:9"
																		},
																		"nativeSrc": "1472:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1472:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1454:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:9"
																},
																"nativeSrc": "1454:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1454:51:9"
															},
															"nativeSrc": "1454:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1454:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1525:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1536:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1521:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:9"
																		},
																		"nativeSrc": "1521:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1545:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1561:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1561:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1566:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1566:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1557:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1557:3:9"
																						},
																						"nativeSrc": "1557:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1557:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1570:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1570:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1553:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1553:3:9"
																				},
																				"nativeSrc": "1553:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1553:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1541:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:9"
																		},
																		"nativeSrc": "1541:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1514:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:9"
																},
																"nativeSrc": "1514:60:9",
																"nodeType": "YulFunctionCall",
																"src": "1514:60:9"
															},
															"nativeSrc": "1514:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "1514:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1594:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1594:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1605:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1605:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1590:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1590:3:9"
																		},
																		"nativeSrc": "1590:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1590:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "1614:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1622:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1622:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1610:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1610:3:9"
																		},
																		"nativeSrc": "1610:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1610:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1583:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:9"
																},
																"nativeSrc": "1583:45:9",
																"nodeType": "YulFunctionCall",
																"src": "1583:45:9"
															},
															"nativeSrc": "1583:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "1583:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1648:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1648:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1659:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1659:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1644:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1644:3:9"
																		},
																		"nativeSrc": "1644:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1644:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "1668:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1668:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1676:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1676:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1664:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:9"
																		},
																		"nativeSrc": "1664:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1637:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:9"
																},
																"nativeSrc": "1637:45:9",
																"nodeType": "YulFunctionCall",
																"src": "1637:45:9"
															},
															"nativeSrc": "1637:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "1637:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1702:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:3:9",
																				"nodeType": "YulLiteral",
																				"src": "1713:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1698:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:9"
																		},
																		"nativeSrc": "1698:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "1733:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1733:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1726:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1726:6:9"
																				},
																				"nativeSrc": "1726:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1726:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1719:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1719:6:9"
																		},
																		"nativeSrc": "1719:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1691:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:9"
																},
																"nativeSrc": "1691:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1691:51:9"
															},
															"nativeSrc": "1691:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1691:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed",
												"nativeSrc": "1209:539:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1345:9:9",
														"nodeType": "YulTypedName",
														"src": "1345:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1356:6:9",
														"nodeType": "YulTypedName",
														"src": "1356:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1364:6:9",
														"nodeType": "YulTypedName",
														"src": "1364:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1372:6:9",
														"nodeType": "YulTypedName",
														"src": "1372:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1380:6:9",
														"nodeType": "YulTypedName",
														"src": "1380:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1388:6:9",
														"nodeType": "YulTypedName",
														"src": "1388:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1399:4:9",
														"nodeType": "YulTypedName",
														"src": "1399:4:9",
														"type": ""
													}
												],
												"src": "1209:539:9"
											},
											{
												"body": {
													"nativeSrc": "1854:102:9",
													"nodeType": "YulBlock",
													"src": "1854:102:9",
													"statements": [
														{
															"nativeSrc": "1864:26:9",
															"nodeType": "YulAssignment",
															"src": "1864:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1876:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:9"
																},
																"nativeSrc": "1872:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1872:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1864:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1864:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1906:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1906:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1921:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1937:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1937:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1942:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1942:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1933:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1933:3:9"
																						},
																						"nativeSrc": "1933:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1933:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1946:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1946:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1929:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1929:3:9"
																				},
																				"nativeSrc": "1929:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1929:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:9"
																		},
																		"nativeSrc": "1917:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1899:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:9"
																},
																"nativeSrc": "1899:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1899:51:9"
															},
															"nativeSrc": "1899:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1899:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1753:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1823:9:9",
														"nodeType": "YulTypedName",
														"src": "1823:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1834:6:9",
														"nodeType": "YulTypedName",
														"src": "1834:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1845:4:9",
														"nodeType": "YulTypedName",
														"src": "1845:4:9",
														"type": ""
													}
												],
												"src": "1753:203:9"
											},
											{
												"body": {
													"nativeSrc": "2004:71:9",
													"nodeType": "YulBlock",
													"src": "2004:71:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:9",
																"nodeType": "YulBlock",
																"src": "2053:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:9"
																			},
																			"nativeSrc": "2055:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:9"
																		},
																		"nativeSrc": "2055:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2027:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2027:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2038:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2038:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2045:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2045:4:9",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2034:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:9"
																				},
																				"nativeSrc": "2034:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2034:16:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2024:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2024:2:9"
																		},
																		"nativeSrc": "2024:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2017:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:9"
																},
																"nativeSrc": "2017:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2017:35:9"
															},
															"nativeSrc": "2014:55:9",
															"nodeType": "YulIf",
															"src": "2014:55:9"
														}
													]
												},
												"name": "validator_revert_uint8",
												"nativeSrc": "1961:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1993:5:9",
														"nodeType": "YulTypedName",
														"src": "1993:5:9",
														"type": ""
													}
												],
												"src": "1961:114:9"
											},
											{
												"body": {
													"nativeSrc": "2214:671:9",
													"nodeType": "YulBlock",
													"src": "2214:671:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2261:16:9",
																"nodeType": "YulBlock",
																"src": "2261:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2270:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2273:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2273:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2263:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2263:6:9"
																			},
																			"nativeSrc": "2263:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:12:9"
																		},
																		"nativeSrc": "2263:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2235:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2235:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2244:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:9"
																		},
																		"nativeSrc": "2231:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2231:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2256:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2256:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2227:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:9"
																},
																"nativeSrc": "2227:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2227:33:9"
															},
															"nativeSrc": "2224:53:9",
															"nodeType": "YulIf",
															"src": "2224:53:9"
														},
														{
															"nativeSrc": "2286:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2286:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2312:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2312:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2299:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2299:12:9"
																},
																"nativeSrc": "2299:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2299:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2290:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2290:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2356:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2356:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2331:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "2331:24:9"
																},
																"nativeSrc": "2331:31:9",
																"nodeType": "YulFunctionCall",
																"src": "2331:31:9"
															},
															"nativeSrc": "2331:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "2331:31:9"
														},
														{
															"nativeSrc": "2371:15:9",
															"nodeType": "YulAssignment",
															"src": "2371:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2381:5:9",
																"nodeType": "YulIdentifier",
																"src": "2381:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2371:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:9"
																}
															]
														},
														{
															"nativeSrc": "2395:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2395:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2427:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2427:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2438:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2438:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2423:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2423:3:9"
																		},
																		"nativeSrc": "2423:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2423:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2410:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2410:12:9"
																},
																"nativeSrc": "2410:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2410:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2399:7:9",
																	"nodeType": "YulTypedName",
																	"src": "2399:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2476:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2476:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2451:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "2451:24:9"
																},
																"nativeSrc": "2451:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2451:33:9"
															},
															"nativeSrc": "2451:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2451:33:9"
														},
														{
															"nativeSrc": "2493:17:9",
															"nodeType": "YulAssignment",
															"src": "2493:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "2503:7:9",
																"nodeType": "YulIdentifier",
																"src": "2503:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2493:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:9"
																}
															]
														},
														{
															"nativeSrc": "2519:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2519:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2551:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2551:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2562:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2562:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2547:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2547:3:9"
																		},
																		"nativeSrc": "2547:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2547:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2534:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2534:12:9"
																},
																"nativeSrc": "2534:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2534:32:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2523:7:9",
																	"nodeType": "YulTypedName",
																	"src": "2523:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "2600:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2600:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2575:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "2575:24:9"
																},
																"nativeSrc": "2575:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2575:33:9"
															},
															"nativeSrc": "2575:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2575:33:9"
														},
														{
															"nativeSrc": "2617:17:9",
															"nodeType": "YulAssignment",
															"src": "2617:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "2627:7:9",
																"nodeType": "YulIdentifier",
																"src": "2627:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2617:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:9"
																}
															]
														},
														{
															"nativeSrc": "2643:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2643:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2675:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2686:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2686:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2671:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:9"
																		},
																		"nativeSrc": "2671:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2658:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2658:12:9"
																},
																"nativeSrc": "2658:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2658:32:9"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "2647:7:9",
																	"nodeType": "YulTypedName",
																	"src": "2647:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "2722:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2722:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "2699:22:9",
																	"nodeType": "YulIdentifier",
																	"src": "2699:22:9"
																},
																"nativeSrc": "2699:31:9",
																"nodeType": "YulFunctionCall",
																"src": "2699:31:9"
															},
															"nativeSrc": "2699:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "2699:31:9"
														},
														{
															"nativeSrc": "2739:17:9",
															"nodeType": "YulAssignment",
															"src": "2739:17:9",
															"value": {
																"name": "value_3",
																"nativeSrc": "2749:7:9",
																"nodeType": "YulIdentifier",
																"src": "2749:7:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2739:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:9"
																}
															]
														},
														{
															"nativeSrc": "2765:48:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2765:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2797:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:3:9",
																				"nodeType": "YulLiteral",
																				"src": "2808:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:9"
																		},
																		"nativeSrc": "2793:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2780:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:12:9"
																},
																"nativeSrc": "2780:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:33:9"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "2769:7:9",
																	"nodeType": "YulTypedName",
																	"src": "2769:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "2845:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2845:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "2822:22:9",
																	"nodeType": "YulIdentifier",
																	"src": "2822:22:9"
																},
																"nativeSrc": "2822:31:9",
																"nodeType": "YulFunctionCall",
																"src": "2822:31:9"
															},
															"nativeSrc": "2822:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "2822:31:9"
														},
														{
															"nativeSrc": "2862:17:9",
															"nodeType": "YulAssignment",
															"src": "2862:17:9",
															"value": {
																"name": "value_4",
																"nativeSrc": "2872:7:9",
																"nodeType": "YulIdentifier",
																"src": "2872:7:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2862:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8",
												"nativeSrc": "2080:805:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2148:9:9",
														"nodeType": "YulTypedName",
														"src": "2148:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2159:7:9",
														"nodeType": "YulTypedName",
														"src": "2159:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2171:6:9",
														"nodeType": "YulTypedName",
														"src": "2171:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2179:6:9",
														"nodeType": "YulTypedName",
														"src": "2179:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2187:6:9",
														"nodeType": "YulTypedName",
														"src": "2187:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2195:6:9",
														"nodeType": "YulTypedName",
														"src": "2195:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2203:6:9",
														"nodeType": "YulTypedName",
														"src": "2203:6:9",
														"type": ""
													}
												],
												"src": "2080:805:9"
											},
											{
												"body": {
													"nativeSrc": "2932:76:9",
													"nodeType": "YulBlock",
													"src": "2932:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2986:16:9",
																"nodeType": "YulBlock",
																"src": "2986:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2995:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2995:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2998:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2988:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2988:6:9"
																			},
																			"nativeSrc": "2988:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:12:9"
																		},
																		"nativeSrc": "2988:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2955:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2955:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2976:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2976:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2969:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2969:6:9"
																						},
																						"nativeSrc": "2969:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2969:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2962:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2962:6:9"
																				},
																				"nativeSrc": "2962:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2962:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2952:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2952:2:9"
																		},
																		"nativeSrc": "2952:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2952:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2945:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:9"
																},
																"nativeSrc": "2945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "2945:40:9"
															},
															"nativeSrc": "2942:60:9",
															"nodeType": "YulIf",
															"src": "2942:60:9"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "2890:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2921:5:9",
														"nodeType": "YulTypedName",
														"src": "2921:5:9",
														"type": ""
													}
												],
												"src": "2890:118:9"
											},
											{
												"body": {
													"nativeSrc": "3160:792:9",
													"nodeType": "YulBlock",
													"src": "3160:792:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:16:9",
																"nodeType": "YulBlock",
																"src": "3207:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3216:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3209:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:9"
																			},
																			"nativeSrc": "3209:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:12:9"
																		},
																		"nativeSrc": "3209:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3181:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3181:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3190:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3177:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3177:3:9"
																		},
																		"nativeSrc": "3177:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3177:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3202:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3202:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3173:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:9"
																},
																"nativeSrc": "3173:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3173:33:9"
															},
															"nativeSrc": "3170:53:9",
															"nodeType": "YulIf",
															"src": "3170:53:9"
														},
														{
															"nativeSrc": "3232:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3232:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3245:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:9"
																},
																"nativeSrc": "3245:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3245:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3236:5:9",
																	"nodeType": "YulTypedName",
																	"src": "3236:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3302:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3302:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3277:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "3277:24:9"
																},
																"nativeSrc": "3277:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3277:31:9"
															},
															"nativeSrc": "3277:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3277:31:9"
														},
														{
															"nativeSrc": "3317:15:9",
															"nodeType": "YulAssignment",
															"src": "3317:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "3327:5:9",
																"nodeType": "YulIdentifier",
																"src": "3327:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3317:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:9"
																}
															]
														},
														{
															"nativeSrc": "3341:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3341:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3373:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3373:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3384:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3384:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3369:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3369:3:9"
																		},
																		"nativeSrc": "3369:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3369:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3356:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3356:12:9"
																},
																"nativeSrc": "3356:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3356:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3345:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3345:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3422:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3422:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3397:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "3397:24:9"
																},
																"nativeSrc": "3397:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3397:33:9"
															},
															"nativeSrc": "3397:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3397:33:9"
														},
														{
															"nativeSrc": "3439:17:9",
															"nodeType": "YulAssignment",
															"src": "3439:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "3449:7:9",
																"nodeType": "YulIdentifier",
																"src": "3449:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3439:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:9"
																}
															]
														},
														{
															"nativeSrc": "3465:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3465:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3497:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3497:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3508:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3508:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3493:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:9"
																		},
																		"nativeSrc": "3493:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3493:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3480:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3480:12:9"
																},
																"nativeSrc": "3480:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3480:32:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3469:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3469:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3546:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3546:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3521:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "3521:24:9"
																},
																"nativeSrc": "3521:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3521:33:9"
															},
															"nativeSrc": "3521:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3521:33:9"
														},
														{
															"nativeSrc": "3563:17:9",
															"nodeType": "YulAssignment",
															"src": "3563:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "3573:7:9",
																"nodeType": "YulIdentifier",
																"src": "3573:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3563:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:9"
																}
															]
														},
														{
															"nativeSrc": "3589:47:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3589:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3621:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3632:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3632:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:9"
																		},
																		"nativeSrc": "3617:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3604:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3604:12:9"
																},
																"nativeSrc": "3604:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3604:32:9"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3593:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3593:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "3667:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3667:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3645:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "3645:21:9"
																},
																"nativeSrc": "3645:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3645:30:9"
															},
															"nativeSrc": "3645:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3645:30:9"
														},
														{
															"nativeSrc": "3684:17:9",
															"nodeType": "YulAssignment",
															"src": "3684:17:9",
															"value": {
																"name": "value_3",
																"nativeSrc": "3694:7:9",
																"nodeType": "YulIdentifier",
																"src": "3694:7:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3684:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:9"
																}
															]
														},
														{
															"nativeSrc": "3710:48:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3710:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3742:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3753:3:9",
																				"nodeType": "YulLiteral",
																				"src": "3753:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3738:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3738:3:9"
																		},
																		"nativeSrc": "3738:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3738:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3725:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3725:12:9"
																},
																"nativeSrc": "3725:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3725:33:9"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "3714:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3714:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "3790:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3790:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "3767:22:9",
																	"nodeType": "YulIdentifier",
																	"src": "3767:22:9"
																},
																"nativeSrc": "3767:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3767:31:9"
															},
															"nativeSrc": "3767:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3767:31:9"
														},
														{
															"nativeSrc": "3807:17:9",
															"nodeType": "YulAssignment",
															"src": "3807:17:9",
															"value": {
																"name": "value_4",
																"nativeSrc": "3817:7:9",
																"nodeType": "YulIdentifier",
																"src": "3817:7:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3807:6:9"
																}
															]
														},
														{
															"nativeSrc": "3833:48:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3833:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3865:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3876:3:9",
																				"nodeType": "YulLiteral",
																				"src": "3876:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3861:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:9"
																		},
																		"nativeSrc": "3861:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3848:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3848:12:9"
																},
																"nativeSrc": "3848:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3848:33:9"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "3837:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3837:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "3912:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3912:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3890:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "3890:21:9"
																},
																"nativeSrc": "3890:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3890:30:9"
															},
															"nativeSrc": "3890:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3890:30:9"
														},
														{
															"nativeSrc": "3929:17:9",
															"nodeType": "YulAssignment",
															"src": "3929:17:9",
															"value": {
																"name": "value_5",
																"nativeSrc": "3939:7:9",
																"nodeType": "YulIdentifier",
																"src": "3939:7:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool",
												"nativeSrc": "3013:939:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3086:9:9",
														"nodeType": "YulTypedName",
														"src": "3086:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3097:7:9",
														"nodeType": "YulTypedName",
														"src": "3097:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3109:6:9",
														"nodeType": "YulTypedName",
														"src": "3109:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3117:6:9",
														"nodeType": "YulTypedName",
														"src": "3117:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3125:6:9",
														"nodeType": "YulTypedName",
														"src": "3125:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3133:6:9",
														"nodeType": "YulTypedName",
														"src": "3133:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3141:6:9",
														"nodeType": "YulTypedName",
														"src": "3141:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3149:6:9",
														"nodeType": "YulTypedName",
														"src": "3149:6:9",
														"type": ""
													}
												],
												"src": "3013:939:9"
											},
											{
												"body": {
													"nativeSrc": "4131:233:9",
													"nodeType": "YulBlock",
													"src": "4131:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4148:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4141:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:9"
																},
																"nativeSrc": "4141:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4141:21:9"
															},
															"nativeSrc": "4141:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4141:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4182:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4193:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4178:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:9"
																		},
																		"nativeSrc": "4178:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4178:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:9"
																},
																"nativeSrc": "4171:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4171:30:9"
															},
															"nativeSrc": "4171:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4171:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4221:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4232:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4232:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4217:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:9"
																		},
																		"nativeSrc": "4217:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a206e6f2061676772656761746f72206f7220",
																		"kind": "string",
																		"nativeSrc": "4237:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4237:34:9",
																		"type": "",
																		"value": "OracleManager: no aggregator or "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4210:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:9"
																},
																"nativeSrc": "4210:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4210:62:9"
															},
															"nativeSrc": "4210:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4210:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4303:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4303:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:9"
																		},
																		"nativeSrc": "4288:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4288:18:9"
																	},
																	{
																		"hexValue": "7661756c74206c6f676963",
																		"kind": "string",
																		"nativeSrc": "4308:13:9",
																		"nodeType": "YulLiteral",
																		"src": "4308:13:9",
																		"type": "",
																		"value": "vault logic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4281:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:9"
																},
																"nativeSrc": "4281:41:9",
																"nodeType": "YulFunctionCall",
																"src": "4281:41:9"
															},
															"nativeSrc": "4281:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "4281:41:9"
														},
														{
															"nativeSrc": "4331:27:9",
															"nodeType": "YulAssignment",
															"src": "4331:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4343:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4343:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4354:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4354:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4339:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:9"
																},
																"nativeSrc": "4339:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4339:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4331:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4331:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5c52409720bfac5a1e85ffe8335c29ab5586808ac14821ae52ef7379ece28b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3957:407:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4108:9:9",
														"nodeType": "YulTypedName",
														"src": "4108:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4122:4:9",
														"nodeType": "YulTypedName",
														"src": "4122:4:9",
														"type": ""
													}
												],
												"src": "3957:407:9"
											},
											{
												"body": {
													"nativeSrc": "4543:224:9",
													"nodeType": "YulBlock",
													"src": "4543:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4560:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4560:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4571:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4553:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:9"
																},
																"nativeSrc": "4553:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4553:21:9"
															},
															"nativeSrc": "4553:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4553:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4594:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4594:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4605:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4605:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4590:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:9"
																		},
																		"nativeSrc": "4590:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4590:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4583:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4583:6:9"
																},
																"nativeSrc": "4583:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4583:30:9"
															},
															"nativeSrc": "4583:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4583:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4633:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4633:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4644:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4644:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4629:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4629:3:9"
																		},
																		"nativeSrc": "4629:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4629:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c74206665656473206e6f742073",
																		"kind": "string",
																		"nativeSrc": "4649:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4649:34:9",
																		"type": "",
																		"value": "OracleManager: vault feeds not s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:9"
																},
																"nativeSrc": "4622:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4622:62:9"
															},
															"nativeSrc": "4622:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4622:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4715:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4715:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:9"
																		},
																		"nativeSrc": "4700:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4700:18:9"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nativeSrc": "4720:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4720:4:9",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:9"
																},
																"nativeSrc": "4693:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4693:32:9"
															},
															"nativeSrc": "4693:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "4693:32:9"
														},
														{
															"nativeSrc": "4734:27:9",
															"nodeType": "YulAssignment",
															"src": "4734:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4746:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4757:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4742:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:9"
																},
																"nativeSrc": "4742:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4742:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4734:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4369:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4520:9:9",
														"nodeType": "YulTypedName",
														"src": "4520:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4534:4:9",
														"nodeType": "YulTypedName",
														"src": "4534:4:9",
														"type": ""
													}
												],
												"src": "4369:398:9"
											},
											{
												"body": {
													"nativeSrc": "4946:223:9",
													"nodeType": "YulBlock",
													"src": "4946:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4963:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4963:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4974:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4956:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:9"
																},
																"nativeSrc": "4956:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4956:21:9"
															},
															"nativeSrc": "4956:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4956:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4997:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5008:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5008:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4993:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4993:3:9"
																		},
																		"nativeSrc": "4993:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4993:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4986:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:9"
																},
																"nativeSrc": "4986:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4986:30:9"
															},
															"nativeSrc": "4986:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4986:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5036:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5036:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5047:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5047:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5032:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5032:3:9"
																		},
																		"nativeSrc": "5032:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5032:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b65",
																		"kind": "string",
																		"nativeSrc": "5052:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5052:34:9",
																		"type": "",
																		"value": "OracleManager: invalid vaultToke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5025:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5025:6:9"
																},
																"nativeSrc": "5025:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5025:62:9"
															},
															"nativeSrc": "5025:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "5025:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5107:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5107:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5118:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5118:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5103:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5103:3:9"
																		},
																		"nativeSrc": "5103:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5103:18:9"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "5123:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5123:3:9",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5096:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5096:6:9"
																},
																"nativeSrc": "5096:31:9",
																"nodeType": "YulFunctionCall",
																"src": "5096:31:9"
															},
															"nativeSrc": "5096:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "5096:31:9"
														},
														{
															"nativeSrc": "5136:27:9",
															"nodeType": "YulAssignment",
															"src": "5136:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5148:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5148:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5159:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5159:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5144:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:9"
																},
																"nativeSrc": "5144:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5144:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5136:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5136:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4772:397:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4923:9:9",
														"nodeType": "YulTypedName",
														"src": "4923:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4937:4:9",
														"nodeType": "YulTypedName",
														"src": "4937:4:9",
														"type": ""
													}
												],
												"src": "4772:397:9"
											},
											{
												"body": {
													"nativeSrc": "5351:280:9",
													"nodeType": "YulBlock",
													"src": "5351:280:9",
													"statements": [
														{
															"nativeSrc": "5361:27:9",
															"nodeType": "YulAssignment",
															"src": "5361:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5373:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5373:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5384:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5384:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5369:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:9"
																},
																"nativeSrc": "5369:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5369:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5361:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5361:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5404:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5404:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5419:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5419:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5435:3:9",
																								"nodeType": "YulLiteral",
																								"src": "5435:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5440:1:9",
																								"nodeType": "YulLiteral",
																								"src": "5440:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5431:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5431:3:9"
																						},
																						"nativeSrc": "5431:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5431:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5444:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5444:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5427:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5427:3:9"
																				},
																				"nativeSrc": "5427:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5427:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:9"
																		},
																		"nativeSrc": "5415:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5415:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5397:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:9"
																},
																"nativeSrc": "5397:51:9",
																"nodeType": "YulFunctionCall",
																"src": "5397:51:9"
															},
															"nativeSrc": "5397:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "5397:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5468:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5468:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5479:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5479:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5464:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5464:3:9"
																		},
																		"nativeSrc": "5464:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5488:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5488:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5504:3:9",
																								"nodeType": "YulLiteral",
																								"src": "5504:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5509:1:9",
																								"nodeType": "YulLiteral",
																								"src": "5509:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5500:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5500:3:9"
																						},
																						"nativeSrc": "5500:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5500:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5513:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5513:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5496:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5496:3:9"
																				},
																				"nativeSrc": "5496:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5484:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5484:3:9"
																		},
																		"nativeSrc": "5484:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5484:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5457:6:9"
																},
																"nativeSrc": "5457:60:9",
																"nodeType": "YulFunctionCall",
																"src": "5457:60:9"
															},
															"nativeSrc": "5457:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "5457:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:9"
																		},
																		"nativeSrc": "5533:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5557:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5557:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5565:4:9",
																				"nodeType": "YulLiteral",
																				"src": "5565:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:9"
																		},
																		"nativeSrc": "5553:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5553:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:9"
																},
																"nativeSrc": "5526:45:9",
																"nodeType": "YulFunctionCall",
																"src": "5526:45:9"
															},
															"nativeSrc": "5526:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "5526:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5591:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5602:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5602:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5587:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:9"
																		},
																		"nativeSrc": "5587:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "5611:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5611:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5619:4:9",
																				"nodeType": "YulLiteral",
																				"src": "5619:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:9"
																		},
																		"nativeSrc": "5607:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5607:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5580:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																},
																"nativeSrc": "5580:45:9",
																"nodeType": "YulFunctionCall",
																"src": "5580:45:9"
															},
															"nativeSrc": "5580:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "5580:45:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed",
												"nativeSrc": "5174:457:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5296:9:9",
														"nodeType": "YulTypedName",
														"src": "5296:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5307:6:9",
														"nodeType": "YulTypedName",
														"src": "5307:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5315:6:9",
														"nodeType": "YulTypedName",
														"src": "5315:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5323:6:9",
														"nodeType": "YulTypedName",
														"src": "5323:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5331:6:9",
														"nodeType": "YulTypedName",
														"src": "5331:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5342:4:9",
														"nodeType": "YulTypedName",
														"src": "5342:4:9",
														"type": ""
													}
												],
												"src": "5174:457:9"
											},
											{
												"body": {
													"nativeSrc": "5810:178:9",
													"nodeType": "YulBlock",
													"src": "5810:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5827:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5827:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5820:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:9"
																},
																"nativeSrc": "5820:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5820:21:9"
															},
															"nativeSrc": "5820:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5820:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5861:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5872:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:9"
																		},
																		"nativeSrc": "5857:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5877:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5877:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5850:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5850:6:9"
																},
																"nativeSrc": "5850:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5850:30:9"
															},
															"nativeSrc": "5850:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5850:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5900:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5900:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5911:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5911:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5896:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:9"
																		},
																		"nativeSrc": "5896:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "5916:30:9",
																		"nodeType": "YulLiteral",
																		"src": "5916:30:9",
																		"type": "",
																		"value": "OracleManager: invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5889:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:9"
																},
																"nativeSrc": "5889:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5889:58:9"
															},
															"nativeSrc": "5889:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5889:58:9"
														},
														{
															"nativeSrc": "5956:26:9",
															"nodeType": "YulAssignment",
															"src": "5956:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5968:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5968:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5979:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5964:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5964:3:9"
																},
																"nativeSrc": "5964:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5964:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5956:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5956:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5636:352:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5787:9:9",
														"nodeType": "YulTypedName",
														"src": "5787:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5801:4:9",
														"nodeType": "YulTypedName",
														"src": "5801:4:9",
														"type": ""
													}
												],
												"src": "5636:352:9"
											},
											{
												"body": {
													"nativeSrc": "6167:238:9",
													"nodeType": "YulBlock",
													"src": "6167:238:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6184:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6177:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:9"
																},
																"nativeSrc": "6177:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6177:21:9"
															},
															"nativeSrc": "6177:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6218:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6229:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6214:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:9"
																		},
																		"nativeSrc": "6214:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:9"
																},
																"nativeSrc": "6207:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6207:30:9"
															},
															"nativeSrc": "6207:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:9"
																		},
																		"nativeSrc": "6253:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f7220726571756972",
																		"kind": "string",
																		"nativeSrc": "6273:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:9",
																		"type": "",
																		"value": "OracleManager: aggregator requir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:9"
																},
																"nativeSrc": "6246:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6246:62:9"
															},
															"nativeSrc": "6246:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6328:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6339:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6324:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:9"
																		},
																		"nativeSrc": "6324:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:9"
																	},
																	{
																		"hexValue": "656420666f72206e6f6e2d7661756c74",
																		"kind": "string",
																		"nativeSrc": "6344:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6344:18:9",
																		"type": "",
																		"value": "ed for non-vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:9"
																},
																"nativeSrc": "6317:46:9",
																"nodeType": "YulFunctionCall",
																"src": "6317:46:9"
															},
															"nativeSrc": "6317:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "6317:46:9"
														},
														{
															"nativeSrc": "6372:27:9",
															"nodeType": "YulAssignment",
															"src": "6372:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6384:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6384:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6395:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6395:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6380:3:9"
																},
																"nativeSrc": "6380:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6380:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6372:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6372:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5993:412:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6144:9:9",
														"nodeType": "YulTypedName",
														"src": "6144:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6158:4:9",
														"nodeType": "YulTypedName",
														"src": "6158:4:9",
														"type": ""
													}
												],
												"src": "5993:412:9"
											},
											{
												"body": {
													"nativeSrc": "6584:228:9",
													"nodeType": "YulBlock",
													"src": "6584:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6601:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6601:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6612:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6612:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6594:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:9"
																},
																"nativeSrc": "6594:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6594:21:9"
															},
															"nativeSrc": "6594:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6594:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6635:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6635:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6646:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6646:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6631:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6631:3:9"
																		},
																		"nativeSrc": "6631:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6631:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6651:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6624:6:9"
																},
																"nativeSrc": "6624:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6624:30:9"
															},
															"nativeSrc": "6624:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6624:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6674:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6674:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6685:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6685:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6670:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:9"
																		},
																		"nativeSrc": "6670:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "6690:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6690:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6663:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6663:6:9"
																},
																"nativeSrc": "6663:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6663:62:9"
															},
															"nativeSrc": "6663:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6663:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6745:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6745:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6756:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6756:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6741:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:9"
																		},
																		"nativeSrc": "6741:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "6761:8:9",
																		"nodeType": "YulLiteral",
																		"src": "6761:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6734:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:9"
																},
																"nativeSrc": "6734:36:9",
																"nodeType": "YulFunctionCall",
																"src": "6734:36:9"
															},
															"nativeSrc": "6734:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "6734:36:9"
														},
														{
															"nativeSrc": "6779:27:9",
															"nodeType": "YulAssignment",
															"src": "6779:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6791:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6791:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6802:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6802:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6787:3:9"
																},
																"nativeSrc": "6787:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6787:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6779:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6779:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6410:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6561:9:9",
														"nodeType": "YulTypedName",
														"src": "6561:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6575:4:9",
														"nodeType": "YulTypedName",
														"src": "6575:4:9",
														"type": ""
													}
												],
												"src": "6410:402:9"
											},
											{
												"body": {
													"nativeSrc": "6991:229:9",
													"nodeType": "YulBlock",
													"src": "6991:229:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7008:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7008:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7019:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7019:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7001:6:9"
																},
																"nativeSrc": "7001:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7001:21:9"
															},
															"nativeSrc": "7001:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7001:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7042:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7042:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7053:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7053:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7038:3:9"
																		},
																		"nativeSrc": "7038:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7038:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7058:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7058:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7031:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:9"
																},
																"nativeSrc": "7031:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7031:30:9"
															},
															"nativeSrc": "7031:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7031:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7081:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7081:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7092:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7092:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7077:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7077:3:9"
																		},
																		"nativeSrc": "7077:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7077:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2066616c6c6261636b206167677265676174",
																		"kind": "string",
																		"nativeSrc": "7097:34:9",
																		"nodeType": "YulLiteral",
																		"src": "7097:34:9",
																		"type": "",
																		"value": "OracleManager: fallback aggregat"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7070:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7070:6:9"
																},
																"nativeSrc": "7070:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7070:62:9"
															},
															"nativeSrc": "7070:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "7070:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7152:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7152:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7163:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7163:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7148:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7148:3:9"
																		},
																		"nativeSrc": "7148:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7148:18:9"
																	},
																	{
																		"hexValue": "6f72206661696c",
																		"kind": "string",
																		"nativeSrc": "7168:9:9",
																		"nodeType": "YulLiteral",
																		"src": "7168:9:9",
																		"type": "",
																		"value": "or fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7141:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:9"
																},
																"nativeSrc": "7141:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7141:37:9"
															},
															"nativeSrc": "7141:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7141:37:9"
														},
														{
															"nativeSrc": "7187:27:9",
															"nodeType": "YulAssignment",
															"src": "7187:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7199:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7199:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7210:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7210:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7195:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:9"
																},
																"nativeSrc": "7195:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7195:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7187:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6817:403:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6968:9:9",
														"nodeType": "YulTypedName",
														"src": "6968:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6982:4:9",
														"nodeType": "YulTypedName",
														"src": "6982:4:9",
														"type": ""
													}
												],
												"src": "6817:403:9"
											},
											{
												"body": {
													"nativeSrc": "7399:228:9",
													"nodeType": "YulBlock",
													"src": "7399:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7409:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:9"
																},
																"nativeSrc": "7409:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7409:21:9"
															},
															"nativeSrc": "7409:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7409:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7450:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7450:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7461:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7461:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7446:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:9"
																		},
																		"nativeSrc": "7446:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7466:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7466:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7439:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7439:6:9"
																},
																"nativeSrc": "7439:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7439:30:9"
															},
															"nativeSrc": "7439:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7439:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7489:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7489:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7500:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7500:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7485:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7485:3:9"
																		},
																		"nativeSrc": "7485:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7485:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207072696d6172792061676772656761746f",
																		"kind": "string",
																		"nativeSrc": "7505:34:9",
																		"nodeType": "YulLiteral",
																		"src": "7505:34:9",
																		"type": "",
																		"value": "OracleManager: primary aggregato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7478:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:9"
																},
																"nativeSrc": "7478:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7478:62:9"
															},
															"nativeSrc": "7478:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "7478:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7560:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7560:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7571:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7571:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7556:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:9"
																		},
																		"nativeSrc": "7556:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7556:18:9"
																	},
																	{
																		"hexValue": "72206661696c",
																		"kind": "string",
																		"nativeSrc": "7576:8:9",
																		"nodeType": "YulLiteral",
																		"src": "7576:8:9",
																		"type": "",
																		"value": "r fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7549:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7549:6:9"
																},
																"nativeSrc": "7549:36:9",
																"nodeType": "YulFunctionCall",
																"src": "7549:36:9"
															},
															"nativeSrc": "7549:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "7549:36:9"
														},
														{
															"nativeSrc": "7594:27:9",
															"nodeType": "YulAssignment",
															"src": "7594:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7606:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7606:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7617:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7617:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7602:3:9"
																},
																"nativeSrc": "7602:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7602:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7594:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7594:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7225:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7376:9:9",
														"nodeType": "YulTypedName",
														"src": "7376:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7390:4:9",
														"nodeType": "YulTypedName",
														"src": "7390:4:9",
														"type": ""
													}
												],
												"src": "7225:402:9"
											},
											{
												"body": {
													"nativeSrc": "7713:170:9",
													"nodeType": "YulBlock",
													"src": "7713:170:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7759:16:9",
																"nodeType": "YulBlock",
																"src": "7759:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7768:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7768:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7771:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7771:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7761:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7761:6:9"
																			},
																			"nativeSrc": "7761:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7761:12:9"
																		},
																		"nativeSrc": "7761:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7761:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7734:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7734:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7743:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:9"
																		},
																		"nativeSrc": "7730:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7755:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7755:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7726:3:9"
																},
																"nativeSrc": "7726:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7726:32:9"
															},
															"nativeSrc": "7723:52:9",
															"nodeType": "YulIf",
															"src": "7723:52:9"
														},
														{
															"nativeSrc": "7784:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7784:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7803:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7803:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7797:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7797:5:9"
																},
																"nativeSrc": "7797:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7797:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7788:5:9",
																	"nodeType": "YulTypedName",
																	"src": "7788:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7847:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7847:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7822:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "7822:24:9"
																},
																"nativeSrc": "7822:31:9",
																"nodeType": "YulFunctionCall",
																"src": "7822:31:9"
															},
															"nativeSrc": "7822:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "7822:31:9"
														},
														{
															"nativeSrc": "7862:15:9",
															"nodeType": "YulAssignment",
															"src": "7862:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "7872:5:9",
																"nodeType": "YulIdentifier",
																"src": "7872:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7632:251:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7679:9:9",
														"nodeType": "YulTypedName",
														"src": "7679:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7690:7:9",
														"nodeType": "YulTypedName",
														"src": "7690:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7702:6:9",
														"nodeType": "YulTypedName",
														"src": "7702:6:9",
														"type": ""
													}
												],
												"src": "7632:251:9"
											},
											{
												"body": {
													"nativeSrc": "7920:95:9",
													"nodeType": "YulBlock",
													"src": "7920:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7937:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7937:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7944:3:9",
																				"nodeType": "YulLiteral",
																				"src": "7944:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7949:10:9",
																				"nodeType": "YulLiteral",
																				"src": "7949:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7940:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7940:3:9"
																		},
																		"nativeSrc": "7940:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7930:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7930:6:9"
																},
																"nativeSrc": "7930:31:9",
																"nodeType": "YulFunctionCall",
																"src": "7930:31:9"
															},
															"nativeSrc": "7930:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "7930:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7977:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7977:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7980:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7980:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7970:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7970:6:9"
																},
																"nativeSrc": "7970:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7970:15:9"
															},
															"nativeSrc": "7970:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7970:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8001:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8004:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8004:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7994:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:9"
																},
																"nativeSrc": "7994:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7994:15:9"
															},
															"nativeSrc": "7994:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7994:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7888:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7888:127:9"
											},
											{
												"body": {
													"nativeSrc": "8068:77:9",
													"nodeType": "YulBlock",
													"src": "8068:77:9",
													"statements": [
														{
															"nativeSrc": "8078:16:9",
															"nodeType": "YulAssignment",
															"src": "8078:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8089:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8089:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8092:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8092:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8085:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8085:3:9"
																},
																"nativeSrc": "8085:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8085:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8078:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8078:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8117:22:9",
																"nodeType": "YulBlock",
																"src": "8117:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8119:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8119:16:9"
																			},
																			"nativeSrc": "8119:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8119:18:9"
																		},
																		"nativeSrc": "8119:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8119:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8109:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8109:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8112:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8112:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8106:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8106:2:9"
																},
																"nativeSrc": "8106:10:9",
																"nodeType": "YulFunctionCall",
																"src": "8106:10:9"
															},
															"nativeSrc": "8103:36:9",
															"nodeType": "YulIf",
															"src": "8103:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8020:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8051:1:9",
														"nodeType": "YulTypedName",
														"src": "8051:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8054:1:9",
														"nodeType": "YulTypedName",
														"src": "8054:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8060:3:9",
														"nodeType": "YulTypedName",
														"src": "8060:3:9",
														"type": ""
													}
												],
												"src": "8020:125:9"
											},
											{
												"body": {
													"nativeSrc": "8182:95:9",
													"nodeType": "YulBlock",
													"src": "8182:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8199:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8199:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8206:3:9",
																				"nodeType": "YulLiteral",
																				"src": "8206:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8211:10:9",
																				"nodeType": "YulLiteral",
																				"src": "8211:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8202:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8202:3:9"
																		},
																		"nativeSrc": "8202:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8202:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8192:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:9"
																},
																"nativeSrc": "8192:31:9",
																"nodeType": "YulFunctionCall",
																"src": "8192:31:9"
															},
															"nativeSrc": "8192:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "8192:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8239:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8239:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8242:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:9"
																},
																"nativeSrc": "8232:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8232:15:9"
															},
															"nativeSrc": "8232:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8232:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8263:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8263:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8266:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:9"
																},
																"nativeSrc": "8256:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8256:15:9"
															},
															"nativeSrc": "8256:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8256:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8150:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8150:127:9"
											},
											{
												"body": {
													"nativeSrc": "8328:171:9",
													"nodeType": "YulBlock",
													"src": "8328:171:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8359:111:9",
																"nodeType": "YulBlock",
																"src": "8359:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8380:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8380:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8387:3:9",
																							"nodeType": "YulLiteral",
																							"src": "8387:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8392:10:9",
																							"nodeType": "YulLiteral",
																							"src": "8392:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8383:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8383:3:9"
																					},
																					"nativeSrc": "8383:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8383:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8373:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8373:6:9"
																			},
																			"nativeSrc": "8373:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8373:31:9"
																		},
																		"nativeSrc": "8373:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8373:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8424:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8424:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8427:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8427:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8417:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8417:6:9"
																			},
																			"nativeSrc": "8417:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8417:15:9"
																		},
																		"nativeSrc": "8417:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8417:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8452:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8452:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8455:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8455:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8445:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8445:6:9"
																			},
																			"nativeSrc": "8445:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8445:15:9"
																		},
																		"nativeSrc": "8445:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8445:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8348:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8348:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8341:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8341:6:9"
																},
																"nativeSrc": "8341:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8341:9:9"
															},
															"nativeSrc": "8338:132:9",
															"nodeType": "YulIf",
															"src": "8338:132:9"
														},
														{
															"nativeSrc": "8479:14:9",
															"nodeType": "YulAssignment",
															"src": "8479:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8488:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8488:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8491:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8491:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8484:3:9"
																},
																"nativeSrc": "8484:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8484:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8479:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8479:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8282:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8313:1:9",
														"nodeType": "YulTypedName",
														"src": "8313:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8316:1:9",
														"nodeType": "YulTypedName",
														"src": "8316:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8322:1:9",
														"nodeType": "YulTypedName",
														"src": "8322:1:9",
														"type": ""
													}
												],
												"src": "8282:217:9"
											},
											{
												"body": {
													"nativeSrc": "8678:182:9",
													"nodeType": "YulBlock",
													"src": "8678:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8695:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8695:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8706:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8706:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8688:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:9"
																},
																"nativeSrc": "8688:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8688:21:9"
															},
															"nativeSrc": "8688:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8688:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8740:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8740:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8725:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:9"
																		},
																		"nativeSrc": "8725:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8725:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8718:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:9"
																},
																"nativeSrc": "8718:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8718:30:9"
															},
															"nativeSrc": "8718:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8718:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8768:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8779:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8779:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8764:3:9"
																		},
																		"nativeSrc": "8764:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8764:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8784:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8784:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8757:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8757:6:9"
																},
																"nativeSrc": "8757:62:9",
																"nodeType": "YulFunctionCall",
																"src": "8757:62:9"
															},
															"nativeSrc": "8757:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "8757:62:9"
														},
														{
															"nativeSrc": "8828:26:9",
															"nodeType": "YulAssignment",
															"src": "8828:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8840:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8840:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8851:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8851:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:9"
																},
																"nativeSrc": "8836:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8836:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8828:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8828:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8504:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8655:9:9",
														"nodeType": "YulTypedName",
														"src": "8655:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8669:4:9",
														"nodeType": "YulTypedName",
														"src": "8669:4:9",
														"type": ""
													}
												],
												"src": "8504:356:9"
											},
											{
												"body": {
													"nativeSrc": "8931:184:9",
													"nodeType": "YulBlock",
													"src": "8931:184:9",
													"statements": [
														{
															"nativeSrc": "8941:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8941:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8950:1:9",
																"nodeType": "YulLiteral",
																"src": "8950:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8945:1:9",
																	"nodeType": "YulTypedName",
																	"src": "8945:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9010:63:9",
																"nodeType": "YulBlock",
																"src": "9010:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "9035:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9035:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "9040:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "9040:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9031:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9031:3:9"
																					},
																					"nativeSrc": "9031:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9031:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "9054:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9054:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "9059:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "9059:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9050:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9050:3:9"
																							},
																							"nativeSrc": "9050:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9050:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "9044:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9044:5:9"
																					},
																					"nativeSrc": "9044:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9044:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9024:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9024:6:9"
																			},
																			"nativeSrc": "9024:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9024:39:9"
																		},
																		"nativeSrc": "9024:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9024:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8971:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8971:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8974:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8974:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8968:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8968:2:9"
																},
																"nativeSrc": "8968:13:9",
																"nodeType": "YulFunctionCall",
																"src": "8968:13:9"
															},
															"nativeSrc": "8960:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8982:19:9",
																"nodeType": "YulBlock",
																"src": "8982:19:9",
																"statements": [
																	{
																		"nativeSrc": "8984:15:9",
																		"nodeType": "YulAssignment",
																		"src": "8984:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8993:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "8993:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8996:2:9",
																					"nodeType": "YulLiteral",
																					"src": "8996:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8989:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8989:3:9"
																			},
																			"nativeSrc": "8989:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8989:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8984:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "8984:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8964:3:9",
																"nodeType": "YulBlock",
																"src": "8964:3:9",
																"statements": []
															},
															"src": "8960:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9093:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9093:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9098:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9098:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9089:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:9"
																		},
																		"nativeSrc": "9089:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9089:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9107:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9082:6:9"
																},
																"nativeSrc": "9082:27:9",
																"nodeType": "YulFunctionCall",
																"src": "9082:27:9"
															},
															"nativeSrc": "9082:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "9082:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "8865:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8909:3:9",
														"nodeType": "YulTypedName",
														"src": "8909:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8914:3:9",
														"nodeType": "YulTypedName",
														"src": "8914:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8919:6:9",
														"nodeType": "YulTypedName",
														"src": "8919:6:9",
														"type": ""
													}
												],
												"src": "8865:250:9"
											},
											{
												"body": {
													"nativeSrc": "9257:150:9",
													"nodeType": "YulBlock",
													"src": "9257:150:9",
													"statements": [
														{
															"nativeSrc": "9267:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9267:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9287:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9287:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9281:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9281:5:9"
																},
																"nativeSrc": "9281:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9281:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9271:6:9",
																	"nodeType": "YulTypedName",
																	"src": "9271:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9342:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9342:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9350:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9350:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9338:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:9"
																		},
																		"nativeSrc": "9338:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9338:17:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9357:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9362:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9362:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9303:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "9303:34:9"
																},
																"nativeSrc": "9303:66:9",
																"nodeType": "YulFunctionCall",
																"src": "9303:66:9"
															},
															"nativeSrc": "9303:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "9303:66:9"
														},
														{
															"nativeSrc": "9378:23:9",
															"nodeType": "YulAssignment",
															"src": "9378:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9389:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9389:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9394:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9394:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9385:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:9"
																},
																"nativeSrc": "9385:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9385:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9378:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9120:287:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9233:3:9",
														"nodeType": "YulTypedName",
														"src": "9233:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9238:6:9",
														"nodeType": "YulTypedName",
														"src": "9238:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9249:3:9",
														"nodeType": "YulTypedName",
														"src": "9249:3:9",
														"type": ""
													}
												],
												"src": "9120:287:9"
											},
											{
												"body": {
													"nativeSrc": "9471:120:9",
													"nodeType": "YulBlock",
													"src": "9471:120:9",
													"statements": [
														{
															"nativeSrc": "9481:22:9",
															"nodeType": "YulAssignment",
															"src": "9481:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9496:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9496:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9490:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9490:5:9"
																},
																"nativeSrc": "9490:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9490:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9481:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9481:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9569:16:9",
																"nodeType": "YulBlock",
																"src": "9569:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9578:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9578:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9581:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9581:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9571:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9571:6:9"
																			},
																			"nativeSrc": "9571:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9571:12:9"
																		},
																		"nativeSrc": "9571:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9571:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9525:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9525:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9536:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9536:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9543:22:9",
																						"nodeType": "YulLiteral",
																						"src": "9543:22:9",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9532:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9532:3:9"
																				},
																				"nativeSrc": "9532:34:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9532:34:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9522:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9522:2:9"
																		},
																		"nativeSrc": "9522:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9522:45:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9515:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:9"
																},
																"nativeSrc": "9515:53:9",
																"nodeType": "YulFunctionCall",
																"src": "9515:53:9"
															},
															"nativeSrc": "9512:73:9",
															"nodeType": "YulIf",
															"src": "9512:73:9"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "9412:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9450:6:9",
														"nodeType": "YulTypedName",
														"src": "9450:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9461:5:9",
														"nodeType": "YulTypedName",
														"src": "9461:5:9",
														"type": ""
													}
												],
												"src": "9412:179:9"
											},
											{
												"body": {
													"nativeSrc": "9742:425:9",
													"nodeType": "YulBlock",
													"src": "9742:425:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9789:16:9",
																"nodeType": "YulBlock",
																"src": "9789:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9798:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9798:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9801:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9801:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9791:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9791:6:9"
																			},
																			"nativeSrc": "9791:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9791:12:9"
																		},
																		"nativeSrc": "9791:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9791:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9763:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9763:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9772:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9772:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9759:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9759:3:9"
																		},
																		"nativeSrc": "9759:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9759:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9784:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9784:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9755:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9755:3:9"
																},
																"nativeSrc": "9755:33:9",
																"nodeType": "YulFunctionCall",
																"src": "9755:33:9"
															},
															"nativeSrc": "9752:53:9",
															"nodeType": "YulIf",
															"src": "9752:53:9"
														},
														{
															"nativeSrc": "9814:49:9",
															"nodeType": "YulAssignment",
															"src": "9814:49:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9853:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9853:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "9824:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "9824:28:9"
																},
																"nativeSrc": "9824:39:9",
																"nodeType": "YulFunctionCall",
																"src": "9824:39:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9814:6:9"
																}
															]
														},
														{
															"nativeSrc": "9872:35:9",
															"nodeType": "YulAssignment",
															"src": "9872:35:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9892:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9892:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9903:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9903:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9888:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:9"
																		},
																		"nativeSrc": "9888:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9888:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9882:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9882:5:9"
																},
																"nativeSrc": "9882:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9882:25:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9872:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:9"
																}
															]
														},
														{
															"nativeSrc": "9916:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9916:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "9929:1:9",
																"nodeType": "YulLiteral",
																"src": "9929:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9920:5:9",
																	"nodeType": "YulTypedName",
																	"src": "9920:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9939:34:9",
															"nodeType": "YulAssignment",
															"src": "9939:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9958:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9969:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9954:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:9"
																		},
																		"nativeSrc": "9954:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9954:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9948:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9948:5:9"
																},
																"nativeSrc": "9948:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9948:25:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9939:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9939:5:9"
																}
															]
														},
														{
															"nativeSrc": "9982:15:9",
															"nodeType": "YulAssignment",
															"src": "9982:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "9992:5:9",
																"nodeType": "YulIdentifier",
																"src": "9992:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9982:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9982:6:9"
																}
															]
														},
														{
															"nativeSrc": "10006:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10006:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "10021:1:9",
																"nodeType": "YulLiteral",
																"src": "10021:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "10010:7:9",
																	"nodeType": "YulTypedName",
																	"src": "10010:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10031:36:9",
															"nodeType": "YulAssignment",
															"src": "10031:36:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10052:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10063:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10063:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10048:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:9"
																		},
																		"nativeSrc": "10048:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10048:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10042:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10042:5:9"
																},
																"nativeSrc": "10042:25:9",
																"nodeType": "YulFunctionCall",
																"src": "10042:25:9"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "10031:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10031:7:9"
																}
															]
														},
														{
															"nativeSrc": "10076:17:9",
															"nodeType": "YulAssignment",
															"src": "10076:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "10086:7:9",
																"nodeType": "YulIdentifier",
																"src": "10086:7:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "10076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:9"
																}
															]
														},
														{
															"nativeSrc": "10102:59:9",
															"nodeType": "YulAssignment",
															"src": "10102:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10145:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10156:3:9",
																				"nodeType": "YulLiteral",
																				"src": "10156:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:9"
																		},
																		"nativeSrc": "10141:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10141:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10112:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "10112:28:9"
																},
																"nativeSrc": "10112:49:9",
																"nodeType": "YulFunctionCall",
																"src": "10112:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "10102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10102:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9596:571:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9676:9:9",
														"nodeType": "YulTypedName",
														"src": "9676:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9687:7:9",
														"nodeType": "YulTypedName",
														"src": "9687:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9699:6:9",
														"nodeType": "YulTypedName",
														"src": "9699:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9707:6:9",
														"nodeType": "YulTypedName",
														"src": "9707:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9715:6:9",
														"nodeType": "YulTypedName",
														"src": "9715:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9723:6:9",
														"nodeType": "YulTypedName",
														"src": "9723:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9731:6:9",
														"nodeType": "YulTypedName",
														"src": "9731:6:9",
														"type": ""
													}
												],
												"src": "9596:571:9"
											},
											{
												"body": {
													"nativeSrc": "10251:168:9",
													"nodeType": "YulBlock",
													"src": "10251:168:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10297:16:9",
																"nodeType": "YulBlock",
																"src": "10297:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10306:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10306:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10309:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10309:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10299:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10299:6:9"
																			},
																			"nativeSrc": "10299:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10299:12:9"
																		},
																		"nativeSrc": "10299:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10299:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10272:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10272:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10281:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10268:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10268:3:9"
																		},
																		"nativeSrc": "10268:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10268:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10293:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10264:3:9"
																},
																"nativeSrc": "10264:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10264:32:9"
															},
															"nativeSrc": "10261:52:9",
															"nodeType": "YulIf",
															"src": "10261:52:9"
														},
														{
															"nativeSrc": "10322:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10322:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10341:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10335:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10335:5:9"
																},
																"nativeSrc": "10335:16:9",
																"nodeType": "YulFunctionCall",
																"src": "10335:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10326:5:9",
																	"nodeType": "YulTypedName",
																	"src": "10326:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10383:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10383:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "10360:22:9",
																	"nodeType": "YulIdentifier",
																	"src": "10360:22:9"
																},
																"nativeSrc": "10360:29:9",
																"nodeType": "YulFunctionCall",
																"src": "10360:29:9"
															},
															"nativeSrc": "10360:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "10360:29:9"
														},
														{
															"nativeSrc": "10398:15:9",
															"nodeType": "YulAssignment",
															"src": "10398:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "10408:5:9",
																"nodeType": "YulIdentifier",
																"src": "10408:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10398:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "10172:247:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10217:9:9",
														"nodeType": "YulTypedName",
														"src": "10217:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10228:7:9",
														"nodeType": "YulTypedName",
														"src": "10228:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10240:6:9",
														"nodeType": "YulTypedName",
														"src": "10240:6:9",
														"type": ""
													}
												],
												"src": "10172:247:9"
											},
											{
												"body": {
													"nativeSrc": "10505:149:9",
													"nodeType": "YulBlock",
													"src": "10505:149:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10551:16:9",
																"nodeType": "YulBlock",
																"src": "10551:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10560:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10560:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10563:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10563:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10553:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10553:6:9"
																			},
																			"nativeSrc": "10553:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10553:12:9"
																		},
																		"nativeSrc": "10553:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10553:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10526:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10526:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10535:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10535:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10522:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10522:3:9"
																		},
																		"nativeSrc": "10522:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10522:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10547:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10547:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10518:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:9"
																},
																"nativeSrc": "10518:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10518:32:9"
															},
															"nativeSrc": "10515:52:9",
															"nodeType": "YulIf",
															"src": "10515:52:9"
														},
														{
															"nativeSrc": "10576:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10576:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "10589:1:9",
																"nodeType": "YulLiteral",
																"src": "10589:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10580:5:9",
																	"nodeType": "YulTypedName",
																	"src": "10580:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10599:25:9",
															"nodeType": "YulAssignment",
															"src": "10599:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10614:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10614:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10608:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10608:5:9"
																},
																"nativeSrc": "10608:16:9",
																"nodeType": "YulFunctionCall",
																"src": "10608:16:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10599:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10599:5:9"
																}
															]
														},
														{
															"nativeSrc": "10633:15:9",
															"nodeType": "YulAssignment",
															"src": "10633:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "10643:5:9",
																"nodeType": "YulIdentifier",
																"src": "10643:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10633:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10424:230:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10471:9:9",
														"nodeType": "YulTypedName",
														"src": "10471:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10482:7:9",
														"nodeType": "YulTypedName",
														"src": "10482:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10494:6:9",
														"nodeType": "YulTypedName",
														"src": "10494:6:9",
														"type": ""
													}
												],
												"src": "10424:230:9"
											},
											{
												"body": {
													"nativeSrc": "10833:224:9",
													"nodeType": "YulBlock",
													"src": "10833:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10850:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10850:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10861:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10861:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10843:6:9"
																},
																"nativeSrc": "10843:21:9",
																"nodeType": "YulFunctionCall",
																"src": "10843:21:9"
															},
															"nativeSrc": "10843:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "10843:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10884:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10884:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10895:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10895:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10880:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10880:3:9"
																		},
																		"nativeSrc": "10880:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10880:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10900:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10873:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10873:6:9"
																},
																"nativeSrc": "10873:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10873:30:9"
															},
															"nativeSrc": "10873:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "10873:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10923:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10923:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10934:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10934:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10919:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10919:3:9"
																		},
																		"nativeSrc": "10919:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10919:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c7420746f74616c537570706c79",
																		"kind": "string",
																		"nativeSrc": "10939:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10939:34:9",
																		"type": "",
																		"value": "OracleManager: vault totalSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10912:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10912:6:9"
																},
																"nativeSrc": "10912:62:9",
																"nodeType": "YulFunctionCall",
																"src": "10912:62:9"
															},
															"nativeSrc": "10912:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "10912:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10994:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10994:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11005:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11005:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10990:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10990:3:9"
																		},
																		"nativeSrc": "10990:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10990:18:9"
																	},
																	{
																		"hexValue": "3d30",
																		"kind": "string",
																		"nativeSrc": "11010:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11010:4:9",
																		"type": "",
																		"value": "=0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10983:6:9"
																},
																"nativeSrc": "10983:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10983:32:9"
															},
															"nativeSrc": "10983:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "10983:32:9"
														},
														{
															"nativeSrc": "11024:27:9",
															"nodeType": "YulAssignment",
															"src": "11024:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11036:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11036:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11047:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11047:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11032:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11032:3:9"
																},
																"nativeSrc": "11032:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11032:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11024:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11024:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10659:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10810:9:9",
														"nodeType": "YulTypedName",
														"src": "10810:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10824:4:9",
														"nodeType": "YulTypedName",
														"src": "10824:4:9",
														"type": ""
													}
												],
												"src": "10659:398:9"
											},
											{
												"body": {
													"nativeSrc": "11236:180:9",
													"nodeType": "YulBlock",
													"src": "11236:180:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11253:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11253:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11264:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11264:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:9"
																},
																"nativeSrc": "11246:21:9",
																"nodeType": "YulFunctionCall",
																"src": "11246:21:9"
															},
															"nativeSrc": "11246:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "11246:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11287:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11287:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11298:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11298:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11283:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:9"
																		},
																		"nativeSrc": "11283:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11283:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11303:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11303:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11276:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:9"
																},
																"nativeSrc": "11276:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11276:30:9"
															},
															"nativeSrc": "11276:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11276:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11326:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11326:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11337:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11337:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11322:3:9"
																		},
																		"nativeSrc": "11322:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11322:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a206e6f204e465420696e207661756c74",
																		"kind": "string",
																		"nativeSrc": "11342:32:9",
																		"nodeType": "YulLiteral",
																		"src": "11342:32:9",
																		"type": "",
																		"value": "OracleManager: no NFT in vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11315:6:9"
																},
																"nativeSrc": "11315:60:9",
																"nodeType": "YulFunctionCall",
																"src": "11315:60:9"
															},
															"nativeSrc": "11315:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "11315:60:9"
														},
														{
															"nativeSrc": "11384:26:9",
															"nodeType": "YulAssignment",
															"src": "11384:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11396:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11396:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11407:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11407:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11392:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11392:3:9"
																},
																"nativeSrc": "11392:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11392:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11384:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11384:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11062:354:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11213:9:9",
														"nodeType": "YulTypedName",
														"src": "11213:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11227:4:9",
														"nodeType": "YulTypedName",
														"src": "11227:4:9",
														"type": ""
													}
												],
												"src": "11062:354:9"
											},
											{
												"body": {
													"nativeSrc": "11595:224:9",
													"nodeType": "YulBlock",
													"src": "11595:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11612:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11612:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11623:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11623:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11605:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:9"
																},
																"nativeSrc": "11605:21:9",
																"nodeType": "YulFunctionCall",
																"src": "11605:21:9"
															},
															"nativeSrc": "11605:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "11605:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11646:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11657:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:9"
																		},
																		"nativeSrc": "11642:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11662:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11662:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11635:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:9"
																},
																"nativeSrc": "11635:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11635:30:9"
															},
															"nativeSrc": "11635:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11635:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11685:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11685:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11696:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11681:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11681:3:9"
																		},
																		"nativeSrc": "11681:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11681:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d",
																		"kind": "string",
																		"nativeSrc": "11701:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11701:34:9",
																		"type": "",
																		"value": "OracleManager: invalid positionM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11674:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11674:6:9"
																},
																"nativeSrc": "11674:62:9",
																"nodeType": "YulFunctionCall",
																"src": "11674:62:9"
															},
															"nativeSrc": "11674:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "11674:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11756:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11756:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11767:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11767:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11752:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11752:3:9"
																		},
																		"nativeSrc": "11752:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11752:18:9"
																	},
																	{
																		"hexValue": "6772",
																		"kind": "string",
																		"nativeSrc": "11772:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11772:4:9",
																		"type": "",
																		"value": "gr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11745:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11745:6:9"
																},
																"nativeSrc": "11745:32:9",
																"nodeType": "YulFunctionCall",
																"src": "11745:32:9"
															},
															"nativeSrc": "11745:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "11745:32:9"
														},
														{
															"nativeSrc": "11786:27:9",
															"nodeType": "YulAssignment",
															"src": "11786:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11798:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11798:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11809:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11809:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11794:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11794:3:9"
																},
																"nativeSrc": "11794:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11794:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11786:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11786:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11421:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11572:9:9",
														"nodeType": "YulTypedName",
														"src": "11572:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11586:4:9",
														"nodeType": "YulTypedName",
														"src": "11586:4:9",
														"type": ""
													}
												],
												"src": "11421:398:9"
											},
											{
												"body": {
													"nativeSrc": "11925:76:9",
													"nodeType": "YulBlock",
													"src": "11925:76:9",
													"statements": [
														{
															"nativeSrc": "11935:26:9",
															"nodeType": "YulAssignment",
															"src": "11935:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11947:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11947:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11958:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11958:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11943:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11943:3:9"
																},
																"nativeSrc": "11943:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11943:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11935:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11935:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11977:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11977:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11988:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11988:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11970:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11970:6:9"
																},
																"nativeSrc": "11970:25:9",
																"nodeType": "YulFunctionCall",
																"src": "11970:25:9"
															},
															"nativeSrc": "11970:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "11970:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11824:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11894:9:9",
														"nodeType": "YulTypedName",
														"src": "11894:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11905:6:9",
														"nodeType": "YulTypedName",
														"src": "11905:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11916:4:9",
														"nodeType": "YulTypedName",
														"src": "11916:4:9",
														"type": ""
													}
												],
												"src": "11824:177:9"
											},
											{
												"body": {
													"nativeSrc": "12127:275:9",
													"nodeType": "YulBlock",
													"src": "12127:275:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12144:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12144:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12155:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12155:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12137:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12137:6:9"
																},
																"nativeSrc": "12137:21:9",
																"nodeType": "YulFunctionCall",
																"src": "12137:21:9"
															},
															"nativeSrc": "12137:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "12137:21:9"
														},
														{
															"nativeSrc": "12167:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12167:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12187:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12187:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12181:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12181:5:9"
																},
																"nativeSrc": "12181:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12181:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12171:6:9",
																	"nodeType": "YulTypedName",
																	"src": "12171:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12214:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12225:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12210:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:9"
																		},
																		"nativeSrc": "12210:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12203:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:9"
																},
																"nativeSrc": "12203:34:9",
																"nodeType": "YulFunctionCall",
																"src": "12203:34:9"
															},
															"nativeSrc": "12203:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "12203:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12285:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12285:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12293:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12293:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12281:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12281:3:9"
																		},
																		"nativeSrc": "12281:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12281:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12302:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12302:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12313:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12313:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12298:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12298:3:9"
																		},
																		"nativeSrc": "12298:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12298:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12318:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12318:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12246:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "12246:34:9"
																},
																"nativeSrc": "12246:79:9",
																"nodeType": "YulFunctionCall",
																"src": "12246:79:9"
															},
															"nativeSrc": "12246:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "12246:79:9"
														},
														{
															"nativeSrc": "12334:62:9",
															"nodeType": "YulAssignment",
															"src": "12334:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12350:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12350:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "12369:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "12369:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12377:2:9",
																								"nodeType": "YulLiteral",
																								"src": "12377:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12365:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12365:3:9"
																						},
																						"nativeSrc": "12365:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12365:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12386:2:9",
																								"nodeType": "YulLiteral",
																								"src": "12386:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "12382:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12382:3:9"
																						},
																						"nativeSrc": "12382:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12382:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12361:3:9"
																				},
																				"nativeSrc": "12361:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12361:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12346:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12346:3:9"
																		},
																		"nativeSrc": "12346:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12346:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12393:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12393:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12342:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12342:3:9"
																},
																"nativeSrc": "12342:54:9",
																"nodeType": "YulFunctionCall",
																"src": "12342:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12334:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12334:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12006:396:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12096:9:9",
														"nodeType": "YulTypedName",
														"src": "12096:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12107:6:9",
														"nodeType": "YulTypedName",
														"src": "12107:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12118:4:9",
														"nodeType": "YulTypedName",
														"src": "12118:4:9",
														"type": ""
													}
												],
												"src": "12006:396:9"
											},
											{
												"body": {
													"nativeSrc": "12475:78:9",
													"nodeType": "YulBlock",
													"src": "12475:78:9",
													"statements": [
														{
															"nativeSrc": "12485:22:9",
															"nodeType": "YulAssignment",
															"src": "12485:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12500:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12500:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12494:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12494:5:9"
																},
																"nativeSrc": "12494:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12494:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12485:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12485:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12541:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12541:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "12516:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "12516:24:9"
																},
																"nativeSrc": "12516:31:9",
																"nodeType": "YulFunctionCall",
																"src": "12516:31:9"
															},
															"nativeSrc": "12516:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "12516:31:9"
														}
													]
												},
												"name": "abi_decode_address_payable_fromMemory",
												"nativeSrc": "12407:146:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12454:6:9",
														"nodeType": "YulTypedName",
														"src": "12454:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12465:5:9",
														"nodeType": "YulTypedName",
														"src": "12465:5:9",
														"type": ""
													}
												],
												"src": "12407:146:9"
											},
											{
												"body": {
													"nativeSrc": "12617:106:9",
													"nodeType": "YulBlock",
													"src": "12617:106:9",
													"statements": [
														{
															"nativeSrc": "12627:22:9",
															"nodeType": "YulAssignment",
															"src": "12627:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12642:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12642:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12636:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12636:5:9"
																},
																"nativeSrc": "12636:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12636:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12627:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12627:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12701:16:9",
																"nodeType": "YulBlock",
																"src": "12701:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12710:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12710:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12713:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12713:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12703:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12703:6:9"
																			},
																			"nativeSrc": "12703:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12703:12:9"
																		},
																		"nativeSrc": "12703:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12703:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12671:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12671:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12682:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12682:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12689:8:9",
																						"nodeType": "YulLiteral",
																						"src": "12689:8:9",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12678:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12678:3:9"
																				},
																				"nativeSrc": "12678:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12678:20:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12668:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12668:2:9"
																		},
																		"nativeSrc": "12668:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12668:31:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12661:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:9"
																},
																"nativeSrc": "12661:39:9",
																"nodeType": "YulFunctionCall",
																"src": "12661:39:9"
															},
															"nativeSrc": "12658:59:9",
															"nodeType": "YulIf",
															"src": "12658:59:9"
														}
													]
												},
												"name": "abi_decode_uint24_fromMemory",
												"nativeSrc": "12558:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12596:6:9",
														"nodeType": "YulTypedName",
														"src": "12596:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12607:5:9",
														"nodeType": "YulTypedName",
														"src": "12607:5:9",
														"type": ""
													}
												],
												"src": "12558:165:9"
											},
											{
												"body": {
													"nativeSrc": "12786:106:9",
													"nodeType": "YulBlock",
													"src": "12786:106:9",
													"statements": [
														{
															"nativeSrc": "12796:22:9",
															"nodeType": "YulAssignment",
															"src": "12796:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12811:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12811:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12805:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12805:5:9"
																},
																"nativeSrc": "12805:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12805:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12796:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12796:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12870:16:9",
																"nodeType": "YulBlock",
																"src": "12870:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12879:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12879:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12882:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12882:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12872:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12872:6:9"
																			},
																			"nativeSrc": "12872:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12872:12:9"
																		},
																		"nativeSrc": "12872:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12872:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12840:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12840:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12858:1:9",
																						"nodeType": "YulLiteral",
																						"src": "12858:1:9",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nativeSrc": "12861:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12861:5:9"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nativeSrc": "12847:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "12847:10:9"
																				},
																				"nativeSrc": "12847:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12847:20:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12837:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12837:2:9"
																		},
																		"nativeSrc": "12837:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12837:31:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12830:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12830:6:9"
																},
																"nativeSrc": "12830:39:9",
																"nodeType": "YulFunctionCall",
																"src": "12830:39:9"
															},
															"nativeSrc": "12827:59:9",
															"nodeType": "YulIf",
															"src": "12827:59:9"
														}
													]
												},
												"name": "abi_decode_int24_fromMemory",
												"nativeSrc": "12728:164:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12765:6:9",
														"nodeType": "YulTypedName",
														"src": "12765:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12776:5:9",
														"nodeType": "YulTypedName",
														"src": "12776:5:9",
														"type": ""
													}
												],
												"src": "12728:164:9"
											},
											{
												"body": {
													"nativeSrc": "12957:132:9",
													"nodeType": "YulBlock",
													"src": "12957:132:9",
													"statements": [
														{
															"nativeSrc": "12967:22:9",
															"nodeType": "YulAssignment",
															"src": "12967:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12982:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12982:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12976:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12976:5:9"
																},
																"nativeSrc": "12976:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12976:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12967:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12967:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13067:16:9",
																"nodeType": "YulBlock",
																"src": "13067:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13076:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13076:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13079:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13079:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13069:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13069:6:9"
																			},
																			"nativeSrc": "13069:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13069:12:9"
																		},
																		"nativeSrc": "13069:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13069:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13011:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13011:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13022:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13022:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13029:34:9",
																						"nodeType": "YulLiteral",
																						"src": "13029:34:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "13018:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13018:3:9"
																				},
																				"nativeSrc": "13018:46:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13018:46:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13008:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13008:2:9"
																		},
																		"nativeSrc": "13008:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13008:57:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:9"
																},
																"nativeSrc": "13001:65:9",
																"nodeType": "YulFunctionCall",
																"src": "13001:65:9"
															},
															"nativeSrc": "12998:85:9",
															"nodeType": "YulIf",
															"src": "12998:85:9"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nativeSrc": "12897:192:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12936:6:9",
														"nodeType": "YulTypedName",
														"src": "12936:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12947:5:9",
														"nodeType": "YulTypedName",
														"src": "12947:5:9",
														"type": ""
													}
												],
												"src": "12897:192:9"
											},
											{
												"body": {
													"nativeSrc": "13382:1050:9",
													"nodeType": "YulBlock",
													"src": "13382:1050:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13429:16:9",
																"nodeType": "YulBlock",
																"src": "13429:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13438:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13438:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13441:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13441:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13431:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13431:6:9"
																			},
																			"nativeSrc": "13431:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13431:12:9"
																		},
																		"nativeSrc": "13431:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13431:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13403:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13403:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13412:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:9"
																		},
																		"nativeSrc": "13399:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13424:3:9",
																		"nodeType": "YulLiteral",
																		"src": "13424:3:9",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13395:3:9"
																},
																"nativeSrc": "13395:33:9",
																"nodeType": "YulFunctionCall",
																"src": "13395:33:9"
															},
															"nativeSrc": "13392:53:9",
															"nodeType": "YulIf",
															"src": "13392:53:9"
														},
														{
															"nativeSrc": "13454:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13454:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13473:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13473:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13467:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13467:5:9"
																},
																"nativeSrc": "13467:16:9",
																"nodeType": "YulFunctionCall",
																"src": "13467:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13458:5:9",
																	"nodeType": "YulTypedName",
																	"src": "13458:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13553:16:9",
																"nodeType": "YulBlock",
																"src": "13553:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13562:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13562:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13565:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13565:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13555:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13555:6:9"
																			},
																			"nativeSrc": "13555:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13555:12:9"
																		},
																		"nativeSrc": "13555:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13555:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13505:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13505:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13516:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13516:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13523:26:9",
																						"nodeType": "YulLiteral",
																						"src": "13523:26:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "13512:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13512:3:9"
																				},
																				"nativeSrc": "13512:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13512:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13502:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13502:2:9"
																		},
																		"nativeSrc": "13502:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13502:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13495:6:9"
																},
																"nativeSrc": "13495:57:9",
																"nodeType": "YulFunctionCall",
																"src": "13495:57:9"
															},
															"nativeSrc": "13492:77:9",
															"nodeType": "YulIf",
															"src": "13492:77:9"
														},
														{
															"nativeSrc": "13578:15:9",
															"nodeType": "YulAssignment",
															"src": "13578:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "13588:5:9",
																"nodeType": "YulIdentifier",
																"src": "13588:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13578:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13578:6:9"
																}
															]
														},
														{
															"nativeSrc": "13602:67:9",
															"nodeType": "YulAssignment",
															"src": "13602:67:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13654:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13654:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13665:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13665:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13650:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13650:3:9"
																		},
																		"nativeSrc": "13650:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13650:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13612:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "13612:37:9"
																},
																"nativeSrc": "13612:57:9",
																"nodeType": "YulFunctionCall",
																"src": "13612:57:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "13602:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13602:6:9"
																}
															]
														},
														{
															"nativeSrc": "13678:67:9",
															"nodeType": "YulAssignment",
															"src": "13678:67:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13730:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13730:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13741:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13741:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13726:3:9"
																		},
																		"nativeSrc": "13726:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13726:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13688:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "13688:37:9"
																},
																"nativeSrc": "13688:57:9",
																"nodeType": "YulFunctionCall",
																"src": "13688:57:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "13678:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13678:6:9"
																}
															]
														},
														{
															"nativeSrc": "13754:67:9",
															"nodeType": "YulAssignment",
															"src": "13754:67:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13806:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13806:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13817:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13817:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13802:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13802:3:9"
																		},
																		"nativeSrc": "13802:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13802:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13764:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "13764:37:9"
																},
																"nativeSrc": "13764:57:9",
																"nodeType": "YulFunctionCall",
																"src": "13764:57:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "13754:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:9"
																}
															]
														},
														{
															"nativeSrc": "13830:59:9",
															"nodeType": "YulAssignment",
															"src": "13830:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13884:3:9",
																				"nodeType": "YulLiteral",
																				"src": "13884:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13869:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13869:3:9"
																		},
																		"nativeSrc": "13869:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13869:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint24_fromMemory",
																	"nativeSrc": "13840:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "13840:28:9"
																},
																"nativeSrc": "13840:49:9",
																"nodeType": "YulFunctionCall",
																"src": "13840:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "13830:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:9"
																}
															]
														},
														{
															"nativeSrc": "13898:58:9",
															"nodeType": "YulAssignment",
															"src": "13898:58:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13940:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13940:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13951:3:9",
																				"nodeType": "YulLiteral",
																				"src": "13951:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13936:3:9"
																		},
																		"nativeSrc": "13936:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13936:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "13908:27:9",
																	"nodeType": "YulIdentifier",
																	"src": "13908:27:9"
																},
																"nativeSrc": "13908:48:9",
																"nodeType": "YulFunctionCall",
																"src": "13908:48:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "13898:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13898:6:9"
																}
															]
														},
														{
															"nativeSrc": "13965:58:9",
															"nodeType": "YulAssignment",
															"src": "13965:58:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14007:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14007:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14018:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14018:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14003:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14003:3:9"
																		},
																		"nativeSrc": "14003:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14003:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "13975:27:9",
																	"nodeType": "YulIdentifier",
																	"src": "13975:27:9"
																},
																"nativeSrc": "13975:48:9",
																"nodeType": "YulFunctionCall",
																"src": "13975:48:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "13965:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13965:6:9"
																}
															]
														},
														{
															"nativeSrc": "14032:60:9",
															"nodeType": "YulAssignment",
															"src": "14032:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14076:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14076:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14087:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14087:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14072:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14072:3:9"
																		},
																		"nativeSrc": "14072:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14072:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14042:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "14042:29:9"
																},
																"nativeSrc": "14042:50:9",
																"nodeType": "YulFunctionCall",
																"src": "14042:50:9"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "14032:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:9"
																}
															]
														},
														{
															"nativeSrc": "14101:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14101:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "14116:1:9",
																"nodeType": "YulLiteral",
																"src": "14116:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "14105:7:9",
																	"nodeType": "YulTypedName",
																	"src": "14105:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14126:37:9",
															"nodeType": "YulAssignment",
															"src": "14126:37:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14147:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14147:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14158:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14158:3:9",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14143:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14143:3:9"
																		},
																		"nativeSrc": "14143:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14143:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14137:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14137:5:9"
																},
																"nativeSrc": "14137:26:9",
																"nodeType": "YulFunctionCall",
																"src": "14137:26:9"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "14126:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14126:7:9"
																}
															]
														},
														{
															"nativeSrc": "14172:17:9",
															"nodeType": "YulAssignment",
															"src": "14172:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "14182:7:9",
																"nodeType": "YulIdentifier",
																"src": "14182:7:9"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "14172:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:9"
																}
															]
														},
														{
															"nativeSrc": "14198:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14198:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "14213:1:9",
																"nodeType": "YulLiteral",
																"src": "14213:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "14202:7:9",
																	"nodeType": "YulTypedName",
																	"src": "14202:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14223:37:9",
															"nodeType": "YulAssignment",
															"src": "14223:37:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14244:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14244:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14255:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14255:3:9",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14240:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14240:3:9"
																		},
																		"nativeSrc": "14240:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14240:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14234:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14234:5:9"
																},
																"nativeSrc": "14234:26:9",
																"nodeType": "YulFunctionCall",
																"src": "14234:26:9"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "14223:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14223:7:9"
																}
															]
														},
														{
															"nativeSrc": "14269:17:9",
															"nodeType": "YulAssignment",
															"src": "14269:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "14279:7:9",
																"nodeType": "YulIdentifier",
																"src": "14279:7:9"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nativeSrc": "14269:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:9"
																}
															]
														},
														{
															"nativeSrc": "14295:61:9",
															"nodeType": "YulAssignment",
															"src": "14295:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14340:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14340:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14351:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14351:3:9",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14336:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14336:3:9"
																		},
																		"nativeSrc": "14336:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14336:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14306:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "14306:29:9"
																},
																"nativeSrc": "14306:50:9",
																"nodeType": "YulFunctionCall",
																"src": "14306:50:9"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nativeSrc": "14295:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14295:7:9"
																}
															]
														},
														{
															"nativeSrc": "14365:61:9",
															"nodeType": "YulAssignment",
															"src": "14365:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14410:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14410:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14421:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14421:3:9",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14406:3:9"
																		},
																		"nativeSrc": "14406:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14406:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14376:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "14376:29:9"
																},
																"nativeSrc": "14376:50:9",
																"nodeType": "YulFunctionCall",
																"src": "14376:50:9"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nativeSrc": "14365:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14365:7:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nativeSrc": "13094:1338:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13258:9:9",
														"nodeType": "YulTypedName",
														"src": "13258:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13269:7:9",
														"nodeType": "YulTypedName",
														"src": "13269:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13281:6:9",
														"nodeType": "YulTypedName",
														"src": "13281:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13289:6:9",
														"nodeType": "YulTypedName",
														"src": "13289:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13297:6:9",
														"nodeType": "YulTypedName",
														"src": "13297:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13305:6:9",
														"nodeType": "YulTypedName",
														"src": "13305:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13313:6:9",
														"nodeType": "YulTypedName",
														"src": "13313:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13321:6:9",
														"nodeType": "YulTypedName",
														"src": "13321:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "13329:6:9",
														"nodeType": "YulTypedName",
														"src": "13329:6:9",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "13337:6:9",
														"nodeType": "YulTypedName",
														"src": "13337:6:9",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "13345:6:9",
														"nodeType": "YulTypedName",
														"src": "13345:6:9",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "13353:6:9",
														"nodeType": "YulTypedName",
														"src": "13353:6:9",
														"type": ""
													},
													{
														"name": "value10",
														"nativeSrc": "13361:7:9",
														"nodeType": "YulTypedName",
														"src": "13361:7:9",
														"type": ""
													},
													{
														"name": "value11",
														"nativeSrc": "13370:7:9",
														"nodeType": "YulTypedName",
														"src": "13370:7:9",
														"type": ""
													}
												],
												"src": "13094:1338:9"
											},
											{
												"body": {
													"nativeSrc": "14611:177:9",
													"nodeType": "YulBlock",
													"src": "14611:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14628:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14628:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14639:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14639:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14621:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14621:6:9"
																},
																"nativeSrc": "14621:21:9",
																"nodeType": "YulFunctionCall",
																"src": "14621:21:9"
															},
															"nativeSrc": "14621:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "14621:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14662:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14662:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14673:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14673:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14658:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14658:3:9"
																		},
																		"nativeSrc": "14658:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14658:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14678:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14678:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14651:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:9"
																},
																"nativeSrc": "14651:30:9",
																"nodeType": "YulFunctionCall",
																"src": "14651:30:9"
															},
															"nativeSrc": "14651:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "14651:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14701:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14701:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14712:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14712:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14697:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14697:3:9"
																		},
																		"nativeSrc": "14697:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14697:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f6f6c",
																		"kind": "string",
																		"nativeSrc": "14717:29:9",
																		"nodeType": "YulLiteral",
																		"src": "14717:29:9",
																		"type": "",
																		"value": "OracleManager: invalid pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14690:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:9"
																},
																"nativeSrc": "14690:57:9",
																"nodeType": "YulFunctionCall",
																"src": "14690:57:9"
															},
															"nativeSrc": "14690:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "14690:57:9"
														},
														{
															"nativeSrc": "14756:26:9",
															"nodeType": "YulAssignment",
															"src": "14756:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14768:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14768:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14779:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14779:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14764:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:9"
																},
																"nativeSrc": "14764:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14764:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14756:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14756:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14437:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14588:9:9",
														"nodeType": "YulTypedName",
														"src": "14588:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14602:4:9",
														"nodeType": "YulTypedName",
														"src": "14602:4:9",
														"type": ""
													}
												],
												"src": "14437:351:9"
											},
											{
												"body": {
													"nativeSrc": "14852:104:9",
													"nodeType": "YulBlock",
													"src": "14852:104:9",
													"statements": [
														{
															"nativeSrc": "14862:22:9",
															"nodeType": "YulAssignment",
															"src": "14862:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14877:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14877:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14871:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14871:5:9"
																},
																"nativeSrc": "14871:13:9",
																"nodeType": "YulFunctionCall",
																"src": "14871:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14862:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14862:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14934:16:9",
																"nodeType": "YulBlock",
																"src": "14934:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14943:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14943:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14946:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14946:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14936:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14936:6:9"
																			},
																			"nativeSrc": "14936:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14936:12:9"
																		},
																		"nativeSrc": "14936:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14936:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14906:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14906:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14917:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "14917:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14924:6:9",
																						"nodeType": "YulLiteral",
																						"src": "14924:6:9",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "14913:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14913:3:9"
																				},
																				"nativeSrc": "14913:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14913:18:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14903:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14903:2:9"
																		},
																		"nativeSrc": "14903:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14903:29:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14896:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14896:6:9"
																},
																"nativeSrc": "14896:37:9",
																"nodeType": "YulFunctionCall",
																"src": "14896:37:9"
															},
															"nativeSrc": "14893:57:9",
															"nodeType": "YulIf",
															"src": "14893:57:9"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nativeSrc": "14793:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14831:6:9",
														"nodeType": "YulTypedName",
														"src": "14831:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14842:5:9",
														"nodeType": "YulTypedName",
														"src": "14842:5:9",
														"type": ""
													}
												],
												"src": "14793:163:9"
											},
											{
												"body": {
													"nativeSrc": "15134:670:9",
													"nodeType": "YulBlock",
													"src": "15134:670:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "15181:16:9",
																"nodeType": "YulBlock",
																"src": "15181:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15190:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15190:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15193:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15193:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15183:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15183:6:9"
																			},
																			"nativeSrc": "15183:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15183:12:9"
																		},
																		"nativeSrc": "15183:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15183:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15155:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15155:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15164:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15164:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15151:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15151:3:9"
																		},
																		"nativeSrc": "15151:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15151:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15176:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15176:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15147:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15147:3:9"
																},
																"nativeSrc": "15147:33:9",
																"nodeType": "YulFunctionCall",
																"src": "15147:33:9"
															},
															"nativeSrc": "15144:53:9",
															"nodeType": "YulIf",
															"src": "15144:53:9"
														},
														{
															"nativeSrc": "15206:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "15206:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15225:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15225:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15219:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15219:5:9"
																},
																"nativeSrc": "15219:16:9",
																"nodeType": "YulFunctionCall",
																"src": "15219:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15210:5:9",
																	"nodeType": "YulTypedName",
																	"src": "15210:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15269:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15269:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "15244:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "15244:24:9"
																},
																"nativeSrc": "15244:31:9",
																"nodeType": "YulFunctionCall",
																"src": "15244:31:9"
															},
															"nativeSrc": "15244:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "15244:31:9"
														},
														{
															"nativeSrc": "15284:15:9",
															"nodeType": "YulAssignment",
															"src": "15284:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "15294:5:9",
																"nodeType": "YulIdentifier",
																"src": "15294:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15284:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15284:6:9"
																}
															]
														},
														{
															"nativeSrc": "15308:57:9",
															"nodeType": "YulAssignment",
															"src": "15308:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15350:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15350:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15361:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15361:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15346:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15346:3:9"
																		},
																		"nativeSrc": "15346:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15346:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "15318:27:9",
																	"nodeType": "YulIdentifier",
																	"src": "15318:27:9"
																},
																"nativeSrc": "15318:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15318:47:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "15308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15308:6:9"
																}
															]
														},
														{
															"nativeSrc": "15374:58:9",
															"nodeType": "YulAssignment",
															"src": "15374:58:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15417:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15417:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15428:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15428:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15413:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15413:3:9"
																		},
																		"nativeSrc": "15413:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15413:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15384:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "15384:28:9"
																},
																"nativeSrc": "15384:48:9",
																"nodeType": "YulFunctionCall",
																"src": "15384:48:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "15374:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15374:6:9"
																}
															]
														},
														{
															"nativeSrc": "15441:58:9",
															"nodeType": "YulAssignment",
															"src": "15441:58:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15484:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15484:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15495:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15495:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15480:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15480:3:9"
																		},
																		"nativeSrc": "15480:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15480:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15451:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "15451:28:9"
																},
																"nativeSrc": "15451:48:9",
																"nodeType": "YulFunctionCall",
																"src": "15451:48:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "15441:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15441:6:9"
																}
															]
														},
														{
															"nativeSrc": "15508:59:9",
															"nodeType": "YulAssignment",
															"src": "15508:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15551:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15551:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15562:3:9",
																				"nodeType": "YulLiteral",
																				"src": "15562:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15547:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15547:3:9"
																		},
																		"nativeSrc": "15547:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15547:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15518:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "15518:28:9"
																},
																"nativeSrc": "15518:49:9",
																"nodeType": "YulFunctionCall",
																"src": "15518:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "15508:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15508:6:9"
																}
															]
														},
														{
															"nativeSrc": "15576:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "15576:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15601:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15601:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15612:3:9",
																				"nodeType": "YulLiteral",
																				"src": "15612:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15597:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:9"
																		},
																		"nativeSrc": "15597:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15597:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15591:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15591:5:9"
																},
																"nativeSrc": "15591:26:9",
																"nodeType": "YulFunctionCall",
																"src": "15591:26:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "15580:7:9",
																	"nodeType": "YulTypedName",
																	"src": "15580:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "15649:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "15649:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "15626:22:9",
																	"nodeType": "YulIdentifier",
																	"src": "15626:22:9"
																},
																"nativeSrc": "15626:31:9",
																"nodeType": "YulFunctionCall",
																"src": "15626:31:9"
															},
															"nativeSrc": "15626:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "15626:31:9"
														},
														{
															"nativeSrc": "15666:17:9",
															"nodeType": "YulAssignment",
															"src": "15666:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "15676:7:9",
																"nodeType": "YulIdentifier",
																"src": "15676:7:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "15666:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15666:6:9"
																}
															]
														},
														{
															"nativeSrc": "15692:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "15692:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15717:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15717:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15728:3:9",
																				"nodeType": "YulLiteral",
																				"src": "15728:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15713:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15713:3:9"
																		},
																		"nativeSrc": "15713:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15713:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15707:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15707:5:9"
																},
																"nativeSrc": "15707:26:9",
																"nodeType": "YulFunctionCall",
																"src": "15707:26:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "15696:7:9",
																	"nodeType": "YulTypedName",
																	"src": "15696:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "15764:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "15764:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "15742:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "15742:21:9"
																},
																"nativeSrc": "15742:30:9",
																"nodeType": "YulFunctionCall",
																"src": "15742:30:9"
															},
															"nativeSrc": "15742:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "15742:30:9"
														},
														{
															"nativeSrc": "15781:17:9",
															"nodeType": "YulAssignment",
															"src": "15781:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "15791:7:9",
																"nodeType": "YulIdentifier",
																"src": "15791:7:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "15781:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15781:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "14961:843:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15052:9:9",
														"nodeType": "YulTypedName",
														"src": "15052:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15063:7:9",
														"nodeType": "YulTypedName",
														"src": "15063:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15075:6:9",
														"nodeType": "YulTypedName",
														"src": "15075:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15083:6:9",
														"nodeType": "YulTypedName",
														"src": "15083:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15091:6:9",
														"nodeType": "YulTypedName",
														"src": "15091:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15099:6:9",
														"nodeType": "YulTypedName",
														"src": "15099:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15107:6:9",
														"nodeType": "YulTypedName",
														"src": "15107:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15115:6:9",
														"nodeType": "YulTypedName",
														"src": "15115:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "15123:6:9",
														"nodeType": "YulTypedName",
														"src": "15123:6:9",
														"type": ""
													}
												],
												"src": "14961:843:9"
											},
											{
												"body": {
													"nativeSrc": "15841:95:9",
													"nodeType": "YulBlock",
													"src": "15841:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15858:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15858:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15865:3:9",
																				"nodeType": "YulLiteral",
																				"src": "15865:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15870:10:9",
																				"nodeType": "YulLiteral",
																				"src": "15870:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15861:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15861:3:9"
																		},
																		"nativeSrc": "15861:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15861:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15851:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15851:6:9"
																},
																"nativeSrc": "15851:31:9",
																"nodeType": "YulFunctionCall",
																"src": "15851:31:9"
															},
															"nativeSrc": "15851:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "15851:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15898:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15898:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15901:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15901:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15891:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15891:6:9"
																},
																"nativeSrc": "15891:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15891:15:9"
															},
															"nativeSrc": "15891:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15891:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15922:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15922:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15925:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15925:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15915:6:9"
																},
																"nativeSrc": "15915:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15915:15:9"
															},
															"nativeSrc": "15915:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15915:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15809:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "15809:127:9"
											},
											{
												"body": {
													"nativeSrc": "16032:825:9",
													"nodeType": "YulBlock",
													"src": "16032:825:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "16078:16:9",
																"nodeType": "YulBlock",
																"src": "16078:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16087:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16087:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16090:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16090:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16080:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16080:6:9"
																			},
																			"nativeSrc": "16080:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16080:12:9"
																		},
																		"nativeSrc": "16080:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16080:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16053:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "16053:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16062:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16062:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16049:3:9"
																		},
																		"nativeSrc": "16049:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16049:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16045:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16045:3:9"
																},
																"nativeSrc": "16045:32:9",
																"nodeType": "YulFunctionCall",
																"src": "16045:32:9"
															},
															"nativeSrc": "16042:52:9",
															"nodeType": "YulIf",
															"src": "16042:52:9"
														},
														{
															"nativeSrc": "16103:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16103:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16123:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16123:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16117:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16117:5:9"
																},
																"nativeSrc": "16117:16:9",
																"nodeType": "YulFunctionCall",
																"src": "16117:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "16107:6:9",
																	"nodeType": "YulTypedName",
																	"src": "16107:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16176:16:9",
																"nodeType": "YulBlock",
																"src": "16176:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16185:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16185:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16188:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16188:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16178:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16178:6:9"
																			},
																			"nativeSrc": "16178:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16178:12:9"
																		},
																		"nativeSrc": "16178:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16178:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16148:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16148:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16156:18:9",
																		"nodeType": "YulLiteral",
																		"src": "16156:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16145:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16145:2:9"
																},
																"nativeSrc": "16145:30:9",
																"nodeType": "YulFunctionCall",
																"src": "16145:30:9"
															},
															"nativeSrc": "16142:50:9",
															"nodeType": "YulIf",
															"src": "16142:50:9"
														},
														{
															"nativeSrc": "16201:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16201:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16215:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16215:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16226:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16226:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16211:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16211:3:9"
																},
																"nativeSrc": "16211:22:9",
																"nodeType": "YulFunctionCall",
																"src": "16211:22:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16205:2:9",
																	"nodeType": "YulTypedName",
																	"src": "16205:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16281:16:9",
																"nodeType": "YulBlock",
																"src": "16281:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16290:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16290:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16293:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16293:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16283:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16283:6:9"
																			},
																			"nativeSrc": "16283:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16283:12:9"
																		},
																		"nativeSrc": "16283:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16283:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "16260:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "16260:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16264:4:9",
																						"nodeType": "YulLiteral",
																						"src": "16264:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16256:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16256:3:9"
																				},
																				"nativeSrc": "16256:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16256:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16271:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "16271:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "16252:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16252:3:9"
																		},
																		"nativeSrc": "16252:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16252:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16245:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16245:6:9"
																},
																"nativeSrc": "16245:35:9",
																"nodeType": "YulFunctionCall",
																"src": "16245:35:9"
															},
															"nativeSrc": "16242:55:9",
															"nodeType": "YulIf",
															"src": "16242:55:9"
														},
														{
															"nativeSrc": "16306:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16306:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "16326:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "16326:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16320:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16320:5:9"
																},
																"nativeSrc": "16320:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16320:9:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16310:6:9",
																	"nodeType": "YulTypedName",
																	"src": "16310:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16372:22:9",
																"nodeType": "YulBlock",
																"src": "16372:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16374:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16374:16:9"
																			},
																			"nativeSrc": "16374:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16374:18:9"
																		},
																		"nativeSrc": "16374:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16374:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "16344:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16344:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16352:18:9",
																		"nodeType": "YulLiteral",
																		"src": "16352:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16341:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16341:2:9"
																},
																"nativeSrc": "16341:30:9",
																"nodeType": "YulFunctionCall",
																"src": "16341:30:9"
															},
															"nativeSrc": "16338:56:9",
															"nodeType": "YulIf",
															"src": "16338:56:9"
														},
														{
															"nativeSrc": "16403:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16403:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16417:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16417:5:9"
																},
																"nativeSrc": "16417:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16417:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "16407:6:9",
																	"nodeType": "YulTypedName",
																	"src": "16407:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16435:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16435:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "16457:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16457:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "16481:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "16481:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16489:4:9",
																										"nodeType": "YulLiteral",
																										"src": "16489:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16477:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "16477:3:9"
																								},
																								"nativeSrc": "16477:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "16477:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "16500:2:9",
																										"nodeType": "YulLiteral",
																										"src": "16500:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "16496:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "16496:3:9"
																								},
																								"nativeSrc": "16496:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "16496:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "16473:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "16473:3:9"
																						},
																						"nativeSrc": "16473:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "16473:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16506:2:9",
																						"nodeType": "YulLiteral",
																						"src": "16506:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16469:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16469:3:9"
																				},
																				"nativeSrc": "16469:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16469:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16515:2:9",
																						"nodeType": "YulLiteral",
																						"src": "16515:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16511:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16511:3:9"
																				},
																				"nativeSrc": "16511:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16511:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16465:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16465:3:9"
																		},
																		"nativeSrc": "16465:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16465:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16453:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16453:3:9"
																},
																"nativeSrc": "16453:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16453:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "16439:10:9",
																	"nodeType": "YulTypedName",
																	"src": "16439:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16595:22:9",
																"nodeType": "YulBlock",
																"src": "16595:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16597:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16597:16:9"
																			},
																			"nativeSrc": "16597:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16597:18:9"
																		},
																		"nativeSrc": "16597:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16597:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "16538:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "16538:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16550:18:9",
																				"nodeType": "YulLiteral",
																				"src": "16550:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16535:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "16535:2:9"
																		},
																		"nativeSrc": "16535:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16535:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "16574:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "16574:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "16586:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16586:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16571:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "16571:2:9"
																		},
																		"nativeSrc": "16571:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16571:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16532:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16532:2:9"
																},
																"nativeSrc": "16532:62:9",
																"nodeType": "YulFunctionCall",
																"src": "16532:62:9"
															},
															"nativeSrc": "16529:88:9",
															"nodeType": "YulIf",
															"src": "16529:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16633:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16633:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "16637:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "16637:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16626:6:9"
																},
																"nativeSrc": "16626:22:9",
																"nodeType": "YulFunctionCall",
																"src": "16626:22:9"
															},
															"nativeSrc": "16626:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "16626:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "16664:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16664:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16672:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16672:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16657:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16657:6:9"
																},
																"nativeSrc": "16657:22:9",
																"nodeType": "YulFunctionCall",
																"src": "16657:22:9"
															},
															"nativeSrc": "16657:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "16657:22:9"
														},
														{
															"body": {
																"nativeSrc": "16729:16:9",
																"nodeType": "YulBlock",
																"src": "16729:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16738:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16738:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16741:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16741:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16731:6:9"
																			},
																			"nativeSrc": "16731:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16731:12:9"
																		},
																		"nativeSrc": "16731:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16731:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "16702:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "16702:2:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "16706:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "16706:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16698:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16698:3:9"
																				},
																				"nativeSrc": "16698:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16698:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16715:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16715:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16694:3:9"
																		},
																		"nativeSrc": "16694:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16694:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "16720:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "16720:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16691:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16691:2:9"
																},
																"nativeSrc": "16691:37:9",
																"nodeType": "YulFunctionCall",
																"src": "16691:37:9"
															},
															"nativeSrc": "16688:57:9",
															"nodeType": "YulIf",
															"src": "16688:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "16793:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "16793:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16797:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16797:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16789:3:9"
																		},
																		"nativeSrc": "16789:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16789:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16806:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16806:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16814:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16814:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16802:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16802:3:9"
																		},
																		"nativeSrc": "16802:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16802:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16819:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16819:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16754:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "16754:34:9"
																},
																"nativeSrc": "16754:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16754:72:9"
															},
															"nativeSrc": "16754:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16754:72:9"
														},
														{
															"nativeSrc": "16835:16:9",
															"nodeType": "YulAssignment",
															"src": "16835:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "16845:6:9",
																"nodeType": "YulIdentifier",
																"src": "16845:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16835:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16835:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "15941:916:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15998:9:9",
														"nodeType": "YulTypedName",
														"src": "15998:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16009:7:9",
														"nodeType": "YulTypedName",
														"src": "16009:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16021:6:9",
														"nodeType": "YulTypedName",
														"src": "16021:6:9",
														"type": ""
													}
												],
												"src": "15941:916:9"
											},
											{
												"body": {
													"nativeSrc": "17036:249:9",
													"nodeType": "YulBlock",
													"src": "17036:249:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17053:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17053:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17064:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17064:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17046:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17046:6:9"
																},
																"nativeSrc": "17046:21:9",
																"nodeType": "YulFunctionCall",
																"src": "17046:21:9"
															},
															"nativeSrc": "17046:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "17046:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17087:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17087:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17098:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17098:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17083:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17083:3:9"
																		},
																		"nativeSrc": "17083:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17083:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17103:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17103:2:9",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17076:6:9"
																},
																"nativeSrc": "17076:30:9",
																"nodeType": "YulFunctionCall",
																"src": "17076:30:9"
															},
															"nativeSrc": "17076:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "17076:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17126:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17126:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17137:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17137:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17122:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17122:3:9"
																		},
																		"nativeSrc": "17122:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17122:18:9"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f72206661696c2069",
																		"kind": "string",
																		"nativeSrc": "17142:34:9",
																		"nodeType": "YulLiteral",
																		"src": "17142:34:9",
																		"type": "",
																		"value": "OracleManager: aggregator fail i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17115:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17115:6:9"
																},
																"nativeSrc": "17115:62:9",
																"nodeType": "YulFunctionCall",
																"src": "17115:62:9"
															},
															"nativeSrc": "17115:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "17115:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17197:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17197:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17208:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17208:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17193:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17193:3:9"
																		},
																		"nativeSrc": "17193:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17193:18:9"
																	},
																	{
																		"hexValue": "6e205f636f6e76657274546f41676772656761746f7256616c7565",
																		"kind": "string",
																		"nativeSrc": "17213:29:9",
																		"nodeType": "YulLiteral",
																		"src": "17213:29:9",
																		"type": "",
																		"value": "n _convertToAggregatorValue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17186:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17186:6:9"
																},
																"nativeSrc": "17186:57:9",
																"nodeType": "YulFunctionCall",
																"src": "17186:57:9"
															},
															"nativeSrc": "17186:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "17186:57:9"
														},
														{
															"nativeSrc": "17252:27:9",
															"nodeType": "YulAssignment",
															"src": "17252:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17264:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17264:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17275:3:9",
																		"nodeType": "YulLiteral",
																		"src": "17275:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17260:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17260:3:9"
																},
																"nativeSrc": "17260:19:9",
																"nodeType": "YulFunctionCall",
																"src": "17260:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17252:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17252:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16862:423:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17013:9:9",
														"nodeType": "YulTypedName",
														"src": "17013:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17027:4:9",
														"nodeType": "YulTypedName",
														"src": "17027:4:9",
														"type": ""
													}
												],
												"src": "16862:423:9"
											},
											{
												"body": {
													"nativeSrc": "17359:306:9",
													"nodeType": "YulBlock",
													"src": "17359:306:9",
													"statements": [
														{
															"nativeSrc": "17369:10:9",
															"nodeType": "YulAssignment",
															"src": "17369:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "17378:1:9",
																"nodeType": "YulLiteral",
																"src": "17378:1:9",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17369:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "17369:5:9"
																}
															]
														},
														{
															"nativeSrc": "17388:13:9",
															"nodeType": "YulAssignment",
															"src": "17388:13:9",
															"value": {
																"name": "_base",
																"nativeSrc": "17396:5:9",
																"nodeType": "YulIdentifier",
																"src": "17396:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "17388:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17388:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17446:213:9",
																"nodeType": "YulBlock",
																"src": "17446:213:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "17488:22:9",
																			"nodeType": "YulBlock",
																			"src": "17488:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "17490:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "17490:16:9"
																						},
																						"nativeSrc": "17490:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "17490:18:9"
																					},
																					"nativeSrc": "17490:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "17490:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17466:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "17466:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "17476:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "17476:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "17481:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "17481:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "17472:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "17472:3:9"
																					},
																					"nativeSrc": "17472:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17472:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17463:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "17463:2:9"
																			},
																			"nativeSrc": "17463:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17463:24:9"
																		},
																		"nativeSrc": "17460:50:9",
																		"nodeType": "YulIf",
																		"src": "17460:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "17543:29:9",
																			"nodeType": "YulBlock",
																			"src": "17543:29:9",
																			"statements": [
																				{
																					"nativeSrc": "17545:25:9",
																					"nodeType": "YulAssignment",
																					"src": "17545:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "17558:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "17558:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "17565:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "17565:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "17554:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "17554:3:9"
																						},
																						"nativeSrc": "17554:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "17554:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "17545:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "17545:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "17530:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "17530:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17540:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17540:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17526:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "17526:3:9"
																			},
																			"nativeSrc": "17526:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17526:16:9"
																		},
																		"nativeSrc": "17523:49:9",
																		"nodeType": "YulIf",
																		"src": "17523:49:9"
																	},
																	{
																		"nativeSrc": "17585:23:9",
																		"nodeType": "YulAssignment",
																		"src": "17585:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17597:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "17597:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "17603:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "17603:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "17593:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "17593:3:9"
																			},
																			"nativeSrc": "17593:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17593:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "17585:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17585:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17621:28:9",
																		"nodeType": "YulAssignment",
																		"src": "17621:28:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17637:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17637:1:9",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "17640:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "17640:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "17633:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "17633:3:9"
																			},
																			"nativeSrc": "17633:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17633:16:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "17621:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "17621:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17421:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "17421:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17431:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17431:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17418:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17418:2:9"
																},
																"nativeSrc": "17418:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17418:15:9"
															},
															"nativeSrc": "17410:249:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17434:3:9",
																"nodeType": "YulBlock",
																"src": "17434:3:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "17414:3:9",
																"nodeType": "YulBlock",
																"src": "17414:3:9",
																"statements": []
															},
															"src": "17410:249:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "17290:375:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "17318:5:9",
														"nodeType": "YulTypedName",
														"src": "17318:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17325:8:9",
														"nodeType": "YulTypedName",
														"src": "17325:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17335:3:9",
														"nodeType": "YulTypedName",
														"src": "17335:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17343:5:9",
														"nodeType": "YulTypedName",
														"src": "17343:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "17350:4:9",
														"nodeType": "YulTypedName",
														"src": "17350:4:9",
														"type": ""
													}
												],
												"src": "17290:375:9"
											},
											{
												"body": {
													"nativeSrc": "17729:843:9",
													"nodeType": "YulBlock",
													"src": "17729:843:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "17767:52:9",
																"nodeType": "YulBlock",
																"src": "17767:52:9",
																"statements": [
																	{
																		"nativeSrc": "17781:10:9",
																		"nodeType": "YulAssignment",
																		"src": "17781:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17790:1:9",
																			"nodeType": "YulLiteral",
																			"src": "17790:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17781:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17781:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17804:5:9",
																		"nodeType": "YulLeave",
																		"src": "17804:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17749:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "17749:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17742:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17742:6:9"
																},
																"nativeSrc": "17742:16:9",
																"nodeType": "YulFunctionCall",
																"src": "17742:16:9"
															},
															"nativeSrc": "17739:80:9",
															"nodeType": "YulIf",
															"src": "17739:80:9"
														},
														{
															"body": {
																"nativeSrc": "17852:52:9",
																"nodeType": "YulBlock",
																"src": "17852:52:9",
																"statements": [
																	{
																		"nativeSrc": "17866:10:9",
																		"nodeType": "YulAssignment",
																		"src": "17866:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17875:1:9",
																			"nodeType": "YulLiteral",
																			"src": "17875:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17866:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17866:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17889:5:9",
																		"nodeType": "YulLeave",
																		"src": "17889:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17838:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17838:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17831:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17831:6:9"
																},
																"nativeSrc": "17831:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17831:12:9"
															},
															"nativeSrc": "17828:76:9",
															"nodeType": "YulIf",
															"src": "17828:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17940:52:9",
																		"nodeType": "YulBlock",
																		"src": "17940:52:9",
																		"statements": [
																			{
																				"nativeSrc": "17954:10:9",
																				"nodeType": "YulAssignment",
																				"src": "17954:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17963:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17963:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "17954:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "17954:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "17977:5:9",
																				"nodeType": "YulLeave",
																				"src": "17977:5:9"
																			}
																		]
																	},
																	"nativeSrc": "17933:59:9",
																	"nodeType": "YulCase",
																	"src": "17933:59:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17938:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17938:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18008:167:9",
																		"nodeType": "YulBlock",
																		"src": "18008:167:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "18043:22:9",
																					"nodeType": "YulBlock",
																					"src": "18043:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "18045:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "18045:16:9"
																								},
																								"nativeSrc": "18045:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "18045:18:9"
																							},
																							"nativeSrc": "18045:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "18045:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "18028:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "18028:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "18038:3:9",
																							"nodeType": "YulLiteral",
																							"src": "18038:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "18025:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "18025:2:9"
																					},
																					"nativeSrc": "18025:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "18025:17:9"
																				},
																				"nativeSrc": "18022:43:9",
																				"nodeType": "YulIf",
																				"src": "18022:43:9"
																			},
																			{
																				"nativeSrc": "18078:25:9",
																				"nodeType": "YulAssignment",
																				"src": "18078:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "18091:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "18091:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "18101:1:9",
																							"nodeType": "YulLiteral",
																							"src": "18101:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "18087:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "18087:3:9"
																					},
																					"nativeSrc": "18087:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "18087:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "18078:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "18078:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "18116:11:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18116:11:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18126:1:9",
																					"nodeType": "YulLiteral",
																					"src": "18126:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "18120:2:9",
																						"nodeType": "YulTypedName",
																						"src": "18120:2:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18140:7:9",
																				"nodeType": "YulAssignment",
																				"src": "18140:7:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18146:1:9",
																					"nodeType": "YulLiteral",
																					"src": "18146:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "18140:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "18140:2:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "18160:5:9",
																				"nodeType": "YulLeave",
																				"src": "18160:5:9"
																			}
																		]
																	},
																	"nativeSrc": "18001:174:9",
																	"nodeType": "YulCase",
																	"src": "18001:174:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18006:1:9",
																		"nodeType": "YulLiteral",
																		"src": "18006:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "17920:4:9",
																"nodeType": "YulIdentifier",
																"src": "17920:4:9"
															},
															"nativeSrc": "17913:262:9",
															"nodeType": "YulSwitch",
															"src": "17913:262:9"
														},
														{
															"body": {
																"nativeSrc": "18273:114:9",
																"nodeType": "YulBlock",
																"src": "18273:114:9",
																"statements": [
																	{
																		"nativeSrc": "18287:28:9",
																		"nodeType": "YulAssignment",
																		"src": "18287:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18300:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "18300:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "18306:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "18306:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "18296:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18296:3:9"
																			},
																			"nativeSrc": "18296:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18296:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18287:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18287:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18328:11:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18328:11:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18338:1:9",
																			"nodeType": "YulLiteral",
																			"src": "18338:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "18332:2:9",
																				"nodeType": "YulTypedName",
																				"src": "18332:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18352:7:9",
																		"nodeType": "YulAssignment",
																		"src": "18352:7:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18358:1:9",
																			"nodeType": "YulLiteral",
																			"src": "18358:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "18352:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "18352:2:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18372:5:9",
																		"nodeType": "YulLeave",
																		"src": "18372:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18197:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "18197:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18203:2:9",
																						"nodeType": "YulLiteral",
																						"src": "18203:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18194:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18194:2:9"
																				},
																				"nativeSrc": "18194:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18194:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18211:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "18211:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18221:2:9",
																						"nodeType": "YulLiteral",
																						"src": "18221:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18208:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18208:2:9"
																				},
																				"nativeSrc": "18208:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18208:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18190:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18190:3:9"
																		},
																		"nativeSrc": "18190:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18190:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18234:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "18234:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18240:3:9",
																						"nodeType": "YulLiteral",
																						"src": "18240:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18231:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18231:2:9"
																				},
																				"nativeSrc": "18231:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18231:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18249:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "18249:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18259:2:9",
																						"nodeType": "YulLiteral",
																						"src": "18259:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18246:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18246:2:9"
																				},
																				"nativeSrc": "18246:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18246:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18227:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18227:3:9"
																		},
																		"nativeSrc": "18227:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18227:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18187:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "18187:2:9"
																},
																"nativeSrc": "18187:77:9",
																"nodeType": "YulFunctionCall",
																"src": "18187:77:9"
															},
															"nativeSrc": "18184:203:9",
															"nodeType": "YulIf",
															"src": "18184:203:9"
														},
														{
															"nativeSrc": "18396:65:9",
															"nodeType": "YulVariableDeclaration",
															"src": "18396:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18438:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18438:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "18444:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "18444:8:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18458:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18458:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18454:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18454:3:9"
																		},
																		"nativeSrc": "18454:6:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18454:6:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "18419:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "18419:18:9"
																},
																"nativeSrc": "18419:42:9",
																"nodeType": "YulFunctionCall",
																"src": "18419:42:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "18400:7:9",
																	"nodeType": "YulTypedName",
																	"src": "18400:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "18409:6:9",
																	"nodeType": "YulTypedName",
																	"src": "18409:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18506:22:9",
																"nodeType": "YulBlock",
																"src": "18506:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18508:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "18508:16:9"
																			},
																			"nativeSrc": "18508:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18508:18:9"
																		},
																		"nativeSrc": "18508:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "18508:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "18476:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "18476:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18493:1:9",
																						"nodeType": "YulLiteral",
																						"src": "18493:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18489:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "18489:3:9"
																				},
																				"nativeSrc": "18489:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18489:6:9"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "18497:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18497:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18485:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18485:3:9"
																		},
																		"nativeSrc": "18485:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18485:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18473:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "18473:2:9"
																},
																"nativeSrc": "18473:32:9",
																"nodeType": "YulFunctionCall",
																"src": "18473:32:9"
															},
															"nativeSrc": "18470:58:9",
															"nodeType": "YulIf",
															"src": "18470:58:9"
														},
														{
															"nativeSrc": "18537:29:9",
															"nodeType": "YulAssignment",
															"src": "18537:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "18550:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "18550:7:9"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "18559:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18559:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18546:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18546:3:9"
																},
																"nativeSrc": "18546:20:9",
																"nodeType": "YulFunctionCall",
																"src": "18546:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18537:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18537:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "17670:902:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "17700:4:9",
														"nodeType": "YulTypedName",
														"src": "17700:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17706:8:9",
														"nodeType": "YulTypedName",
														"src": "17706:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17719:5:9",
														"nodeType": "YulTypedName",
														"src": "17719:5:9",
														"type": ""
													}
												],
												"src": "17670:902:9"
											},
											{
												"body": {
													"nativeSrc": "18645:72:9",
													"nodeType": "YulBlock",
													"src": "18645:72:9",
													"statements": [
														{
															"nativeSrc": "18655:56:9",
															"nodeType": "YulAssignment",
															"src": "18655:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18685:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18685:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "18695:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "18695:8:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18705:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18705:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18691:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18691:3:9"
																		},
																		"nativeSrc": "18691:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18691:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "18664:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "18664:20:9"
																},
																"nativeSrc": "18664:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18664:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18655:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18655:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "18577:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18616:4:9",
														"nodeType": "YulTypedName",
														"src": "18616:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18622:8:9",
														"nodeType": "YulTypedName",
														"src": "18622:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18635:5:9",
														"nodeType": "YulTypedName",
														"src": "18635:5:9",
														"type": ""
													}
												],
												"src": "18577:140:9"
											},
											{
												"body": {
													"nativeSrc": "18774:116:9",
													"nodeType": "YulBlock",
													"src": "18774:116:9",
													"statements": [
														{
															"nativeSrc": "18784:20:9",
															"nodeType": "YulAssignment",
															"src": "18784:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18799:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18799:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18802:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18802:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18795:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18795:3:9"
																},
																"nativeSrc": "18795:9:9",
																"nodeType": "YulFunctionCall",
																"src": "18795:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18784:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "18784:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18862:22:9",
																"nodeType": "YulBlock",
																"src": "18862:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18864:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "18864:16:9"
																			},
																			"nativeSrc": "18864:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18864:18:9"
																		},
																		"nativeSrc": "18864:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "18864:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18833:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "18833:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18826:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "18826:6:9"
																				},
																				"nativeSrc": "18826:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18826:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18840:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "18840:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18847:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "18847:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18856:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "18856:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18843:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "18843:3:9"
																						},
																						"nativeSrc": "18843:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "18843:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18837:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18837:2:9"
																				},
																				"nativeSrc": "18837:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18837:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18823:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "18823:2:9"
																		},
																		"nativeSrc": "18823:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18823:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18816:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18816:6:9"
																},
																"nativeSrc": "18816:45:9",
																"nodeType": "YulFunctionCall",
																"src": "18816:45:9"
															},
															"nativeSrc": "18813:71:9",
															"nodeType": "YulIf",
															"src": "18813:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18722:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18753:1:9",
														"nodeType": "YulTypedName",
														"src": "18753:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18756:1:9",
														"nodeType": "YulTypedName",
														"src": "18756:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18762:7:9",
														"nodeType": "YulTypedName",
														"src": "18762:7:9",
														"type": ""
													}
												],
												"src": "18722:168:9"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_uint8(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_uint8(value_4)\n        value4 := value_4\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_bool(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_uint8(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_bool(value_5)\n        value5 := value_5\n    }\n    function abi_encode_tuple_t_stringliteral_c5c52409720bfac5a1e85ffe8335c29ab5586808ac14821ae52ef7379ece28b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"OracleManager: no aggregator or \")\n        mstore(add(headStart, 96), \"vault logic\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: vault feeds not s\")\n        mstore(add(headStart, 96), \"et\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"OracleManager: invalid vaultToke\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"OracleManager: invalid token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"OracleManager: aggregator requir\")\n        mstore(add(headStart, 96), \"ed for non-vault\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"OracleManager: fallback aggregat\")\n        mstore(add(headStart, 96), \"or fail\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"OracleManager: primary aggregato\")\n        mstore(add(headStart, 96), \"r fail\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: vault totalSupply\")\n        mstore(add(headStart, 96), \"=0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"OracleManager: no NFT in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: invalid positionM\")\n        mstore(add(headStart, 96), \"gr\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address_payable_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_payable_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_payable_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_uint128_fromMemory(add(headStart, 224))\n        let value_1 := 0\n        value_1 := mload(add(headStart, 256))\n        value8 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 288))\n        value9 := value_2\n        value10 := abi_decode_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"OracleManager: invalid pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_int24_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint16_fromMemory(add(headStart, 128))\n        let value_1 := mload(add(headStart, 160))\n        validator_revert_uint8(value_1)\n        value5 := value_1\n        let value_2 := mload(add(headStart, 192))\n        validator_revert_bool(value_2)\n        value6 := value_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"OracleManager: aggregator fail i\")\n        mstore(add(headStart, 96), \"n _convertToAggregatorValue\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101e85780639b05fc7514610203578063f2ac1ec514610216578063f2fde38b1461022957600080fd5b8063067a4b061461008d57806341976e0914610124578063715018a61461014e5780637f4a310214610158575b600080fd5b6100e261009b366004611a02565b600160208190526000918252604090912080549101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b0396871681529590941660208601529115159284019290925260ff90911660608301521515608082015260a0015b60405180910390f35b610137610132366004611a02565b61023c565b6040805192835260ff90911660208301520161011b565b610156610419565b005b6101ad610166366004611a02565b600260205260009081526040902080546001909101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b03968716815295909416602086015260ff928316938501939093521660608301521515608082015260a00161011b565b6000546040516001600160a01b03909116815260200161011b565b610156610211366004611a2e565b61042d565b610156610224366004611aad565b6105c2565b610156610237366004611a02565b6107d2565b6001600160a01b038082166000908152600160208181526040808420815160a0810183528154871680825291909401549586169284019290925260ff600160a01b86048116151591840191909152600160a81b850481166060840152600160b01b9094049093161515608082015290918291901515806102bd575080608001515b6103225760405162461bcd60e51b815260206004820152602b60248201527f4f7261636c654d616e616765723a206e6f2061676772656761746f72206f722060448201526a7661756c74206c6f67696360a81b60648201526084015b60405180910390fd5b806080015161033e576103348161084b565b9093509150610413565b6001600160a01b03808516600090815260026020908152604091829020825160a0810184528154851681526001909101549384169181019190915260ff600160a01b8404811692820192909252600160a81b830482166060820152600160b01b909204161515608082018190526104025760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c74206665656473206e6f742073604482015261195d60f21b6064820152608401610319565b61040c8582610986565b9094509250505b50915091565b610421610afe565b61042b6000610b58565b565b610435610afe565b6001600160a01b0385166104955760405162461bcd60e51b815260206004820152602160248201527f4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b656044820152603760f91b6064820152608401610319565b6040805160a0810182526001600160a01b038087168252858116602080840191825260ff808816858701908152878216606087019081526001608088018181528e881660008181526002909752958a9020985189549089166001600160a01b03199091161789559551970180549251915195511515600160b01b0260ff60b01b19968516600160a81b029690961661ffff60a81b1992909416600160a01b026001600160a81b0319909316979096169690961717949094169390931717905590517f2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba906105b39087908790879087906001600160a01b03948516815292909316602083015260ff908116604083015291909116606082015260800190565b60405180910390a25050505050565b6105ca610afe565b6001600160a01b0386166106205760405162461bcd60e51b815260206004820152601c60248201527f4f7261636c654d616e616765723a20696e76616c696420746f6b656e000000006044820152606401610319565b80610694576001600160a01b0385166106945760405162461bcd60e51b815260206004820152603060248201527f4f7261636c654d616e616765723a2061676772656761746f722072657175697260448201526f195908199bdc881b9bdb8b5d985d5b1d60821b6064820152608401610319565b6040805160a0810182526001600160a01b038088168252868116602080840191825287151584860190815260ff80891660608701908152881515608088019081528e871660008181526001968790528a9020985189549089166001600160a01b031990911617895595519790940180549351915194511515600160b01b0260ff60b01b1995909316600160a81b029490941661ffff60a81b19911515600160a01b026001600160a81b0319909416979096169690961791909117949094169290921792909217905590517f5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8906107c290889088908890889088906001600160a01b039586168152939094166020840152901515604083015260ff166060820152901515608082015260a00190565b60405180910390a2505050505050565b6107da610afe565b6001600160a01b03811661083f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610319565b61084881610b58565b50565b600080600080600061086586600001518760600151610ba8565b9250925092508215801561087a575085604001515b8015610892575060208601516001600160a01b031615155b1561091f5760008060006108ae89602001518a60600151610ba8565b925092509250826109115760405162461bcd60e51b815260206004820152602760248201527f4f7261636c654d616e616765723a2066616c6c6261636b2061676772656761746044820152661bdc8819985a5b60ca1b6064820152608401610319565b909890975095505050505050565b8261097b5760405162461bcd60e51b815260206004820152602660248201527f4f7261636c654d616e616765723a207072696d6172792061676772656761746f6044820152651c8819985a5b60d21b6064820152608401610319565b909590945092505050565b600080600080600061099787610d9b565b92509250925060006109a98284610fe4565b90506000610a17896001600160a01b0316633a924d5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190611b2f565b6111d8565b509050600080610a3583856040015186606001518760800151611308565b9150915060008460a001516001600160801b031683610a549190611b62565b905060008560c001516001600160801b031683610a719190611b62565b9050600060405180608001604052808e600001516001600160a01b031681526020018e602001516001600160a01b031681526020018e6040015160ff1681526020018e6060015160ff1681525090506000610acd84848461135e565b90508a15610adb578a610ade565b60015b610ae89082611b8b565b9f60089f509d5050505050505050505050505050565b6000546001600160a01b0316331461042b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610319565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080806001600160a01b038516610bc857506000915081905080610d94565b60408051600481526024810182526020810180516001600160e01b0316633fabe5a360e21b179052905160009081906001600160a01b03891690610c0d908590611bd1565b600060405180830381855afa9150503d8060008114610c48576040519150601f19603f3d011682016040523d82523d6000602084013e610c4d565b606091505b5091509150811580610c60575060a08151105b15610c78576000806000955095509550505050610d94565b600081806020019051810190610c8e9190611c0c565b50505091505060008113610cb057600080600096509650965050505050610d94565b8760ff8116600003610d875760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b038e1691610cff91611bd1565b600060405180830381855afa9150503d8060008114610d3a576040519150601f19603f3d011682016040523d82523d6000602084013e610d3f565b606091505b5091509150811580610d52575060208151105b15610d6e57600080600099509950995050505050505050610d94565b80806020019051810190610d829190611c5e565b925050505b6001975090955093505050505b9250925092565b600080600080849050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e069190611c7b565b935060008411610e635760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c7420746f74616c537570706c7960448201526103d360f41b6064820152608401610319565b806001600160a01b031663f657a7fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec59190611c7b565b925082600003610f175760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c654d616e616765723a206e6f204e465420696e207661756c7400006044820152606401610319565b806001600160a01b031663791b98bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190611b2f565b91506001600160a01b038216610fdc5760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d60448201526133b960f11b6064820152608401610319565b509193909250565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152600080846001600160a01b03166399fbab8860e01b8560405160240161104591815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516110839190611bd1565b600060405180830381855afa9150503d80600081146110be576040519150601f19603f3d011682016040523d82523d6000602084013e6110c3565b606091505b5091509150816110d2826113a3565b906110f05760405162461bcd60e51b81526004016103199190611c94565b50808060200190518101906111059190611d0e565b909192939495969798999a509091929394959697989950909192939495965090919250909150896000018a6020018b6040018c6060018d6080018e60a0018f60c001876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b03168152508760020b60020b8152508760020b60020b815250876001600160a01b03166001600160a01b0316815250876001600160a01b03166001600160a01b031681525050505050505050505092915050565b6000806001600160a01b0383166112315760405162461bcd60e51b815260206004820152601b60248201527f4f7261636c654d616e616765723a20696e76616c696420706f6f6c00000000006044820152606401610319565b60408051600481526024810182526020810180516001600160e01b0316633850c7bd60e01b179052905160009182916001600160a01b0387169161127491611bd1565b600060405180830381855afa9150503d80600081146112af576040519150601f19603f3d011682016040523d82523d6000602084013e6112b4565b606091505b5091509150816112c3826113a3565b906112e15760405162461bcd60e51b81526004016103199190611c94565b50808060200190518101906112f69190611e02565b50949a93995092975050505050505050565b600080826001600160801b031660000361132757506000905080611355565b6000611332866113ee565b9050600061133f866113ee565b905061134d88838388611711565b909450925050505b94509492505050565b60008061137485846000015185604001516117ac565b9050600061138b85856020015186606001516117ac565b90506113978183611b62565b925050505b9392505050565b60606044825110156113ce5760405180606001604052806024815260200161206a6024913992915050565b600482019150818060200190518101906113e89190611ea7565b92915050565b60008060008360020b12611405578260020b61140d565b8260020b6000035b9050620d89e8811115611433576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361144a57600160801b61145c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611490576ffff97272373d413259a46990580e213a0260801c5b60048216156114af576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156114ce576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156114ed576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561150c576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561152b576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561154a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561156a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561158a576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156115aa576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156115ca576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156115ea576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561160a576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561162a576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561164a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561166b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561168b576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156116aa576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156116c7576b048a170391f7dc42444e8fa20260801c5b60008460020b13156116e85780600019816116e4576116e4611b75565b0490505b6401000000008106156116fc5760016116ff565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115611732579293925b846001600160a01b0316866001600160a01b03161161175d57611756858585611881565b9150611355565b836001600160a01b0316866001600160a01b0316101561179657611782868585611881565b915061178f8587856118f0565b9050611355565b6117a18585856118f0565b905094509492505050565b60008315806117c257506001600160a01b038316155b156117cf5750600061139c565b60008060006117de8686610ba8565b925092509250826118575760405162461bcd60e51b815260206004820152603b60248201527f4f7261636c654d616e616765723a2061676772656761746f72206661696c206960448201527f6e205f636f6e76657274546f41676772656761746f7256616c756500000000006064820152608401610319565b61186281600a612043565b61186c8389612052565b6118769190611b8b565b979650505050505050565b6000826001600160a01b0316846001600160a01b031611156118a1579192915b836001600160a01b03166118da606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b031661193b565b816118e7576118e7611b75565b04949350505050565b6000826001600160a01b0316846001600160a01b03161115611910579192915b611933826001600160801b03168585036001600160a01b0316600160601b61193b565b949350505050565b6000808060001985870985870292508281108382030391505080600003611974576000841161196957600080fd5b50829004905061139c565b80841161198057600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6001600160a01b038116811461084857600080fd5b600060208284031215611a1457600080fd5b813561139c816119ed565b60ff8116811461084857600080fd5b600080600080600060a08688031215611a4657600080fd5b8535611a51816119ed565b94506020860135611a61816119ed565b93506040860135611a71816119ed565b92506060860135611a8181611a1f565b91506080860135611a9181611a1f565b809150509295509295909350565b801515811461084857600080fd5b60008060008060008060c08789031215611ac657600080fd5b8635611ad1816119ed565b95506020870135611ae1816119ed565b94506040870135611af1816119ed565b93506060870135611b0181611a9f565b92506080870135611b1181611a1f565b915060a0870135611b2181611a9f565b809150509295509295509295565b600060208284031215611b4157600080fd5b815161139c816119ed565b634e487b7160e01b600052601160045260246000fd5b808201808211156113e8576113e8611b4c565b634e487b7160e01b600052601260045260246000fd5b600082611ba857634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611bc8578181015183820152602001611bb0565b50506000910152565b60008251611be3818460208701611bad565b9190910192915050565b805169ffffffffffffffffffff81168114611c0757600080fd5b919050565b600080600080600060a08688031215611c2457600080fd5b611c2d86611bed565b60208701516040880151606089015192975090955093509150611c5260808701611bed565b90509295509295909350565b600060208284031215611c7057600080fd5b815161139c81611a1f565b600060208284031215611c8d57600080fd5b5051919050565b6020815260008251806020840152611cb3816040850160208701611bad565b601f01601f19169190910160400192915050565b8051611c07816119ed565b805162ffffff81168114611c0757600080fd5b8051600281900b8114611c0757600080fd5b80516001600160801b0381168114611c0757600080fd5b6000806000806000806000806000806000806101808d8f031215611d3157600080fd5b8c516bffffffffffffffffffffffff81168114611d4d57600080fd5b9b50611d5b60208e01611cc7565b9a50611d6960408e01611cc7565b9950611d7760608e01611cc7565b9850611d8560808e01611cd2565b9750611d9360a08e01611ce5565b9650611da160c08e01611ce5565b9550611daf60e08e01611cf7565b6101008e01516101208f015191965094509250611dcf6101408e01611cf7565b9150611dde6101608e01611cf7565b90509295989b509295989b509295989b565b805161ffff81168114611c0757600080fd5b600080600080600080600060e0888a031215611e1d57600080fd5b8751611e28816119ed565b9650611e3660208901611ce5565b9550611e4460408901611df0565b9450611e5260608901611df0565b9350611e6060808901611df0565b925060a0880151611e7081611a1f565b60c0890151909250611e8181611a9f565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611eb957600080fd5b815167ffffffffffffffff811115611ed057600080fd5b8201601f81018413611ee157600080fd5b805167ffffffffffffffff811115611efb57611efb611e91565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611f2a57611f2a611e91565b604052818152828201602001861015611f4257600080fd5b611f53826020830160208601611bad565b95945050505050565b6001815b6001841115611f9757808504811115611f7b57611f7b611b4c565b6001841615611f8957908102905b60019390931c928002611f60565b935093915050565b600082611fae575060016113e8565b81611fbb575060006113e8565b8160018114611fd15760028114611fdb57611ff7565b60019150506113e8565b60ff841115611fec57611fec611b4c565b50506001821b6113e8565b5060208310610133831016604e8410600b841016171561201a575081810a6113e8565b6120276000198484611f5c565b806000190482111561203b5761203b611b4c565b029392505050565b600061139c60ff841683611f9f565b80820281158282048414176113e8576113e8611b4c56fe4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367a264697066735822122004e5aad83a59fb9aef83d52c0ebeefa5cd16c8efc1f0a7bea6e313d4fa67886564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x9B05FC75 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2AC1EC5 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67A4B06 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x7F4A3102 EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11B JUMP JUMPDEST PUSH2 0x156 PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11B JUMP JUMPDEST PUSH2 0x156 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP5 ADD SLOAD SWAP6 DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV DUP2 AND ISZERO ISZERO SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP6 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP5 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x2BD JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F2061676772656761746F72206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x7661756C74206C6F676963 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x33E JUMPI PUSH2 0x334 DUP2 PUSH2 0x84B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP4 DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C74206665656473206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x40C DUP6 DUP3 PUSH2 0x986 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x421 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x42B PUSH1 0x0 PUSH2 0xB58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x435 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF DUP1 DUP9 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP8 MSTORE SWAP6 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 ADD DUP1 SLOAD SWAP3 MLOAD SWAP2 MLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP7 DUP6 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP3 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA SWAP1 PUSH2 0x5B3 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH2 0x694 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F7220726571756972 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x195908199BDC881B9BDB8B5D985D5B1D PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP8 ISZERO ISZERO DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF DUP1 DUP10 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP15 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP7 DUP8 SWAP1 MSTORE DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP4 MLOAD SWAP2 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP6 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP5 SWAP1 SWAP5 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR SWAP2 SWAP1 SWAP2 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8 SWAP1 PUSH2 0x7C2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7DA PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0xB58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x865 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD JUMPDEST DUP1 ISZERO PUSH2 0x892 JUMPI POP PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8AE DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1BDC8819985A5B PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207072696D6172792061676772656761746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8819985A5B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x997 DUP8 PUSH2 0xD9B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x9A9 DUP3 DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA17 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A924D5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xA35 DUP4 DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xACD DUP5 DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP1 POP DUP11 ISZERO PUSH2 0xADB JUMPI DUP11 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE8 SWAP1 DUP3 PUSH2 0x1B8B JUMP JUMPDEST SWAP16 PUSH1 0x8 SWAP16 POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBC8 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH2 0xC0D SWAP1 DUP6 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xC60 JUMPI POP PUSH1 0xA0 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST DUP8 PUSH1 0xFF DUP2 AND PUSH1 0x0 SUB PUSH2 0xD87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH2 0xCFF SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xD52 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0xD94 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP5 GT PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3D3 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF657A7FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x0 SUB PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x791B98BC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x33B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 PUSH1 0xE0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1045 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1083 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x10D2 DUP3 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP DUP10 PUSH1 0x0 ADD DUP11 PUSH1 0x20 ADD DUP12 PUSH1 0x40 ADD DUP13 PUSH1 0x60 ADD DUP14 PUSH1 0x80 ADD DUP15 PUSH1 0xA0 ADD DUP16 PUSH1 0xC0 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH2 0x1274 SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x12C3 DUP3 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST POP SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP3 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SUB PUSH2 0x1327 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1332 DUP7 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x133F DUP7 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x134D DUP9 DUP4 DUP4 DUP9 PUSH2 0x1711 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1374 DUP6 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x138B DUP6 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH2 0x1397 DUP2 DUP4 PUSH2 0x1B62 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206A PUSH1 0x24 SWAP2 CODECOPY SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13E8 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1405 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x140D JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15E4079D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0x144A JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x145C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x1490 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x14AF JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x14CE JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x14ED JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x150C JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x152B JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x154A JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x156A JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x158A JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x15AA JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x15CA JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x15EA JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x160A JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x162A JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x164A JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x166B JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x168B JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x16AA JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x16C7 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x16E8 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x16E4 JUMPI PUSH2 0x16E4 PUSH2 0x1B75 JUMP JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x16FC JUMPI PUSH1 0x1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1732 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x175D JUMPI PUSH2 0x1756 DUP6 DUP6 DUP6 PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP PUSH2 0x1355 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1782 DUP7 DUP6 DUP6 PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP PUSH2 0x178F DUP6 DUP8 DUP6 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x17A1 DUP6 DUP6 DUP6 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x17C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x17CF JUMPI POP PUSH1 0x0 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x17DE DUP7 DUP7 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F72206661696C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E205F636F6E76657274546F41676772656761746F7256616C75650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x1862 DUP2 PUSH1 0xA PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x186C DUP4 DUP10 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x1876 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x18A1 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18DA PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193B JUMP JUMPDEST DUP2 PUSH2 0x18E7 JUMPI PUSH2 0x18E7 PUSH2 0x1B75 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1910 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x1933 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x193B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x1974 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x139C JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x139C DUP2 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1A51 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1A61 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1A71 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1A81 DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1A91 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1AD1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1AE1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1AF1 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1B01 DUP2 PUSH2 0x1A9F JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1B11 DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1B21 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139C DUP2 PUSH2 0x19ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x1B4C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BC8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BB0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2D DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1C52 PUSH1 0x80 DUP8 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x139C DUP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CB3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1C07 DUP2 PUSH2 0x19ED JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x1D5B PUSH1 0x20 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D69 PUSH1 0x40 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP10 POP PUSH2 0x1D77 PUSH1 0x60 DUP15 ADD PUSH2 0x1CC7 JUMP JUMPDEST SWAP9 POP PUSH2 0x1D85 PUSH1 0x80 DUP15 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D93 PUSH1 0xA0 DUP15 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP7 POP PUSH2 0x1DA1 PUSH1 0xC0 DUP15 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP6 POP PUSH2 0x1DAF PUSH1 0xE0 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x100 DUP15 ADD MLOAD PUSH2 0x120 DUP16 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0x1DCF PUSH2 0x140 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDE PUSH2 0x160 DUP15 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x1E28 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP7 POP PUSH2 0x1E36 PUSH1 0x20 DUP10 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E44 PUSH1 0x40 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E52 PUSH1 0x60 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E60 PUSH1 0x80 DUP10 ADD PUSH2 0x1DF0 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1E70 DUP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1E81 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1EE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFB PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F2A PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1F42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F53 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1F7B JUMPI PUSH2 0x1F7B PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1F89 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1F60 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FAE JUMPI POP PUSH1 0x1 PUSH2 0x13E8 JUMP JUMPDEST DUP2 PUSH2 0x1FBB JUMPI POP PUSH1 0x0 PUSH2 0x13E8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FD1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1FDB JUMPI PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FEC JUMPI PUSH2 0x1FEC PUSH2 0x1B4C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x13E8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x201A JUMPI POP DUP2 DUP2 EXP PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x2027 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203B PUSH2 0x1B4C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1F9F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x1B4C JUMP INVALID 0x4F PUSH19 0x61636C654D616E616765723A2063616C6C2072 PUSH6 0x766572746564 KECCAK256 PUSH24 0x2F6F206D7367A264697066735822122004E5AAD83A59FB9A 0xEF DUP4 0xD5 0x2C 0xE 0xBE 0xEF 0xA5 0xCD AND 0xC8 0xEF 0xC1 CREATE 0xA7 0xBE 0xA6 0xE3 SGT 0xD4 STATICCALL PUSH8 0x886564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2736:11411:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3349:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3349:51:2;;;;;;;;-1:-1:-1;;;3349:51:2;;;;;-1:-1:-1;;;3349:51:2;;;;;-1:-1:-1;;;3349:51:2;;;;;;;;;;-1:-1:-1;;;;;663:32:9;;;645:51;;732:32;;;;727:2;712:18;;705:60;808:14;;801:22;781:18;;;774:50;;;;872:4;860:17;;;855:2;840:18;;833:45;922:14;915:22;909:3;894:19;;887:51;632:3;617:19;3349:51:2;;;;;;;;6102:590;;;;;;:::i;:::-;;:::i;:::-;;;;1119:25:9;;;1192:4;1180:17;;;1175:2;1160:18;;1153:45;1092:18;6102:590:2;949:255:9;1831:101:3;;;:::i;:::-;;3450:58:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3450:58:2;;;;;;;;-1:-1:-1;;;3450:58:2;;;;;-1:-1:-1;;;3450:58:2;;;;;-1:-1:-1;;;3450:58:2;;;;;;;;;;-1:-1:-1;;;;;1472:32:9;;;1454:51;;1541:32;;;;1536:2;1521:18;;1514:60;1622:4;1610:17;;;1590:18;;;1583:45;;;;1664:17;1659:2;1644:18;;1637:45;1726:14;1719:22;1713:3;1698:19;;1691:51;1441:3;1426:19;3450:58:2;1209:539:9;1201:85:3;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:3;;;1899:51:9;;1887:2;1872:18;1201:85:3;1753:203:9;5277:700:2;;;;;;:::i;:::-;;:::i;4215:950::-;;;;;;:::i;:::-;;:::i;2081:198:3:-;;;;;;:::i;:::-;;:::i;6102:590:2:-;-1:-1:-1;;;;;6223:20:2;;;6158:13;6223:20;;;:13;:20;;;;;;;;6199:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6199:44:2;;;;;;;;;;;;;-1:-1:-1;;;6199:44:2;;;;;;;;-1:-1:-1;;;6199:44:2;;;;;;;;;;;;6158:13;;;;6199:44;6261:35;;;:55;;;6300:3;:16;;;6261:55;6253:111;;;;-1:-1:-1;;;6253:111:2;;4159:2:9;6253:111:2;;;4141:21:9;4198:2;4178:18;;;4171:30;4237:34;4217:18;;;4210:62;-1:-1:-1;;;4288:18:9;;;4281:41;4339:19;;6253:111:2;;;;;;;;;6380:3;:16;;;6375:311;;6432:24;6452:3;6432:19;:24::i;:::-;6412:44;;-1:-1:-1;6412:44:2;-1:-1:-1;6375:311:2;;;-1:-1:-1;;;;;6520:17:2;;;6487:30;6520:17;;;:10;:17;;;;;;;;;6487:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6487:50:2;;;;;;;;;;;-1:-1:-1;;;6487:50:2;;;;;;;;-1:-1:-1;;;6487:50:2;;;;;;;;;;;;6551:56;;;;-1:-1:-1;;;6551:56:2;;4571:2:9;6551:56:2;;;4553:21:9;4610:2;4590:18;;;4583:30;4649:34;4629:18;;;4622:62;-1:-1:-1;;;4700:18:9;;;4693:32;4742:19;;6551:56:2;4369:398:9;6551:56:2;6641:34;6665:5;6672:2;6641:23;:34::i;:::-;6621:54;;-1:-1:-1;6621:54:2;-1:-1:-1;;6375:311:2;6189:503;6102:590;;;:::o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5277:700:2:-;1094:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;5485:24:2;::::1;5477:70;;;::::0;-1:-1:-1;;;5477:70:2;;4974:2:9;5477:70:2::1;::::0;::::1;4956:21:9::0;5013:2;4993:18;;;4986:30;5052:34;5032:18;;;5025:62;-1:-1:-1;;;5103:18:9;;;5096:31;5144:19;;5477:70:2::1;4772:397:9::0;5477:70:2::1;5583:218;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5583:218:2;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;5786:4:::1;5583:218:::0;;;;;;5558:22;;::::1;-1:-1:-1::0;5558:22:2;;;:10:::1;:22:::0;;;;;;;:243;;;;;;::::1;-1:-1:-1::0;;;;;;5558:243:2;;::::1;;::::0;;;;;::::1;::::0;;;;;;;;::::1;;-1:-1:-1::0;;;5558:243:2::1;-1:-1:-1::0;;;;5558:243:2;;::::1;-1:-1:-1::0;;;5558:243:2::1;::::0;;;;-1:-1:-1;;;;5558:243:2;;;::::1;-1:-1:-1::0;;;5558:243:2::1;-1:-1:-1::0;;;;;;5558:243:2;;;;;;::::1;::::0;;;;::::1;::::0;;;;;;;;::::1;::::0;;5817:153;;::::1;::::0;::::1;::::0;5636:9;;5677;;5716;;5755;;-1:-1:-1;;;;;5415:32:9;;;5397:51;;5484:32;;;;5479:2;5464:18;;5457:60;5565:4;5553:17;;;5548:2;5533:18;;5526:45;5607:17;;;;5602:2;5587:18;;5580:45;5384:3;5369:19;;5174:457;5817:153:2::1;;;;;;;;5277:700:::0;;;;;:::o;4215:950::-;1094:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;4462:19:2;::::1;4454:60;;;::::0;-1:-1:-1;;;4454:60:2;;5838:2:9;4454:60:2::1;::::0;::::1;5820:21:9::0;5877:2;5857:18;;;5850:30;5916;5896:18;;;5889:58;5964:18;;4454:60:2::1;5636:352:9::0;4454:60:2::1;4529:12;4524:136;;-1:-1:-1::0;;;;;4565:31:2;::::1;4557:92;;;::::0;-1:-1:-1;;;4557:92:2;;6195:2:9;4557:92:2::1;::::0;::::1;6177:21:9::0;6234:2;6214:18;;;6207:30;6273:34;6253:18;;;6246:62;-1:-1:-1;;;6324:18:9;;;6317:46;6380:19;;4557:92:2::1;5993:412:9::0;4557:92:2::1;4693:257;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4693:257:2;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;;::::0;;;;;;4670:20;;::::1;-1:-1:-1::0;4670:20:2;;;:13:::1;:20:::0;;;;;;;:280;;;;;;::::1;-1:-1:-1::0;;;;;;4670:280:2;;::::1;;::::0;;;;;;;::::1;::::0;;;;;;;;::::1;;-1:-1:-1::0;;;4670:280:2::1;-1:-1:-1::0;;;;4670:280:2;;;::::1;-1:-1:-1::0;;;4670:280:2::1;::::0;;;;-1:-1:-1;;;;4670:280:2;::::1;;-1:-1:-1::0;;;4670:280:2::1;-1:-1:-1::0;;;;;;4670:280:2;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;4966:192;;::::1;::::0;::::1;::::0;4737:17;;4788:18;;4840:16;;4888:11;;4927:12;;-1:-1:-1;;;;;663:32:9;;;645:51;;732:32;;;;727:2;712:18;;705:60;808:14;;801:22;796:2;781:18;;774:50;872:4;860:17;855:2;840:18;;833:45;922:14;;915:22;909:3;894:19;;887:51;632:3;617:19;;402:542;4966:192:2::1;;;;;;;;4215:950:::0;;;;;;:::o;2081:198:3:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:3;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:3;;6612:2:9;2161:73:3::1;::::0;::::1;6594:21:9::0;6651:2;6631:18;;;6624:30;6690:34;6670:18;;;6663:62;-1:-1:-1;;;6741:18:9;;;6734:36;6787:19;;2161:73:3::1;6410:402:9::0;2161:73:3::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6875:723:2:-;6974:13;6989:14;7020;7036:9;7047:7;7058:66;7080:3;:21;;;7103:3;:20;;;7058:21;:66::i;:::-;7019:105;;;;;;7139:9;7138:10;:36;;;;;7152:3;:22;;;7138:36;:76;;;;-1:-1:-1;7178:22:2;;;;-1:-1:-1;;;;;7178:36:2;;;7138:76;7134:365;;;7231:15;7248:17;7267:15;7302:67;7324:3;:22;;;7348:3;:20;;;7302:21;:67::i;:::-;7230:139;;;;;;7391:10;7383:62;;;;-1:-1:-1;;;7383:62:2;;7019:2:9;7383:62:2;;;7001:21:9;7058:2;7038:18;;;7031:30;7097:34;7077:18;;;7070:62;-1:-1:-1;;;7148:18:9;;;7141:37;7195:19;;7383:62:2;6817:403:9;7383:62:2;7467:9;;7478;;-1:-1:-1;6875:723:2;-1:-1:-1;;;;;;6875:723:2:o;7134:365::-;7516:9;7508:60;;;;-1:-1:-1;;;7508:60:2;;7427:2:9;7508:60:2;;;7409:21:9;7466:2;7446:18;;;7439:30;7505:34;7485:18;;;7478:62;-1:-1:-1;;;7556:18:9;;;7549:36;7602:19;;7508:60:2;7225:402:9;7508:60:2;7586:1;;7589;;-1:-1:-1;6875:723:2;-1:-1:-1;;;6875:723:2:o;8059:1341::-;8191:13;8206:14;8271:19;8292:15;8309:14;8327:27;8343:10;8327:15;:27::i;:::-;8270:84;;;;;;8396:25;8424:35;8443:6;8451:7;8424:18;:35::i;:::-;8396:63;;8509:20;8535:53;8567:10;-1:-1:-1;;;;;8555:30:2;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8535:19;:53::i;:::-;8508:80;;;8634:18;8654;8676:141;8714:12;8740:3;:13;;;8767:3;:13;;;8794:3;:13;;;8676:24;:141::i;:::-;8633:184;;;;8857:12;8885:3;:9;;;-1:-1:-1;;;;;8872:22:2;:10;:22;;;;:::i;:::-;8857:37;;8904:12;8932:3;:9;;;-1:-1:-1;;;;;8919:22:2;:10;:22;;;;:::i;:::-;8904:37;;8985:24;9012:178;;;;;;;;9047:2;:19;;;-1:-1:-1;;;;;9012:178:2;;;;;9086:2;:19;;;-1:-1:-1;;;;;9012:178:2;;;;;9125:2;:17;;;9012:178;;;;;;9162:2;:17;;;9012:178;;;;;8985:205;;9240:18;9261:42;9288:4;9294;9300:2;9261:26;:42::i;:::-;9240:63;-1:-1:-1;9336:16:2;;:34;;9359:11;9336:34;;;9355:1;9336:34;9322:49;;:10;:49;:::i;:::-;9314:57;9392:1;;-1:-1:-1;8059:1341:2;-1:-1:-1;;;;;;;;;;;;;;8059:1341:2:o;1359:130:3:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:3;719:10:5;1422:23:3;1414:68;;;;-1:-1:-1;;;1414:68:3;;8706:2:9;1414:68:3;;;8688:21:9;;;8725:18;;;8718:30;8784:34;8764:18;;;8757:62;8836:18;;1414:68:3;8504:356:9;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;12643:1190:2:-;12760:12;;;-1:-1:-1;;;;;12823:24:2;;12819:75;;-1:-1:-1;12871:5:2;;-1:-1:-1;12871:5:2;;-1:-1:-1;12871:5:2;12863:20;;12819:75;12926:70;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12926:70:2;-1:-1:-1;;;12926:70:2;;;13052:30;;12903:20;;;;-1:-1:-1;;;;;13052:21:2;;;:30;;12926:70;;13052:30;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13006:76;;;;13097:11;13096:12;:39;;;;13132:3;13112:10;:17;:23;13096:39;13092:90;;;13159:5;13166:1;13169;13151:20;;;;;;;;;;;13092:90;13195:13;13229:10;13218:66;;;;;;;;;;;;:::i;:::-;13191:93;;;;;;13308:1;13298:6;:11;13294:62;;13333:5;13340:1;13343;13325:20;;;;;;;;;;;;13294:62;13386:11;13411:16;;;13366:17;13411:16;13407:367;;13524:63;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13524:63:2;-1:-1:-1;;;13524:63:2;;;13485:116;;13444:15;;;;-1:-1:-1;;;;;13485:21:2;;;:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13443:158;;;;13620:10;13619:11;:34;;;;13651:2;13634:7;:14;:19;13619:34;13615:93;;;13681:5;13688:1;13691;13673:20;;;;;;;;;;;;;;;13615:93;13746:7;13735:28;;;;;;;;;;;;:::i;:::-;13721:42;;13429:345;;13407:367;13791:4;;-1:-1:-1;13805:6:2;;-1:-1:-1;13814:11:2;-1:-1:-1;;;;12643:1190:2;;;;;;:::o;9406:535::-;9498:19;9519:15;9536:14;9566:13;9594:10;9566:39;;9629:1;-1:-1:-1;;;;;9629:13:2;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9615:29;;9676:1;9662:11;:15;9654:62;;;;-1:-1:-1;;;9654:62:2;;10861:2:9;9654:62:2;;;10843:21:9;10900:2;10880:18;;;10873:30;10939:34;10919:18;;;10912:62;-1:-1:-1;;;10990:18:9;;;10983:32;11032:19;;9654:62:2;10659:398:9;9654:62:2;9737:1;-1:-1:-1;;;;;9737:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9727:26;;9771:7;9782:1;9771:12;9763:55;;;;-1:-1:-1;;;9763:55:2;;11264:2:9;9763:55:2;;;11246:21:9;11303:2;11283:18;;;11276:30;11342:32;11322:18;;;11315:60;11392:18;;9763:55:2;11062:354:9;9763:55:2;9838:1;-1:-1:-1;;;;;9838:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9829:28;-1:-1:-1;;;;;;9875:20:2;;9867:67;;;;-1:-1:-1;;;9867:67:2;;11623:2:9;9867:67:2;;;11605:21:9;11662:2;11642:18;;;11635:30;11701:34;11681:18;;;11674:62;-1:-1:-1;;;11752:18:9;;;11745:32;11794:19;;9867:67:2;11421:398:9;9867:67:2;9556:385;9406:535;;;;;:::o;9947:782::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10097:12:2;10111:17;10132:6;-1:-1:-1;;;;;10132:17:2;10186:46;;;10234:7;10163:79;;;;;;11970:25:9;;11958:2;11943:18;;11824:177;10163:79:2;;;;-1:-1:-1;;10163:79:2;;;;;;;;;;;;;;-1:-1:-1;;;;;10163:79:2;-1:-1:-1;;;;;;10163:79:2;;;;;;;;;;10132:120;;;;10163:79;10132:120;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10096:156;;;;10270:7;10279:19;10293:4;10279:13;:19::i;:::-;10262:37;;;;;-1:-1:-1;;;10262:37:2;;;;;;;;:::i;:::-;;10592:4;10568:154;;;;;;;;;;;;:::i;:::-;10310:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10352:3;:10;;10376:3;:10;;10414:3;:13;;10441:3;:13;;10468:3;:13;;10523:3;:9;;10546:3;:9;;10310:412;-1:-1:-1;;;;;10310:412:2;-1:-1:-1;;;;;10310:412:2;;;;;-1:-1:-1;;;;;10310:412:2;-1:-1:-1;;;;;10310:412:2;;;;;-1:-1:-1;;;;;10310:412:2;-1:-1:-1;;;;;10310:412:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10310:412:2;-1:-1:-1;;;;;10310:412:2;;;;;-1:-1:-1;;;;;10310:412:2;-1:-1:-1;;;;;10310:412:2;;;;;;;;;;;10086:643;;9947:782;;;;:::o;11076:486::-;11146:20;;-1:-1:-1;;;;;11198:22:2;;11190:62;;;;-1:-1:-1;;;11190:62:2;;14639:2:9;11190:62:2;;;14621:21:9;14678:2;14658:18;;;14651:30;14717:29;14697:18;;;14690:57;14764:18;;11190:62:2;14437:351:9;11190:62:2;11331:53;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11331:53:2;-1:-1:-1;;;11331:53:2;;;11298:96;;11263:12;;;;-1:-1:-1;;;;;11298:19:2;;;:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11262:132;;;;11412:7;11421:19;11435:4;11421:13;:19::i;:::-;11404:37;;;;;-1:-1:-1;;;11404:37:2;;;;;;;;:::i;:::-;;11495:4;11484:71;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11451:104:2;;;;-1:-1:-1;11076:486:2;;-1:-1:-1;;;;;;;;11076:486:2:o;11568:577::-;11738:12;11752;11780:9;-1:-1:-1;;;;;11780:14:2;11793:1;11780:14;11776:58;;-1:-1:-1;11818:1:2;;-1:-1:-1;11818:1:2;11810:13;;11776:58;11843:17;11863:38;11891:9;11863:27;:38::i;:::-;11843:58;;11911:17;11931:38;11959:9;11931:27;:38::i;:::-;11911:58;;11994:144;12047:12;12073:9;12096;12119;11994:39;:144::i;:::-;11979:159;;-1:-1:-1;11979:159:2;-1:-1:-1;;;11568:577:2;;;;;;;;:::o;10735:335::-;10878:7;10897:12;10912:49;10938:4;10944:2;:7;;;10953:2;:7;;;10912:25;:49::i;:::-;10897:64;;10971:12;10986:49;11012:4;11018:2;:7;;;11027:2;:7;;;10986:25;:49::i;:::-;10971:64;-1:-1:-1;11052:11:2;10971:64;11052:4;:11;:::i;:::-;11045:18;;;;10735:335;;;;;;:::o;13839:306::-;13910:13;13960:2;13939:11;:18;:23;13935:74;;;13964:45;;;;;;;;;;;;;;;;;;13839:306;-1:-1:-1;;13839:306:2:o;13935:74::-;14074:4;14061:11;14057:22;14042:37;;14116:11;14105:33;;;;;;;;;;;;:::i;:::-;14098:40;13839:306;-1:-1:-1;;13839:306:2:o;1385:2759:6:-;1448:20;1504:15;1529:1;1522:4;:8;;;:57;;1573:4;1566:12;;1522:57;;;1549:4;1542:12;;1541:13;;1522:57;1504:75;-1:-1:-1;667:9:6;1597:35;;1593:51;;;1641:3;;-1:-1:-1;;;1641:3:6;;;;;;;;;;;1593:51;1659:13;1675:7;1685:3;1675:13;1692:1;1675:18;:125;;-1:-1:-1;;;1675:125:6;;;1712:34;1675:125;1659:141;;;-1:-1:-1;1828:3:6;1818:13;;:18;1814:83;;1855:34;1847:42;1894:3;1846:51;1814:83;1925:3;1915:13;;:18;1911:83;;1952:34;1944:42;1991:3;1943:51;1911:83;2022:3;2012:13;;:18;2008:83;;2049:34;2041:42;2088:3;2040:51;2008:83;2119:4;2109:14;;:19;2105:84;;2147:34;2139:42;2186:3;2138:51;2105:84;2217:4;2207:14;;:19;2203:84;;2245:34;2237:42;2284:3;2236:51;2203:84;2315:4;2305:14;;:19;2301:84;;2343:34;2335:42;2382:3;2334:51;2301:84;2413:4;2403:14;;:19;2399:84;;2441:34;2433:42;2480:3;2432:51;2399:84;2511:5;2501:15;;:20;2497:85;;2540:34;2532:42;2579:3;2531:51;2497:85;2610:5;2600:15;;:20;2596:85;;2639:34;2631:42;2678:3;2630:51;2596:85;2709:5;2699:15;;:20;2695:85;;2738:34;2730:42;2777:3;2729:51;2695:85;2808:5;2798:15;;:20;2794:85;;2837:34;2829:42;2876:3;2828:51;2794:85;2907:6;2897:16;;:21;2893:86;;2937:34;2929:42;2976:3;2928:51;2893:86;3007:6;2997:16;;:21;2993:86;;3037:34;3029:42;3076:3;3028:51;2993:86;3107:6;3097:16;;:21;3093:86;;3137:34;3129:42;3176:3;3128:51;3093:86;3207:6;3197:16;;:21;3193:86;;3237:34;3229:42;3276:3;3228:51;3193:86;3307:7;3297:17;;:22;3293:86;;3338:33;3330:41;3376:3;3329:50;3293:86;3407:7;3397:17;;:22;3393:85;;3438:32;3430:40;3475:3;3429:49;3393:85;3506:7;3496:17;;:22;3492:83;;3537:30;3529:38;3572:3;3528:47;3492:83;3603:7;3593:17;;:22;3589:78;;3634:25;3626:33;3664:3;3625:42;3589:78;3693:1;3686:4;:8;;;3682:47;;;3724:5;-1:-1:-1;;3704:25:6;;;;;:::i;:::-;;3696:33;;3682:47;4104:7;4095:5;:17;:22;:30;;4124:1;4095:30;;;4120:1;4095:30;4078:48;;4088:2;4079:5;:11;;4078:48;4055:72;;1480:2658;;1385:2759;;;:::o;6173:799:7:-;6353:15;6370;6417:13;-1:-1:-1;;;;;6401:29:7;:13;-1:-1:-1;;;;;6401:29:7;;6397:98;;;6466:13;;6481;6397:98;6526:13;-1:-1:-1;;;;;6510:29:7;:12;-1:-1:-1;;;;;6510:29:7;;6506:460;;6565:63;6588:13;6603;6618:9;6565:22;:63::i;:::-;6555:73;;6506:460;;;6664:13;-1:-1:-1;;;;;6649:28:7;:12;-1:-1:-1;;;;;6649:28:7;;6645:321;;;6703:62;6726:12;6740:13;6755:9;6703:22;:62::i;:::-;6693:72;;6789:62;6812:13;6827:12;6841:9;6789:22;:62::i;:::-;6779:72;;6645:321;;;6892:63;6915:13;6930;6945:9;6892:22;:63::i;:::-;6882:73;;6173:799;;;;;;;:::o;12151:486:2:-;12295:7;12318:8;;;:40;;-1:-1:-1;;;;;;12330:28:2;;;12318:40;12314:79;;;-1:-1:-1;12381:1:2;12374:8;;12314:79;12403:7;12412:9;12423:7;12434:50;12456:14;12472:11;12434:21;:50::i;:::-;12402:82;;;;;;12502:2;12494:74;;;;-1:-1:-1;;;12494:74:2;;17064:2:9;12494:74:2;;;17046:21:9;17103:2;17083:18;;;17076:30;17142:34;17122:18;;;17115:62;17213:29;17193:18;;;17186:57;17260:19;;12494:74:2;16862:423:9;12494:74:2;12622:7;12628:1;12622:2;:7;:::i;:::-;12610;12616:1;12610:3;:7;:::i;:::-;12609:21;;;;:::i;:::-;12602:28;12151:486;-1:-1:-1;;;;;;;12151:486:2:o;4309:556:7:-;4459:15;4530:13;-1:-1:-1;;;;;4514:29:7;:13;-1:-1:-1;;;;;4514:29:7;;4510:98;;;4579:13;;4594;4510:98;4835:13;-1:-1:-1;;;;;4646:202:7;:186;309:2:0;4683:45:7;;4691:9;-1:-1:-1;;;;;4683:18:7;:45;;4766:13;4750;:29;-1:-1:-1;;;;;4646:186:7;4801:13;-1:-1:-1;;;;;4646:186:7;:15;:186::i;:::-;:202;;;;;:::i;:::-;;;4309:556;-1:-1:-1;;;;4309:556:7:o;5223:409::-;5373:15;5420:13;-1:-1:-1;;;;;5404:29:7;:13;-1:-1:-1;;;;;5404:29:7;;5400:98;;;5469:13;;5484;5400:98;5540:75;5556:9;-1:-1:-1;;;;;5540:75:7;5583:13;5567;:29;-1:-1:-1;;;;;5540:75:7;-1:-1:-1;;;5540:15:7;:75::i;:::-;5533:82;5223:409;-1:-1:-1;;;;5223:409:7:o;741:4127:1:-;853:14;;;-1:-1:-1;;1416:1:1;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;;1615:5;1624:1;1615:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;-1:-1:-1;1728:23:1;;;;-1:-1:-1;1786:13:1;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2736:12;2752:15;;;2751:31;;2888:22;;;;;3763:1;3744;:15;;3743:21;;4006:17;;;4002:21;;3995:28;4068:17;;;4064:21;;4057:28;4131:17;;;4127:21;;4120:28;4194:17;;;4190:21;;4183:28;4257:17;;;4253:21;;4246:28;4321:17;;;4317:21;;;4310:28;3300:12;;;;3296:23;;;3321:1;3292:31;2489:20;;;2478:32;;;3359:12;;;;2536:21;;;;3032:16;;;;3350:21;;;;4813:11;;;;;-1:-1:-1;;741:4127:1;;;;;:::o;14:131:9:-;-1:-1:-1;;;;;89:31:9;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;1961:114::-;2045:4;2038:5;2034:16;2027:5;2024:27;2014:55;;2065:1;2062;2055:12;2080:805;2171:6;2179;2187;2195;2203;2256:3;2244:9;2235:7;2231:23;2227:33;2224:53;;;2273:1;2270;2263:12;2224:53;2312:9;2299:23;2331:31;2356:5;2331:31;:::i;:::-;2381:5;-1:-1:-1;2438:2:9;2423:18;;2410:32;2451:33;2410:32;2451:33;:::i;:::-;2503:7;-1:-1:-1;2562:2:9;2547:18;;2534:32;2575:33;2534:32;2575:33;:::i;:::-;2627:7;-1:-1:-1;2686:2:9;2671:18;;2658:32;2699:31;2658:32;2699:31;:::i;:::-;2749:7;-1:-1:-1;2808:3:9;2793:19;;2780:33;2822:31;2780:33;2822:31;:::i;:::-;2872:7;2862:17;;;2080:805;;;;;;;;:::o;2890:118::-;2976:5;2969:13;2962:21;2955:5;2952:32;2942:60;;2998:1;2995;2988:12;3013:939;3109:6;3117;3125;3133;3141;3149;3202:3;3190:9;3181:7;3177:23;3173:33;3170:53;;;3219:1;3216;3209:12;3170:53;3258:9;3245:23;3277:31;3302:5;3277:31;:::i;:::-;3327:5;-1:-1:-1;3384:2:9;3369:18;;3356:32;3397:33;3356:32;3397:33;:::i;:::-;3449:7;-1:-1:-1;3508:2:9;3493:18;;3480:32;3521:33;3480:32;3521:33;:::i;:::-;3573:7;-1:-1:-1;3632:2:9;3617:18;;3604:32;3645:30;3604:32;3645:30;:::i;:::-;3694:7;-1:-1:-1;3753:3:9;3738:19;;3725:33;3767:31;3725:33;3767:31;:::i;:::-;3817:7;-1:-1:-1;3876:3:9;3861:19;;3848:33;3890:30;3848:33;3890:30;:::i;:::-;3939:7;3929:17;;;3013:939;;;;;;;;:::o;7632:251::-;7702:6;7755:2;7743:9;7734:7;7730:23;7726:32;7723:52;;;7771:1;7768;7761:12;7723:52;7803:9;7797:16;7822:31;7847:5;7822:31;:::i;7888:127::-;7949:10;7944:3;7940:20;7937:1;7930:31;7980:4;7977:1;7970:15;8004:4;8001:1;7994:15;8020:125;8085:9;;;8106:10;;;8103:36;;;8119:18;;:::i;8150:127::-;8211:10;8206:3;8202:20;8199:1;8192:31;8242:4;8239:1;8232:15;8266:4;8263:1;8256:15;8282:217;8322:1;8348;8338:132;;8392:10;8387:3;8383:20;8380:1;8373:31;8427:4;8424:1;8417:15;8455:4;8452:1;8445:15;8338:132;-1:-1:-1;8484:9:9;;8282:217::o;8865:250::-;8950:1;8960:113;8974:6;8971:1;8968:13;8960:113;;;9050:11;;;9044:18;9031:11;;;9024:39;8996:2;8989:10;8960:113;;;-1:-1:-1;;9107:1:9;9089:16;;9082:27;8865:250::o;9120:287::-;9249:3;9287:6;9281:13;9303:66;9362:6;9357:3;9350:4;9342:6;9338:17;9303:66;:::i;:::-;9385:16;;;;;9120:287;-1:-1:-1;;9120:287:9:o;9412:179::-;9490:13;;9543:22;9532:34;;9522:45;;9512:73;;9581:1;9578;9571:12;9512:73;9412:179;;;:::o;9596:571::-;9699:6;9707;9715;9723;9731;9784:3;9772:9;9763:7;9759:23;9755:33;9752:53;;;9801:1;9798;9791:12;9752:53;9824:39;9853:9;9824:39;:::i;:::-;9903:2;9888:18;;9882:25;9969:2;9954:18;;9948:25;10063:2;10048:18;;10042:25;9814:49;;-1:-1:-1;9882:25:9;;-1:-1:-1;9948:25:9;-1:-1:-1;10042:25:9;-1:-1:-1;10112:49:9;10156:3;10141:19;;10112:49;:::i;:::-;10102:59;;9596:571;;;;;;;;:::o;10172:247::-;10240:6;10293:2;10281:9;10272:7;10268:23;10264:32;10261:52;;;10309:1;10306;10299:12;10261:52;10341:9;10335:16;10360:29;10383:5;10360:29;:::i;10424:230::-;10494:6;10547:2;10535:9;10526:7;10522:23;10518:32;10515:52;;;10563:1;10560;10553:12;10515:52;-1:-1:-1;10608:16:9;;10424:230;-1:-1:-1;10424:230:9:o;12006:396::-;12155:2;12144:9;12137:21;12118:4;12187:6;12181:13;12230:6;12225:2;12214:9;12210:18;12203:34;12246:79;12318:6;12313:2;12302:9;12298:18;12293:2;12285:6;12281:15;12246:79;:::i;:::-;12386:2;12365:15;-1:-1:-1;;12361:29:9;12346:45;;;;12393:2;12342:54;;12006:396;-1:-1:-1;;12006:396:9:o;12407:146::-;12494:13;;12516:31;12494:13;12516:31;:::i;12558:165::-;12636:13;;12689:8;12678:20;;12668:31;;12658:59;;12713:1;12710;12703:12;12728:164;12805:13;;12858:1;12847:20;;;12837:31;;12827:59;;12882:1;12879;12872:12;12897:192;12976:13;;-1:-1:-1;;;;;13018:46:9;;13008:57;;12998:85;;13079:1;13076;13069:12;13094:1338;13281:6;13289;13297;13305;13313;13321;13329;13337;13345;13353;13361:7;13370;13424:3;13412:9;13403:7;13399:23;13395:33;13392:53;;;13441:1;13438;13431:12;13392:53;13473:9;13467:16;13523:26;13516:5;13512:38;13505:5;13502:49;13492:77;;13565:1;13562;13555:12;13492:77;13588:5;-1:-1:-1;13612:57:9;13665:2;13650:18;;13612:57;:::i;:::-;13602:67;;13688:57;13741:2;13730:9;13726:18;13688:57;:::i;:::-;13678:67;;13764:57;13817:2;13806:9;13802:18;13764:57;:::i;:::-;13754:67;;13840:49;13884:3;13873:9;13869:19;13840:49;:::i;:::-;13830:59;;13908:48;13951:3;13940:9;13936:19;13908:48;:::i;:::-;13898:58;;13975:48;14018:3;14007:9;14003:19;13975:48;:::i;:::-;13965:58;;14042:50;14087:3;14076:9;14072:19;14042:50;:::i;:::-;14158:3;14143:19;;14137:26;14255:3;14240:19;;14234:26;14032:60;;-1:-1:-1;14137:26:9;-1:-1:-1;14234:26:9;-1:-1:-1;14306:50:9;14351:3;14336:19;;14306:50;:::i;:::-;14295:61;;14376:50;14421:3;14410:9;14406:19;14376:50;:::i;:::-;14365:61;;13094:1338;;;;;;;;;;;;;;:::o;14793:163::-;14871:13;;14924:6;14913:18;;14903:29;;14893:57;;14946:1;14943;14936:12;14961:843;15075:6;15083;15091;15099;15107;15115;15123;15176:3;15164:9;15155:7;15151:23;15147:33;15144:53;;;15193:1;15190;15183:12;15144:53;15225:9;15219:16;15244:31;15269:5;15244:31;:::i;:::-;15294:5;-1:-1:-1;15318:47:9;15361:2;15346:18;;15318:47;:::i;:::-;15308:57;;15384:48;15428:2;15417:9;15413:18;15384:48;:::i;:::-;15374:58;;15451:48;15495:2;15484:9;15480:18;15451:48;:::i;:::-;15441:58;;15518:49;15562:3;15551:9;15547:19;15518:49;:::i;:::-;15508:59;;15612:3;15601:9;15597:19;15591:26;15626:31;15649:7;15626:31;:::i;:::-;15728:3;15713:19;;15707:26;15676:7;;-1:-1:-1;15742:30:9;15707:26;15742:30;:::i;:::-;15791:7;15781:17;;;14961:843;;;;;;;;;;:::o;15809:127::-;15870:10;15865:3;15861:20;15858:1;15851:31;15901:4;15898:1;15891:15;15925:4;15922:1;15915:15;15941:916;16021:6;16074:2;16062:9;16053:7;16049:23;16045:32;16042:52;;;16090:1;16087;16080:12;16042:52;16123:9;16117:16;16156:18;16148:6;16145:30;16142:50;;;16188:1;16185;16178:12;16142:50;16211:22;;16264:4;16256:13;;16252:27;-1:-1:-1;16242:55:9;;16293:1;16290;16283:12;16242:55;16326:2;16320:9;16352:18;16344:6;16341:30;16338:56;;;16374:18;;:::i;:::-;16423:2;16417:9;16515:2;16477:17;;-1:-1:-1;;16473:31:9;;;16506:2;16469:40;16465:54;16453:67;;16550:18;16535:34;;16571:22;;;16532:62;16529:88;;;16597:18;;:::i;:::-;16633:2;16626:22;16657;;;16698:15;;;16715:2;16694:24;16691:37;-1:-1:-1;16688:57:9;;;16741:1;16738;16731:12;16688:57;16754:72;16819:6;16814:2;16806:6;16802:15;16797:2;16793;16789:11;16754:72;:::i;:::-;16845:6;15941:916;-1:-1:-1;;;;;15941:916:9:o;17290:375::-;17378:1;17396:5;17410:249;17431:1;17421:8;17418:15;17410:249;;;17481:4;17476:3;17472:14;17466:4;17463:24;17460:50;;;17490:18;;:::i;:::-;17540:1;17530:8;17526:16;17523:49;;;17554:16;;;;17523:49;17637:1;17633:16;;;;;17593:15;;17410:249;;;17290:375;;;;;;:::o;17670:902::-;17719:5;17749:8;17739:80;;-1:-1:-1;17790:1:9;17804:5;;17739:80;17838:4;17828:76;;-1:-1:-1;17875:1:9;17889:5;;17828:76;17920:4;17938:1;17933:59;;;;18006:1;18001:174;;;;17913:262;;17933:59;17963:1;17954:10;;17977:5;;;18001:174;18038:3;18028:8;18025:17;18022:43;;;18045:18;;:::i;:::-;-1:-1:-1;;18101:1:9;18087:16;;18160:5;;17913:262;;18259:2;18249:8;18246:16;18240:3;18234:4;18231:13;18227:36;18221:2;18211:8;18208:16;18203:2;18197:4;18194:12;18190:35;18187:77;18184:203;;;-1:-1:-1;18296:19:9;;;18372:5;;18184:203;18419:42;-1:-1:-1;;18444:8:9;18438:4;18419:42;:::i;:::-;18497:6;18493:1;18489:6;18485:19;18476:7;18473:32;18470:58;;;18508:18;;:::i;:::-;18546:20;;17670:902;-1:-1:-1;;;17670:902:9:o;18577:140::-;18635:5;18664:47;18705:4;18695:8;18691:19;18685:4;18664:47;:::i;18722:168::-;18795:9;;;18826;;18843:15;;;18837:22;;18823:37;18813:71;;18864:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1677400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getPrice(address)": "infinite",
								"oracleConfigs(address)": "1067",
								"owner()": "401",
								"renounceOwnership()": "infinite",
								"setOracleConfig(address,address,address,bool,uint8,bool)": "infinite",
								"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)": "infinite",
								"transferOwnership(address)": "infinite",
								"vaultFeeds(address)": "1135"
							},
							"internal": {
								"_computeLiquidityAmounts(uint160,int24,int24,uint128)": "infinite",
								"_computeVaultTokenPrice(address,struct OracleManager.VaultUnderlyingFeeds memory)": "infinite",
								"_convertToAggregatorValue(uint256,address,uint8)": "infinite",
								"_convertVaultTokensToValue(uint256,uint256,struct OracleManager.AggregatorPair memory)": "infinite",
								"_fetchPositionData(address,uint256)": "infinite",
								"_fetchVaultInfo(address)": "infinite",
								"_getPoolSqrtAndTick(address)": "infinite",
								"_getPriceFromConfig(struct OracleManager.OracleData memory)": "infinite",
								"_getRevertMsg(bytes memory)": "infinite",
								"_tryGetChainlinkPrice(address,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3957,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4009,
									"end": 4035,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4009,
									"end": 4035,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "1C"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 589,
									"end": 619,
									"name": "PUSH",
									"source": 9,
									"value": "4F7261636C654D616E616765723A20696E76616C6964206F776E657200000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 562,
									"end": 620,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 637,
									"end": 655,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 637,
									"end": 655,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4001,
									"end": 4068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4078,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 4097,
									"end": 4109,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4078,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4078,
									"end": 4110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4078,
									"end": 4110,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 4078,
									"end": 4110,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3957,
									"end": 4117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 309,
									"end": 661,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 309,
									"end": 661,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 14147,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004e5aad83a59fb9aef83d52c0ebeefa5cd16c8efc1f0a7bea6e313d4fa67886564736f6c634300081c0033",
									".code": [
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "9B05FC75"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "F2AC1EC5"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "67A4B06"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "41976E09"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "7F4A3102"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 14147,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3349,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 695,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 663,
											"end": 695,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 663,
											"end": 695,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 645,
											"end": 696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 801,
											"end": 823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 781,
											"end": 799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 774,
											"end": 824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 860,
											"end": 877,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 858,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 840,
											"end": 858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 922,
											"end": 936,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 915,
											"end": 937,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 909,
											"end": 912,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 894,
											"end": 913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 887,
											"end": 938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 617,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6102,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6102,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1178,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 1204,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3450,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1682,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1741,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1444,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1426,
											"end": 1445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1209,
											"end": 1748,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 1950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1753,
											"end": 1956,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5277,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5277,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4215,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6243,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6261,
											"end": 6316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6300,
											"end": 6316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6316,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6261,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4237,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A206E6F2061676772656761746F72206F7220"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7661756C74206C6F676963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6253,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6380,
											"end": 6383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6380,
											"end": 6396,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6380,
											"end": 6396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6380,
											"end": 6396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6452,
											"end": 6455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6432,
											"end": 6456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6530,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4553,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4583,
											"end": 4613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4683,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A207661756C74206665656473206E6F742073"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4742,
											"end": 4761,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4742,
											"end": 4761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4369,
											"end": 4767,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6551,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6665,
											"end": 6670,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6641,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6641,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6675,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6675,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6375,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5477,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5087,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5096,
											"end": 5127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5163,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5144,
											"end": 5163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4772,
											"end": 5169,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5477,
											"end": 5547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5801,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA"
										},
										{
											"begin": 5817,
											"end": 5970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5817,
											"end": 5970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5415,
											"end": 5447,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5447,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5447,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5516,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5464,
											"end": 5482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5464,
											"end": 5482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5553,
											"end": 5570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5570,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5604,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5387,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5369,
											"end": 5388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5631,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5970,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4462,
											"end": 4481,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 4514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4454,
											"end": 4514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5880,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5916,
											"end": 5946,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5889,
											"end": 5947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5636,
											"end": 5988,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4454,
											"end": 4514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4529,
											"end": 4541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4524,
											"end": 4660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4565,
											"end": 4596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4649,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A2061676772656761746F7220726571756972"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195908199BDC881B9BDB8B5D985D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6399,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6380,
											"end": 6399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5993,
											"end": 6405,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4557,
											"end": 4649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4950,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8"
										},
										{
											"begin": 4966,
											"end": 5158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4966,
											"end": 5158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4754,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4856,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 695,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 663,
											"end": 695,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 663,
											"end": 695,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 645,
											"end": 696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 732,
											"end": 764,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 801,
											"end": 823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 774,
											"end": 824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 840,
											"end": 858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 922,
											"end": 936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 936,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 915,
											"end": 937,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 909,
											"end": 912,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 894,
											"end": 913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 887,
											"end": 938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 617,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 944,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5158,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 5165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 6615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6663,
											"end": 6725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6734,
											"end": 6770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6787,
											"end": 6806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6410,
											"end": 6812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 7598,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6875,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 6987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7080,
											"end": 7083,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7103,
											"end": 7123,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7103,
											"end": 7123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7103,
											"end": 7123,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7058,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7124,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7058,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7148,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7138,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7178,
											"end": 7214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7178,
											"end": 7214,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7178,
											"end": 7214,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7138,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7134,
											"end": 7499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7134,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7134,
											"end": 7499,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7324,
											"end": 7346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7351,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7302,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7369,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7302,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7391,
											"end": 7401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7001,
											"end": 7022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7097,
											"end": 7131,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174"
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDC8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6817,
											"end": 7220,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7487,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6875,
											"end": 7598,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6875,
											"end": 7598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7134,
											"end": 7499,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7134,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7427,
											"end": 7429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7409,
											"end": 7430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7505,
											"end": 7539,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A207072696D6172792061676772656761746F"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7621,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7602,
											"end": 7621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7225,
											"end": 7627,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7508,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7587,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6875,
											"end": 7598,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6875,
											"end": 7598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8059,
											"end": 9400,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 8059,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8191,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8271,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8309,
											"end": 8323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8343,
											"end": 8353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8327,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8327,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8327,
											"end": 8354,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8327,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8270,
											"end": 8354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8443,
											"end": 8449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8458,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8424,
											"end": 8459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8459,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8424,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8567,
											"end": 8577,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8555,
											"end": 8585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8585,
											"name": "PUSH",
											"source": 2,
											"value": "3A924D5B"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8555,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8555,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8535,
											"end": 8588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8535,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8676,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8714,
											"end": 8726,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8740,
											"end": 8743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8740,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8740,
											"end": 8753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8740,
											"end": 8753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8770,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8767,
											"end": 8780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8797,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8807,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8794,
											"end": 8807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8676,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 8676,
											"end": 8817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8676,
											"end": 8817,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8676,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8885,
											"end": 8894,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8885,
											"end": 8894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8885,
											"end": 8894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8872,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8904,
											"end": 8916,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8935,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8929,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8919,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8904,
											"end": 8941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8904,
											"end": 8941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8985,
											"end": 9009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9047,
											"end": 9049,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9162,
											"end": 9164,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 9162,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9162,
											"end": 9179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9162,
											"end": 9179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8985,
											"end": 9190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8985,
											"end": 9190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9261,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9261,
											"end": 9303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9261,
											"end": 9303,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9261,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9336,
											"end": 9352,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9336,
											"end": 9352,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9359,
											"end": 9370,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9356,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9336,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9322,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9322,
											"end": 9371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9322,
											"end": 9332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9322,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9322,
											"end": 9371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9322,
											"end": 9371,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9322,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9371,
											"name": "SWAP16",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "SWAP16",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 9400,
											"name": "SWAP14",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 9400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8706,
											"end": 8708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8688,
											"end": 8709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8688,
											"end": 8709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8688,
											"end": 8709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8818,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8504,
											"end": 8860,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12760,
											"end": 12772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12760,
											"end": 12772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12823,
											"end": 12847,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12823,
											"end": 12847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12819,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 12819,
											"end": 12894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12871,
											"end": 12876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12863,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12863,
											"end": 12883,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12819,
											"end": 12894,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 12819,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12903,
											"end": 12923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12903,
											"end": 12923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12903,
											"end": 12923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13052,
											"end": 13073,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12926,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 13052,
											"end": 13082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13052,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13096,
											"end": 13108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13132,
											"end": 13135,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 13112,
											"end": 13122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13112,
											"end": 13129,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 13096,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 13092,
											"end": 13182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13159,
											"end": 13164,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13169,
											"end": 13170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13151,
											"end": 13171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13182,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 13092,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13195,
											"end": 13208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 13218,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 13218,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13308,
											"end": 13309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13298,
											"end": 13309,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 13294,
											"end": 13356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13333,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13343,
											"end": 13344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13325,
											"end": 13345,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13356,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 13294,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13386,
											"end": 13397,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13411,
											"end": 13427,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13411,
											"end": 13427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13411,
											"end": 13427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13411,
											"end": 13427,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13407,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13407,
											"end": 13774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13524,
											"end": 13587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13444,
											"end": 13459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13444,
											"end": 13459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13444,
											"end": 13459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13485,
											"end": 13506,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 13485,
											"end": 13601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13485,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13443,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13443,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13443,
											"end": 13601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13443,
											"end": 13601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13630,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13651,
											"end": 13653,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13634,
											"end": 13641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13634,
											"end": 13648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13634,
											"end": 13653,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 13619,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13615,
											"end": 13708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13615,
											"end": 13708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 13615,
											"end": 13708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13681,
											"end": 13686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13691,
											"end": 13692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13615,
											"end": 13708,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 13615,
											"end": 13708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13746,
											"end": 13753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 13735,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 13735,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13429,
											"end": 13774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13429,
											"end": 13774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13407,
											"end": 13774,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13407,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13791,
											"end": 13795,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13791,
											"end": 13795,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13805,
											"end": 13811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13805,
											"end": 13811,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13814,
											"end": 13825,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 13833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9498,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9536,
											"end": 9550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9566,
											"end": 9579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9594,
											"end": 9604,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9629,
											"end": 9642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9642,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 9629,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9644,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9673,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9662,
											"end": 9677,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10861,
											"end": 10863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10843,
											"end": 10864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10902,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10873,
											"end": 10903,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10939,
											"end": 10973,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10912,
											"end": 10974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10990,
											"end": 11008,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10990,
											"end": 11008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11051,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11032,
											"end": 11051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10659,
											"end": 11057,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9654,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9737,
											"end": 9751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9751,
											"name": "PUSH",
											"source": 2,
											"value": "F657A7FE"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 9737,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9737,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9727,
											"end": 9753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9727,
											"end": 9753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9771,
											"end": 9778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9771,
											"end": 9783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11246,
											"end": 11267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11305,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11276,
											"end": 11306,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11374,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000"
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11315,
											"end": 11375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 11062,
											"end": 11416,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9763,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9838,
											"end": 9855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9855,
											"name": "PUSH",
											"source": 2,
											"value": "791B98BC"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 9838,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9875,
											"end": 9895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9875,
											"end": 9895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11605,
											"end": 11626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11635,
											"end": 11665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11735,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D"
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11745,
											"end": 11777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11794,
											"end": 11813,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11794,
											"end": 11813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 11421,
											"end": 11819,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9867,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9556,
											"end": 9941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10097,
											"end": 10109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10132,
											"end": 10149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "99FBAB88"
										},
										{
											"begin": 10186,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10186,
											"end": 10232,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10241,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11970,
											"end": 11995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11970,
											"end": 11995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11958,
											"end": 11960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12001,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10132,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10293,
											"end": 10297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10279,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10298,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10279,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10262,
											"end": 10299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10592,
											"end": 10596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10568,
											"end": 10722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10568,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10352,
											"end": 10362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10379,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10376,
											"end": 10386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 10414,
											"end": 10427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10414,
											"end": 10427,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10444,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10454,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10441,
											"end": 10454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10471,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10481,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10468,
											"end": 10481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10526,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10532,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 10523,
											"end": 10532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10546,
											"end": 10549,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 10546,
											"end": 10555,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 10546,
											"end": 10555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 10729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11562,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 11076,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11146,
											"end": 11166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14641,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14621,
											"end": 14642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14678,
											"end": 14680,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 14658,
											"end": 14676,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14658,
											"end": 14676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14658,
											"end": 14676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14717,
											"end": 14746,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000"
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14690,
											"end": 14747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14782,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14764,
											"end": 14782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 14437,
											"end": 14788,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11190,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3850C7BD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11298,
											"end": 11317,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11298,
											"end": 11394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11298,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11262,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11262,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11262,
											"end": 11394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11262,
											"end": 11394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11421,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 11435,
											"end": 11439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11421,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 11421,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11421,
											"end": 11440,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 11421,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 11404,
											"end": 11441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11495,
											"end": 11499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 11484,
											"end": 11555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 11484,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11451,
											"end": 11555,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11555,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11555,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11555,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11076,
											"end": 11562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11562,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11076,
											"end": 11562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11738,
											"end": 11750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11752,
											"end": 11764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11780,
											"end": 11789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11794,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11776,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11776,
											"end": 11834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11810,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11810,
											"end": 11823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11776,
											"end": 11834,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11776,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11891,
											"end": 11900,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11863,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 11863,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11863,
											"end": 11901,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11863,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11911,
											"end": 11928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 11959,
											"end": 11968,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 11931,
											"end": 11969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 11969,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 11931,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11911,
											"end": 11969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11911,
											"end": 11969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 12047,
											"end": 12059,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12096,
											"end": 12105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 11994,
											"end": 12138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12138,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 11994,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11979,
											"end": 12138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11979,
											"end": 12138,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11979,
											"end": 12138,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10938,
											"end": 10942,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10944,
											"end": 10946,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10953,
											"end": 10955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10912,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10897,
											"end": 10961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10897,
											"end": 10961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10971,
											"end": 10983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11029,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10986,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11035,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10986,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10971,
											"end": 11035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11052,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10971,
											"end": 11035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11056,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11052,
											"end": 11063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11063,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 11052,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 11070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13839,
											"end": 14145,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13839,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13910,
											"end": 13923,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13960,
											"end": 13962,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 13939,
											"end": 13950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13939,
											"end": 13957,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13939,
											"end": 13962,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13935,
											"end": 14009,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13935,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 13935,
											"end": 14009,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH data",
											"source": 2,
											"value": "3E1E6533146503DDCD57727C5002D69321677D0539DF318AD90F03963B3C334F"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14009,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13839,
											"end": 14145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13839,
											"end": 14145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13935,
											"end": 14009,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 13935,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14061,
											"end": 14072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 14105,
											"end": 14138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 14105,
											"end": 14138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14098,
											"end": 14138,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13839,
											"end": 14145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13839,
											"end": 14145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1385,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1522,
											"end": 1530,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1530,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1578,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1566,
											"end": 1578,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1522,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 667,
											"end": 676,
											"name": "PUSH",
											"source": 6,
											"value": "D89E8"
										},
										{
											"begin": 1597,
											"end": 1632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1632,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1593,
											"end": 1644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15E4079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1644,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1593,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1675,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1800,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1659,
											"end": 1800,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1831,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1814,
											"end": 1897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1889,
											"name": "PUSH",
											"source": 6,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1847,
											"end": 1889,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1846,
											"end": 1897,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1897,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1814,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1911,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1986,
											"name": "PUSH",
											"source": 6,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1943,
											"end": 1994,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1911,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2012,
											"end": 2025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2008,
											"end": 2091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2008,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2109,
											"end": 2123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2123,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2105,
											"end": 2189,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2181,
											"name": "PUSH",
											"source": 6,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2139,
											"end": 2181,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2189,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2105,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2226,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2203,
											"end": 2287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2237,
											"end": 2279,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2236,
											"end": 2287,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2203,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2301,
											"end": 2385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2334,
											"end": 2385,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2301,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2433,
											"end": 2475,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2432,
											"end": 2483,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2521,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2497,
											"end": 2582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2532,
											"end": 2574,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2531,
											"end": 2582,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2497,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2600,
											"end": 2615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2615,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2620,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2596,
											"end": 2681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2631,
											"end": 2673,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2630,
											"end": 2681,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2596,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2719,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2695,
											"end": 2780,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "PUSH",
											"source": 6,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2730,
											"end": 2772,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2729,
											"end": 2780,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2695,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "800"
										},
										{
											"begin": 2798,
											"end": 2813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2794,
											"end": 2879,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2871,
											"name": "PUSH",
											"source": 6,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2829,
											"end": 2871,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2828,
											"end": 2879,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2879,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2794,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "1000"
										},
										{
											"begin": 2897,
											"end": 2913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2893,
											"end": 2979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2929,
											"end": 2971,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2928,
											"end": 2979,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2979,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2893,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "2000"
										},
										{
											"begin": 2997,
											"end": 3013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2993,
											"end": 3079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3071,
											"name": "PUSH",
											"source": 6,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3028,
											"end": 3079,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3079,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2993,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "4000"
										},
										{
											"begin": 3097,
											"end": 3113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3093,
											"end": 3179,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "PUSH",
											"source": 6,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3179,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3179,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3093,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "8000"
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3218,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3193,
											"end": 3279,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3229,
											"end": 3271,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3228,
											"end": 3279,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3279,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3193,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 3297,
											"end": 3314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3293,
											"end": 3379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3329,
											"end": 3379,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3379,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3293,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "20000"
										},
										{
											"begin": 3397,
											"end": 3414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3414,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3419,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3393,
											"end": 3478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "PUSH",
											"source": 6,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3430,
											"end": 3470,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3429,
											"end": 3478,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3393,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "40000"
										},
										{
											"begin": 3496,
											"end": 3513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3492,
											"end": 3575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3567,
											"name": "PUSH",
											"source": 6,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3529,
											"end": 3567,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3492,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "80000"
										},
										{
											"begin": 3593,
											"end": 3610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3615,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3589,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "PUSH",
											"source": 6,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3626,
											"end": 3659,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3625,
											"end": 3667,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3589,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3729,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3682,
											"end": 3729,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3704,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3729,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3729,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3682,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4111,
											"name": "PUSH",
											"source": 6,
											"value": "100000000"
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4112,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4117,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4125,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4126,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4078,
											"end": 4126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4090,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 4138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 4138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 4144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 4144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6526,
											"end": 6539,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6522,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6588,
											"end": 6601,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6616,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6618,
											"end": 6627,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6565,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6677,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6726,
											"end": 6738,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6753,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6764,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6703,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6812,
											"end": 6825,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6839,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 6850,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6789,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6915,
											"end": 6928,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6943,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6892,
											"end": 6955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12637,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 12151,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 12326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 12326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 12318,
											"end": 12358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12330,
											"end": 12358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12330,
											"end": 12358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12330,
											"end": 12358,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 12358,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 12318,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12393,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 12314,
											"end": 12393,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12381,
											"end": 12382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 12374,
											"end": 12382,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12393,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 12314,
											"end": 12393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12403,
											"end": 12410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12412,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12434,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 12456,
											"end": 12470,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12472,
											"end": 12483,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12434,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 12434,
											"end": 12484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12434,
											"end": 12484,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 12434,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17066,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17046,
											"end": 17067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17103,
											"end": 17105,
											"name": "PUSH",
											"source": 9,
											"value": "3B"
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17076,
											"end": 17106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17176,
											"name": "PUSH",
											"source": 9,
											"value": "4F7261636C654D616E616765723A2061676772656761746F72206661696C2069"
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17115,
											"end": 17177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17213,
											"end": 17242,
											"name": "PUSH",
											"source": 9,
											"value": "6E205F636F6E76657274546F41676772656761746F7256616C75650000000000"
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17186,
											"end": 17243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17279,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 17260,
											"end": 17279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 16862,
											"end": 17285,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 12494,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 12628,
											"end": 12629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12624,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 12622,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 12616,
											"end": 12617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12613,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 12610,
											"end": 12617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12617,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 12610,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 12609,
											"end": 12630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12609,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12602,
											"end": 12630,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 12151,
											"end": 12637,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4848,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 309,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4779,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4763,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4779,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4814,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4646,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4646,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 5223,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5417,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5469,
											"end": 5482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5469,
											"end": 5482,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5556,
											"end": 5565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5596,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5580,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5596,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5540,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5615,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5632,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5223,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1426,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2782,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2782,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4085,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4148,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4338,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3292,
											"end": 3323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1961,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2045,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2050,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2014,
											"end": 2069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2242,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2254,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2260,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2275,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2331,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2451,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2534,
											"end": 2566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2575,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2699,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2793,
											"end": 2812,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2822,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 2983,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 2960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2942,
											"end": 3002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3302,
											"end": 3307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3277,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3388,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 3356,
											"end": 3388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3397,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3456,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3510,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3512,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3480,
											"end": 3512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3521,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3645,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3767,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3881,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3848,
											"end": 3881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3890,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3939,
											"end": 3946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7883,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7632,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7741,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7753,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7775,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7723,
											"end": 7775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7773,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7775,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7723,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7797,
											"end": 7813,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7847,
											"end": 7852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7822,
											"end": 7853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 8015,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7888,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7959,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7944,
											"end": 7947,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7940,
											"end": 7960,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 7984,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7970,
											"end": 7985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 8009,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8020,
											"end": 8145,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8020,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8103,
											"end": 8139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8119,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8150,
											"end": 8277,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8150,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8206,
											"end": 8209,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8246,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8232,
											"end": 8247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8499,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 8282,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8338,
											"end": 8470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8387,
											"end": 8390,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8383,
											"end": 8403,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8431,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8424,
											"end": 8425,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8417,
											"end": 8432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8460,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8470,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8338,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8493,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 9115,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8865,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8981,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9050,
											"end": 9061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9050,
											"end": 9061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9050,
											"end": 9061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9024,
											"end": 9063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 8999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 8960,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 9115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9407,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9120,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9303,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9362,
											"end": 9368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9303,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 9303,
											"end": 9369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9303,
											"end": 9369,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9303,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9120,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9591,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 9412,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9565,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9532,
											"end": 9566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9566,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9567,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9512,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9512,
											"end": 9585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9512,
											"end": 9585,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9512,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9591,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9591,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9729,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9731,
											"end": 9737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9787,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9772,
											"end": 9781,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9770,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9759,
											"end": 9782,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9755,
											"end": 9788,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9791,
											"end": 9803,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9824,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9853,
											"end": 9862,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9824,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 9824,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9824,
											"end": 9863,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9824,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9906,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9888,
											"end": 9906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 9907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 9971,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9948,
											"end": 9973,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10065,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9814,
											"end": 9863,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9814,
											"end": 9863,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9882,
											"end": 9907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 9907,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9948,
											"end": 9973,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10042,
											"end": 10067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10141,
											"end": 10160,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10141,
											"end": 10160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10112,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 10112,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10112,
											"end": 10161,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10112,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10102,
											"end": 10161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10102,
											"end": 10161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 10167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10172,
											"end": 10419,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10172,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10291,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10264,
											"end": 10296,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10309,
											"end": 10310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10360,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10360,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10360,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10654,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 10424,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10535,
											"end": 10544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10533,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10518,
											"end": 10550,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10515,
											"end": 10567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10515,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10515,
											"end": 10567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10515,
											"end": 10567,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10515,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10624,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12006,
											"end": 12402,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 12006,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12155,
											"end": 12157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12137,
											"end": 12158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12187,
											"end": 12193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12194,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12230,
											"end": 12236,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12318,
											"end": 12324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12313,
											"end": 12315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12311,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12298,
											"end": 12316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12291,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 12246,
											"end": 12325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12325,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12246,
											"end": 12325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12386,
											"end": 12388,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12365,
											"end": 12380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12346,
											"end": 12391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12346,
											"end": 12391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12346,
											"end": 12391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12346,
											"end": 12391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12342,
											"end": 12396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12006,
											"end": 12402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12006,
											"end": 12402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12553,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 12407,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12507,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12507,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12494,
											"end": 12507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 12516,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12723,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12558,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12689,
											"end": 12697,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12668,
											"end": 12699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12668,
											"end": 12699,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12658,
											"end": 12717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12713,
											"end": 12714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12710,
											"end": 12711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12715,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12728,
											"end": 12892,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12728,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12805,
											"end": 12818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12805,
											"end": 12818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12858,
											"end": 12859,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12847,
											"end": 12867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12867,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 12837,
											"end": 12868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12837,
											"end": 12868,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12827,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12827,
											"end": 12886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12882,
											"end": 12883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 12884,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12897,
											"end": 13089,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12897,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 12989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 12989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13065,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12998,
											"end": 13083,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13079,
											"end": 13080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13076,
											"end": 13077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13069,
											"end": 13081,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13281,
											"end": 13287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13289,
											"end": 13295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13297,
											"end": 13303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13305,
											"end": 13311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13313,
											"end": 13319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13345,
											"end": 13351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13361,
											"end": 13368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13370,
											"end": 13377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13424,
											"end": 13427,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 13412,
											"end": 13421,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 13399,
											"end": 13422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13395,
											"end": 13428,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13392,
											"end": 13445,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13392,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13392,
											"end": 13445,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13431,
											"end": 13443,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13392,
											"end": 13445,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13392,
											"end": 13445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13473,
											"end": 13482,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 13467,
											"end": 13483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13523,
											"end": 13549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13516,
											"end": 13521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13512,
											"end": 13550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13502,
											"end": 13551,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13492,
											"end": 13569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13565,
											"end": 13566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13569,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13492,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13593,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13612,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13665,
											"end": 13667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13612,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 13612,
											"end": 13669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13612,
											"end": 13669,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13612,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13602,
											"end": 13669,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 13602,
											"end": 13669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13688,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13741,
											"end": 13743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13730,
											"end": 13739,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13688,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 13688,
											"end": 13745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13688,
											"end": 13745,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13688,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13678,
											"end": 13745,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 13678,
											"end": 13745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13764,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 13817,
											"end": 13819,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13806,
											"end": 13815,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13764,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 13764,
											"end": 13821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13764,
											"end": 13821,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 13764,
											"end": 13821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13754,
											"end": 13821,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 13754,
											"end": 13821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13840,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13884,
											"end": 13887,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 13869,
											"end": 13888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13840,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 13840,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13840,
											"end": 13889,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13840,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13889,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13908,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 13940,
											"end": 13949,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 13936,
											"end": 13955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13908,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13908,
											"end": 13956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13908,
											"end": 13956,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 13908,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13898,
											"end": 13956,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 13898,
											"end": 13956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13975,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 14018,
											"end": 14021,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 14007,
											"end": 14016,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13975,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13975,
											"end": 14023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13975,
											"end": 14023,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 13975,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13965,
											"end": 14023,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13965,
											"end": 14023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14087,
											"end": 14090,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14076,
											"end": 14085,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 14042,
											"end": 14092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14092,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14042,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14158,
											"end": 14161,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14143,
											"end": 14162,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 14143,
											"end": 14162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14255,
											"end": 14258,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 14240,
											"end": 14259,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14260,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14032,
											"end": 14092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14032,
											"end": 14092,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14260,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14306,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14351,
											"end": 14354,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 14336,
											"end": 14355,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 14306,
											"end": 14356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14356,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14306,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 14421,
											"end": 14424,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 14410,
											"end": 14419,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 14406,
											"end": 14425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 14376,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14426,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 14376,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14365,
											"end": 14426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14365,
											"end": 14426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 14432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14793,
											"end": 14956,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 14793,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14884,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14930,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14903,
											"end": 14932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14903,
											"end": 14932,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14893,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 14893,
											"end": 14950,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14936,
											"end": 14948,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15075,
											"end": 15081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15091,
											"end": 15097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15107,
											"end": 15113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15115,
											"end": 15121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15176,
											"end": 15179,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15164,
											"end": 15173,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15162,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15151,
											"end": 15174,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15147,
											"end": 15180,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15144,
											"end": 15197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15144,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 15144,
											"end": 15197,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15193,
											"end": 15194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15191,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15195,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15144,
											"end": 15197,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 15144,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15225,
											"end": 15234,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15244,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 15269,
											"end": 15274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15244,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 15244,
											"end": 15275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15244,
											"end": 15275,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 15244,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15294,
											"end": 15299,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15318,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 15361,
											"end": 15363,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15364,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15346,
											"end": 15364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 15318,
											"end": 15365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15365,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 15318,
											"end": 15365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15308,
											"end": 15365,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15308,
											"end": 15365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 15428,
											"end": 15430,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15426,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 15384,
											"end": 15432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15432,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 15384,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15432,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 15495,
											"end": 15497,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15484,
											"end": 15493,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 15451,
											"end": 15499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15499,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 15451,
											"end": 15499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15441,
											"end": 15499,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15441,
											"end": 15499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15518,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 15562,
											"end": 15565,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 15551,
											"end": 15560,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15547,
											"end": 15566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15518,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 15518,
											"end": 15567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15518,
											"end": 15567,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 15518,
											"end": 15567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15508,
											"end": 15567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15508,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15612,
											"end": 15615,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15601,
											"end": 15610,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15597,
											"end": 15616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15591,
											"end": 15617,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15626,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 15649,
											"end": 15656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15626,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 15626,
											"end": 15657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15626,
											"end": 15657,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 15626,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15728,
											"end": 15731,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 15713,
											"end": 15732,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15713,
											"end": 15732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15707,
											"end": 15733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 15683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 15683,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15742,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 15707,
											"end": 15733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15742,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 15742,
											"end": 15772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15742,
											"end": 15772,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 15742,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15791,
											"end": 15798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15809,
											"end": 15936,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 15809,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15870,
											"end": 15880,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15865,
											"end": 15868,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15861,
											"end": 15881,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15858,
											"end": 15859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 15905,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15898,
											"end": 15899,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15891,
											"end": 15906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15925,
											"end": 15929,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15922,
											"end": 15923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15915,
											"end": 15930,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15941,
											"end": 16857,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 15941,
											"end": 16857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16074,
											"end": 16076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16062,
											"end": 16071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16053,
											"end": 16060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16072,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16045,
											"end": 16077,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 16042,
											"end": 16094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16087,
											"end": 16088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16080,
											"end": 16092,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16094,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 16042,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16117,
											"end": 16133,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16148,
											"end": 16154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16175,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16192,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16142,
											"end": 16192,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16185,
											"end": 16186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16190,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16192,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16142,
											"end": 16192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16211,
											"end": 16233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16211,
											"end": 16233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16264,
											"end": 16268,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16256,
											"end": 16269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16256,
											"end": 16269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16252,
											"end": 16279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 16242,
											"end": 16297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16242,
											"end": 16297,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16293,
											"end": 16294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16290,
											"end": 16291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16283,
											"end": 16295,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16242,
											"end": 16297,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16242,
											"end": 16297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16352,
											"end": 16370,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16344,
											"end": 16350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16371,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16338,
											"end": 16394,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16338,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16338,
											"end": 16394,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 16374,
											"end": 16392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16423,
											"end": 16425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16417,
											"end": 16426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16477,
											"end": 16494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16477,
											"end": 16494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16473,
											"end": 16504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16473,
											"end": 16504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16473,
											"end": 16504,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16508,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 16469,
											"end": 16509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16465,
											"end": 16519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16453,
											"end": 16520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16453,
											"end": 16520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16550,
											"end": 16568,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16535,
											"end": 16569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16535,
											"end": 16569,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16571,
											"end": 16593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16571,
											"end": 16593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16571,
											"end": 16593,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 16594,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16529,
											"end": 16617,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16529,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16529,
											"end": 16617,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 16597,
											"end": 16615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16626,
											"end": 16648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16698,
											"end": 16713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16698,
											"end": 16713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16698,
											"end": 16713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16715,
											"end": 16717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16694,
											"end": 16718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16691,
											"end": 16728,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 16688,
											"end": 16745,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16688,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 16688,
											"end": 16745,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16741,
											"end": 16742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16738,
											"end": 16739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16731,
											"end": 16743,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16688,
											"end": 16745,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 16688,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16754,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 16819,
											"end": 16825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16814,
											"end": 16816,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16817,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16797,
											"end": 16799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16795,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16789,
											"end": 16800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16754,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 16754,
											"end": 16826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16754,
											"end": 16826,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 16754,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16845,
											"end": 16851,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15941,
											"end": 16857,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15941,
											"end": 16857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17378,
											"end": 17379,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17396,
											"end": 17401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17431,
											"end": 17432,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17421,
											"end": 17429,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17433,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17476,
											"end": 17479,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17472,
											"end": 17486,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17466,
											"end": 17470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17463,
											"end": 17487,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17510,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17460,
											"end": 17510,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17490,
											"end": 17508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17490,
											"end": 17508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 17490,
											"end": 17508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17490,
											"end": 17508,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17490,
											"end": 17508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17540,
											"end": 17541,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17530,
											"end": 17538,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17526,
											"end": 17542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17554,
											"end": 17570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17554,
											"end": 17570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17554,
											"end": 17570,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17554,
											"end": 17570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17523,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17637,
											"end": 17638,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17633,
											"end": 17649,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17633,
											"end": 17649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17633,
											"end": 17649,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17633,
											"end": 17649,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 17633,
											"end": 17649,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17593,
											"end": 17608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17593,
											"end": 17608,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 17410,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17290,
											"end": 17665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17670,
											"end": 18572,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 17670,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17719,
											"end": 17724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17749,
											"end": 17757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17739,
											"end": 17819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 17739,
											"end": 17819,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17790,
											"end": 17791,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17804,
											"end": 17809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 17804,
											"end": 17809,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17739,
											"end": 17819,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 17739,
											"end": 17819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17838,
											"end": 17842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17828,
											"end": 17904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 17828,
											"end": 17904,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17875,
											"end": 17876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17889,
											"end": 17894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 17889,
											"end": 17894,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17828,
											"end": 17904,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 17828,
											"end": 17904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17920,
											"end": 17924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17938,
											"end": 17939,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18007,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 17913,
											"end": 18175,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 17933,
											"end": 17992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17963,
											"end": 17964,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17954,
											"end": 17964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17954,
											"end": 17964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17977,
											"end": 17982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17977,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 17977,
											"end": 17982,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 18001,
											"end": 18175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18041,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18028,
											"end": 18036,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18025,
											"end": 18042,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18022,
											"end": 18065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18022,
											"end": 18065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 18022,
											"end": 18065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18045,
											"end": 18063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 18045,
											"end": 18063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 18045,
											"end": 18063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18045,
											"end": 18063,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 18045,
											"end": 18063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18101,
											"end": 18102,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18087,
											"end": 18103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18087,
											"end": 18103,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 18160,
											"end": 18165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 18160,
											"end": 18165,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 18175,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 17913,
											"end": 18175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 18175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18249,
											"end": 18257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18246,
											"end": 18262,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18240,
											"end": 18243,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 18234,
											"end": 18238,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18231,
											"end": 18244,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18227,
											"end": 18263,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18221,
											"end": 18223,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 18211,
											"end": 18219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18208,
											"end": 18224,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18203,
											"end": 18205,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 18197,
											"end": 18201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18194,
											"end": 18206,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18190,
											"end": 18225,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18264,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18184,
											"end": 18387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18184,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 18184,
											"end": 18387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18296,
											"end": 18315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18296,
											"end": 18315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18296,
											"end": 18315,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18372,
											"end": 18377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 18372,
											"end": 18377,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18184,
											"end": 18387,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 18184,
											"end": 18387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18419,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18444,
											"end": 18452,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18438,
											"end": 18442,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18419,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 18419,
											"end": 18461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18419,
											"end": 18461,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 18419,
											"end": 18461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18497,
											"end": 18503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18489,
											"end": 18495,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18485,
											"end": 18504,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18476,
											"end": 18483,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18473,
											"end": 18505,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18470,
											"end": 18528,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18470,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 18470,
											"end": 18528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 18508,
											"end": 18526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17670,
											"end": 18572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17670,
											"end": 18572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18577,
											"end": 18717,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 18577,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18664,
											"end": 18711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 18705,
											"end": 18709,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18695,
											"end": 18703,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18691,
											"end": 18710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 18689,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18664,
											"end": 18711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 18664,
											"end": 18711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18722,
											"end": 18890,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 18722,
											"end": 18890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18795,
											"end": 18804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18795,
											"end": 18804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18795,
											"end": 18804,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18826,
											"end": 18835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18826,
											"end": 18835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18858,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18837,
											"end": 18859,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18837,
											"end": 18859,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18823,
											"end": 18860,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18813,
											"end": 18884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 18813,
											"end": 18884,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18864,
											"end": 18882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 18864,
											"end": 18882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 18864,
											"end": 18882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										}
									],
									".data": {
										"3E1E6533146503DDCD57727C5002D69321677D0539DF318AD90F03963B3C334F": "4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367"
									}
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getPrice(address)": "41976e09",
							"oracleConfigs(address)": "067a4b06",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setOracleConfig(address,address,address,bool,uint8,bool)": "f2ac1ec5",
							"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)": "9b05fc75",
							"transferOwnership(address)": "f2fde38b",
							"vaultFeeds(address)": "7f4a3102"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"T\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useFallbackIfError\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimalsOverride\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"name\":\"OracleConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token0Aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1Aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"token0Decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"token1Decimals\",\"type\":\"uint8\"}],\"name\":\"VaultUnderlyingFeedsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useFallbackIfError\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"decimalsOverride\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useFallbackIfErr\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"decimalsOvr\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"name\":\"setOracleConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0Agg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1Agg\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"token0Dec\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"token1Dec\",\"type\":\"uint8\"}],\"name\":\"setVaultUnderlyingFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0Aggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1Aggregator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"token0Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"token1Decimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(address)\":{\"notice\":\"Get the current price for a token or vault token in aggregator decimals (commonly 1e8).\"},\"oracleConfigs(address)\":{\"notice\":\"token -> OracleData\"},\"setOracleConfig(address,address,address,bool,uint8,bool)\":{\"notice\":\"Sets or updates an oracle config for a given token or vault.\"},\"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)\":{\"notice\":\"Sets aggregator references for a vault token\\u2019s underlying token0, token1\"},\"vaultFeeds(address)\":{\"notice\":\"vaultToken -> VaultUnderlyingFeeds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"OracleManager\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x63f95a9c0f4be1b0ee3ff7836f35927c36d6669e074ee4494b4249daa72ba7b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51d91fb484185fa58a5f1b08965e6d985e2a727502e058d8e5cc961179e23baa\",\"dweb:/ipfs/QmY2rGRvEQba55FHWL8kKLSGG25jZopdajD3yYVuMCPyGW\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1249,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 294,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "oracleConfigs",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(OracleData)276_storage)"
							},
							{
								"astId": 300,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "vaultFeeds",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(VaultUnderlyingFeeds)288_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(OracleData)276_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct OracleManager.OracleData)",
								"numberOfBytes": "32",
								"value": "t_struct(OracleData)276_storage"
							},
							"t_mapping(t_address,t_struct(VaultUnderlyingFeeds)288_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)",
								"numberOfBytes": "32",
								"value": "t_struct(VaultUnderlyingFeeds)288_storage"
							},
							"t_struct(OracleData)276_storage": {
								"encoding": "inplace",
								"label": "struct OracleManager.OracleData",
								"members": [
									{
										"astId": 267,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "primaryAggregator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 269,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "fallbackAggregator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 271,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "useFallbackIfError",
										"offset": 20,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 273,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "decimalsOverride",
										"offset": 21,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 275,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "isVaultToken",
										"offset": 22,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(VaultUnderlyingFeeds)288_storage": {
								"encoding": "inplace",
								"label": "struct OracleManager.VaultUnderlyingFeeds",
								"members": [
									{
										"astId": 279,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token0Aggregator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 281,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token1Aggregator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 283,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token0Decimals",
										"offset": 20,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 285,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token1Decimals",
										"offset": 21,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 287,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "exists",
										"offset": 22,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getPrice(address)": {
								"notice": "Get the current price for a token or vault token in aggregator decimals (commonly 1e8)."
							},
							"oracleConfigs(address)": {
								"notice": "token -> OracleData"
							},
							"setOracleConfig(address,address,address,bool,uint8,bool)": {
								"notice": "Sets or updates an oracle config for a given token or vault."
							},
							"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)": {
								"notice": "Sets aggregator references for a vault tokenâ€™s underlying token0, token1"
							},
							"vaultFeeds(address)": {
								"notice": "vaultToken -> VaultUnderlyingFeeds"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1249,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122032b66cc1c4a246f11913a074ae1f1ca0ac2054c04d70a8a79c10c60765c712f264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122032b66cc1c4a246f11913a074ae1f1ca0ac2054c04d70a8a79c10c60765c712f264736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB6 PUSH13 0xC1C4A246F11913A074AE1F1CA0 0xAC KECCAK256 SLOAD 0xC0 0x4D PUSH17 0xA8A79C10C60765C712F264736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122032b66cc1c4a246f11913a074ae1f1ca0ac2054c04d70a8a79c10c60765c712f264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB6 PUSH13 0xC1C4A246F11913A074AE1F1CA0 0xAC KECCAK256 SLOAD 0xC0 0x4D PUSH17 0xA8A79C10C60765C712F264736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032b66cc1c4a246f11913a074ae1f1ca0ac2054c04d70a8a79c10c60765c712f264736f6c634300081c0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [
						{
							"inputs": [],
							"name": "R",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "T",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":305:9417  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":305:9417  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cbb9e0a2559d80c36c1a616e2aafcf6ee46349610536f47efd01925538f38de464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbb9e0a2559d80c36c1a616e2aafcf6ee46349610536f47efd01925538f38de464736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xB9 0xE0 LOG2 SSTORE SWAP14 DUP1 0xC3 PUSH13 0x1A616E2AAFCF6EE46349610536 DELEGATECALL PUSH31 0xFD01925538F38DE464736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "305:9112:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbb9e0a2559d80c36c1a616e2aafcf6ee46349610536f47efd01925538f38de464736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xB9 0xE0 LOG2 SSTORE SWAP14 DUP1 0xC3 PUSH13 0x1A616E2AAFCF6EE46349610536 DELEGATECALL PUSH31 0xFD01925538F38DE464736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "305:9112:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 305,
									"end": 9417,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbb9e0a2559d80c36c1a616e2aafcf6ee46349610536f47efd01925538f38de464736f6c634300081c0033",
									".code": [
										{
											"begin": 305,
											"end": 9417,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 305,
											"end": 9417,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"R\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"T\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"LiquidityAmounts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Liquidity amount functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":327:6974  library LiquidityAmounts {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":327:6974  library LiquidityAmounts {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a86e8507395ab33bd385aa977ddfdd5005503b9a495d4f7324e92aef6861c1564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a86e8507395ab33bd385aa977ddfdd5005503b9a495d4f7324e92aef6861c1564736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A DUP7 0xE8 POP PUSH20 0x95AB33BD385AA977DDFDD5005503B9A495D4F732 0x4E SWAP3 0xAE 0xF6 DUP7 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "327:6647:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a86e8507395ab33bd385aa977ddfdd5005503b9a495d4f7324e92aef6861c1564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A DUP7 0xE8 POP PUSH20 0x95AB33BD385AA977DDFDD5005503B9A495D4F732 0x4E SWAP3 0xAE 0xF6 DUP7 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "327:6647:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmount1ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmountsForLiquidity(uint160,uint160,uint160,uint128)": "infinite",
								"getLiquidityForAmount0(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmount1(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)": "infinite",
								"toUint128(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a86e8507395ab33bd385aa977ddfdd5005503b9a495d4f7324e92aef6861c1564736f6c634300081c0033",
									".code": [
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity amount functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for computing liquidity amounts from token amounts and prices\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":\"LiquidityAmounts\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions for computing liquidity amounts from token amounts and prices",
						"version": 1
					}
				}
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						]
					},
					"id": 10,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:174:0",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "FixedPoint96",
							"nameLocation": "253:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "296:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "272:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "309:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "343:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "317:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 10,
							"src": "245:134:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:335:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							186
						]
					},
					"id": 187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 11,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FullMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "57:297:1",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 186,
							"linearizedBaseContracts": [
								186
							],
							"name": "FullMath",
							"nameLocation": "362:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "869:3999:1",
										"statements": [
											{
												"id": 139,
												"nodeType": "UncheckedBlock",
												"src": "879:3983:1",
												"statements": [
													{
														"assignments": [
															25
														],
														"declarations": [
															{
																"constant": false,
																"id": 25,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "1234:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "1226:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 24,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 26,
														"nodeType": "VariableDeclarationStatement",
														"src": "1226:13:1"
													},
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "1306:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "1298:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1298:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 29,
														"nodeType": "VariableDeclarationStatement",
														"src": "1298:13:1"
													},
													{
														"AST": {
															"nativeSrc": "1378:157:1",
															"nodeType": "YulBlock",
															"src": "1378:157:1",
															"statements": [
																{
																	"nativeSrc": "1396:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1396:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "1413:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1413:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "1416:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1416:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1423:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1423:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1419:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1419:3:1"
																				},
																				"nativeSrc": "1419:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1419:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "1406:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1406:6:1"
																		},
																		"nativeSrc": "1406:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1406:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "1400:2:1",
																			"nodeType": "YulTypedName",
																			"src": "1400:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1443:18:1",
																	"nodeType": "YulAssignment",
																	"src": "1443:18:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "1456:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1456:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "1459:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1459:1:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1452:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1452:3:1"
																		},
																		"nativeSrc": "1452:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:9:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "1443:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1443:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "1478:43:1",
																	"nodeType": "YulAssignment",
																	"src": "1478:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1495:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1495:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1499:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1499:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1491:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:1"
																				},
																				"nativeSrc": "1491:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1491:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1510:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1510:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1514:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1514:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1507:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1507:2:1"
																				},
																				"nativeSrc": "1507:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1507:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "1478:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1478:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "1413:1:1",
																"valueSize": 1
															},
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "1456:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "1416:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "1459:1:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1443:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1499:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1514:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "1478:5:1",
																"valueSize": 1
															}
														],
														"id": 30,
														"nodeType": "InlineAssembly",
														"src": "1369:166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 31,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1615:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1624:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1615:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 44,
														"nodeType": "IfStatement",
														"src": "1611:203:1",
														"trueBody": {
															"id": 43,
															"nodeType": "Block",
															"src": "1627:187:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 37,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 35,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1653:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 36,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1667:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "1653:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 34,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "1645:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1645:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 39,
																	"nodeType": "ExpressionStatement",
																	"src": "1645:24:1"
																},
																{
																	"AST": {
																		"nativeSrc": "1696:73:1",
																		"nodeType": "YulBlock",
																		"src": "1696:73:1",
																		"statements": [
																			{
																				"nativeSrc": "1718:33:1",
																				"nodeType": "YulAssignment",
																				"src": "1718:33:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "prod0",
																							"nativeSrc": "1732:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1732:5:1"
																						},
																						{
																							"name": "denominator",
																							"nativeSrc": "1739:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1739:11:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "1728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1728:3:1"
																					},
																					"nativeSrc": "1728:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1728:23:1"
																				},
																				"variableNames": [
																					{
																						"name": "result",
																						"nativeSrc": "1718:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1718:6:1"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "constantinople",
																	"externalReferences": [
																		{
																			"declaration": 19,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1739:11:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 25,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1732:5:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1718:6:1",
																			"valueSize": 1
																		}
																	],
																	"id": 40,
																	"nodeType": "InlineAssembly",
																	"src": "1687:82:1"
																},
																{
																	"expression": {
																		"id": 41,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1793:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 23,
																	"id": 42,
																	"nodeType": "Return",
																	"src": "1786:13:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 46,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1939:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 47,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "1953:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1939:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 45,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1931:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1931:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 50,
														"nodeType": "ExpressionStatement",
														"src": "1931:28:1"
													},
													{
														"assignments": [
															52
														],
														"declarations": [
															{
																"constant": false,
																"id": 52,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2268:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "2260:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 51,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 53,
														"nodeType": "VariableDeclarationStatement",
														"src": "2260:17:1"
													},
													{
														"AST": {
															"nativeSrc": "2300:70:1",
															"nodeType": "YulBlock",
															"src": "2300:70:1",
															"statements": [
																{
																	"nativeSrc": "2318:38:1",
																	"nodeType": "YulAssignment",
																	"src": "2318:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "2338:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "2338:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "2341:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2344:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "2344:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2331:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2331:6:1"
																		},
																		"nativeSrc": "2331:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "2318:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "2318:9:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "2338:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "2341:1:1",
																"valueSize": 1
															},
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:11:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2318:9:1",
																"valueSize": 1
															}
														],
														"id": 54,
														"nodeType": "InlineAssembly",
														"src": "2291:79:1"
													},
													{
														"AST": {
															"nativeSrc": "2451:120:1",
															"nodeType": "YulBlock",
															"src": "2451:120:1",
															"statements": [
																{
																	"nativeSrc": "2469:41:1",
																	"nodeType": "YulAssignment",
																	"src": "2469:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "2482:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2482:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "2492:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2503:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2503:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "2489:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2489:2:1"
																				},
																				"nativeSrc": "2489:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2489:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:1"
																		},
																		"nativeSrc": "2478:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2469:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2469:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "2527:30:1",
																	"nodeType": "YulAssignment",
																	"src": "2527:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2540:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2540:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "2547:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2547:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:1"
																		},
																		"nativeSrc": "2536:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2527:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2527:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2503:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2527:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2540:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "2469:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "2482:5:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2492:9:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2547:9:1",
																"valueSize": 1
															}
														],
														"id": 55,
														"nodeType": "InlineAssembly",
														"src": "2442:129:1"
													},
													{
														"assignments": [
															57
														],
														"declarations": [
															{
																"constant": false,
																"id": 57,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "2744:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "2736:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 56,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 64,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2752:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 59,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "2756:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2752:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 61,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2751:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 62,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2771:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2736:46:1"
													},
													{
														"AST": {
															"nativeSrc": "2855:69:1",
															"nodeType": "YulBlock",
															"src": "2855:69:1",
															"statements": [
																{
																	"nativeSrc": "2873:37:1",
																	"nodeType": "YulAssignment",
																	"src": "2873:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2892:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "2905:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2905:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2888:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:1"
																		},
																		"nativeSrc": "2888:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "2873:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2873:11:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2873:11:1",
																"valueSize": 1
															},
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2892:11:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "2905:4:1",
																"valueSize": 1
															}
														],
														"id": 65,
														"nodeType": "InlineAssembly",
														"src": "2846:78:1"
													},
													{
														"AST": {
															"nativeSrc": "3005:57:1",
															"nodeType": "YulBlock",
															"src": "3005:57:1",
															"statements": [
																{
																	"nativeSrc": "3023:25:1",
																	"nodeType": "YulAssignment",
																	"src": "3023:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3036:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3043:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3043:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:1"
																		},
																		"nativeSrc": "3032:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3023:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3023:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "3023:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "3036:5:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3043:4:1",
																"valueSize": 1
															}
														],
														"id": 66,
														"nodeType": "InlineAssembly",
														"src": "2996:66:1"
													},
													{
														"AST": {
															"nativeSrc": "3266:71:1",
															"nodeType": "YulBlock",
															"src": "3266:71:1",
															"statements": [
																{
																	"nativeSrc": "3284:39:1",
																	"nodeType": "YulAssignment",
																	"src": "3284:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3304:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3304:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "3307:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3307:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3300:3:1"
																						},
																						"nativeSrc": "3300:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3300:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "3314:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3314:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "3296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3296:3:1"
																				},
																				"nativeSrc": "3296:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3296:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3321:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:1"
																		},
																		"nativeSrc": "3292:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3284:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "3284:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3284:4:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:4:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3314:4:1",
																"valueSize": 1
															}
														],
														"id": 67,
														"nodeType": "InlineAssembly",
														"src": "3257:80:1"
													},
													{
														"expression": {
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 68,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3350:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 69,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "3359:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 70,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "3367:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3359:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3350:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 73,
														"nodeType": "ExpressionStatement",
														"src": "3350:21:1"
													},
													{
														"assignments": [
															75
														],
														"declarations": [
															{
																"constant": false,
																"id": 75,
																"mutability": "mutable",
																"name": "inv",
																"nameLocation": "3737:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "3729:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 74,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3729:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3744:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 77,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "3748:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3744:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3743:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3743:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3729:35:1"
													},
													{
														"expression": {
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 83,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "3995:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4002:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 85,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4006:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 86,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4020:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4006:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4002:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3995:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 90,
														"nodeType": "ExpressionStatement",
														"src": "3995:28:1"
													},
													{
														"expression": {
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 91,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4057:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4064:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 93,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4068:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 94,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4082:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4068:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4064:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4057:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 98,
														"nodeType": "ExpressionStatement",
														"src": "4057:28:1"
													},
													{
														"expression": {
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 99,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4120:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4127:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 101,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4131:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 102,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4145:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4131:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4127:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 106,
														"nodeType": "ExpressionStatement",
														"src": "4120:28:1"
													},
													{
														"expression": {
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 107,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4183:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4190:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4194:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 110,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4208:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4194:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4190:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4183:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 114,
														"nodeType": "ExpressionStatement",
														"src": "4183:28:1"
													},
													{
														"expression": {
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 115,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4246:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4257:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 118,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4271:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4257:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4253:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4246:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 122,
														"nodeType": "ExpressionStatement",
														"src": "4246:28:1"
													},
													{
														"expression": {
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 123,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4310:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4317:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4321:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 126,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4335:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4321:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4317:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4310:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 130,
														"nodeType": "ExpressionStatement",
														"src": "4310:28:1"
													},
													{
														"expression": {
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "4804:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 132,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4813:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 133,
																	"name": "inv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "4821:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4813:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4804:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 136,
														"nodeType": "ExpressionStatement",
														"src": "4804:20:1"
													},
													{
														"expression": {
															"id": 137,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "4845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 23,
														"id": 138,
														"nodeType": "Return",
														"src": "4838:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "377:359:1",
										"text": "@notice Calculates floor(aÃ—bÃ·denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "750:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "774:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "766:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "793:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "785:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "812:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "804:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:73:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "861:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "853:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:16:1"
									},
									"scope": 186,
									"src": "741:4127:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "5288:227:1",
										"statements": [
											{
												"id": 183,
												"nodeType": "UncheckedBlock",
												"src": "5298:211:1",
												"statements": [
													{
														"expression": {
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "5322:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 155,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "5338:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 156,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5341:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "5344:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 154,
																	"name": "mulDiv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "5331:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5331:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5322:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 160,
														"nodeType": "ExpressionStatement",
														"src": "5322:34:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 162,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "5381:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 163,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5384:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "5387:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 161,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "5374:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5374:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5402:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5374:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 182,
														"nodeType": "IfStatement",
														"src": "5370:129:1",
														"trueBody": {
															"id": 181,
															"nodeType": "Block",
															"src": "5405:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 169,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "5431:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"expression": {
																						"arguments": [
																							{
																								"id": 172,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5445:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 171,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "5445:7:1",
																									"typeDescriptions": {}
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								}
																							],
																							"id": 170,
																							"name": "type",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967269,
																							"src": "5440:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5440:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_meta_type_t_uint256",
																							"typeString": "type(uint256)"
																						}
																					},
																					"id": 174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "5454:3:1",
																					"memberName": "max",
																					"nodeType": "MemberAccess",
																					"src": "5440:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5431:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 168,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "5423:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5423:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 177,
																	"nodeType": "ExpressionStatement",
																	"src": "5423:35:1"
																},
																{
																	"expression": {
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5476:8:1",
																		"subExpression": {
																			"id": 178,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "5476:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 180,
																	"nodeType": "ExpressionStatement",
																	"src": "5476:8:1"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4874:271:1",
										"text": "@notice Calculates ceil(aÃ—bÃ·denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "5159:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5193:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5212:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5204:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5231:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5223:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5175:73:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5280:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5272:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:16:1"
									},
									"scope": 186,
									"src": "5150:365:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 187,
							"src": "354:5163:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5485:1"
				},
				"id": 1
			},
			"Contracts/OracleManager.sol": {
				"ast": {
					"absolutePath": "Contracts/OracleManager.sol",
					"exportedSymbols": {
						"Address": [
							1684
						],
						"AggregatorV3Interface": [
							2642
						],
						"Context": [
							1706
						],
						"FixedPoint96": [
							9
						],
						"FullMath": [
							186
						],
						"INonfungiblePositionManager": [
							244
						],
						"IUniswapV3Pool": [
							262
						],
						"IVaultToken": [
							214
						],
						"LiquidityAmounts": [
							2596
						],
						"OracleManager": [
							1241
						],
						"Ownable": [
							1354
						],
						"TickMath": [
							2252
						]
					},
					"id": 1242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2643,
							"src": "613:123:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 1355,
							"src": "764:105:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 1685,
							"src": "870:104:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
							"file": "https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2253,
							"src": "1017:86:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
							"file": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2597,
							"src": "1159:99:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 214,
							"linearizedBaseContracts": [
								214
							],
							"name": "IVaultToken",
							"nameLocation": "1439:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1466:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1503:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:2"
									},
									"scope": 214,
									"src": "1457:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f657a7fe",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultTokenId",
									"nameLocation": "1526:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:2:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:9:2"
									},
									"scope": 214,
									"src": "1517:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791b98bc",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positionManager",
									"nameLocation": "1587:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1628:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:9:2"
									},
									"scope": 214,
									"src": "1578:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3a924d5b",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "v3Pool",
									"nameLocation": "1651:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1683:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:9:2"
									},
									"scope": 214,
									"src": "1642:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1242,
							"src": "1429:265:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "1706:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "99fbab88",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "1749:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:17:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1843:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 218,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1836:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1870:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1862:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1928:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1920:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1955:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1948:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 226,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1948:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1978:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 228,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1972:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2007:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2001:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 230,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2001:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2038:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2030:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 232,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "2069:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2061:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "2115:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2107:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "2161:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2153:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 238,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "2194:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2186:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 240,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:393:2"
									},
									"scope": 244,
									"src": "1740:476:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1242,
							"src": "1696:522:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "2230:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3850c7bd",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "2260:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2265:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "2336:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2328:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 246,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2368:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2362:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 248,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2362:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "2393:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2386:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 250,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2386:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "2430:22:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2423:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 252,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "2473:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2466:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 254,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2466:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "2519:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2513:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 256,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2513:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "2549:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2544:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2544:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:253:2"
									},
									"scope": 262,
									"src": "2251:317:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1242,
							"src": "2220:350:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "Ownable",
										"nameLocations": [
											"2762:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1354,
										"src": "2762:7:2"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "2762:7:2"
								}
							],
							"canonicalName": "OracleManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1241,
							"linearizedBaseContracts": [
								1241,
								1354,
								1706
							],
							"name": "OracleManager",
							"nameLocation": "2745:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OracleManager.OracleData",
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2776:58:2",
										"text": "@dev config for normal tokens or direct pool addresses"
									},
									"id": 276,
									"members": [
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "primaryAggregator",
											"nameLocation": "2875:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "2867:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 266,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2867:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "fallbackAggregator",
											"nameLocation": "2913:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "2905:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2905:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "useFallbackIfError",
											"nameLocation": "2948:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "2943:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 270,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2943:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "decimalsOverride",
											"nameLocation": "2987:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "2981:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 272,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2981:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 275,
											"mutability": "mutable",
											"name": "isVaultToken",
											"nameLocation": "3024:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "3019:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 274,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3019:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OracleData",
									"nameLocation": "2846:10:2",
									"nodeType": "StructDefinition",
									"scope": 1241,
									"src": "2839:215:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OracleManager.VaultUnderlyingFeeds",
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "3060:66:2",
										"text": "@dev For vault tokens, aggregator references for token0/token1"
									},
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 279,
											"mutability": "mutable",
											"name": "token0Aggregator",
											"nameLocation": "3177:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3169:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 278,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3169:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "token1Aggregator",
											"nameLocation": "3211:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3203:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 280,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3203:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 283,
											"mutability": "mutable",
											"name": "token0Decimals",
											"nameLocation": "3243:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3237:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 282,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3237:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "token1Decimals",
											"nameLocation": "3273:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3267:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 284,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3267:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "3302:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3297:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 286,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3297:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultUnderlyingFeeds",
									"nameLocation": "3138:20:2",
									"nodeType": "StructDefinition",
									"scope": 1241,
									"src": "3131:184:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "3321:23:2",
										"text": "token -> OracleData"
									},
									"functionSelector": "067a4b06",
									"id": 294,
									"mutability": "mutable",
									"name": "oracleConfigs",
									"nameLocation": "3387:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1241,
									"src": "3349:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$276_storage_$",
										"typeString": "mapping(address => struct OracleManager.OracleData)"
									},
									"typeName": {
										"id": 293,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 290,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3357:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3349:30:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$276_storage_$",
											"typeString": "mapping(address => struct OracleManager.OracleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 292,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 291,
												"name": "OracleData",
												"nameLocations": [
													"3368:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 276,
												"src": "3368:10:2"
											},
											"referencedDeclaration": 276,
											"src": "3368:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_OracleData_$276_storage_ptr",
												"typeString": "struct OracleManager.OracleData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "3407:38:2",
										"text": "vaultToken -> VaultUnderlyingFeeds"
									},
									"functionSelector": "7f4a3102",
									"id": 300,
									"mutability": "mutable",
									"name": "vaultFeeds",
									"nameLocation": "3498:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1241,
									"src": "3450:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$288_storage_$",
										"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)"
									},
									"typeName": {
										"id": 299,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 296,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3458:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3450:40:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$288_storage_$",
											"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 298,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 297,
												"name": "VaultUnderlyingFeeds",
												"nameLocations": [
													"3469:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "3469:20:2"
											},
											"referencedDeclaration": 288,
											"src": "3469:20:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage_ptr",
												"typeString": "struct OracleManager.VaultUnderlyingFeeds"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8",
									"id": 314,
									"name": "OracleConfigUpdated",
									"nameLocation": "3521:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3566:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3550:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": false,
												"mutability": "mutable",
												"name": "primaryAggregator",
												"nameLocation": "3589:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3581:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": false,
												"mutability": "mutable",
												"name": "fallbackAggregator",
												"nameLocation": "3624:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3616:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": false,
												"mutability": "mutable",
												"name": "useFallbackIfError",
												"nameLocation": "3657:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3652:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimalsOverride",
												"nameLocation": "3691:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3685:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 309,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3685:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "isVaultToken",
												"nameLocation": "3722:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "3717:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3717:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:200:2"
									},
									"src": "3515:226:2"
								},
								{
									"anonymous": false,
									"eventSelector": "2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba",
									"id": 326,
									"name": "VaultUnderlyingFeedsUpdated",
									"nameLocation": "3753:27:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "3806:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3790:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Aggregator",
												"nameLocation": "3834:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Aggregator",
												"nameLocation": "3868:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3860:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Decimals",
												"nameLocation": "3900:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3894:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 321,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3894:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Decimals",
												"nameLocation": "3930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3924:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3924:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:170:2"
									},
									"src": "3747:204:2"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "3991:126:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "4009:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4033:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4025:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4025:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4025:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4009:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c6964206f776e6572",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4037:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb",
																"typeString": "literal_string \"OracleManager: invalid owner\""
															},
															"value": "OracleManager: invalid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb",
																"typeString": "literal_string \"OracleManager: invalid owner\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4001:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "4001:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4097:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 341,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4078:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4078:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4078:32:2"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3977:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3969:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3968:22:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3991:0:2"
									},
									"scope": 1241,
									"src": "3957:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4444:721:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "4462:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4479:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4471:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 366,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4471:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4471:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4462:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420746f6b656e",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4483:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1",
																"typeString": "literal_string \"OracleManager: invalid token\""
															},
															"value": "OracleManager: invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1",
																"typeString": "literal_string \"OracleManager: invalid token\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4454:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4454:60:2"
											},
											{
												"condition": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4528:13:2",
													"subExpression": {
														"id": 374,
														"name": "isVaultToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4529:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "4524:136:2",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "4543:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 377,
																			"name": "primaryAggregator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "4565:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4594:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4586:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 378,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4586:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4586:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4565:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f7220726571756972656420666f72206e6f6e2d7661756c74",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4598:50:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21",
																			"typeString": "literal_string \"OracleManager: aggregator required for non-vault\""
																		},
																		"value": "OracleManager: aggregator required for non-vault"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21",
																			"typeString": "literal_string \"OracleManager: aggregator required for non-vault\""
																		}
																	],
																	"id": 376,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4557:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4557:92:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "4557:92:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 388,
															"name": "oracleConfigs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4670:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$276_storage_$",
																"typeString": "mapping(address => struct OracleManager.OracleData storage ref)"
															}
														},
														"id": 390,
														"indexExpression": {
															"id": 389,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4670:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$276_storage",
															"typeString": "struct OracleManager.OracleData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 392,
																"name": "primaryAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "4737:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 393,
																"name": "fallbackAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "4788:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 394,
																"name": "useFallbackIfErr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "4840:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 395,
																"name": "decimalsOvr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "4888:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 396,
																"name": "isVaultToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4927:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 391,
															"name": "OracleData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4693:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_OracleData_$276_storage_ptr_$",
																"typeString": "type(struct OracleManager.OracleData storage pointer)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4718:17:2",
															"4768:18:2",
															"4820:18:2",
															"4870:16:2",
															"4913:12:2"
														],
														"names": [
															"primaryAggregator",
															"fallbackAggregator",
															"useFallbackIfError",
															"decimalsOverride",
															"isVaultToken"
														],
														"nodeType": "FunctionCall",
														"src": "4693:257:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
															"typeString": "struct OracleManager.OracleData memory"
														}
													},
													"src": "4670:280:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$276_storage",
														"typeString": "struct OracleManager.OracleData storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "4670:280:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4999:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "primaryAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5018:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "fallbackAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5049:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "useFallbackIfErr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5081:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 405,
															"name": "decimalsOvr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5111:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 406,
															"name": "isVaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5136:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 400,
														"name": "OracleConfigUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "4966:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$_t_uint8_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,bool,uint8,bool)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:192:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "EmitStatement",
												"src": "4961:197:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "4123:87:2",
										"text": " @notice Sets or updates an oracle config for a given token or vault."
									},
									"functionSelector": "f2ac1ec5",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "onlyOwner",
												"nameLocations": [
													"4434:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1273,
												"src": "4434:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4434:9:2"
										}
									],
									"name": "setOracleConfig",
									"nameLocation": "4224:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4257:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4249:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4249:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "primaryAggregator",
												"nameLocation": "4280:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4272:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "fallbackAggregator",
												"nameLocation": "4315:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4307:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "useFallbackIfErr",
												"nameLocation": "4348:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4343:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "4380:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4374:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 356,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4374:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "isVaultToken",
												"nameLocation": "4406:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4401:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:185:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4444:0:2"
									},
									"scope": 1241,
									"src": "4215:950:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "5467:510:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "vaultToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5485:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5507:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5499:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5499:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5499:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5485:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b656e",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5511:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190",
																"typeString": "literal_string \"OracleManager: invalid vaultToken\""
															},
															"value": "OracleManager: invalid vaultToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190",
																"typeString": "literal_string \"OracleManager: invalid vaultToken\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5477:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "5477:70:2"
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 436,
															"name": "vaultFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5558:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$288_storage_$",
																"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds storage ref)"
															}
														},
														"id": 438,
														"indexExpression": {
															"id": 437,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5569:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5558:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage",
															"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 440,
																"name": "token0Agg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "5636:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 441,
																"name": "token1Agg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5677:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 442,
																"name": "token0Dec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5716:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 443,
																"name": "token1Dec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5755:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "74727565",
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5786:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 439,
															"name": "VaultUnderlyingFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5583:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_VaultUnderlyingFeeds_$288_storage_ptr_$",
																"typeString": "type(struct OracleManager.VaultUnderlyingFeeds storage pointer)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5618:16:2",
															"5659:16:2",
															"5700:14:2",
															"5739:14:2",
															"5778:6:2"
														],
														"names": [
															"token0Aggregator",
															"token1Aggregator",
															"token0Decimals",
															"token1Decimals",
															"exists"
														],
														"nodeType": "FunctionCall",
														"src": "5583:218:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
															"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
														}
													},
													"src": "5558:243:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage",
														"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "5558:243:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 449,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5858:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "token0Agg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5882:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "token1Agg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "5905:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "token0Dec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5928:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 453,
															"name": "token1Dec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "5951:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 448,
														"name": "VaultUnderlyingFeedsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "5817:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint8_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,address,uint8,uint8)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5817:153:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "5812:158:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "5171:101:2",
										"text": " @notice Sets aggregator references for a vault tokenâ€™s underlying token0, token1"
									},
									"functionSelector": "9b05fc75",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 423,
												"name": "onlyOwner",
												"nameLocations": [
													"5457:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1273,
												"src": "5457:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5457:9:2"
										}
									],
									"name": "setVaultUnderlyingFeeds",
									"nameLocation": "5286:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "5327:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5319:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token0Agg",
												"nameLocation": "5355:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5347:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token1Agg",
												"nameLocation": "5382:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5374:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token0Dec",
												"nameLocation": "5407:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5401:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 418,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5401:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token1Dec",
												"nameLocation": "5432:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5426:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 420,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5426:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:138:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5467:0:2"
									},
									"scope": 1241,
									"src": "5277:700:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6189:503:2",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "6217:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "6199:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
															"typeString": "struct OracleManager.OracleData"
														},
														"typeName": {
															"id": 468,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 467,
																"name": "OracleData",
																"nameLocations": [
																	"6199:10:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 276,
																"src": "6199:10:2"
															},
															"referencedDeclaration": 276,
															"src": "6199:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OracleData_$276_storage_ptr",
																"typeString": "struct OracleManager.OracleData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"baseExpression": {
														"id": 470,
														"name": "oracleConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6223:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$276_storage_$",
															"typeString": "mapping(address => struct OracleManager.OracleData storage ref)"
														}
													},
													"id": 472,
													"indexExpression": {
														"id": 471,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "6237:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6223:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$276_storage",
														"typeString": "struct OracleManager.OracleData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6199:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 475,
																		"name": "cfg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "6261:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																			"typeString": "struct OracleManager.OracleData memory"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6265:17:2",
																	"memberName": "primaryAggregator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 267,
																	"src": "6261:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6294:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6286:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 477,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6286:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6286:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6261:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"expression": {
																	"id": 482,
																	"name": "cfg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "6300:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																		"typeString": "struct OracleManager.OracleData memory"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6304:12:2",
																"memberName": "isVaultToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 275,
																"src": "6300:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6261:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a206e6f2061676772656761746f72206f72207661756c74206c6f676963",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6318:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5c52409720bfac5a1e85ffe8335c29ab5586808ac14821ae52ef7379ece28b5",
																"typeString": "literal_string \"OracleManager: no aggregator or vault logic\""
															},
															"value": "OracleManager: no aggregator or vault logic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5c52409720bfac5a1e85ffe8335c29ab5586808ac14821ae52ef7379ece28b5",
																"typeString": "literal_string \"OracleManager: no aggregator or vault logic\""
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6253:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6253:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "6253:111:2"
											},
											{
												"condition": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6379:17:2",
													"subExpression": {
														"expression": {
															"id": 488,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "6380:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																"typeString": "struct OracleManager.OracleData memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6384:12:2",
														"memberName": "isVaultToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 275,
														"src": "6380:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "6473:213:2",
													"statements": [
														{
															"assignments": [
																502
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 502,
																	"mutability": "mutable",
																	"name": "vf",
																	"nameLocation": "6515:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 522,
																	"src": "6487:30:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																		"typeString": "struct OracleManager.VaultUnderlyingFeeds"
																	},
																	"typeName": {
																		"id": 501,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 500,
																			"name": "VaultUnderlyingFeeds",
																			"nameLocations": [
																				"6487:20:2"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 288,
																			"src": "6487:20:2"
																		},
																		"referencedDeclaration": 288,
																		"src": "6487:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage_ptr",
																			"typeString": "struct OracleManager.VaultUnderlyingFeeds"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"baseExpression": {
																	"id": 503,
																	"name": "vaultFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "6520:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$288_storage_$",
																		"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds storage ref)"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"id": 504,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6531:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6520:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6487:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 508,
																			"name": "vf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "6559:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6562:6:2",
																		"memberName": "exists",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 287,
																		"src": "6559:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c74206665656473206e6f7420736574",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6570:36:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0",
																			"typeString": "literal_string \"OracleManager: vault feeds not set\""
																		},
																		"value": "OracleManager: vault feeds not set"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0",
																			"typeString": "literal_string \"OracleManager: vault feeds not set\""
																		}
																	],
																	"id": 507,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6551:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6551:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "6551:56:2"
														},
														{
															"expression": {
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 513,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "6622:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 514,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "6629:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6621:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 517,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "6665:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 518,
																			"name": "vf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "6672:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		],
																		"id": 516,
																		"name": "_computeVaultTokenPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "6641:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_VaultUnderlyingFeeds_$288_memory_ptr_$returns$_t_uint256_$_t_uint8_$",
																			"typeString": "function (address,struct OracleManager.VaultUnderlyingFeeds memory) view returns (uint256,uint8)"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6641:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"src": "6621:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "6621:54:2"
														}
													]
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "6375:311:2",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "6398:69:2",
													"statements": [
														{
															"expression": {
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 491,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "6413:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 492,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "6420:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6412:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 495,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "6452:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		],
																		"id": 494,
																		"name": "_getPriceFromConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "6432:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_OracleData_$276_memory_ptr_$returns$_t_uint256_$_t_uint8_$",
																			"typeString": "function (struct OracleManager.OracleData memory) view returns (uint256,uint8)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6432:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"src": "6412:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "6412:44:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "5983:114:2",
										"text": " @notice Get the current price for a token or vault token in aggregator decimals (commonly 1e8)."
									},
									"functionSelector": "41976e09",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "6111:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6128:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6120:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6119:15:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "6179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6173:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 464,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6173:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6157:31:2"
									},
									"scope": 1241,
									"src": "6102:590:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "7009:589:2",
										"statements": [
											{
												"assignments": [
													536,
													538,
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "okPrimary",
														"nameLocation": "7025:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "7020:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7020:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "7044:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "7036:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7036:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "7053:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "7047:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 539,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "7047:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 542,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7080:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7084:17:2",
															"memberName": "primaryAggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 267,
															"src": "7080:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 544,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7103:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7107:16:2",
															"memberName": "decimalsOverride",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 273,
															"src": "7103:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 541,
														"name": "_tryGetChainlinkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7058:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
															"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7058:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7019:105:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7138:10:2",
															"subExpression": {
																"id": 548,
																"name": "okPrimary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "7139:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"expression": {
																"id": 550,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7152:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7156:18:2",
															"memberName": "useFallbackIfError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 271,
															"src": "7152:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7138:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 553,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7178:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7182:18:2",
															"memberName": "fallbackAggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "7178:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7212:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7204:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7204:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7204:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7178:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7138:76:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "7134:365:2",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "7216:283:2",
													"statements": [
														{
															"assignments": [
																562,
																564,
																566
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 562,
																	"mutability": "mutable",
																	"name": "okFallback",
																	"nameLocation": "7236:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 583,
																	"src": "7231:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 561,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "7231:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 564,
																	"mutability": "mutable",
																	"name": "pFallback",
																	"nameLocation": "7256:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 583,
																	"src": "7248:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 563,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7248:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 566,
																	"mutability": "mutable",
																	"name": "dFallback",
																	"nameLocation": "7273:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 583,
																	"src": "7267:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 565,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7267:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 573,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 568,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "7324:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7328:18:2",
																		"memberName": "fallbackAggregator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 269,
																		"src": "7324:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 570,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "7348:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7352:16:2",
																		"memberName": "decimalsOverride",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 273,
																		"src": "7348:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 567,
																	"name": "_tryGetChainlinkPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "7302:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
																		"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7302:67:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(bool,uint256,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7230:139:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 575,
																		"name": "okFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "7391:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2066616c6c6261636b2061676772656761746f72206661696c",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7403:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536",
																			"typeString": "literal_string \"OracleManager: fallback aggregator fail\""
																		},
																		"value": "OracleManager: fallback aggregator fail"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536",
																			"typeString": "literal_string \"OracleManager: fallback aggregator fail\""
																		}
																	],
																	"id": 574,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7383:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7383:62:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 578,
															"nodeType": "ExpressionStatement",
															"src": "7383:62:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 579,
																		"name": "pFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "7467:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 580,
																		"name": "dFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "7478:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 581,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7466:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(uint256,uint8)"
																}
															},
															"functionReturnParameters": 534,
															"id": 582,
															"nodeType": "Return",
															"src": "7459:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "okPrimary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7516:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a207072696d6172792061676772656761746f72206661696c",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7527:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d",
																"typeString": "literal_string \"OracleManager: primary aggregator fail\""
															},
															"value": "OracleManager: primary aggregator fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d",
																"typeString": "literal_string \"OracleManager: primary aggregator fail\""
															}
														],
														"id": 585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7508:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7508:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "7508:60:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 590,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "7586:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 591,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "7589:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 592,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7585:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(uint256,uint8)"
													}
												},
												"functionReturnParameters": 534,
												"id": 593,
												"nodeType": "Return",
												"src": "7578:13:2"
											}
										]
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPriceFromConfig",
									"nameLocation": "6884:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "cfg",
												"nameLocation": "6922:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6904:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OracleData_$276_memory_ptr",
													"typeString": "struct OracleManager.OracleData"
												},
												"typeName": {
													"id": 527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 526,
														"name": "OracleData",
														"nameLocations": [
															"6904:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 276,
														"src": "6904:10:2"
													},
													"referencedDeclaration": 276,
													"src": "6904:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$276_storage_ptr",
														"typeString": "struct OracleManager.OracleData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:23:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6982:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6974:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6974:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "6995:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "6989:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6989:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6973:31:2"
									},
									"scope": 1241,
									"src": "6875:723:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "OracleManager.AggregatorPair",
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "7604:73:2",
										"text": " @dev aggregator references for a vault's token0/token1"
									},
									"id": 605,
									"members": [
										{
											"constant": false,
											"id": 598,
											"mutability": "mutable",
											"name": "agg0",
											"nameLocation": "7722:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 605,
											"src": "7714:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 597,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7714:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 600,
											"mutability": "mutable",
											"name": "agg1",
											"nameLocation": "7744:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 605,
											"src": "7736:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 599,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7736:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 602,
											"mutability": "mutable",
											"name": "dec0",
											"nameLocation": "7764:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 605,
											"src": "7758:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 601,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "7758:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 604,
											"mutability": "mutable",
											"name": "dec1",
											"nameLocation": "7784:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 605,
											"src": "7778:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 603,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "7778:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AggregatorPair",
									"nameLocation": "7689:14:2",
									"nodeType": "StructDefinition",
									"scope": 1241,
									"src": "7682:113:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OracleManager.PositionResult",
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "7801:47:2",
										"text": " @dev position data from NFPM"
									},
									"id": 621,
									"members": [
										{
											"constant": false,
											"id": 608,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "7893:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "7885:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 607,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7885:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 610,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "7917:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "7909:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 609,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7909:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 612,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "7939:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "7933:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 611,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "7933:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "7964:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "7958:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 613,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "7958:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "7991:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "7983:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 615,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7983:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "owed0",
											"nameLocation": "8018:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "8010:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 617,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8010:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 620,
											"mutability": "mutable",
											"name": "owed1",
											"nameLocation": "8041:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 621,
											"src": "8033:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 619,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8033:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PositionResult",
									"nameLocation": "7860:14:2",
									"nodeType": "StructDefinition",
									"scope": 1241,
									"src": "7853:200:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "8226:1174:2",
										"statements": [
											{
												"assignments": [
													634,
													636,
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "8279:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8271:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8271:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "8300:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8292:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "posMgr",
														"nameLocation": "8317:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8309:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 637,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8309:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8343:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "_fetchVaultInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "8327:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_address_$",
															"typeString": "function (address) view returns (uint256,uint256,address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8327:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8270:84:2"
											},
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "8418:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8396:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
															"typeString": "struct OracleManager.PositionResult"
														},
														"typeName": {
															"id": 644,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 643,
																"name": "PositionResult",
																"nameLocations": [
																	"8396:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 621,
																"src": "8396:14:2"
															},
															"referencedDeclaration": 621,
															"src": "8396:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$621_storage_ptr",
																"typeString": "struct OracleManager.PositionResult"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "posMgr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "8443:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "8451:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_fetchPositionData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "8424:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_PositionResult_$621_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct OracleManager.PositionResult memory)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8424:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
														"typeString": "struct OracleManager.PositionResult memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8396:63:2"
											},
											{
												"assignments": [
													652,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "8517:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8509:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 651,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8509:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 655,
																			"name": "vaultToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "8567:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"name": "IVaultToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "8555:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVaultToken_$214_$",
																			"typeString": "type(contract IVaultToken)"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8555:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultToken_$214",
																		"typeString": "contract IVaultToken"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8579:6:2",
																"memberName": "v3Pool",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 213,
																"src": "8555:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8555:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 653,
														"name": "_getPoolSqrtAndTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "8535:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint160_$_t_int24_$",
															"typeString": "function (address) view returns (uint160,int24)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8535:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$",
														"typeString": "tuple(uint160,int24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8508:80:2"
											},
											{
												"assignments": [
													662,
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "amtActive0",
														"nameLocation": "8642:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8634:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "amtActive1",
														"nameLocation": "8662:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8654:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8654:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"id": 666,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "8714:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 667,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "8740:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8744:9:2",
															"memberName": "tickLower",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 612,
															"src": "8740:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 669,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "8767:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8771:9:2",
															"memberName": "tickUpper",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 614,
															"src": "8767:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 671,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "8794:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8798:9:2",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 616,
															"src": "8794:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 665,
														"name": "_computeLiquidityAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "8676:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint160,int24,int24,uint128) pure returns (uint256,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8676:141:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8633:184:2"
											},
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "amt0",
														"nameLocation": "8865:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8857:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8857:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "amtActive0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "8872:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 678,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8885:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																"typeString": "struct OracleManager.PositionResult memory"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8889:5:2",
														"memberName": "owed0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 618,
														"src": "8885:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "8872:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8857:37:2"
											},
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "amt1",
														"nameLocation": "8912:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8904:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8904:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "amtActive1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "8919:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 685,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8932:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																"typeString": "struct OracleManager.PositionResult memory"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8936:5:2",
														"memberName": "owed1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 620,
														"src": "8932:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "8919:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8904:37:2"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "ap",
														"nameLocation": "9007:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "8985:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
															"typeString": "struct OracleManager.AggregatorPair"
														},
														"typeName": {
															"id": 690,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 689,
																"name": "AggregatorPair",
																"nameLocations": [
																	"8985:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 605,
																"src": "8985:14:2"
															},
															"referencedDeclaration": 605,
															"src": "8985:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AggregatorPair_$605_storage_ptr",
																"typeString": "struct OracleManager.AggregatorPair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 693,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "9047:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9050:16:2",
															"memberName": "token0Aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 279,
															"src": "9047:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 695,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "9086:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9089:16:2",
															"memberName": "token1Aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 281,
															"src": "9086:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 697,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "9125:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9128:14:2",
															"memberName": "token0Decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "9125:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 699,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "9162:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9165:14:2",
															"memberName": "token1Decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 285,
															"src": "9162:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 692,
														"name": "AggregatorPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "9012:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_AggregatorPair_$605_storage_ptr_$",
															"typeString": "type(struct OracleManager.AggregatorPair storage pointer)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"9041:4:2",
														"9080:4:2",
														"9119:4:2",
														"9156:4:2"
													],
													"names": [
														"agg0",
														"agg1",
														"dec0",
														"dec1"
													],
													"nodeType": "FunctionCall",
													"src": "9012:178:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
														"typeString": "struct OracleManager.AggregatorPair memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8985:205:2"
											},
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "9248:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "9240:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9240:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [
														{
															"id": 706,
															"name": "amt0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "9288:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 707,
															"name": "amt1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9294:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 708,
															"name": "ap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9300:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																"typeString": "struct OracleManager.AggregatorPair memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																"typeString": "struct OracleManager.AggregatorPair memory"
															}
														],
														"id": 705,
														"name": "_convertVaultTokensToValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "9261:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_struct$_AggregatorPair_$605_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,struct OracleManager.AggregatorPair memory) view returns (uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9240:63:2"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 711,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "9314:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "totalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "9322:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 713,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "9336:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9351:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9336:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 717,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "9359:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "9336:34:2",
																	"trueExpression": {
																		"hexValue": "31",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9355:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 719,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9335:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9322:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9314:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9314:57:2"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 723,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "9381:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9392:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "9381:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "9381:12:2"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeVaultTokenPrice",
									"nameLocation": "8068:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "8100:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "8092:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "vf",
												"nameLocation": "8140:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "8112:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_memory_ptr",
													"typeString": "struct OracleManager.VaultUnderlyingFeeds"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "VaultUnderlyingFeeds",
														"nameLocations": [
															"8112:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "8112:20:2"
													},
													"referencedDeclaration": 288,
													"src": "8112:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$288_storage_ptr",
														"typeString": "struct OracleManager.VaultUnderlyingFeeds"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8091:52:2"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "8199:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "8191:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "8212:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "8206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 630,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8190:31:2"
									},
									"scope": 1241,
									"src": "8059:1341:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "9556:385:2",
										"statements": [
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "9578:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "9566:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultToken_$214",
															"typeString": "contract IVaultToken"
														},
														"typeName": {
															"id": 740,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 739,
																"name": "IVaultToken",
																"nameLocations": [
																	"9566:11:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 214,
																"src": "9566:11:2"
															},
															"referencedDeclaration": 214,
															"src": "9566:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultToken_$214",
																"typeString": "contract IVaultToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 743,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "9594:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 742,
														"name": "IVaultToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "9582:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IVaultToken_$214_$",
															"typeString": "type(contract IVaultToken)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9582:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultToken_$214",
														"typeString": "contract IVaultToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9566:39:2"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "9615:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 747,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "9629:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$214",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9631:11:2",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "9629:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9629:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9615:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "9615:29:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "9662:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9676:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9662:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a207661756c7420746f74616c537570706c793d30",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9679:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3",
																"typeString": "literal_string \"OracleManager: vault totalSupply=0\""
															},
															"value": "OracleManager: vault totalSupply=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3",
																"typeString": "literal_string \"OracleManager: vault totalSupply=0\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "9654:62:2"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 759,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "9727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 760,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "9737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$214",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9739:12:2",
															"memberName": "vaultTokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "9737:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9737:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9727:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "9727:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 766,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "9771:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9782:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9771:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a206e6f204e465420696e207661756c74",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9785:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f",
																"typeString": "literal_string \"OracleManager: no NFT in vault\""
															},
															"value": "OracleManager: no NFT in vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f",
																"typeString": "literal_string \"OracleManager: no NFT in vault\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9763:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9763:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "9763:55:2"
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "posMgr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "9829:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 773,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "9838:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$214",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9840:15:2",
															"memberName": "positionManager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 208,
															"src": "9838:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9838:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9829:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "9829:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "posMgr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "9875:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9893:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9885:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 780,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9885:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9885:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9875:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d6772",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9897:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3",
																"typeString": "literal_string \"OracleManager: invalid positionMgr\""
															},
															"value": "OracleManager: invalid positionMgr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3",
																"typeString": "literal_string \"OracleManager: invalid positionMgr\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9867:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9867:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "9867:67:2"
											}
										]
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fetchVaultInfo",
									"nameLocation": "9415:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "9439:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9430:20:2"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "9506:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9498:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9527:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9519:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "posMgr",
												"nameLocation": "9544:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9536:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9497:54:2"
									},
									"scope": 1241,
									"src": "9406:535:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "10086:643:2",
										"statements": [
											{
												"assignments": [
													800,
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10102:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "10097:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 799,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10097:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "10124:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "10111:17:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 801,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10111:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 807,
																			"name": "INonfungiblePositionManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "10186:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$244_$",
																				"typeString": "type(contract INonfungiblePositionManager)"
																			}
																		},
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "10214:9:2",
																		"memberName": "positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "10186:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
																			"typeString": "function INonfungiblePositionManager.positions(uint256) view returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10224:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "10186:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 810,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "10234:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 805,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10163:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10167:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "10163:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10163:79:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 803,
															"name": "posMgr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "10132:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10139:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "10132:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10132:120:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10096:156:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "10270:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 817,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "10293:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 816,
																"name": "_getRevertMsg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "10279:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (bytes memory) pure returns (string memory)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10279:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10262:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10262:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "10262:37:2"
											},
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															null,
															{
																"expression": {
																	"id": 821,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10352:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10356:6:2",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 608,
																"src": "10352:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 824,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10376:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10380:6:2",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 610,
																"src": "10376:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															null,
															{
																"expression": {
																	"id": 826,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10414:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10418:9:2",
																"memberName": "tickLower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "10414:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 828,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10441:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10445:9:2",
																"memberName": "tickUpper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 614,
																"src": "10441:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 830,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10468:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10472:9:2",
																"memberName": "liquidity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 616,
																"src": "10468:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															null,
															null,
															{
																"expression": {
																	"id": 832,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10523:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10527:5:2",
																"memberName": "owed0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 618,
																"src": "10523:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"expression": {
																	"id": 834,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10546:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10550:5:2",
																"memberName": "owed1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "10546:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"id": 836,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10310:255:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$__$_t_address_$_t_address_$__$_t_int24_$_t_int24_$_t_uint128_$__$__$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(,,address,address,,int24,int24,uint128,,,uint128,uint128)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 839,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "10592:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10611:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 840,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "10611:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10619:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 842,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10619:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10628:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 844,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10628:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10637:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 846,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10637:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10646:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint24_$",
																			"typeString": "type(uint24)"
																		},
																		"typeName": {
																			"id": 848,
																			"name": "uint24",
																			"nodeType": "ElementaryTypeName",
																			"src": "10646:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10654:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 850,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "10654:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10661:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 852,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "10661:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10668:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 854,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "10668:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10677:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 856,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10677:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10686:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 858,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10686:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10695:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 860,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "10695:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10704:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 862,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "10704:7:2",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10610:102:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint96_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint24_$_$_t_type$_t_int24_$_$_t_type$_t_int24_$_$_t_type$_t_uint128_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$_t_type$_t_uint128_$_$",
																	"typeString": "tuple(type(uint96),type(address),type(address),type(address),type(uint24),type(int24),type(int24),type(uint128),type(uint256),type(uint256),type(uint128),type(uint128))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint96_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint24_$_$_t_type$_t_int24_$_$_t_type$_t_int24_$_$_t_type$_t_uint128_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$_t_type$_t_uint128_$_$",
																	"typeString": "tuple(type(uint96),type(address),type(address),type(address),type(uint24),type(int24),type(int24),type(uint128),type(uint256),type(uint256),type(uint128),type(uint128))"
																}
															],
															"expression": {
																"id": 837,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "10568:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10572:6:2",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "10568:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10568:154:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint96_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(uint96,address payable,address payable,address payable,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"src": "10310:412:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "10310:412:2"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fetchPositionData",
									"nameLocation": "9956:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "posMgr",
												"nameLocation": "9983:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9975:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9999:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9991:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9974:33:2"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "10077:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "10055:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PositionResult_$621_memory_ptr",
													"typeString": "struct OracleManager.PositionResult"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "PositionResult",
														"nameLocations": [
															"10055:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 621,
														"src": "10055:14:2"
													},
													"referencedDeclaration": 621,
													"src": "10055:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionResult_$621_storage_ptr",
														"typeString": "struct OracleManager.PositionResult"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10054:27:2"
									},
									"scope": 1241,
									"src": "9947:782:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10887:183:2",
										"statements": [
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "val0",
														"nameLocation": "10905:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10897:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"id": 884,
															"name": "amt0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "10938:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 885,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "10944:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10947:4:2",
															"memberName": "agg0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 598,
															"src": "10944:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 887,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "10953:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10956:4:2",
															"memberName": "dec0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "10953:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 883,
														"name": "_convertToAggregatorValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10912:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint8) view returns (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10897:64:2"
											},
											{
												"assignments": [
													892
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "val1",
														"nameLocation": "10979:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10971:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 891,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10971:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"arguments": [
														{
															"id": 894,
															"name": "amt1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11012:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 895,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "11018:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11021:4:2",
															"memberName": "agg1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 600,
															"src": "11018:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 897,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "11027:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11030:4:2",
															"memberName": "dec1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 604,
															"src": "11027:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 893,
														"name": "_convertToAggregatorValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10986:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint8) view returns (uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10986:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10971:64:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 901,
														"name": "val0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11052:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 902,
														"name": "val1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "11059:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11052:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 904,
												"nodeType": "Return",
												"src": "11045:18:2"
											}
										]
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertVaultTokensToValue",
									"nameLocation": "10744:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amt0",
												"nameLocation": "10788:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10780:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amt1",
												"nameLocation": "10810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10802:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "ap",
												"nameLocation": "10846:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10824:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AggregatorPair_$605_memory_ptr",
													"typeString": "struct OracleManager.AggregatorPair"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "AggregatorPair",
														"nameLocations": [
															"10824:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 605,
														"src": "10824:14:2"
													},
													"referencedDeclaration": 605,
													"src": "10824:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorPair_$605_storage_ptr",
														"typeString": "struct OracleManager.AggregatorPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10770:84:2"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10877:9:2"
									},
									"scope": 1241,
									"src": "10735:335:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "11180:382:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "poolAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "11198:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11218:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11210:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11210:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11210:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11198:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f6f6c",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11222:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458",
																"typeString": "literal_string \"OracleManager: invalid pool\""
															},
															"value": "OracleManager: invalid pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458",
																"typeString": "literal_string \"OracleManager: invalid pool\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11190:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11190:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "11190:62:2"
											},
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11268:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "11263:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11263:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "11290:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "11277:17:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11277:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 933,
																			"name": "IUniswapV3Pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 262,
																			"src": "11354:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$262_$",
																				"typeString": "type(contract IUniswapV3Pool)"
																			}
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "11369:5:2",
																		"memberName": "slot0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 261,
																		"src": "11354:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																			"typeString": "function IUniswapV3Pool.slot0() view returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11375:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "11354:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11331:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11335:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "11331:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11331:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "poolAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "11298:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11307:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11298:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11298:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11262:132:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 942,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "11435:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 941,
																"name": "_getRevertMsg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "11421:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (bytes memory) pure returns (string memory)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11421:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11404:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "11404:37:2"
											},
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 946,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "11452:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 947,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "11466:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															null,
															null,
															null,
															null,
															null
														],
														"id": 948,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "11451:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$__$__$__$__$__$",
															"typeString": "tuple(uint160,int24,,,,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 951,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "11495:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11502:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 952,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "11502:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11511:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 954,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "11511:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11518:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "11518:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11526:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 958,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "11526:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11534:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 960,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "11534:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11542:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 962,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "11542:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11549:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		},
																		"typeName": {
																			"id": 964,
																			"name": "bool",
																			"nodeType": "ElementaryTypeName",
																			"src": "11549:4:2",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 966,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11501:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint8_$_$_t_type$_t_bool_$_$",
																	"typeString": "tuple(type(uint160),type(int24),type(uint16),type(uint16),type(uint16),type(uint8),type(bool))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint8_$_$_t_type$_t_bool_$_$",
																	"typeString": "tuple(type(uint160),type(int24),type(uint16),type(uint16),type(uint16),type(uint8),type(bool))"
																}
															],
															"expression": {
																"id": 949,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "11484:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "11488:6:2",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "11484:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11484:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"src": "11451:104:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "11451:104:2"
											}
										]
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPoolSqrtAndTick",
									"nameLocation": "11085:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "poolAddr",
												"nameLocation": "11113:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "11105:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11105:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11104:18:2"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "11154:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "11146:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 910,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "11146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "11174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "11168:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 912,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11168:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11145:34:2"
									},
									"scope": 1241,
									"src": "11076:486:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "11766:379:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11780:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11793:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11780:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "11776:58:2",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "11796:38:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11818:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11821:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11817:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 985,
															"id": 992,
															"nodeType": "Return",
															"src": "11810:13:2"
														}
													]
												}
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "sqrtLower",
														"nameLocation": "11851:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "11843:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 995,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "11843:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"id": 999,
															"name": "tickLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "11891:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 997,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "11863:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$2252_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11872:18:2",
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "11863:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11863:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11843:58:2"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "sqrtUpper",
														"nameLocation": "11919:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "11911:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1002,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "11911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [
														{
															"id": 1006,
															"name": "tickUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "11959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1004,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "11931:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$2252_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11940:18:2",
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "11931:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11931:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11911:58:2"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1009,
																"name": "amt0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "11980:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1010,
																"name": "amt1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "11986:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1011,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "11979:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1014,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "12047:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1015,
																"name": "sqrtLower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "12073:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1016,
																"name": "sqrtUpper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "12096:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1017,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "12119:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 1012,
																"name": "LiquidityAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "11994:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$2596_$",
																	"typeString": "type(library LiquidityAmounts)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12011:22:2",
															"memberName": "getAmountsForLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2595,
															"src": "11994:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11994:144:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "11979:159:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "11979:159:2"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeLiquidityAmounts",
									"nameLocation": "11577:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "11619:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11611:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 972,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "11611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "11647:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11641:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 974,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11641:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "11672:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11666:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 976,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "11699:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11691:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 978,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "11691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:113:2"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amt0",
												"nameLocation": "11746:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11738:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amt1",
												"nameLocation": "11760:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "11752:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11737:28:2"
									},
									"scope": 1241,
									"src": "11568:577:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "12304:333:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1033,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "12318:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12325:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12318:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1036,
															"name": "aggregatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12330:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12356:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12348:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1037,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12348:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12348:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12330:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12318:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "12314:79:2",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "12360:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12381:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1032,
															"id": 1044,
															"nodeType": "Return",
															"src": "12374:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													1048,
													1050,
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "12408:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "12403:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1047,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12403:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "12420:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "12412:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "12429:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "12423:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1051,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12423:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "aggregatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12456:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "decimalsOvr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12472:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1053,
														"name": "_tryGetChainlinkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "12434:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
															"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12434:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12402:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1059,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "12502:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a2061676772656761746f72206661696c20696e205f636f6e76657274546f41676772656761746f7256616c7565",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12506:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391",
																"typeString": "literal_string \"OracleManager: aggregator fail in _convertToAggregatorValue\""
															},
															"value": "OracleManager: aggregator fail in _convertToAggregatorValue"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391",
																"typeString": "literal_string \"OracleManager: aggregator fail in _convertToAggregatorValue\""
															}
														],
														"id": 1058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12494:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12494:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "12494:74:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1063,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "12610:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1064,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "12616:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12610:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1066,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12609:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12622:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1068,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "12628:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "12622:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1070,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12621:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12609:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1072,
												"nodeType": "Return",
												"src": "12602:28:2"
											}
										]
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertToAggregatorValue",
									"nameLocation": "12160:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "12203:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12195:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "aggregatorAddr",
												"nameLocation": "12224:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12216:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12216:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "12254:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12248:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1027,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12248:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12185:86:2"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12295:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12295:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12294:9:2"
									},
									"scope": 1241,
									"src": "12151:486:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "12809:1024:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "aggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "12823:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12845:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12837:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1088,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12837:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12837:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12823:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"nodeType": "IfStatement",
												"src": "12819:75:2",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "12849:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12871:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12878:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12881:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12870:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1086,
															"id": 1097,
															"nodeType": "Return",
															"src": "12863:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "payload",
														"nameLocation": "12916:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "12903:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12903:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1104,
																	"name": "AggregatorV3Interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "12949:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2642_$",
																		"typeString": "type(contract AggregatorV3Interface)"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "12971:15:2",
																"memberName": "latestRoundData",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2641,
																"src": "12949:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "function AggregatorV3Interface.latestRoundData() view returns (uint80,int256,uint256,uint256,uint80)"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12987:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "12949:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1102,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "12926:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12930:18:2",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "12926:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12926:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12903:93:2"
											},
											{
												"assignments": [
													1110,
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "callSuccess",
														"nameLocation": "13012:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "13007:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1109,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13007:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "returnData",
														"nameLocation": "13038:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "13025:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1111,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13025:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "13074:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1113,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "13052:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13063:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "13052:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13052:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13006:76:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13096:12:2",
														"subExpression": {
															"id": 1118,
															"name": "callSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13097:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1120,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "13112:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13123:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "13112:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "313630",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13132:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_160_by_1",
																"typeString": "int_const 160"
															},
															"value": "160"
														},
														"src": "13112:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13096:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "13092:90:2",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "13137:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13159:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13166:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13169:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13158:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1086,
															"id": 1129,
															"nodeType": "Return",
															"src": "13151:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													null,
													1133,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "13202:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "13195:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1132,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13195:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1149,
												"initialValue": {
													"arguments": [
														{
															"id": 1136,
															"name": "returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "13229:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13242:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1137,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "13242:6:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13250:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1139,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13250:6:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13258:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13258:7:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13267:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13267:7:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13276:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1145,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "13276:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1147,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13241:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint80_$_$_t_type$_t_int256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint80_$_$",
																"typeString": "tuple(type(uint80),type(int256),type(uint256),type(uint256),type(uint80))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint80_$_$_t_type$_t_int256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint80_$_$",
																"typeString": "tuple(type(uint80),type(int256),type(uint256),type(uint256),type(uint80))"
															}
														],
														"expression": {
															"id": 1134,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "13218:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13222:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "13218:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13218:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13191:93:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "13298:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13308:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13298:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "13294:62:2",
												"trueBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "13311:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13333:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13340:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13343:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13332:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1086,
															"id": 1157,
															"nodeType": "Return",
															"src": "13325:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "aggDecimals",
														"nameLocation": "13372:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "13366:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1160,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "13366:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"id": 1162,
													"name": "decimalsOvr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "13386:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13366:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "aggDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "13411:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13426:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13411:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "13407:367:2",
												"trueBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "13429:345:2",
													"statements": [
														{
															"assignments": [
																1168,
																1170
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1168,
																	"mutability": "mutable",
																	"name": "decSuccess",
																	"nameLocation": "13449:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1205,
																	"src": "13444:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1167,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "13444:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1170,
																	"mutability": "mutable",
																	"name": "decData",
																	"nameLocation": "13474:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1205,
																	"src": "13461:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1169,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "13461:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1180,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1175,
																						"name": "AggregatorV3Interface",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "13547:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2642_$",
																							"typeString": "type(contract AggregatorV3Interface)"
																						}
																					},
																					"id": 1176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13569:8:2",
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2603,
																					"src": "13547:30:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint8_$",
																						"typeString": "function AggregatorV3Interface.decimals() view returns (uint8)"
																					}
																				},
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "13578:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "13547:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"id": 1173,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "13524:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "13528:18:2",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "13524:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13524:63:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1171,
																		"name": "aggregator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "13485:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13496:10:2",
																	"memberName": "staticcall",
																	"nodeType": "MemberAccess",
																	"src": "13485:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) view returns (bool,bytes memory)"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13485:116:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13443:158:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "13619:11:2",
																	"subExpression": {
																		"id": 1181,
																		"name": "decSuccess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "13620:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1183,
																			"name": "decData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "13634:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13642:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "13634:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13651:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "13634:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "13619:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1194,
															"nodeType": "IfStatement",
															"src": "13615:93:2",
															"trueBody": {
																"id": 1193,
																"nodeType": "Block",
																"src": "13655:53:2",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "66616c7365",
																					"id": 1188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13681:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "30",
																					"id": 1189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13688:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				{
																					"hexValue": "30",
																					"id": 1190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13691:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"id": 1191,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13680:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																				"typeString": "tuple(bool,int_const 0,int_const 0)"
																			}
																		},
																		"functionReturnParameters": 1086,
																		"id": 1192,
																		"nodeType": "Return",
																		"src": "13673:20:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1195,
																	"name": "aggDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "13721:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1198,
																			"name": "decData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "13746:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13756:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1199,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "13756:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1201,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13755:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"expression": {
																			"id": 1196,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "13735:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13739:6:2",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "13735:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13735:28:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "13721:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "13721:42:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13791:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"arguments": [
																{
																	"id": 1210,
																	"name": "answer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "13805:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13797:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1208,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13797:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13797:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1212,
															"name": "aggDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "13814:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 1213,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13790:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1214,
												"nodeType": "Return",
												"src": "13783:43:2"
											}
										]
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryGetChainlinkPrice",
									"nameLocation": "12652:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "12682:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "12674:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "12700:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "12694:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1077,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12694:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12673:39:2"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12765:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "12760:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12760:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "12782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "12774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "12795:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "12789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1084,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12789:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12759:45:2"
									},
									"scope": 1241,
									"src": "12643:1190:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "13925:220:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1223,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "13939:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13951:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13939:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3638",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13960:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_68_by_1",
															"typeString": "int_const 68"
														},
														"value": "68"
													},
													"src": "13939:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "13935:74:2",
												"trueBody": {
													"expression": {
														"hexValue": "4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367",
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13971:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f",
															"typeString": "literal_string \"OracleManager: call reverted w/o msg\""
														},
														"value": "OracleManager: call reverted w/o msg"
													},
													"functionReturnParameters": 1222,
													"id": 1228,
													"nodeType": "Return",
													"src": "13964:45:2"
												}
											},
											{
												"AST": {
													"nativeSrc": "14028:61:2",
													"nodeType": "YulBlock",
													"src": "14028:61:2",
													"statements": [
														{
															"nativeSrc": "14042:37:2",
															"nodeType": "YulAssignment",
															"src": "14042:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nativeSrc": "14061:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "14061:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14074:4:2",
																		"nodeType": "YulLiteral",
																		"src": "14074:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14057:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "14057:3:2"
																},
																"nativeSrc": "14057:22:2",
																"nodeType": "YulFunctionCall",
																"src": "14057:22:2"
															},
															"variableNames": [
																{
																	"name": "_returnData",
																	"nativeSrc": "14042:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "14042:11:2"
																}
															]
														}
													]
												},
												"evmVersion": "constantinople",
												"externalReferences": [
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "14042:11:2",
														"valueSize": 1
													},
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "14061:11:2",
														"valueSize": 1
													}
												],
												"id": 1230,
												"nodeType": "InlineAssembly",
												"src": "14019:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1233,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "14116:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14130:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1234,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "14130:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14129:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														],
														"expression": {
															"id": 1231,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "14105:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14109:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "14105:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14105:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1238,
												"nodeType": "Return",
												"src": "14098:40:2"
											}
										]
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRevertMsg",
									"nameLocation": "13848:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_returnData",
												"nameLocation": "13875:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "13862:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13862:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13861:26:2"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "13910:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13910:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13909:15:2"
									},
									"scope": 1241,
									"src": "13839:306:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1242,
							"src": "2736:11411:2",
							"usedErrors": [
								1711
							],
							"usedEvents": [
								314,
								326,
								1255
							]
						}
					],
					"src": "32:14116:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1706
						],
						"Ownable": [
							1354
						]
					},
					"id": 1355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1707,
							"src": "127:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1246,
										"name": "Context",
										"nameLocations": [
											"683:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1706,
										"src": "683:7:3"
									},
									"id": 1247,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1245,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354,
								1706
							],
							"name": "Ownable",
							"nameLocation": "672:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1249,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1354,
									"src": "697:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1248,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1255,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "753:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "784:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:3"
									},
									"src": "726:84:3"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "926:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1260,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "955:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1259,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "936:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "936:32:3"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:3"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:3"
									},
									"scope": 1354,
									"src": "912:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "1084:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1268,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1094:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:3"
											},
											{
												"id": 1271,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:3"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1273,
									"name": "onlyOwner",
									"nameLocation": "1072:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:3"
									},
									"src": "1063:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "1256:30:3",
										"statements": [
											{
												"expression": {
													"id": 1279,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1249,
													"src": "1273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1280,
												"nodeType": "Return",
												"src": "1266:13:3"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1247:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:3"
									},
									"scope": 1354,
									"src": "1201:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "1404:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1287,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "1422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1289,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "1433:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:3"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:3"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:3"
									},
									"scope": 1354,
									"src": "1359:130:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "1885:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1302,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "1895:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:3"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1299,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1273,
												"src": "1875:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:3"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:3"
									},
									"scope": 1354,
									"src": "1831:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "2151:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "2169:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "2263:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1328,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "2244:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:3"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1315,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1273,
												"src": "2141:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2108:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:3"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:3"
									},
									"scope": 1354,
									"src": "2081:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2496:124:3",
										"statements": [
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2506:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"id": 1341,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1249,
													"src": "2525:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:3"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1343,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2541:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1344,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2550:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1348,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2594:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1349,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "2604:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1347,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "2573:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "EmitStatement",
												"src": "2568:45:3"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2461:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:3"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:3"
									},
									"scope": 1354,
									"src": "2433:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1355,
							"src": "654:1968:3",
							"usedErrors": [],
							"usedEvents": [
								1255
							]
						}
					],
					"src": "102:2521:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1684
						]
					},
					"id": 1685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1684,
							"linearizedBaseContracts": [
								1684
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1365,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1364,
												"id": 1370,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1684,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1383,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1684",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1684",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1381,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1386,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1392,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1391,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1393,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1395,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1684,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1417,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1416,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1464,
															1508
														],
														"referencedDeclaration": 1508,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1422,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1684,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1437,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1440,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1436,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1464,
															1508
														],
														"referencedDeclaration": 1508,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1442,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 1684,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1459,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1456,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1464,
															1508
														],
														"referencedDeclaration": 1508,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1462,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 1684,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1481,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1684",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1684",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1479,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1484,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													1490,
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1489,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"id": 1497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1493,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1495,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1501,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1503,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1504,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1500,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1506,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 1684,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1518,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1525,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1523,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 1684,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													1538,
													1540
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1537,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"arguments": [
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1541,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1547,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1549,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1550,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1546,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1552,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 1684,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1565,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1564,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1571,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 1684,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													1584,
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1583,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"arguments": [
														{
															"id": 1589,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1595,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1596,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1592,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1598,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 1684,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 1614,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1605,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1632,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1631,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1635,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 1630,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1615,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1627,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 1626,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1621,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1603,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1620,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1619,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1625,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1628,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1613,
															"id": 1629,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 1684,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 1651,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1642,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1656,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1657,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1655,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1659,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 1654,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 1652,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1650,
															"id": 1653,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 1684,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1670,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1676,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1679,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 1681,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:4",
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nativeSrc": "8974:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nativeSrc": "8997:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:4",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nativeSrc": "9038:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nativeSrc": "9031:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nativeSrc": "9031:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "constantinople",
															"externalReferences": [
																{
																	"declaration": 1665,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1665,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 1674,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 1684,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1685,
							"src": "194:8964:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1706
						]
					},
					"id": 1707,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1687,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1706,
							"linearizedBaseContracts": [
								1706
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1692,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1691,
												"id": 1694,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1706,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1701,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1703,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1706,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1707,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/0.8/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							2252
						]
					},
					"id": 2253,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1709,
								"nodeType": "StructuredDocumentation",
								"src": "70:235:6",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2252,
							"linearizedBaseContracts": [
								2252
							],
							"name": "TickMath",
							"nameLocation": "313:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2bc80f3a",
									"id": 1711,
									"name": "T",
									"nameLocation": "334:1:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:2:6"
									},
									"src": "328:10:6"
								},
								{
									"errorSelector": "4980e1be",
									"id": 1713,
									"name": "R",
									"nameLocation": "349:1:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:6"
									},
									"src": "343:10:6"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "359:108:6",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 1718,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "496:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2252,
									"src": "472:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1715,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "472:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "507:7:6",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1716,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "508:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "520:107:6",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 1723,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "656:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2252,
									"src": "632:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1720,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "632:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "667:9:6",
										"subExpression": {
											"id": 1721,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1718,
											"src": "668:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "683:116:6",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 1727,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "830:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2252,
									"src": "804:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1725,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "847:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "863:116:6",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 1731,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "1010:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2252,
									"src": "984:92:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1729,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1730,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1027:49:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "1470:2674:6",
										"statements": [
											{
												"id": 2107,
												"nodeType": "UncheckedBlock",
												"src": "1480:2658:6",
												"statements": [
													{
														"assignments": [
															1740
														],
														"declarations": [
															{
																"constant": false,
																"id": 1740,
																"mutability": "mutable",
																"name": "absTick",
																"nameLocation": "1512:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 2107,
																"src": "1504:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1504:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1760,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1741,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "1522:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1529:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1522:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1756,
																				"name": "tick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1734,
																				"src": "1573:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1566:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 1754,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1566:6:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1566:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1558:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1752,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1558:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1558:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1522:57:6",
															"trueExpression": {
																"arguments": [
																	{
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1541:13:6",
																		"subExpression": {
																			"arguments": [
																				{
																					"id": 1748,
																					"name": "tick",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "1549:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"id": 1747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1542:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 1746,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1542:6:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1542:12:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1533:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1744,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1533:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1533:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1504:75:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1761,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "1597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1766,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "1622:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1615:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 1764,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1615:6:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1615:16:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1607:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1762,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1607:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1607:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1597:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1773,
														"nodeType": "IfStatement",
														"src": "1593:51:6",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1770,
																	"name": "T",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "1641:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1641:3:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1772,
															"nodeType": "RevertStatement",
															"src": "1634:10:6"
														}
													},
													{
														"assignments": [
															1775
														],
														"declarations": [
															{
																"constant": false,
																"id": 1775,
																"mutability": "mutable",
																"name": "ratio",
																"nameLocation": "1667:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 2107,
																"src": "1659:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1774,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1784,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1776,
																		"name": "absTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1740,
																		"src": "1675:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"hexValue": "307831",
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "0x1"
																	},
																	"src": "1675:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1692:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1675:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1765:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x100000000000000000000000000000000"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1675:125:6",
															"trueExpression": {
																"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1712:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...9313"
																},
																"value": "0xfffcb933bd6fad37aa2d162d1a594001"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint136",
																"typeString": "uint136"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1659:141:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1785,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "1818:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1828:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "0x2"
																},
																"src": "1818:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1835:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1818:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1799,
														"nodeType": "IfStatement",
														"src": "1814:83:6",
														"trueBody": {
															"expression": {
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1790,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "1838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1791,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "1847:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1855:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...2778"
																					},
																					"value": "0xfff97272373d413259a46990580e213a"
																				},
																				"src": "1847:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1794,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1846:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1894:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "1846:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1838:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1798,
															"nodeType": "ExpressionStatement",
															"src": "1838:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1800,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "1915:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834",
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1925:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "0x4"
																},
																"src": "1915:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1932:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1915:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1814,
														"nodeType": "IfStatement",
														"src": "1911:83:6",
														"trueBody": {
															"expression": {
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1805,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "1935:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1806,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "1944:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																					"id": 1807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1952:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1260"
																					},
																					"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																				},
																				"src": "1944:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1809,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1943:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1991:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "1943:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1935:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1813,
															"nodeType": "ExpressionStatement",
															"src": "1935:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1815,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2012:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2022:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "0x8"
																},
																"src": "2012:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1829,
														"nodeType": "IfStatement",
														"src": "2008:83:6",
														"trueBody": {
															"expression": {
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1820,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1821,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2041:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																					"id": 1822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2049:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																						"typeString": "int_const 3401...(31 digits omitted)...4304"
																					},
																					"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																				},
																				"src": "2041:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1824,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2040:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2040:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2032:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "2032:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2109:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "0x10"
																},
																"src": "2109:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2127:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2109:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1844,
														"nodeType": "IfStatement",
														"src": "2105:84:6",
														"trueBody": {
															"expression": {
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1835,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2130:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1836,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2139:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																					"id": 1837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2147:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																						"typeString": "int_const 3400...(31 digits omitted)...1444"
																					},
																					"value": "0xffcb9843d60f6159c9db58835c926644"
																				},
																				"src": "2139:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1839,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2138:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2186:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2138:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2130:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"nodeType": "ExpressionStatement",
															"src": "2130:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1845,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2207:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2217:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "2207:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2225:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2207:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "2203:84:6",
														"trueBody": {
															"expression": {
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1850,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2228:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1851,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2237:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																					"id": 1852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2245:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																						"typeString": "int_const 3397...(31 digits omitted)...2016"
																					},
																					"value": "0xff973b41fa98c081472e6896dfb254c0"
																				},
																				"src": "2237:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1854,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2236:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2284:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2236:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2228:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1858,
															"nodeType": "ExpressionStatement",
															"src": "2228:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2305:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "0x40"
																},
																"src": "2305:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2323:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2305:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1874,
														"nodeType": "IfStatement",
														"src": "2301:84:6",
														"trueBody": {
															"expression": {
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1865,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2326:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1866,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																					"id": 1867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2343:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																						"typeString": "int_const 3391...(31 digits omitted)...7025"
																					},
																					"value": "0xff2ea16466c96a3843ec78b326b52861"
																				},
																				"src": "2335:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1869,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2334:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2382:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2334:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2326:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "2326:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2403:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2413:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "2403:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2421:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2403:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1889,
														"nodeType": "IfStatement",
														"src": "2399:84:6",
														"trueBody": {
															"expression": {
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1880,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2424:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1881,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2433:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																					"id": 1882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2441:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																						"typeString": "int_const 3381...(31 digits omitted)...5971"
																					},
																					"value": "0xfe5dee046a99a2a811c461f1969c3053"
																				},
																				"src": "2433:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1884,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2432:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2480:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2432:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2424:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1888,
															"nodeType": "ExpressionStatement",
															"src": "2424:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1890,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2501:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030",
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2511:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "0x100"
																},
																"src": "2501:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2501:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1904,
														"nodeType": "IfStatement",
														"src": "2497:85:6",
														"trueBody": {
															"expression": {
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2523:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1896,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2532:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																					"id": 1897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2540:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																						"typeString": "int_const 3359...(31 digits omitted)...7700"
																					},
																					"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																				},
																				"src": "2532:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1899,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2531:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2579:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2531:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2523:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "2523:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1905,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2600:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2610:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_512_by_1",
																		"typeString": "int_const 512"
																	},
																	"value": "0x200"
																},
																"src": "2600:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2619:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2600:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1919,
														"nodeType": "IfStatement",
														"src": "2596:85:6",
														"trueBody": {
															"expression": {
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1910,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2622:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1911,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2631:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																					"id": 1912,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2639:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																						"typeString": "int_const 3316...(31 digits omitted)...7300"
																					},
																					"value": "0xf987a7253ac413176f2b074cf7815e54"
																				},
																				"src": "2631:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1914,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2630:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2678:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2630:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2622:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1918,
															"nodeType": "ExpressionStatement",
															"src": "2622:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1920,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030",
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2709:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024_by_1",
																		"typeString": "int_const 1024"
																	},
																	"value": "0x400"
																},
																"src": "2699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2699:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1934,
														"nodeType": "IfStatement",
														"src": "2695:85:6",
														"trueBody": {
															"expression": {
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1925,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2721:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1926,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2730:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																					"id": 1927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2738:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																						"typeString": "int_const 3232...(31 digits omitted)...8739"
																					},
																					"value": "0xf3392b0822b70005940c7a398e4b70f3"
																				},
																				"src": "2730:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1929,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2729:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2777:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2729:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2721:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1933,
															"nodeType": "ExpressionStatement",
															"src": "2721:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1935,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2798:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030",
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2808:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2048_by_1",
																		"typeString": "int_const 2048"
																	},
																	"value": "0x800"
																},
																"src": "2798:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2817:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2798:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1949,
														"nodeType": "IfStatement",
														"src": "2794:85:6",
														"trueBody": {
															"expression": {
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1940,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2820:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1941,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2829:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																					"id": 1942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2837:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																						"typeString": "int_const 3071...(31 digits omitted)...3929"
																					},
																					"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																				},
																				"src": "2829:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1944,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2828:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2876:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2828:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2820:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1948,
															"nodeType": "ExpressionStatement",
															"src": "2820:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1950,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2897:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030",
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2907:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4096_by_1",
																		"typeString": "int_const 4096"
																	},
																	"value": "0x1000"
																},
																"src": "2897:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2917:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2897:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1964,
														"nodeType": "IfStatement",
														"src": "2893:86:6",
														"trueBody": {
															"expression": {
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1955,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "2920:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1956,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "2929:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																					"id": 1957,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2937:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																						"typeString": "int_const 2772...(31 digits omitted)...5045"
																					},
																					"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																				},
																				"src": "2929:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1959,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2928:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2976:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "2928:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2920:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "2920:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1965,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "2997:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030",
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3007:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8192_by_1",
																		"typeString": "int_const 8192"
																	},
																	"value": "0x2000"
																},
																"src": "2997:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2997:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1979,
														"nodeType": "IfStatement",
														"src": "2993:86:6",
														"trueBody": {
															"expression": {
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1970,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3020:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1971,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3029:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																					"id": 1972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3037:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																						"typeString": "int_const 2259...(31 digits omitted)...1333"
																					},
																					"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																				},
																				"src": "3029:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1974,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3028:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3076:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3028:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3020:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1978,
															"nodeType": "ExpressionStatement",
															"src": "3020:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1980,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3097:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030",
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3107:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16384_by_1",
																		"typeString": "int_const 16384"
																	},
																	"value": "0x4000"
																},
																"src": "3097:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3097:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1994,
														"nodeType": "IfStatement",
														"src": "3093:86:6",
														"trueBody": {
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1985,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3120:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1986,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3129:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																					"id": 1987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3137:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																						"typeString": "int_const 1499...(31 digits omitted)...5943"
																					},
																					"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																				},
																				"src": "3129:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3128:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3176:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3128:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3120:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "3120:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1995,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3197:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030",
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3207:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"value": "0x8000"
																},
																"src": "3197:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3197:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2009,
														"nodeType": "IfStatement",
														"src": "3193:86:6",
														"trueBody": {
															"expression": {
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2000,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3220:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2001,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3229:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																					"id": 2002,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3237:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																						"typeString": "int_const 6611...(30 digits omitted)...7926"
																					},
																					"value": "0x31be135f97d08fd981231505542fcfa6"
																				},
																				"src": "3229:42:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2004,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3228:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3276:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3228:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3220:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "3220:59:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2010,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3297:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3307:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65536_by_1",
																		"typeString": "int_const 65536"
																	},
																	"value": "0x10000"
																},
																"src": "3297:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3318:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3297:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2024,
														"nodeType": "IfStatement",
														"src": "3293:86:6",
														"trueBody": {
															"expression": {
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2015,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3321:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2016,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3330:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																					"id": 2017,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3338:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																						"typeString": "int_const 1284...(30 digits omitted)...8313"
																					},
																					"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																				},
																				"src": "3330:41:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2019,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3329:43:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3376:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3329:50:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3321:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2023,
															"nodeType": "ExpressionStatement",
															"src": "3321:58:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2025,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3397:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030",
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3407:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_131072_by_1",
																		"typeString": "int_const 131072"
																	},
																	"value": "0x20000"
																},
																"src": "3397:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3418:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3397:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2039,
														"nodeType": "IfStatement",
														"src": "3393:85:6",
														"trueBody": {
															"expression": {
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2030,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3421:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2031,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3430:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																					"id": 2032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3438:32:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																						"typeString": "int_const 4850...(28 digits omitted)...4020"
																					},
																					"value": "0x5d6af8dedb81196699c329225ee604"
																				},
																				"src": "3430:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2034,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3429:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3475:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3429:49:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3421:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2038,
															"nodeType": "ExpressionStatement",
															"src": "3421:57:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2040,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3496:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3506:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_262144_by_1",
																		"typeString": "int_const 262144"
																	},
																	"value": "0x40000"
																},
																"src": "3496:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3517:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3496:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2054,
														"nodeType": "IfStatement",
														"src": "3492:83:6",
														"trueBody": {
															"expression": {
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2045,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3520:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2046,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3529:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																					"id": 2047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3537:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																						"typeString": "int_const 6914...(25 digits omitted)...4168"
																					},
																					"value": "0x2216e584f5fa1ea926041bedfe98"
																				},
																				"src": "3529:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2049,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3528:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3572:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3528:47:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3520:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2053,
															"nodeType": "ExpressionStatement",
															"src": "3520:55:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2055,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3593:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030",
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3603:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_524288_by_1",
																		"typeString": "int_const 524288"
																	},
																	"value": "0x80000"
																},
																"src": "3593:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3614:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3593:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "3589:78:6",
														"trueBody": {
															"expression": {
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2060,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3617:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2061,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "3626:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783438613137303339316637646334323434346538666132",
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3634:25:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																						"typeString": "int_const 1404880482679654955896180642"
																					},
																					"value": "0x48a170391f7dc42444e8fa2"
																				},
																				"src": "3626:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2064,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3625:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3664:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "3625:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3617:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2068,
															"nodeType": "ExpressionStatement",
															"src": "3617:50:6"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "3686:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3693:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3686:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2083,
														"nodeType": "IfStatement",
														"src": "3682:47:6",
														"trueBody": {
															"expression": {
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2073,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "3696:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 2076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3709:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2075,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3709:7:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 2074,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "3704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3704:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3718:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "3704:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2079,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "3724:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3704:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3696:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2082,
															"nodeType": "ExpressionStatement",
															"src": "3696:33:6"
														}
													},
													{
														"expression": {
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2084,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "4055:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2089,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2087,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1775,
																						"src": "4079:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "3332",
																						"id": 2088,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4088:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "4079:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2090,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4078:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"components": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2096,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2091,
																								"name": "ratio",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1775,
																								"src": "4095:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "%",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_rational_4294967296_by_1",
																											"typeString": "int_const 4294967296"
																										},
																										"id": 2094,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "31",
																											"id": 2092,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4104:1:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"hexValue": "3332",
																											"id": 2093,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4109:2:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_32_by_1",
																												"typeString": "int_const 32"
																											},
																											"value": "32"
																										},
																										"src": "4104:7:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_4294967296_by_1",
																											"typeString": "int_const 4294967296"
																										}
																									}
																								],
																								"id": 2095,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "4103:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							},
																							"src": "4095:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2097,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4116:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4095:22:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"hexValue": "31",
																						"id": 2100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4124:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"id": 2101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "4095:30:6",
																					"trueExpression": {
																						"hexValue": "30",
																						"id": 2099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4120:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 2102,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4094:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4078:48:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4070:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2085,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "4070:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4070:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "4055:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"id": 2106,
														"nodeType": "ExpressionStatement",
														"src": "4055:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "1083:297:6",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1394:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1419:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1413:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1733,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:12:6"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1456:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1448:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1736,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:22:6"
									},
									"scope": 2252,
									"src": "1385:2759:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2250,
										"nodeType": "Block",
										"src": "4648:4767:6",
										"statements": [
											{
												"id": 2249,
												"nodeType": "UncheckedBlock",
												"src": "4658:4751:6",
												"statements": [
													{
														"condition": {
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4789:66:6",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2117,
																				"name": "sqrtPriceX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2112,
																				"src": "4791:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 2118,
																				"name": "MIN_SQRT_RATIO",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1727,
																				"src": "4807:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4791:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2120,
																				"name": "sqrtPriceX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2112,
																				"src": "4825:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2121,
																				"name": "MAX_SQRT_RATIO",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "4840:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4825:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4791:63:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4790:65:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2129,
														"nodeType": "IfStatement",
														"src": "4785:82:6",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2126,
																	"name": "R",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "4864:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4864:3:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2128,
															"nodeType": "RevertStatement",
															"src": "4857:10:6"
														}
													},
													{
														"assignments": [
															2131
														],
														"declarations": [
															{
																"constant": false,
																"id": 2131,
																"mutability": "mutable",
																"name": "ratio",
																"nameLocation": "4889:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "4881:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2130,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4881:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2138,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2134,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2112,
																		"src": "4905:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4897:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4897:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3332",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4922:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "4897:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4881:43:6"
													},
													{
														"assignments": [
															2140
														],
														"declarations": [
															{
																"constant": false,
																"id": 2140,
																"mutability": "mutable",
																"name": "r",
																"nameLocation": "4947:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "4939:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2142,
														"initialValue": {
															"id": 2141,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "4951:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4939:17:6"
													},
													{
														"assignments": [
															2144
														],
														"declarations": [
															{
																"constant": false,
																"id": 2144,
																"mutability": "mutable",
																"name": "msb",
																"nameLocation": "4978:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "4970:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2143,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4970:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2146,
														"initialValue": {
															"hexValue": "30",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4970:15:6"
													},
													{
														"AST": {
															"nativeSrc": "5009:155:6",
															"nodeType": "YulBlock",
															"src": "5009:155:6",
															"statements": [
																{
																	"nativeSrc": "5027:58:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5027:58:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5040:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5040:1:6",
																				"type": "",
																				"value": "7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5046:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5046:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5049:34:6",
																						"nodeType": "YulLiteral",
																						"src": "5049:34:6",
																						"type": "",
																						"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5043:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5043:2:6"
																				},
																				"nativeSrc": "5043:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5043:41:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5036:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:6"
																		},
																		"nativeSrc": "5036:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:49:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5031:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5031:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5102:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5112:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5112:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5117:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5117:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5109:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5109:2:6"
																		},
																		"nativeSrc": "5109:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5109:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5102:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5102:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5136:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5136:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5145:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5145:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5148:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5148:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5141:3:6"
																		},
																		"nativeSrc": "5141:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5141:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5136:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5136:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5102:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5112:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5046:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5136:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5148:1:6",
																"valueSize": 1
															}
														],
														"id": 2147,
														"nodeType": "InlineAssembly",
														"src": "5000:164:6"
													},
													{
														"AST": {
															"nativeSrc": "5186:139:6",
															"nodeType": "YulBlock",
															"src": "5186:139:6",
															"statements": [
																{
																	"nativeSrc": "5204:42:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5204:42:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5217:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5217:1:6",
																				"type": "",
																				"value": "6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5223:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5223:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5226:18:6",
																						"nodeType": "YulLiteral",
																						"src": "5226:18:6",
																						"type": "",
																						"value": "0xFFFFFFFFFFFFFFFF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5220:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5220:2:6"
																				},
																				"nativeSrc": "5220:25:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5220:25:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5213:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5213:3:6"
																		},
																		"nativeSrc": "5213:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5213:33:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5208:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5208:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5263:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5263:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5273:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5273:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5278:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5278:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5270:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5270:2:6"
																		},
																		"nativeSrc": "5270:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5270:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5263:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5297:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5297:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5306:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5306:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5309:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5309:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5302:3:6"
																		},
																		"nativeSrc": "5302:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5302:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5297:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5297:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5263:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5273:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5223:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5297:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5309:1:6",
																"valueSize": 1
															}
														],
														"id": 2148,
														"nodeType": "InlineAssembly",
														"src": "5177:148:6"
													},
													{
														"AST": {
															"nativeSrc": "5347:131:6",
															"nodeType": "YulBlock",
															"src": "5347:131:6",
															"statements": [
																{
																	"nativeSrc": "5365:34:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5365:34:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5378:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5378:1:6",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5384:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5384:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5387:10:6",
																						"nodeType": "YulLiteral",
																						"src": "5387:10:6",
																						"type": "",
																						"value": "0xFFFFFFFF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5381:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5381:2:6"
																				},
																				"nativeSrc": "5381:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:17:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:6"
																		},
																		"nativeSrc": "5374:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5374:25:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5369:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5369:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5416:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5416:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5426:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5426:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5431:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5431:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5423:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5423:2:6"
																		},
																		"nativeSrc": "5423:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5423:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5416:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5450:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5450:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5459:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5459:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5462:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5462:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5455:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:6"
																		},
																		"nativeSrc": "5455:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5455:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5450:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5450:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5416:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5426:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5384:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5450:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5462:1:6",
																"valueSize": 1
															}
														],
														"id": 2149,
														"nodeType": "InlineAssembly",
														"src": "5338:140:6"
													},
													{
														"AST": {
															"nativeSrc": "5500:127:6",
															"nodeType": "YulBlock",
															"src": "5500:127:6",
															"statements": [
																{
																	"nativeSrc": "5518:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5518:30:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5531:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5531:1:6",
																				"type": "",
																				"value": "4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5537:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5537:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5540:6:6",
																						"nodeType": "YulLiteral",
																						"src": "5540:6:6",
																						"type": "",
																						"value": "0xFFFF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5534:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5534:2:6"
																				},
																				"nativeSrc": "5534:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5534:13:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:6"
																		},
																		"nativeSrc": "5527:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:21:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5522:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5522:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5565:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5565:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5575:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5575:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5580:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5580:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5572:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5572:2:6"
																		},
																		"nativeSrc": "5572:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5565:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5565:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5599:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5599:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5608:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5608:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5611:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5611:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5604:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:6"
																		},
																		"nativeSrc": "5604:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5599:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5599:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5565:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5575:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5537:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5599:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5611:1:6",
																"valueSize": 1
															}
														],
														"id": 2150,
														"nodeType": "InlineAssembly",
														"src": "5491:136:6"
													},
													{
														"AST": {
															"nativeSrc": "5649:125:6",
															"nodeType": "YulBlock",
															"src": "5649:125:6",
															"statements": [
																{
																	"nativeSrc": "5667:28:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5667:28:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5680:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5680:1:6",
																				"type": "",
																				"value": "3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5686:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5686:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5689:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5689:4:6",
																						"type": "",
																						"value": "0xFF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5683:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5683:2:6"
																				},
																				"nativeSrc": "5683:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5683:11:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5676:3:6"
																		},
																		"nativeSrc": "5676:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5676:19:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5671:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5671:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5712:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5712:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5722:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5722:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5727:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5727:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5719:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5719:2:6"
																		},
																		"nativeSrc": "5719:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5719:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5712:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5712:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5746:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5746:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5755:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5755:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5758:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5758:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5751:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:6"
																		},
																		"nativeSrc": "5751:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5751:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5746:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5746:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5712:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5722:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5686:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5746:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5758:1:6",
																"valueSize": 1
															}
														],
														"id": 2151,
														"nodeType": "InlineAssembly",
														"src": "5640:134:6"
													},
													{
														"AST": {
															"nativeSrc": "5796:124:6",
															"nodeType": "YulBlock",
															"src": "5796:124:6",
															"statements": [
																{
																	"nativeSrc": "5814:27:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5814:27:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5827:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5827:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5833:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5833:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5836:3:6",
																						"nodeType": "YulLiteral",
																						"src": "5836:3:6",
																						"type": "",
																						"value": "0xF"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5830:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5830:2:6"
																				},
																				"nativeSrc": "5830:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5830:10:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5823:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:6"
																		},
																		"nativeSrc": "5823:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5818:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5818:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5858:17:6",
																	"nodeType": "YulAssignment",
																	"src": "5858:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "5868:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5868:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "5873:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5873:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5865:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5865:2:6"
																		},
																		"nativeSrc": "5865:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5865:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "5858:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5892:14:6",
																	"nodeType": "YulAssignment",
																	"src": "5892:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "5901:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5901:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5904:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5904:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "5897:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5897:3:6"
																		},
																		"nativeSrc": "5897:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5897:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "5892:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "5892:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5858:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5868:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5833:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5892:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5904:1:6",
																"valueSize": 1
															}
														],
														"id": 2152,
														"nodeType": "InlineAssembly",
														"src": "5787:133:6"
													},
													{
														"AST": {
															"nativeSrc": "5942:124:6",
															"nodeType": "YulBlock",
															"src": "5942:124:6",
															"statements": [
																{
																	"nativeSrc": "5960:27:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5960:27:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5973:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5973:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "5979:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5979:1:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5982:3:6",
																						"nodeType": "YulLiteral",
																						"src": "5982:3:6",
																						"type": "",
																						"value": "0x3"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5976:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5976:2:6"
																				},
																				"nativeSrc": "5976:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5976:10:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5969:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:6"
																		},
																		"nativeSrc": "5969:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5969:18:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "5964:1:6",
																			"nodeType": "YulTypedName",
																			"src": "5964:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6004:17:6",
																	"nodeType": "YulAssignment",
																	"src": "6004:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "6014:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6014:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6019:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6019:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6011:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6011:2:6"
																		},
																		"nativeSrc": "6011:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6011:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "6004:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6038:14:6",
																	"nodeType": "YulAssignment",
																	"src": "6038:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "6047:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6047:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6050:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6050:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6043:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6043:3:6"
																		},
																		"nativeSrc": "6043:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6043:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6038:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6038:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6004:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6014:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5979:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6038:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6050:1:6",
																"valueSize": 1
															}
														],
														"id": 2153,
														"nodeType": "InlineAssembly",
														"src": "5933:133:6"
													},
													{
														"AST": {
															"nativeSrc": "6088:85:6",
															"nodeType": "YulBlock",
															"src": "6088:85:6",
															"statements": [
																{
																	"nativeSrc": "6106:19:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6106:19:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6118:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6118:1:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6121:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6121:3:6",
																				"type": "",
																				"value": "0x1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6115:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6115:2:6"
																		},
																		"nativeSrc": "6115:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:10:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "6110:1:6",
																			"nodeType": "YulTypedName",
																			"src": "6110:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6142:17:6",
																	"nodeType": "YulAssignment",
																	"src": "6142:17:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "msb",
																				"nativeSrc": "6152:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6152:3:6"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6157:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6157:1:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6149:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6149:2:6"
																		},
																		"nativeSrc": "6149:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6149:10:6"
																	},
																	"variableNames": [
																		{
																			"name": "msb",
																			"nativeSrc": "6142:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6142:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6152:3:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6118:1:6",
																"valueSize": 1
															}
														],
														"id": 2154,
														"nodeType": "InlineAssembly",
														"src": "6079:94:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2155,
																"name": "msb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "6191:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6198:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "6191:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2167,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "6246:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2168,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2131,
																		"src": "6250:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313237",
																					"id": 2169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6260:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_127_by_1",
																						"typeString": "int_const 127"
																					},
																					"value": "127"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2170,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "6266:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6260:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2172,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6259:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6250:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6246:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2175,
															"nodeType": "ExpressionStatement",
															"src": "6246:24:6"
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "6187:83:6",
														"trueBody": {
															"expression": {
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2158,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "6203:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2159,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2131,
																		"src": "6207:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2160,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "6217:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "313237",
																					"id": 2161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6223:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_127_by_1",
																						"typeString": "int_const 127"
																					},
																					"value": "127"
																				},
																				"src": "6217:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2163,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6216:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6207:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6203:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2166,
															"nodeType": "ExpressionStatement",
															"src": "6203:24:6"
														}
													},
													{
														"assignments": [
															2178
														],
														"declarations": [
															{
																"constant": false,
																"id": 2178,
																"mutability": "mutable",
																"name": "log_2",
																"nameLocation": "6292:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "6285:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2177,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6285:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2181,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "6308:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6301:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2179,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6301:6:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6301:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6315:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "6301:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6300:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3634",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6323:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "6300:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6285:40:6"
													},
													{
														"AST": {
															"nativeSrc": "6349:171:6",
															"nodeType": "YulBlock",
															"src": "6349:171:6",
															"statements": [
																{
																	"nativeSrc": "6367:24:6",
																	"nodeType": "YulAssignment",
																	"src": "6367:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6376:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6376:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "6385:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6385:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "6388:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6388:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6381:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6381:3:6"
																				},
																				"nativeSrc": "6381:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6381:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6372:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:6"
																		},
																		"nativeSrc": "6372:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6367:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6367:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6408:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6408:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6421:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6421:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6426:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6426:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6417:3:6"
																		},
																		"nativeSrc": "6417:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6417:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "6412:1:6",
																			"nodeType": "YulTypedName",
																			"src": "6412:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6445:30:6",
																	"nodeType": "YulAssignment",
																	"src": "6445:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "6457:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6457:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6468:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6468:2:6",
																						"type": "",
																						"value": "63"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "6472:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6472:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6464:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6464:3:6"
																				},
																				"nativeSrc": "6464:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6464:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6454:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6454:2:6"
																		},
																		"nativeSrc": "6454:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "6445:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6445:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6492:14:6",
																	"nodeType": "YulAssignment",
																	"src": "6492:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "6501:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6501:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6504:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6504:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:6"
																		},
																		"nativeSrc": "6497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6497:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6492:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6492:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6445:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6367:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6385:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6388:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6426:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6492:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6504:1:6",
																"valueSize": 1
															}
														],
														"id": 2189,
														"nodeType": "InlineAssembly",
														"src": "6340:180:6"
													},
													{
														"AST": {
															"nativeSrc": "6542:171:6",
															"nodeType": "YulBlock",
															"src": "6542:171:6",
															"statements": [
																{
																	"nativeSrc": "6560:24:6",
																	"nodeType": "YulAssignment",
																	"src": "6560:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6569:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6569:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "6578:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6578:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "6581:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6581:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6574:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6574:3:6"
																				},
																				"nativeSrc": "6574:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6574:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6565:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:6"
																		},
																		"nativeSrc": "6565:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6560:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6560:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6601:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6601:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6614:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6614:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6619:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6619:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:6"
																		},
																		"nativeSrc": "6610:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6610:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "6605:1:6",
																			"nodeType": "YulTypedName",
																			"src": "6605:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6638:30:6",
																	"nodeType": "YulAssignment",
																	"src": "6638:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "6650:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6650:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6661:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6661:2:6",
																						"type": "",
																						"value": "62"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "6665:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6665:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6657:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6657:3:6"
																				},
																				"nativeSrc": "6657:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6657:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6647:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6647:2:6"
																		},
																		"nativeSrc": "6647:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6647:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "6638:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6638:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6685:14:6",
																	"nodeType": "YulAssignment",
																	"src": "6685:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "6694:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6694:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6697:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6697:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6690:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6690:3:6"
																		},
																		"nativeSrc": "6690:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6685:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6685:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6638:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6650:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6560:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6578:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6581:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6619:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6685:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6697:1:6",
																"valueSize": 1
															}
														],
														"id": 2190,
														"nodeType": "InlineAssembly",
														"src": "6533:180:6"
													},
													{
														"AST": {
															"nativeSrc": "6735:171:6",
															"nodeType": "YulBlock",
															"src": "6735:171:6",
															"statements": [
																{
																	"nativeSrc": "6753:24:6",
																	"nodeType": "YulAssignment",
																	"src": "6753:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6762:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6762:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "6771:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6771:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "6774:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6774:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6767:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6767:3:6"
																				},
																				"nativeSrc": "6767:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6767:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6758:3:6"
																		},
																		"nativeSrc": "6758:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6758:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6753:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6753:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6794:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6794:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6807:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6807:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6812:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6812:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6803:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:6"
																		},
																		"nativeSrc": "6803:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "6798:1:6",
																			"nodeType": "YulTypedName",
																			"src": "6798:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6831:30:6",
																	"nodeType": "YulAssignment",
																	"src": "6831:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "6843:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6843:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6854:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6854:2:6",
																						"type": "",
																						"value": "61"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "6858:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6858:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6850:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6850:3:6"
																				},
																				"nativeSrc": "6850:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6850:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6840:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6840:2:6"
																		},
																		"nativeSrc": "6840:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "6831:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6831:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6878:14:6",
																	"nodeType": "YulAssignment",
																	"src": "6878:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "6887:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6887:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6890:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6890:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6883:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6883:3:6"
																		},
																		"nativeSrc": "6883:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6878:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6878:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6831:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6843:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6753:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6771:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6774:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6812:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6878:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6890:1:6",
																"valueSize": 1
															}
														],
														"id": 2191,
														"nodeType": "InlineAssembly",
														"src": "6726:180:6"
													},
													{
														"AST": {
															"nativeSrc": "6928:171:6",
															"nodeType": "YulBlock",
															"src": "6928:171:6",
															"statements": [
																{
																	"nativeSrc": "6946:24:6",
																	"nodeType": "YulAssignment",
																	"src": "6946:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6955:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6955:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "6964:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6964:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "6967:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6967:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6960:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:6"
																				},
																				"nativeSrc": "6960:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6960:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:6"
																		},
																		"nativeSrc": "6951:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "6946:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "6946:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6987:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6987:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7000:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7000:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7005:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7005:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "6996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:6"
																		},
																		"nativeSrc": "6996:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6996:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "6991:1:6",
																			"nodeType": "YulTypedName",
																			"src": "6991:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7024:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7024:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "7036:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7036:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7047:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7047:2:6",
																						"type": "",
																						"value": "60"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "7051:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7051:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7043:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7043:3:6"
																				},
																				"nativeSrc": "7043:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7043:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7033:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7033:2:6"
																		},
																		"nativeSrc": "7033:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7033:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7024:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7024:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7071:14:6",
																	"nodeType": "YulAssignment",
																	"src": "7071:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "7080:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7080:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7083:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7083:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7076:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:6"
																		},
																		"nativeSrc": "7076:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7076:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7071:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7071:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7024:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7036:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6946:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6967:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7005:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7071:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7083:1:6",
																"valueSize": 1
															}
														],
														"id": 2192,
														"nodeType": "InlineAssembly",
														"src": "6919:180:6"
													},
													{
														"AST": {
															"nativeSrc": "7121:171:6",
															"nodeType": "YulBlock",
															"src": "7121:171:6",
															"statements": [
																{
																	"nativeSrc": "7139:24:6",
																	"nodeType": "YulAssignment",
																	"src": "7139:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7148:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7148:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7157:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7157:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "7160:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7160:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7153:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7153:3:6"
																				},
																				"nativeSrc": "7153:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7153:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7144:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:6"
																		},
																		"nativeSrc": "7144:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7139:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7139:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7180:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7180:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7193:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7193:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7198:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7198:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7189:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:6"
																		},
																		"nativeSrc": "7189:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "7184:1:6",
																			"nodeType": "YulTypedName",
																			"src": "7184:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7217:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7217:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "7229:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7229:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7240:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7240:2:6",
																						"type": "",
																						"value": "59"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "7244:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7244:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7236:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7236:3:6"
																				},
																				"nativeSrc": "7236:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7236:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7226:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7226:2:6"
																		},
																		"nativeSrc": "7226:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7226:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7217:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7217:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7264:14:6",
																	"nodeType": "YulAssignment",
																	"src": "7264:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "7273:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7273:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7276:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7276:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7269:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7269:3:6"
																		},
																		"nativeSrc": "7269:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7269:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7264:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7264:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7217:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7229:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7139:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7157:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7160:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7198:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7264:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7276:1:6",
																"valueSize": 1
															}
														],
														"id": 2193,
														"nodeType": "InlineAssembly",
														"src": "7112:180:6"
													},
													{
														"AST": {
															"nativeSrc": "7314:171:6",
															"nodeType": "YulBlock",
															"src": "7314:171:6",
															"statements": [
																{
																	"nativeSrc": "7332:24:6",
																	"nodeType": "YulAssignment",
																	"src": "7332:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7341:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7341:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7350:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7350:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "7353:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7353:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7346:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7346:3:6"
																				},
																				"nativeSrc": "7346:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7346:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7337:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:6"
																		},
																		"nativeSrc": "7337:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7337:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7332:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7332:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7373:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7373:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7386:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7386:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7391:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7391:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7382:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:6"
																		},
																		"nativeSrc": "7382:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "7377:1:6",
																			"nodeType": "YulTypedName",
																			"src": "7377:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7410:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "7422:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7422:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7433:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7433:2:6",
																						"type": "",
																						"value": "58"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "7437:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7437:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7429:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7429:3:6"
																				},
																				"nativeSrc": "7429:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7429:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7419:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7419:2:6"
																		},
																		"nativeSrc": "7419:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7410:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7410:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7457:14:6",
																	"nodeType": "YulAssignment",
																	"src": "7457:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "7466:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7466:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7469:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7469:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7462:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7462:3:6"
																		},
																		"nativeSrc": "7462:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7462:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7457:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7457:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7410:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7422:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7332:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7350:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7353:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7391:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7469:1:6",
																"valueSize": 1
															}
														],
														"id": 2194,
														"nodeType": "InlineAssembly",
														"src": "7305:180:6"
													},
													{
														"AST": {
															"nativeSrc": "7507:171:6",
															"nodeType": "YulBlock",
															"src": "7507:171:6",
															"statements": [
																{
																	"nativeSrc": "7525:24:6",
																	"nodeType": "YulAssignment",
																	"src": "7525:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7534:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7534:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7543:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7543:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "7546:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7546:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7539:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7539:3:6"
																				},
																				"nativeSrc": "7539:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7539:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7530:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:6"
																		},
																		"nativeSrc": "7530:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7525:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7525:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7566:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7566:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7579:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7579:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7584:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7584:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7575:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7575:3:6"
																		},
																		"nativeSrc": "7575:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "7570:1:6",
																			"nodeType": "YulTypedName",
																			"src": "7570:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7603:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7603:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "7615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7615:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7626:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7626:2:6",
																						"type": "",
																						"value": "57"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "7630:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7630:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7622:3:6"
																				},
																				"nativeSrc": "7622:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7622:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7612:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7612:2:6"
																		},
																		"nativeSrc": "7612:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7612:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7603:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7603:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7650:14:6",
																	"nodeType": "YulAssignment",
																	"src": "7650:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "7659:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7659:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7662:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7662:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7655:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7655:3:6"
																		},
																		"nativeSrc": "7655:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7655:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7650:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7650:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7603:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7615:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7525:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7543:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7546:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7584:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7650:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7662:1:6",
																"valueSize": 1
															}
														],
														"id": 2195,
														"nodeType": "InlineAssembly",
														"src": "7498:180:6"
													},
													{
														"AST": {
															"nativeSrc": "7700:171:6",
															"nodeType": "YulBlock",
															"src": "7700:171:6",
															"statements": [
																{
																	"nativeSrc": "7718:24:6",
																	"nodeType": "YulAssignment",
																	"src": "7718:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7727:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7727:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7736:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7736:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "7739:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7739:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7732:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7732:3:6"
																				},
																				"nativeSrc": "7732:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7723:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:6"
																		},
																		"nativeSrc": "7723:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7723:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7718:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7718:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7759:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7759:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7772:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7772:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7777:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7777:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7768:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7768:3:6"
																		},
																		"nativeSrc": "7768:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "7763:1:6",
																			"nodeType": "YulTypedName",
																			"src": "7763:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7796:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7796:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "7808:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7808:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7819:2:6",
																						"nodeType": "YulLiteral",
																						"src": "7819:2:6",
																						"type": "",
																						"value": "56"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "7823:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7823:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7815:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7815:3:6"
																				},
																				"nativeSrc": "7815:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7815:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7805:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7805:2:6"
																		},
																		"nativeSrc": "7805:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7805:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7796:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7796:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7843:14:6",
																	"nodeType": "YulAssignment",
																	"src": "7843:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "7852:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7852:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7855:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7855:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7848:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:6"
																		},
																		"nativeSrc": "7848:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7848:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7843:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7843:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7796:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7808:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7718:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7736:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7739:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7777:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7843:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7855:1:6",
																"valueSize": 1
															}
														],
														"id": 2196,
														"nodeType": "InlineAssembly",
														"src": "7691:180:6"
													},
													{
														"AST": {
															"nativeSrc": "7893:171:6",
															"nodeType": "YulBlock",
															"src": "7893:171:6",
															"statements": [
																{
																	"nativeSrc": "7911:24:6",
																	"nodeType": "YulAssignment",
																	"src": "7911:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7920:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7920:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7929:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7929:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "7932:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7932:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7925:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7925:3:6"
																				},
																				"nativeSrc": "7925:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7925:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:6"
																		},
																		"nativeSrc": "7916:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "7911:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "7911:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7952:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7952:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7965:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7965:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7970:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7970:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7961:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7961:3:6"
																		},
																		"nativeSrc": "7961:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7961:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "7956:1:6",
																			"nodeType": "YulTypedName",
																			"src": "7956:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7989:30:6",
																	"nodeType": "YulAssignment",
																	"src": "7989:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8001:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8001:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8012:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8012:2:6",
																						"type": "",
																						"value": "55"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8016:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8016:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8008:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8008:3:6"
																				},
																				"nativeSrc": "8008:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8008:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7998:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7998:2:6"
																		},
																		"nativeSrc": "7998:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7998:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "7989:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7989:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8036:14:6",
																	"nodeType": "YulAssignment",
																	"src": "8036:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8045:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8045:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8048:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8048:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8041:3:6"
																		},
																		"nativeSrc": "8041:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8041:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8036:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8036:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "7989:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8001:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7911:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7929:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7932:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "7970:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8036:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8048:1:6",
																"valueSize": 1
															}
														],
														"id": 2197,
														"nodeType": "InlineAssembly",
														"src": "7884:180:6"
													},
													{
														"AST": {
															"nativeSrc": "8086:171:6",
															"nodeType": "YulBlock",
															"src": "8086:171:6",
															"statements": [
																{
																	"nativeSrc": "8104:24:6",
																	"nodeType": "YulAssignment",
																	"src": "8104:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8113:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8113:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8122:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8122:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8125:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8125:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8118:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8118:3:6"
																				},
																				"nativeSrc": "8118:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8118:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8109:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:6"
																		},
																		"nativeSrc": "8109:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8104:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8104:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8145:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8145:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8158:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8158:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8163:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8163:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8154:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:6"
																		},
																		"nativeSrc": "8154:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8149:1:6",
																			"nodeType": "YulTypedName",
																			"src": "8149:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8182:30:6",
																	"nodeType": "YulAssignment",
																	"src": "8182:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8194:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8194:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8205:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8205:2:6",
																						"type": "",
																						"value": "54"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8209:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8209:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8201:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8201:3:6"
																				},
																				"nativeSrc": "8201:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8201:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8191:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8191:2:6"
																		},
																		"nativeSrc": "8191:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8191:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8182:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8182:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8229:14:6",
																	"nodeType": "YulAssignment",
																	"src": "8229:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8238:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8241:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8241:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8234:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:6"
																		},
																		"nativeSrc": "8234:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8234:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8229:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8229:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8182:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8194:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8104:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8122:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8125:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8163:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8229:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8241:1:6",
																"valueSize": 1
															}
														],
														"id": 2198,
														"nodeType": "InlineAssembly",
														"src": "8077:180:6"
													},
													{
														"AST": {
															"nativeSrc": "8279:171:6",
															"nodeType": "YulBlock",
															"src": "8279:171:6",
															"statements": [
																{
																	"nativeSrc": "8297:24:6",
																	"nodeType": "YulAssignment",
																	"src": "8297:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8306:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8306:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8315:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8315:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8318:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8318:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8311:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8311:3:6"
																				},
																				"nativeSrc": "8311:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8311:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8302:3:6"
																		},
																		"nativeSrc": "8302:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8302:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8297:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8297:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8338:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8338:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8351:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8351:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8356:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8356:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8347:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8347:3:6"
																		},
																		"nativeSrc": "8347:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8347:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8342:1:6",
																			"nodeType": "YulTypedName",
																			"src": "8342:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8375:30:6",
																	"nodeType": "YulAssignment",
																	"src": "8375:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8387:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8387:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8398:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8398:2:6",
																						"type": "",
																						"value": "53"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8402:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8402:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8394:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8394:3:6"
																				},
																				"nativeSrc": "8394:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8394:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8384:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8384:2:6"
																		},
																		"nativeSrc": "8384:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8384:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8375:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8375:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8422:14:6",
																	"nodeType": "YulAssignment",
																	"src": "8422:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8431:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8431:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8434:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8434:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8427:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:6"
																		},
																		"nativeSrc": "8427:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8427:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8422:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8422:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8375:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8387:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8297:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8315:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8318:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8356:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8422:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8434:1:6",
																"valueSize": 1
															}
														],
														"id": 2199,
														"nodeType": "InlineAssembly",
														"src": "8270:180:6"
													},
													{
														"AST": {
															"nativeSrc": "8472:171:6",
															"nodeType": "YulBlock",
															"src": "8472:171:6",
															"statements": [
																{
																	"nativeSrc": "8490:24:6",
																	"nodeType": "YulAssignment",
																	"src": "8490:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8499:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8499:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8508:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8508:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8511:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8511:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8504:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8504:3:6"
																				},
																				"nativeSrc": "8504:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8504:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8495:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8495:3:6"
																		},
																		"nativeSrc": "8495:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8495:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8490:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8490:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8531:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8531:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8544:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8544:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8549:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8549:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8540:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8540:3:6"
																		},
																		"nativeSrc": "8540:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8540:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8535:1:6",
																			"nodeType": "YulTypedName",
																			"src": "8535:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8568:30:6",
																	"nodeType": "YulAssignment",
																	"src": "8568:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8580:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8580:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8591:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8591:2:6",
																						"type": "",
																						"value": "52"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8595:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8595:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8587:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8587:3:6"
																				},
																				"nativeSrc": "8587:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8587:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8577:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8577:2:6"
																		},
																		"nativeSrc": "8577:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8568:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8568:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8615:14:6",
																	"nodeType": "YulAssignment",
																	"src": "8615:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8624:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8624:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8627:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8627:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8620:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:6"
																		},
																		"nativeSrc": "8620:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8620:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8615:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8615:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8568:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8580:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8490:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8508:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8511:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8549:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8615:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8627:1:6",
																"valueSize": 1
															}
														],
														"id": 2200,
														"nodeType": "InlineAssembly",
														"src": "8463:180:6"
													},
													{
														"AST": {
															"nativeSrc": "8665:171:6",
															"nodeType": "YulBlock",
															"src": "8665:171:6",
															"statements": [
																{
																	"nativeSrc": "8683:24:6",
																	"nodeType": "YulAssignment",
																	"src": "8683:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8692:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8692:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8701:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8701:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8704:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8704:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8697:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8697:3:6"
																				},
																				"nativeSrc": "8697:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8697:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8688:3:6"
																		},
																		"nativeSrc": "8688:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8688:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8683:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8683:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8724:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8724:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8737:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8737:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8742:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8742:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:6"
																		},
																		"nativeSrc": "8733:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8733:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8728:1:6",
																			"nodeType": "YulTypedName",
																			"src": "8728:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8761:30:6",
																	"nodeType": "YulAssignment",
																	"src": "8761:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8773:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8773:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8784:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8784:2:6",
																						"type": "",
																						"value": "51"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8788:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8788:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8780:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8780:3:6"
																				},
																				"nativeSrc": "8780:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8780:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8770:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8770:2:6"
																		},
																		"nativeSrc": "8770:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8770:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8761:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8761:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8808:14:6",
																	"nodeType": "YulAssignment",
																	"src": "8808:14:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8817:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8817:1:6"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8820:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8820:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8813:3:6"
																		},
																		"nativeSrc": "8813:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8813:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8808:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8808:1:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8761:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8773:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8683:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8701:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8704:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8742:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8808:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8820:1:6",
																"valueSize": 1
															}
														],
														"id": 2201,
														"nodeType": "InlineAssembly",
														"src": "8656:180:6"
													},
													{
														"AST": {
															"nativeSrc": "8858:140:6",
															"nodeType": "YulBlock",
															"src": "8858:140:6",
															"statements": [
																{
																	"nativeSrc": "8876:24:6",
																	"nodeType": "YulAssignment",
																	"src": "8876:24:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8885:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8885:3:6",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8894:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8894:1:6"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8897:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8897:1:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8890:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8890:3:6"
																				},
																				"nativeSrc": "8890:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8890:9:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8881:3:6"
																		},
																		"nativeSrc": "8881:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8881:19:6"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8876:1:6",
																			"nodeType": "YulIdentifier",
																			"src": "8876:1:6"
																		}
																	]
																},
																{
																	"nativeSrc": "8917:20:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8917:20:6",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8930:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8930:3:6",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8935:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8935:1:6"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8926:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8926:3:6"
																		},
																		"nativeSrc": "8926:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8926:11:6"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8921:1:6",
																			"nodeType": "YulTypedName",
																			"src": "8921:1:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8954:30:6",
																	"nodeType": "YulAssignment",
																	"src": "8954:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8966:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8966:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8977:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8977:2:6",
																						"type": "",
																						"value": "50"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8981:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8981:1:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8973:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8973:3:6"
																				},
																				"nativeSrc": "8973:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8973:10:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8963:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8963:2:6"
																		},
																		"nativeSrc": "8963:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8954:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8954:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "constantinople",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8954:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "8966:5:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8876:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8894:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8897:1:6",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "8935:1:6",
																"valueSize": 1
															}
														],
														"id": 2202,
														"nodeType": "InlineAssembly",
														"src": "8849:149:6"
													},
													{
														"assignments": [
															2204
														],
														"declarations": [
															{
																"constant": false,
																"id": 2204,
																"mutability": "mutable",
																"name": "log_sqrt10001",
																"nameLocation": "9019:13:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "9012:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2203,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9012:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2208,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2205,
																"name": "log_2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2178,
																"src": "9035:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "323535373338393538393939363033383236333437313431",
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9043:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255738958999603826347141_by_1",
																	"typeString": "int_const 255738958999603826347141"
																},
																"value": "255738958999603826347141"
															},
															"src": "9035:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9012:55:6"
													},
													{
														"assignments": [
															2210
														],
														"declarations": [
															{
																"constant": false,
																"id": 2210,
																"mutability": "mutable",
																"name": "tickLow",
																"nameLocation": "9106:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "9100:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"typeName": {
																	"id": 2209,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "9100:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2220,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2213,
																					"name": "log_sqrt10001",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2204,
																					"src": "9123:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																					"id": 2214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9139:37:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																						"typeString": "int_const 3402...(29 digits omitted)...7210"
																					},
																					"value": "3402992956809132418596140100660247210"
																				},
																				"src": "9123:53:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2216,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9122:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9181:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "9122:62:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9116:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int24_$",
																	"typeString": "type(int24)"
																},
																"typeName": {
																	"id": 2211,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "9116:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9116:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9100:85:6"
													},
													{
														"assignments": [
															2222
														],
														"declarations": [
															{
																"constant": false,
																"id": 2222,
																"mutability": "mutable",
																"name": "tickHi",
																"nameLocation": "9205:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2249,
																"src": "9199:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"typeName": {
																	"id": 2221,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "9199:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2232,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2225,
																					"name": "log_sqrt10001",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2204,
																					"src": "9221:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																					"id": 2226,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9237:39:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																						"typeString": "int_const 2913...(31 digits omitted)...8495"
																					},
																					"value": "291339464771989622907027621153398088495"
																				},
																				"src": "9221:55:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2228,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9220:57:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9281:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "9220:64:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int24_$",
																	"typeString": "type(int24)"
																},
																"typeName": {
																	"id": 2223,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "9214:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9214:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9199:86:6"
													},
													{
														"expression": {
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2233,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "9300:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2234,
																		"name": "tickLow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "9307:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2235,
																		"name": "tickHi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2222,
																		"src": "9318:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "9307:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2239,
																					"name": "tickHi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2222,
																					"src": "9356:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"id": 2238,
																				"name": "getSqrtRatioAtTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "9337:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																					"typeString": "function (int24) pure returns (uint160)"
																				}
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9337:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2241,
																			"name": "sqrtPriceX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "9367:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "9337:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2244,
																		"name": "tickLow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "9391:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "9337:61:6",
																	"trueExpression": {
																		"id": 2243,
																		"name": "tickHi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2222,
																		"src": "9382:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9307:91:6",
																"trueExpression": {
																	"id": 2237,
																	"name": "tickLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "9327:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "9300:98:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2248,
														"nodeType": "ExpressionStatement",
														"src": "9300:98:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "4150:408:6",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4572:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4599:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "4591:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2111,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:22:6"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4642:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "4636:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2114,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4636:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:12:6"
									},
									"scope": 2252,
									"src": "4563:4852:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2253,
							"src": "305:9112:6",
							"usedErrors": [
								1711,
								1713
							],
							"usedEvents": []
						}
					],
					"src": "45:9373:6"
				},
				"id": 6
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						],
						"FullMath": [
							186
						],
						"LiquidityAmounts": [
							2596
						]
					},
					"id": 2597,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2254,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"id": 2255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2597,
							"sourceUnit": 187,
							"src": "71:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
							"id": 2256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2597,
							"sourceUnit": 10,
							"src": "131:63:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityAmounts",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2257,
								"nodeType": "StructuredDocumentation",
								"src": "196:131:7",
								"text": "@title Liquidity amount functions\n @notice Provides functions for computing liquidity amounts from token amounts and prices"
							},
							"fullyImplemented": true,
							"id": 2596,
							"linearizedBaseContracts": [
								2596
							],
							"name": "LiquidityAmounts",
							"nameLocation": "335:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "570:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "589:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2269,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2260,
																					"src": "601:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "593:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2267,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "593:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "593:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "589:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 2272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "588:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2273,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "608:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "588:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "580:30:7"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "358:144:7",
										"text": "@notice Downcasts uint256 to uint128\n @param x The uint258 to be downcasted\n @return y The passed value, downcasted to uint128"
									},
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "516:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "534:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "526:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:11:7"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "567:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "559:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2262,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:11:7"
									},
									"scope": 2596,
									"src": "507:110:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "1252:342:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2290,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "1266:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2291,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2283,
														"src": "1282:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1266:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2301,
												"nodeType": "IfStatement",
												"src": "1262:98:7",
												"trueBody": {
													"expression": {
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2293,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "1298:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2294,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "1313:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1297:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2296,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "1331:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2297,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "1346:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2298,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1330:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1297:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2300,
													"nodeType": "ExpressionStatement",
													"src": "1297:63:7"
												}
											},
											{
												"assignments": [
													2303
												],
												"declarations": [
													{
														"constant": false,
														"id": 2303,
														"mutability": "mutable",
														"name": "intermediate",
														"nameLocation": "1378:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "1370:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2302,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1370:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2311,
												"initialValue": {
													"arguments": [
														{
															"id": 2306,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "1409:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 2307,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "1424:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2308,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1439:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1452:3:7",
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "1439:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2304,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1393:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1402:6:7",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1393:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1370:86:7"
											},
											{
												"id": 2323,
												"nodeType": "UncheckedBlock",
												"src": "1466:122:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2315,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2285,
																			"src": "1523:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2316,
																			"name": "intermediate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2303,
																			"src": "1532:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2317,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "1546:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2318,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2281,
																				"src": "1562:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "1546:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"expression": {
																			"id": 2313,
																			"name": "FullMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "1507:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																				"typeString": "type(library FullMath)"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1516:6:7",
																		"memberName": "mulDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "1507:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2312,
																"name": "toUint128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "1497:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256) pure returns (uint128)"
																}
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1497:80:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 2289,
														"id": 2322,
														"nodeType": "Return",
														"src": "1490:87:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "623:457:7",
										"text": "@notice Computes the amount of liquidity received for a given amount of token0 and price range\n @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount0 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount0",
									"nameLocation": "1094:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "1134:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1126:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2280,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "1165:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1157:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2282,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1196:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1188:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:93:7"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1241:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1233:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2287,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:19:7"
									},
									"scope": 2596,
									"src": "1085:509:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2362,
										"nodeType": "Block",
										"src": "2200:250:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2337,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "2214:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2338,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "2230:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2214:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2348,
												"nodeType": "IfStatement",
												"src": "2210:98:7",
												"trueBody": {
													"expression": {
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2340,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "2246:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2341,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "2261:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2342,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2245:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2343,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "2279:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2344,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "2294:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2345,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2278:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "2245:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2347,
													"nodeType": "ExpressionStatement",
													"src": "2245:63:7"
												}
											},
											{
												"id": 2361,
												"nodeType": "UncheckedBlock",
												"src": "2318:126:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2352,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "2375:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 2353,
																				"name": "FixedPoint96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "2384:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																					"typeString": "type(library FixedPoint96)"
																				}
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2397:3:7",
																			"memberName": "Q96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 8,
																			"src": "2384:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2330,
																				"src": "2402:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2356,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2328,
																				"src": "2418:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "2402:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"expression": {
																			"id": 2350,
																			"name": "FullMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "2359:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																				"typeString": "type(library FullMath)"
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2368:6:7",
																		"memberName": "mulDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "2359:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2359:73:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2349,
																"name": "toUint128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "2349:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256) pure returns (uint128)"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2349:84:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 2336,
														"id": 2360,
														"nodeType": "Return",
														"src": "2342:91:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "1600:428:7",
										"text": "@notice Computes the amount of liquidity received for a given amount of token1 and price range\n @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount1 The amount1 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount1",
									"nameLocation": "2042:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "2082:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2074:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2327,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "2113:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2105:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2329,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2144:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2136:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:93:7"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2189:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "2181:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2334,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:19:7"
									},
									"scope": 2596,
									"src": "2033:417:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "3272:679:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2379,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "3286:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2380,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "3302:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3286:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2390,
												"nodeType": "IfStatement",
												"src": "3282:98:7",
												"trueBody": {
													"expression": {
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2382,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "3318:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2383,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "3333:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2384,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "3317:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2385,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "3351:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2386,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "3366:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3350:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "3317:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2389,
													"nodeType": "ExpressionStatement",
													"src": "3317:63:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2391,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "3395:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2392,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "3411:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3395:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2403,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "3534:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2404,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "3549:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "3534:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2440,
														"nodeType": "Block",
														"src": "3847:98:7",
														"statements": [
															{
																"expression": {
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2432,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "3861:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2434,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "3896:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2435,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2370,
																				"src": "3911:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2436,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "3926:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2433,
																			"name": "getLiquidityForAmount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2363,
																			"src": "3873:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																				"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																			}
																		},
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3873:61:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3861:73:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2439,
																"nodeType": "ExpressionStatement",
																"src": "3861:73:7"
															}
														]
													},
													"id": 2441,
													"nodeType": "IfStatement",
													"src": "3530:415:7",
													"trueBody": {
														"id": 2431,
														"nodeType": "Block",
														"src": "3564:277:7",
														"statements": [
															{
																"assignments": [
																	2407
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2407,
																		"mutability": "mutable",
																		"name": "liquidity0",
																		"nameLocation": "3586:10:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 2431,
																		"src": "3578:18:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2406,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3578:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2413,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2409,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "3622:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2410,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2370,
																			"src": "3636:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2411,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "3651:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2408,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "3599:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3599:60:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3578:81:7"
															},
															{
																"assignments": [
																	2415
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2415,
																		"mutability": "mutable",
																		"name": "liquidity1",
																		"nameLocation": "3681:10:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 2431,
																		"src": "3673:18:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2414,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3673:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2421,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2417,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "3717:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2418,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "3732:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2419,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "3746:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2416,
																		"name": "getLiquidityForAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "3694:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3694:60:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3673:81:7"
															},
															{
																"expression": {
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2422,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "3769:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2423,
																				"name": "liquidity0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2407,
																				"src": "3781:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2424,
																				"name": "liquidity1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2415,
																				"src": "3794:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3781:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 2427,
																			"name": "liquidity1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "3820:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3781:49:7",
																		"trueExpression": {
																			"id": 2426,
																			"name": "liquidity0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "3807:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3769:61:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2430,
																"nodeType": "ExpressionStatement",
																"src": "3769:61:7"
															}
														]
													}
												},
												"id": 2442,
												"nodeType": "IfStatement",
												"src": "3391:554:7",
												"trueBody": {
													"id": 2402,
													"nodeType": "Block",
													"src": "3426:98:7",
													"statements": [
														{
															"expression": {
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2394,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2377,
																	"src": "3440:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2396,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "3475:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2397,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2370,
																			"src": "3490:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2398,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "3505:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2395,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "3452:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3452:61:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3440:73:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 2401,
															"nodeType": "ExpressionStatement",
															"src": "3440:73:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "2456:589:7",
										"text": "@notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount of token0 being sent in\n @param amount1 The amount of token1 being sent in\n @return liquidity The maximum amount of liquidity received"
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmounts",
									"nameLocation": "3059:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "3099:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3091:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2365,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "3129:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3121:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2367,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "3160:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3152:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2369,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3191:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3183:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3216:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3208:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:148:7"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3261:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3253:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2376,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:19:7"
									},
									"scope": 2596,
									"src": "3050:901:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "4476:389:7",
										"statements": [
											{
												"id": 2485,
												"nodeType": "UncheckedBlock",
												"src": "4486:373:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2456,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "4514:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2457,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "4530:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "4514:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2467,
														"nodeType": "IfStatement",
														"src": "4510:98:7",
														"trueBody": {
															"expression": {
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2459,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2447,
																			"src": "4546:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2460,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2449,
																			"src": "4561:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "4545:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																		"typeString": "tuple(uint160,uint160)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 2462,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2449,
																			"src": "4579:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2463,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2447,
																			"src": "4594:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4578:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																		"typeString": "tuple(uint160,uint160)"
																	}
																},
																"src": "4545:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2466,
															"nodeType": "ExpressionStatement",
															"src": "4545:63:7"
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2472,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2451,
																					"src": "4691:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4683:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2470,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4683:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4683:18:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"expression": {
																				"id": 2474,
																				"name": "FixedPoint96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "4705:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																					"typeString": "type(library FixedPoint96)"
																				}
																			},
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4718:10:7",
																			"memberName": "RESOLUTION",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5,
																			"src": "4705:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4683:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2477,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2449,
																			"src": "4750:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2478,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2447,
																			"src": "4766:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "4750:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 2480,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "4801:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"id": 2468,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "4646:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4655:6:7",
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "4646:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4646:186:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2482,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "4835:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "4646:202:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2455,
														"id": 2484,
														"nodeType": "Return",
														"src": "4623:225:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "3957:347:7",
										"text": "@notice Computes the amount of token0 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0"
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0ForLiquidity",
									"nameLocation": "4318:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "4358:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "4350:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2446,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "4389:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "4381:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2448,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4420:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "4412:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2450,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:95:7"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "4459:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:17:7"
									},
									"scope": 2596,
									"src": "4309:556:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2522,
										"nodeType": "Block",
										"src": "5390:242:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2499,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "5404:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2500,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2492,
														"src": "5420:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "5404:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2510,
												"nodeType": "IfStatement",
												"src": "5400:98:7",
												"trueBody": {
													"expression": {
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2502,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "5436:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2503,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "5451:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2504,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "5435:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2505,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "5469:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2506,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "5484:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2507,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5468:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "5435:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2509,
													"nodeType": "ExpressionStatement",
													"src": "5435:63:7"
												}
											},
											{
												"id": 2521,
												"nodeType": "UncheckedBlock",
												"src": "5509:117:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2513,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "5556:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2514,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "5567:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2515,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2490,
																		"src": "5583:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "5567:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"expression": {
																		"id": 2517,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "5598:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5611:3:7",
																	"memberName": "Q96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "5598:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2511,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5540:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5549:6:7",
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "5540:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5540:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2498,
														"id": 2520,
														"nodeType": "Return",
														"src": "5533:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "4871:347:7",
										"text": "@notice Computes the amount of token1 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount1 The amount of token1"
									},
									"id": 2523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1ForLiquidity",
									"nameLocation": "5232:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "5272:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5264:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2489,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "5303:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5295:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2491,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5334:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5326:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2493,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5254:95:7"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5381:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5373:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:17:7"
									},
									"scope": 2596,
									"src": "5223:409:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "6387:585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2539,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "6401:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2540,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2530,
														"src": "6417:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6401:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2550,
												"nodeType": "IfStatement",
												"src": "6397:98:7",
												"trueBody": {
													"expression": {
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2542,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "6433:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2543,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "6448:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2544,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "6432:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2545,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "6466:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2546,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "6481:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2547,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6465:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "6432:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2549,
													"nodeType": "ExpressionStatement",
													"src": "6432:63:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2551,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2526,
														"src": "6510:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2552,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "6526:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6510:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2563,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "6649:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2564,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "6664:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "6649:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2591,
														"nodeType": "Block",
														"src": "6868:98:7",
														"statements": [
															{
																"expression": {
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2583,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2537,
																		"src": "6882:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2585,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2528,
																				"src": "6915:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2586,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2530,
																				"src": "6930:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2587,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2532,
																				"src": "6945:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2584,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "6892:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6892:63:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6882:73:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2590,
																"nodeType": "ExpressionStatement",
																"src": "6882:73:7"
															}
														]
													},
													"id": 2592,
													"nodeType": "IfStatement",
													"src": "6645:321:7",
													"trueBody": {
														"id": 2582,
														"nodeType": "Block",
														"src": "6679:183:7",
														"statements": [
															{
																"expression": {
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2566,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2535,
																		"src": "6693:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2568,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2526,
																				"src": "6726:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2569,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2530,
																				"src": "6740:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2570,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2532,
																				"src": "6755:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2567,
																			"name": "getAmount0ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2487,
																			"src": "6703:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6703:62:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6693:72:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2573,
																"nodeType": "ExpressionStatement",
																"src": "6693:72:7"
															},
															{
																"expression": {
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2574,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2537,
																		"src": "6779:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2576,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2528,
																				"src": "6812:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2577,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2526,
																				"src": "6827:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2578,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2532,
																				"src": "6841:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2575,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "6789:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6789:62:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6779:72:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2581,
																"nodeType": "ExpressionStatement",
																"src": "6779:72:7"
															}
														]
													}
												},
												"id": 2593,
												"nodeType": "IfStatement",
												"src": "6506:460:7",
												"trueBody": {
													"id": 2562,
													"nodeType": "Block",
													"src": "6541:98:7",
													"statements": [
														{
															"expression": {
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2554,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2535,
																	"src": "6555:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2556,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "6588:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2557,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2530,
																			"src": "6603:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2558,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "6618:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2555,
																		"name": "getAmount0ForLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2487,
																		"src": "6565:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6565:63:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6555:73:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2561,
															"nodeType": "ExpressionStatement",
															"src": "6555:73:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "5638:530:7",
										"text": "@notice Computes the token0 and token1 value for a given amount of liquidity, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsForLiquidity",
									"nameLocation": "6182:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "6222:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6214:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2525,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "6252:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6244:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2527,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6244:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "6283:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6275:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2529,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6314:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6306:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2531,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6204:125:7"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6361:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6353:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6353:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6378:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "6370:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6352:34:7"
									},
									"scope": 2596,
									"src": "6173:799:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2597,
							"src": "327:6647:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6930:7"
				},
				"id": 7
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							2642
						]
					},
					"id": 2643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2642,
							"linearizedBaseContracts": [
								2642
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:8"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "136:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2600,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:8"
									},
									"scope": 2642,
									"src": "93:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 2608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:8"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "193:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2605,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:8"
									},
									"scope": 2642,
									"src": "147:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 2613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:8"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "254:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:8"
									},
									"scope": 2642,
									"src": "212:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 2628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "500:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2614,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:8"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "559:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2617,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "581:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2619,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "602:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "627:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "652:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2625,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:8"
									},
									"scope": 2642,
									"src": "478:203:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 2641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "694:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:8"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "761:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "754:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2630,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "783:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "776:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2632,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "805:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "797:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "830:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "822:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "854:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "847:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2638,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:129:8"
									},
									"scope": 2642,
									"src": "685:191:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2643,
							"src": "57:821:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:847:8"
				},
				"id": 8
			}
		}
	}
}