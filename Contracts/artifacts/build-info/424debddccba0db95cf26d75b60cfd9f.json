{
	"id": "424debddccba0db95cf26d75b60cfd9f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/VaultFactoryImplementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/**\n * @title VaultFactoryImplementation\n * @notice A UUPS-upgradeable factory contract that deploys new Vault proxies,\n *         each vault manages a Uniswap V3 position. The factory:\n *         1. References a single VaultImplementation (logic) address.\n *         2. Deploys ERC1967Proxy proxies pointing to that logic for each new vault.\n *         3. Optionally stores default addresses for OracleManager, Rebalancer, and Liquidator,\n *            which can be overridden at vault creation if desired.\n *         4. Maintains an array of all deployed vault addresses.\n *         5. Can be upgraded (UUPS) by its owner if new functionality or fixes are required.\n *         6. Integrates easily with a Timelock or direct calls for upgrade scheduling.\n *\n *         This file is a fully expanded version of the VaultFactoryImplementation, \n *         corrected to address the TypeError regarding __Ownable_init arguments.\n *\n *         NOTE: If your version of OpenZeppelin's OwnableUpgradeable requires no parameters\n *               for __Ownable_init(), you can revert to calling __Ownable_init().\n *               If you are using a custom version that requires the owner address\n *               (e.g., __Ownable_init(address) ), pass the necessary parameter.\n *\n *         For demonstration, we assume you have a custom Ownable that wants one argument \n *         in __Ownable_init(...). Adjust as needed for your actual environment.\n */\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev Minimal interface for the logic contract (VaultImplementation).\n *      Used by the factory to call `initialize(...)` upon proxy creation.\n */\ninterface IVaultImplementation {\n    function initialize(\n        address _v3Pool,\n        address _positionManager,\n        address _oracleMgr,\n        address _rebalancer,\n        address _liquidator,\n        address _owner,\n        string memory _name,\n        string memory _symbol\n    ) external;\n}\n\n/**\n * @title VaultFactoryImplementation\n * @dev A UUPS-upgradeable factory for creating new vault proxies.\n */\ncontract VaultFactoryImplementation is\n    Initializable,\n    OwnableUpgradeable,\n    UUPSUpgradeable\n{\n    /**\n     * @dev The address of the deployed VaultImplementation (logic) contract.\n     */\n    address public vaultLogic;\n\n    /**\n     * @dev Default references for external contracts if the user doesn't specify them.\n     */\n    address public defaultOracleManager;\n    address public defaultRebalancer;\n    address public defaultLiquidator;\n\n    /**\n     * @dev Array of all vault proxies created by this factory.\n     */\n    address[] public allVaults;\n\n    /**\n     * @dev Emitted when a new vault proxy is created.\n     */\n    event VaultCreated(\n        address indexed vaultProxy,\n        address indexed creator,\n        address indexed v3Pool\n    );\n\n    /**\n     * @dev Emitted when the factory's default references are updated.\n     */\n    event DefaultsUpdated(\n        address oracleManager,\n        address rebalancer,\n        address liquidator\n    );\n\n    /**\n     * @notice Initializes the factory. Called once at deployment behind its own proxy.\n     *         If your OwnableUpgradeable requires an argument for __Ownable_init, provide it here.\n     *\n     * @param _vaultLogic   The deployed VaultImplementation logic contract\n     * @param _owner        The owner (often a DAO or deployer)\n     */\n    function initialize(address _vaultLogic, address _owner) external initializer {\n        // If your version of OwnableUpgradeable wants no args, do: __Ownable_init();\n        // If it wants an address argument, do:\n        __Ownable_init(_owner);\n\n        __UUPSUpgradeable_init();\n\n        require(_vaultLogic != address(0), \"VaultFactory: invalid vaultLogic\");\n        vaultLogic = _vaultLogic;\n    }\n\n    /**\n     * @dev Required by UUPS pattern. Only the contract owner can authorize an upgrade.\n     */\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n\n    /**\n     * @notice Sets a new logic contract address for future vaults (if you want to upgrade).\n     * @param newVaultLogic The new VaultImplementation logic contract\n     */\n    function setVaultLogic(address newVaultLogic) external onlyOwner {\n        require(newVaultLogic != address(0), \"VaultFactory: invalid logic\");\n        vaultLogic = newVaultLogic;\n    }\n\n    /**\n     * @notice Sets the default OracleManager, Rebalancer, and Liquidator addresses for the factory.\n     *         Users can override these when creating a new vault by passing non-zero addresses.\n     * @param _oracleManager   Address of the default OracleManager\n     * @param _rebalancer      Address of the default Rebalancer\n     * @param _liquidator      Address of the default Liquidator\n     */\n    function setDefaultReferences(\n        address _oracleManager,\n        address _rebalancer,\n        address _liquidator\n    ) external onlyOwner {\n        require(_oracleManager != address(0), \"VaultFactory: invalid oracle\");\n        require(_rebalancer != address(0), \"VaultFactory: invalid rebalancer\");\n        require(_liquidator != address(0), \"VaultFactory: invalid liquidator\");\n\n        defaultOracleManager = _oracleManager;\n        defaultRebalancer = _rebalancer;\n        defaultLiquidator = _liquidator;\n\n        emit DefaultsUpdated(_oracleManager, _rebalancer, _liquidator);\n    }\n\n    /**\n     * @notice Deploys a new vault proxy pointing to `vaultLogic`. The caller becomes the vault's owner.\n     *\n     * @param v3Pool        The Uniswap V3 pool address for the vault\n     * @param positionMgr   The NonfungiblePositionManager used by the vault\n     * @param oracleMgr     OracleManager (or zero for default)\n     * @param rebalancer    Rebalancer (or zero for default)\n     * @param liquidator    Liquidator (or zero for default)\n     * @param name          The ERC20 name for the vault shares\n     * @param symbol        The ERC20 symbol for the vault shares\n     * @return proxyAddr    The address of the newly deployed vault proxy\n     */\n    function createVault(\n        address v3Pool,\n        address positionMgr,\n        address oracleMgr,\n        address rebalancer,\n        address liquidator,\n        string calldata name,\n        string calldata symbol\n    ) external returns (address proxyAddr) {\n        require(v3Pool != address(0), \"VaultFactory: invalid v3Pool\");\n        require(positionMgr != address(0), \"VaultFactory: invalid positionMgr\");\n\n        // If zero is passed, fallback to defaults\n        address finalOracle = (oracleMgr == address(0)) ? defaultOracleManager : oracleMgr;\n        address finalRebalancer = (rebalancer == address(0)) ? defaultRebalancer : rebalancer;\n        address finalLiquidator = (liquidator == address(0)) ? defaultLiquidator : liquidator;\n\n        require(finalOracle != address(0), \"VaultFactory: no oracle\");\n        require(finalRebalancer != address(0), \"VaultFactory: no rebalancer\");\n        require(finalLiquidator != address(0), \"VaultFactory: no liquidator\");\n\n        // Prepare initializer data for the vault\n        bytes memory initData = abi.encodeWithSelector(\n            IVaultImplementation.initialize.selector,\n            v3Pool,\n            positionMgr,\n            finalOracle,\n            finalRebalancer,\n            finalLiquidator,\n            msg.sender, // the vault owner\n            name,\n            symbol\n        );\n\n        // Deploy a new ERC1967Proxy with the above init data\n        ERC1967Proxy proxy = new ERC1967Proxy(vaultLogic, initData);\n        proxyAddr = address(proxy);\n\n        // Track it\n        allVaults.push(proxyAddr);\n\n        emit VaultCreated(proxyAddr, msg.sender, v3Pool);\n    }\n\n    /**\n     * @notice Returns the number of vaults created by this factory.\n     */\n    function vaultCount() external view returns (uint256) {\n        return allVaults.length;\n    }\n\n    /**\n     * @notice Retrieve a vault address by index in the `allVaults` array.\n     */\n    function getVault(uint256 index) external view returns (address) {\n        require(index < allVaults.length, \"VaultFactory: out of range\");\n        return allVaults[index];\n    }\n\n    /**\n     * @notice Returns the entire list of vault addresses. \n     *         Use with care if the array is large.\n     */\n    function getAllVaults() external view returns (address[] memory) {\n        return allVaults;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_5\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1185:1199  implementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1201:1206  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_6\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  tag_9\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n  tag_10\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  tag_12\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n  tag_13\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  tag_15\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n  tag_16\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_28\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_27)\ntag_28:\n  0x60\n  swap2\n  pop\ntag_27:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_29\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n  tag_30\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\ntag_16:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  tag_36\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n  tag_37\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_39\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  tag_19\n    /* \"#utility.yul\":1488:1691   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\ntag_37:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_45:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_46:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_50:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_50)\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1483   */\ntag_2:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  0x00\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_54:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_55:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":771:801   */\n  dup2\n  gt\n    /* \"#utility.yul\":768:818   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":814:815   */\n  0x00\n    /* \"#utility.yul\":811:812   */\n  0x00\n    /* \"#utility.yul\":804:816   */\n  revert\n    /* \"#utility.yul\":768:818   */\ntag_56:\n    /* \"#utility.yul\":837:859   */\n  dup4\n  add\n    /* \"#utility.yul\":890:894   */\n  0x1f\n    /* \"#utility.yul\":882:895   */\n  dup2\n  add\n    /* \"#utility.yul\":878:905   */\n  dup6\n  sgt\n    /* \"#utility.yul\":868:923   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":919:920   */\n  0x00\n    /* \"#utility.yul\":916:917   */\n  0x00\n    /* \"#utility.yul\":909:921   */\n  revert\n    /* \"#utility.yul\":868:923   */\ntag_57:\n    /* \"#utility.yul\":946:955   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":967:997   */\n  dup2\n  gt\n    /* \"#utility.yul\":964:1020   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1000:1018   */\n  tag_59\n  tag_45\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1049:1051   */\n  0x40\n    /* \"#utility.yul\":1043:1052   */\n  mload\n    /* \"#utility.yul\":1141:1143   */\n  0x1f\n    /* \"#utility.yul\":1103:1120   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1099:1130   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1132:1134   */\n  0x3f\n    /* \"#utility.yul\":1095:1135   */\n  add\n    /* \"#utility.yul\":1091:1145   */\n  and\n    /* \"#utility.yul\":1079:1146   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1161:1195   */\n  dup2\n  gt\n    /* \"#utility.yul\":1197:1219   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":1158:1220   */\n  or\n    /* \"#utility.yul\":1155:1243   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1223:1241   */\n  tag_61\n  tag_45\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1259:1261   */\n  0x40\n    /* \"#utility.yul\":1252:1274   */\n  mstore\n    /* \"#utility.yul\":1283:1305   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":1324:1339   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":1341:1343   */\n  0x20\n    /* \"#utility.yul\":1320:1344   */\n  add\n    /* \"#utility.yul\":1317:1354   */\n  dup8\n  lt\n    /* \"#utility.yul\":1314:1371   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1367:1368   */\n  0x00\n    /* \"#utility.yul\":1364:1365   */\n  0x00\n    /* \"#utility.yul\":1357:1369   */\n  revert\n    /* \"#utility.yul\":1314:1371   */\ntag_62:\n    /* \"#utility.yul\":1380:1452   */\n  tag_63\n    /* \"#utility.yul\":1445:1451   */\n  dup3\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"#utility.yul\":1432:1438   */\n  dup4\n    /* \"#utility.yul\":1428:1443   */\n  add\n    /* \"#utility.yul\":1423:1425   */\n  0x20\n    /* \"#utility.yul\":1419:1421   */\n  dup7\n    /* \"#utility.yul\":1415:1426   */\n  add\n    /* \"#utility.yul\":1380:1452   */\n  tag_46\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1471:1477   */\n  dup1\n    /* \"#utility.yul\":1461:1477   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1483   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1696:1983   */\ntag_25:\n    /* \"#utility.yul\":1825:1828   */\n  0x00\n    /* \"#utility.yul\":1863:1869   */\n  dup3\n    /* \"#utility.yul\":1857:1870   */\n  mload\n    /* \"#utility.yul\":1879:1945   */\n  tag_66\n    /* \"#utility.yul\":1938:1944   */\n  dup2\n    /* \"#utility.yul\":1933:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1930   */\n  0x20\n    /* \"#utility.yul\":1918:1924   */\n  dup8\n    /* \"#utility.yul\":1914:1931   */\n  add\n    /* \"#utility.yul\":1879:1945   */\n  tag_46\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1961:1977   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1696:1983   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_47:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_732": {
									"entryPoint": null,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_1038": {
									"entryPoint": 383,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1343": {
									"entryPoint": 511,
									"id": 1343,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_818": {
									"entryPoint": 145,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1261": {
									"entryPoint": 268,
									"id": 1261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_854": {
									"entryPoint": 51,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1301": {
									"entryPoint": 416,
									"id": 1301,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1985:14",
										"nodeType": "YulBlock",
										"src": "0:1985:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:14",
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:14",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:14",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:14",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nativeSrc": "66:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nativeSrc": "56:31:14",
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nativeSrc": "56:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:14",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:14",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nativeSrc": "96:15:14",
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nativeSrc": "96:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:14",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:14",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nativeSrc": "120:15:14",
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nativeSrc": "120:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nativeSrc": "212:184:14",
													"nodeType": "YulBlock",
													"src": "212:184:14",
													"statements": [
														{
															"nativeSrc": "222:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:14",
																"nodeType": "YulLiteral",
																"src": "231:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "226:1:14",
																	"nodeType": "YulTypedName",
																	"src": "226:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "291:63:14",
																"nodeType": "YulBlock",
																"src": "291:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "316:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "321:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "312:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:14"
																					},
																					"nativeSrc": "312:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "335:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "340:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "331:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:14"
																							},
																							"nativeSrc": "331:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "325:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:14"
																					},
																					"nativeSrc": "325:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "305:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:14"
																			},
																			"nativeSrc": "305:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:14"
																		},
																		"nativeSrc": "305:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "252:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "255:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "249:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:14"
																},
																"nativeSrc": "249:13:14",
																"nodeType": "YulFunctionCall",
																"src": "249:13:14"
															},
															"nativeSrc": "241:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "263:19:14",
																"nodeType": "YulBlock",
																"src": "263:19:14",
																"statements": [
																	{
																		"nativeSrc": "265:15:14",
																		"nodeType": "YulAssignment",
																		"src": "265:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "274:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:2:14",
																					"nodeType": "YulLiteral",
																					"src": "277:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "270:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:14"
																			},
																			"nativeSrc": "270:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "265:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "245:3:14",
																"nodeType": "YulBlock",
																"src": "245:3:14",
																"statements": []
															},
															"src": "241:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "374:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "379:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "370:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:14"
																		},
																		"nativeSrc": "370:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "388:1:14",
																		"nodeType": "YulLiteral",
																		"src": "388:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "363:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:14"
																},
																"nativeSrc": "363:27:14",
																"nodeType": "YulFunctionCall",
																"src": "363:27:14"
															},
															"nativeSrc": "363:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "363:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "146:250:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "190:3:14",
														"nodeType": "YulTypedName",
														"src": "190:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "195:3:14",
														"nodeType": "YulTypedName",
														"src": "195:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "200:6:14",
														"nodeType": "YulTypedName",
														"src": "200:6:14",
														"type": ""
													}
												],
												"src": "146:250:14"
											},
											{
												"body": {
													"nativeSrc": "508:975:14",
													"nodeType": "YulBlock",
													"src": "508:975:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "554:16:14",
																"nodeType": "YulBlock",
																"src": "554:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "563:1:14",
																					"nodeType": "YulLiteral",
																					"src": "563:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "566:1:14",
																					"nodeType": "YulLiteral",
																					"src": "566:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "556:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:14"
																			},
																			"nativeSrc": "556:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:14"
																		},
																		"nativeSrc": "556:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "529:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "538:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "525:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:14"
																		},
																		"nativeSrc": "525:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:14",
																		"nodeType": "YulLiteral",
																		"src": "550:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "521:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:14"
																},
																"nativeSrc": "521:32:14",
																"nodeType": "YulFunctionCall",
																"src": "521:32:14"
															},
															"nativeSrc": "518:52:14",
															"nodeType": "YulIf",
															"src": "518:52:14"
														},
														{
															"nativeSrc": "579:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "579:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "598:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "592:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:14"
																},
																"nativeSrc": "592:16:14",
																"nodeType": "YulFunctionCall",
																"src": "592:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "583:5:14",
																	"nodeType": "YulTypedName",
																	"src": "583:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "671:16:14",
																"nodeType": "YulBlock",
																"src": "671:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "683:1:14",
																					"nodeType": "YulLiteral",
																					"src": "683:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "673:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:14"
																			},
																			"nativeSrc": "673:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:14"
																		},
																		"nativeSrc": "673:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "630:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "641:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "641:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "656:3:14",
																										"nodeType": "YulLiteral",
																										"src": "656:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "661:1:14",
																										"nodeType": "YulLiteral",
																										"src": "661:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "652:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "652:3:14"
																								},
																								"nativeSrc": "652:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "652:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "665:1:14",
																								"nodeType": "YulLiteral",
																								"src": "665:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "648:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:14"
																						},
																						"nativeSrc": "648:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "648:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "637:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:14"
																				},
																				"nativeSrc": "637:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "637:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "627:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:14"
																		},
																		"nativeSrc": "627:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "627:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "620:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:14"
																},
																"nativeSrc": "620:50:14",
																"nodeType": "YulFunctionCall",
																"src": "620:50:14"
															},
															"nativeSrc": "617:70:14",
															"nodeType": "YulIf",
															"src": "617:70:14"
														},
														{
															"nativeSrc": "696:15:14",
															"nodeType": "YulAssignment",
															"src": "696:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "706:5:14",
																"nodeType": "YulIdentifier",
																"src": "706:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "696:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:14"
																}
															]
														},
														{
															"nativeSrc": "720:39:14",
															"nodeType": "YulVariableDeclaration",
															"src": "720:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "744:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "755:2:14",
																				"nodeType": "YulLiteral",
																				"src": "755:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "740:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:14"
																		},
																		"nativeSrc": "740:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "740:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "734:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:14"
																},
																"nativeSrc": "734:25:14",
																"nodeType": "YulFunctionCall",
																"src": "734:25:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "724:6:14",
																	"nodeType": "YulTypedName",
																	"src": "724:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "802:16:14",
																"nodeType": "YulBlock",
																"src": "802:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "811:1:14",
																					"nodeType": "YulLiteral",
																					"src": "811:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "814:1:14",
																					"nodeType": "YulLiteral",
																					"src": "814:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "804:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "804:6:14"
																			},
																			"nativeSrc": "804:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "804:12:14"
																		},
																		"nativeSrc": "804:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "774:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "790:2:14",
																						"nodeType": "YulLiteral",
																						"src": "790:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "794:1:14",
																						"nodeType": "YulLiteral",
																						"src": "794:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "786:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "786:3:14"
																				},
																				"nativeSrc": "786:10:14",
																				"nodeType": "YulFunctionCall",
																				"src": "786:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "798:1:14",
																				"nodeType": "YulLiteral",
																				"src": "798:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "782:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:14"
																		},
																		"nativeSrc": "782:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "771:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "771:2:14"
																},
																"nativeSrc": "771:30:14",
																"nodeType": "YulFunctionCall",
																"src": "771:30:14"
															},
															"nativeSrc": "768:50:14",
															"nodeType": "YulIf",
															"src": "768:50:14"
														},
														{
															"nativeSrc": "827:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "827:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "841:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "841:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "852:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "852:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "837:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:14"
																},
																"nativeSrc": "837:22:14",
																"nodeType": "YulFunctionCall",
																"src": "837:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "831:2:14",
																	"nodeType": "YulTypedName",
																	"src": "831:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "907:16:14",
																"nodeType": "YulBlock",
																"src": "907:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "916:1:14",
																					"nodeType": "YulLiteral",
																					"src": "916:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:14",
																					"nodeType": "YulLiteral",
																					"src": "919:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "909:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:14"
																			},
																			"nativeSrc": "909:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "909:12:14"
																		},
																		"nativeSrc": "909:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "909:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "886:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "886:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "890:4:14",
																						"nodeType": "YulLiteral",
																						"src": "890:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "882:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:14"
																				},
																				"nativeSrc": "882:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "882:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "897:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "897:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "878:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:14"
																		},
																		"nativeSrc": "878:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "878:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "871:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:14"
																},
																"nativeSrc": "871:35:14",
																"nodeType": "YulFunctionCall",
																"src": "871:35:14"
															},
															"nativeSrc": "868:55:14",
															"nodeType": "YulIf",
															"src": "868:55:14"
														},
														{
															"nativeSrc": "932:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "932:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "952:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "952:2:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "946:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:14"
																},
																"nativeSrc": "946:9:14",
																"nodeType": "YulFunctionCall",
																"src": "946:9:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "936:6:14",
																	"nodeType": "YulTypedName",
																	"src": "936:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "998:22:14",
																"nodeType": "YulBlock",
																"src": "998:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1000:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1000:16:14"
																			},
																			"nativeSrc": "1000:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1000:18:14"
																		},
																		"nativeSrc": "1000:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1000:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "970:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "986:2:14",
																						"nodeType": "YulLiteral",
																						"src": "986:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "990:1:14",
																						"nodeType": "YulLiteral",
																						"src": "990:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "982:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "982:3:14"
																				},
																				"nativeSrc": "982:10:14",
																				"nodeType": "YulFunctionCall",
																				"src": "982:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "994:1:14",
																				"nodeType": "YulLiteral",
																				"src": "994:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "978:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:14"
																		},
																		"nativeSrc": "978:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "978:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "967:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:14"
																},
																"nativeSrc": "967:30:14",
																"nodeType": "YulFunctionCall",
																"src": "967:30:14"
															},
															"nativeSrc": "964:56:14",
															"nodeType": "YulIf",
															"src": "964:56:14"
														},
														{
															"nativeSrc": "1029:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1049:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1043:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1043:5:14"
																},
																"nativeSrc": "1043:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1043:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1033:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1033:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1061:85:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1061:85:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1083:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1083:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "1107:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "1107:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1115:4:14",
																										"nodeType": "YulLiteral",
																										"src": "1115:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1103:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1103:3:14"
																								},
																								"nativeSrc": "1103:17:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1103:17:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1126:2:14",
																										"nodeType": "YulLiteral",
																										"src": "1126:2:14",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1122:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1122:3:14"
																								},
																								"nativeSrc": "1122:7:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1122:7:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1099:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1099:3:14"
																						},
																						"nativeSrc": "1099:31:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1099:31:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1132:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1132:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1095:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:14"
																				},
																				"nativeSrc": "1095:40:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1095:40:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1141:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1141:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1137:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:14"
																				},
																				"nativeSrc": "1137:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1091:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:14"
																		},
																		"nativeSrc": "1091:54:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1091:54:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1079:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:14"
																},
																"nativeSrc": "1079:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1079:67:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1065:10:14",
																	"nodeType": "YulTypedName",
																	"src": "1065:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1221:22:14",
																"nodeType": "YulBlock",
																"src": "1221:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1223:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1223:16:14"
																			},
																			"nativeSrc": "1223:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1223:18:14"
																		},
																		"nativeSrc": "1223:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1164:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1164:10:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1184:2:14",
																								"nodeType": "YulLiteral",
																								"src": "1184:2:14",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1188:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1188:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1180:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:14"
																						},
																						"nativeSrc": "1180:10:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1180:10:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1192:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1192:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1176:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:14"
																				},
																				"nativeSrc": "1176:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1176:18:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1161:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1161:2:14"
																		},
																		"nativeSrc": "1161:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1200:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1200:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1212:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1212:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1197:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1197:2:14"
																		},
																		"nativeSrc": "1197:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1197:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1158:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1158:2:14"
																},
																"nativeSrc": "1158:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1158:62:14"
															},
															"nativeSrc": "1155:88:14",
															"nodeType": "YulIf",
															"src": "1155:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1259:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1263:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1263:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1252:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:14"
																},
																"nativeSrc": "1252:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1252:22:14"
															},
															"nativeSrc": "1252:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1252:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1290:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1290:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1298:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1283:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1283:6:14"
																},
																"nativeSrc": "1283:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1283:22:14"
															},
															"nativeSrc": "1283:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1283:22:14"
														},
														{
															"body": {
																"nativeSrc": "1355:16:14",
																"nodeType": "YulBlock",
																"src": "1355:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1364:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1364:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1367:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1357:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:14"
																			},
																			"nativeSrc": "1357:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1357:12:14"
																		},
																		"nativeSrc": "1357:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1328:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "1328:2:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1332:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1332:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1324:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:14"
																				},
																				"nativeSrc": "1324:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1324:15:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:14"
																		},
																		"nativeSrc": "1320:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1346:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1346:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1317:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1317:2:14"
																},
																"nativeSrc": "1317:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1317:37:14"
															},
															"nativeSrc": "1314:57:14",
															"nodeType": "YulIf",
															"src": "1314:57:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1419:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "1419:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1423:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:14"
																		},
																		"nativeSrc": "1415:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1432:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1432:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1440:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1428:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:14"
																		},
																		"nativeSrc": "1428:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1428:15:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1445:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1445:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1380:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "1380:34:14"
																},
																"nativeSrc": "1380:72:14",
																"nodeType": "YulFunctionCall",
																"src": "1380:72:14"
															},
															"nativeSrc": "1380:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "1380:72:14"
														},
														{
															"nativeSrc": "1461:16:14",
															"nodeType": "YulAssignment",
															"src": "1461:16:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1471:6:14",
																"nodeType": "YulIdentifier",
																"src": "1471:6:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1461:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "401:1082:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "466:9:14",
														"nodeType": "YulTypedName",
														"src": "466:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "477:7:14",
														"nodeType": "YulTypedName",
														"src": "477:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "489:6:14",
														"nodeType": "YulTypedName",
														"src": "489:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "497:6:14",
														"nodeType": "YulTypedName",
														"src": "497:6:14",
														"type": ""
													}
												],
												"src": "401:1082:14"
											},
											{
												"body": {
													"nativeSrc": "1589:102:14",
													"nodeType": "YulBlock",
													"src": "1589:102:14",
													"statements": [
														{
															"nativeSrc": "1599:26:14",
															"nodeType": "YulAssignment",
															"src": "1599:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1611:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1611:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1607:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:14"
																},
																"nativeSrc": "1607:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1607:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1599:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1599:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1641:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1641:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1656:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1672:3:14",
																								"nodeType": "YulLiteral",
																								"src": "1672:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1677:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1677:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1668:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1668:3:14"
																						},
																						"nativeSrc": "1668:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1668:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1681:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1681:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1664:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:14"
																				},
																				"nativeSrc": "1664:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1652:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:14"
																		},
																		"nativeSrc": "1652:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1652:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:14"
																},
																"nativeSrc": "1634:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1634:51:14"
															},
															"nativeSrc": "1634:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1634:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1488:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:14",
														"nodeType": "YulTypedName",
														"src": "1558:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1569:6:14",
														"nodeType": "YulTypedName",
														"src": "1569:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:14",
														"nodeType": "YulTypedName",
														"src": "1580:4:14",
														"type": ""
													}
												],
												"src": "1488:203:14"
											},
											{
												"body": {
													"nativeSrc": "1833:150:14",
													"nodeType": "YulBlock",
													"src": "1833:150:14",
													"statements": [
														{
															"nativeSrc": "1843:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1843:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1863:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1863:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1857:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:14"
																},
																"nativeSrc": "1857:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1857:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1847:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1847:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1918:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1918:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1926:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1926:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1914:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1914:3:14"
																		},
																		"nativeSrc": "1914:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1914:17:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1933:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1933:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1938:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1879:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "1879:34:14"
																},
																"nativeSrc": "1879:66:14",
																"nodeType": "YulFunctionCall",
																"src": "1879:66:14"
															},
															"nativeSrc": "1879:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "1879:66:14"
														},
														{
															"nativeSrc": "1954:23:14",
															"nodeType": "YulAssignment",
															"src": "1954:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1965:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1965:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1970:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:14"
																},
																"nativeSrc": "1961:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1961:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1954:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1696:287:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1809:3:14",
														"nodeType": "YulTypedName",
														"src": "1809:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1814:6:14",
														"nodeType": "YulTypedName",
														"src": "1814:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1825:3:14",
														"nodeType": "YulTypedName",
														"src": "1825:3:14",
														"type": ""
													}
												],
												"src": "1696:287:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516103f63803806103f68339810160408190526100229161025e565b61002c8282610033565b5050610347565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610128919061032c565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f5f6040838503121561026f575f5ffd5b82516001600160a01b0381168114610285575f5ffd5b60208401519092506001600160401b038111156102a0575f5ffd5b8301601f810185136102b0575f5ffd5b80516001600160401b038111156102c9576102c9610228565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102f7576102f7610228565b60405281815282820160200187101561030e575f5ffd5b61031f82602083016020860161023c565b8093505050509250929050565b5f825161033d81846020870161023c565b9190910192915050565b60a3806103535f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f5f375f5f365f845af43d5f5f3e8080156069573d5ff35b3d5ffdfea2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F6 CODESIZE SUB DUP1 PUSH2 0x3F6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x347 JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x85 JUMPI PUSH2 0x80 DUP3 DUP3 PUSH2 0x10C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D PUSH2 0x17F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x176 DUP6 DUP4 DUP4 PUSH2 0x1A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B0 DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F7 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x30E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x31F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x23C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x33D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x23C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH2 0x353 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 PUSH0 CALLDATACOPY PUSH0 PUSH0 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xA6 0xEF GASLIMIT 0xEA COINBASE 0xEC SELFDESTRUCT 0x26 0xAC 0xEA 0xE2 LOG1 EXTCODESIZE PUSH10 0x3304C712BE70F6CBCB48 SWAP8 0x2B PUSH11 0x8E00F80B64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "600:1117:6:-:0;;;1081:133;;;;;;;;;;;;;;;;;;:::i;:::-;1155:52;1185:14;1201:5;1155:29;:52::i;:::-;1081:133;;600:1117;;2264:344:7;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:7;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2264:344;;:::o;2454:148::-;2573:18;:16;:18::i;:::-;2264:344;;:::o;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:7;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:7;;-1:-1:-1;;;;;1652:32:14;;1805:47:7;;;1634:51:14;1607:18;;1805:47:7;;;;;;;;1744:119;811:66;1872:73;;-1:-1:-1;;;;;;1872:73:7;-1:-1:-1;;;;;1872:73:7;;;;;;;;;;1671:281::o;3900:253:10:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:10;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4007:67:10;;-1:-1:-1;4007:67:10;-1:-1:-1;4091:55:10;4118:6;4007:67;;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:10:o;6113:122:7:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:7;;;;;;;;;;;6159:70;6113:122::o;4421:582:10:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:10;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:10;;-1:-1:-1;;;;;1652:32:14;;4917:24:10;;;1634:51:14;1607:18;;4917:24:10;1488:203:14;4837:119:10;-1:-1:-1;4976:10:10;4589:408;4421:582;;;;;:::o;5543:487::-;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:10;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:14;370:16;;363:27;146:250::o;401:1082::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:14;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;771:30:14;;768:50;;;814:1;811;804:12;768:50;837:22;;890:4;882:13;;878:27;-1:-1:-1;868:55:14;;919:1;916;909:12;868:55;946:9;;-1:-1:-1;;;;;967:30:14;;964:56;;;1000:18;;:::i;:::-;1049:2;1043:9;1141:2;1103:17;;-1:-1:-1;;1099:31:14;;;1132:2;1095:40;1091:54;1079:67;;-1:-1:-1;;;;;1161:34:14;;1197:22;;;1158:62;1155:88;;;1223:18;;:::i;:::-;1259:2;1252:22;1283;;;1324:15;;;1341:2;1320:24;1317:37;-1:-1:-1;1314:57:14;;;1367:1;1364;1357:12;1314:57;1380:72;1445:6;1440:2;1432:6;1428:15;1423:2;1419;1415:11;1380:72;:::i;:::-;1471:6;1461:16;;;;;401:1082;;;;;:::o;1696:287::-;1825:3;1863:6;1857:13;1879:66;1938:6;1933:3;1926:4;1918:6;1914:17;1879:66;:::i;:::-;1961:16;;;;;1696:287;-1:-1:-1;;1696:287:14:o;:::-;600:1117:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_1050": {
									"entryPoint": 80,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_1066": {
									"entryPoint": 12,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_744": {
									"entryPoint": 26,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f5f375f5f365f845af43d5f5f3e8080156069573d5ff35b3d5ffdfea2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 PUSH0 CALLDATACOPY PUSH0 PUSH0 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xA6 0xEF GASLIMIT 0xEA COINBASE 0xEC SELFDESTRUCT 0x26 0xAC 0xEA 0xE2 LOG1 EXTCODESIZE PUSH10 0x3304C712BE70F6CBCB48 SWAP8 0x2B PUSH11 0x8E00F80B64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "600:1117:6:-:0;;;2649:11:8;:9;:11::i;:::-;600:1117:6;2323:83:8;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1583:132:6:-;1650:7;1676:32;811:66:7;1519:53;-1:-1:-1;;;;;1519:53:7;;1441:138;1676:32:6;1669:39;;1583:132;:::o;949:895:8:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "32600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2155"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1081,
									"end": 1214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1185,
									"end": 1199,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1201,
									"end": 1206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2374,
									"end": 2391,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2355,
									"end": 2392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 7,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "LOG2",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2473,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2518,
									"end": 2535,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2537,
									"end": 2541,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2489,
									"end": 2542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2573,
									"end": 2591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1765,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1782,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 811,
									"end": 877,
									"name": "PUSH",
									"source": 7,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 3995,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4008,
									"end": 4020,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4045,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4049,
									"end": 4068,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4069,
									"end": 4073,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4049,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DELEGATECALL",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4118,
									"end": 4124,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4091,
									"end": 4146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3900,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6172,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6176,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6113,
									"end": 6235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4594,
									"end": 4601,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4625,
									"end": 4635,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 4617,
									"end": 4636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4863,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "EXTCODESIZE",
									"source": 10
								},
								{
									"begin": 4867,
									"end": 4890,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1488,
									"end": 1691,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4976,
									"end": 4986,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4421,
									"end": 5003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 6030,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5543,
									"end": 6030,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5674,
									"end": 5695,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5871,
									"end": 5881,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5865,
									"end": 5882,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5927,
									"end": 5942,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5914,
									"end": 5924,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5906,
									"end": 5925,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5899,
									"end": 5943,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 489,
									"end": 495,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 503,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 547,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 529,
									"end": 536,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 525,
									"end": 548,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 521,
									"end": 553,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 518,
									"end": 570,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 518,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 518,
									"end": 570,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 592,
									"end": 608,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 592,
									"end": 608,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 627,
									"end": 669,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 627,
									"end": 669,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 617,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 685,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 617,
									"end": 687,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 755,
									"end": 757,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 740,
									"end": 758,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 734,
									"end": 759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 771,
									"end": 801,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 771,
									"end": 801,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 768,
									"end": 818,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 768,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 814,
									"end": 815,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 812,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 816,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 768,
									"end": 818,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 837,
									"end": 859,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 837,
									"end": 859,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 890,
									"end": 894,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 882,
									"end": 895,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 882,
									"end": 895,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 878,
									"end": 905,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 868,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 919,
									"end": 920,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 921,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 868,
									"end": 923,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 946,
									"end": 955,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 946,
									"end": 955,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 967,
									"end": 997,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 967,
									"end": 997,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1000,
									"end": 1018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1052,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1132,
									"end": 1134,
									"name": "PUSH",
									"source": 14,
									"value": "3F"
								},
								{
									"begin": 1095,
									"end": 1135,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1145,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1158,
									"end": 1220,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1223,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1252,
									"end": 1274,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1320,
									"end": 1344,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1317,
									"end": 1354,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1367,
									"end": 1368,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1357,
									"end": 1369,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1445,
									"end": 1451,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1428,
									"end": 1443,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1415,
									"end": 1426,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1380,
									"end": 1452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1477,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1825,
									"end": 1828,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1863,
									"end": 1869,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1857,
									"end": 1870,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1933,
									"end": 1936,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1926,
									"end": 1930,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1924,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1914,
									"end": 1931,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1879,
									"end": 1945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1696,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033",
									".code": [
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 7,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220da0c015d5392867fec06b6efcbd942c4fba500d4ca551178788ce6484b7a151c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220da0c015d5392867fec06b6efcbd942c4fba500d4ca551178788ce6484b7a151c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xC ADD TSTORE MSTORE8 SWAP3 DUP7 PUSH32 0xEC06B6EFCBD942C4FBA500D4CA551178788CE6484B7A151C64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "496:5741:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220da0c015d5392867fec06b6efcbd942c4fba500d4ca551178788ce6484b7a151c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xC ADD TSTORE MSTORE8 SWAP3 DUP7 PUSH32 0xEC06B6EFCBD942C4FBA500D4CA551178788CE6484B7A151C64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "496:5741:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da0c015d5392867fec06b6efcbd942c4fba500d4ca551178788ce6484b7a151c64736f6c634300081c0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122050659c7d15216bab203858ea72d58c8c6c6c8b199493ef4309cbf85d7cd83f4c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122050659c7d15216bab203858ea72d58c8c6c6c8b199493ef4309cbf85d7cd83f4c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP PUSH6 0x9C7D15216BAB KECCAK256 CODESIZE PC 0xEA PUSH19 0xD58C8C6C6C8B199493EF4309CBF85D7CD83F4C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122050659c7d15216bab203858ea72d58c8c6c6c8b199493ef4309cbf85d7cd83f4c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP PUSH6 0x9C7D15216BAB KECCAK256 CODESIZE PC 0xEA PUSH19 0xD58C8C6C6C8B199493EF4309CBF85D7CD83F4C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050659c7d15216bab203858ea72d58c8c6c6c8b199493ef4309cbf85d7cd83f4c64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122060ee35604ed276942dc133537c3473b9da047b225f691cc6189d8c3e5bfe141b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122060ee35604ed276942dc133537c3473b9da047b225f691cc6189d8c3e5bfe141b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xEE CALLDATALOAD PUSH1 0x4E 0xD2 PUSH23 0x942DC133537C3473B9DA047B225F691CC6189D8C3E5BFE EQ SHL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122060ee35604ed276942dc133537c3473b9da047b225f691cc6189d8c3e5bfe141b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xEE CALLDATALOAD PUSH1 0x4E 0xD2 PUSH23 0x942DC133537C3473B9DA047B225F691CC6189D8C3E5BFE EQ SHL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060ee35604ed276942dc133537c3473b9da047b225f691cc6189d8c3e5bfe141b64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f1558a491572426c1fb7022ac8f2cb49a72f3c2d8b7389ba36f62f8442e18dd764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1558a491572426c1fb7022ac8f2cb49a72f3c2d8b7389ba36f62f8442e18dd764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SSTORE DUP11 BLOBHASH ISZERO PUSH19 0x426C1FB7022AC8F2CB49A72F3C2D8B7389BA36 0xF6 0x2F DUP5 TIMESTAMP 0xE1 DUP14 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1558a491572426c1fb7022ac8f2cb49a72f3c2d8b7389ba36f62f8442e18dd764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SSTORE DUP11 BLOBHASH ISZERO PUSH19 0x426C1FB7022AC8F2CB49A72F3C2D8B7389BA36 0xF6 0x2F DUP5 TIMESTAMP 0xE1 DUP14 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1558a491572426c1fb7022ac8f2cb49a72f3c2d8b7389ba36f62f8442e18dd764736f6c634300081c0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/VaultFactoryImplementation.sol": {
				"IVaultImplementation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_v3Pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracleMgr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rebalancer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Minimal interface for the logic contract (VaultImplementation).      Used by the factory to call `initialize(...)` upon proxy creation.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialize(address,address,address,address,address,address,string,string)": "ef090e4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_v3Pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleMgr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Minimal interface for the logic contract (VaultImplementation).      Used by the factory to call `initialize(...)` upon proxy creation.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/VaultFactoryImplementation.sol\":\"IVaultImplementation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"Contracts/VaultFactoryImplementation.sol\":{\"keccak256\":\"0x89ee2007060f0790def8cf12f793d077d4c56830c4e3105db648b87a9fbcbbcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14a88ef4d72a87eb55e9db8eba363b9f39723e36c73191e6faeb91133e212440\",\"dweb:/ipfs/QmdPitaoCp41LYaxL9XoZip8Ud8e1jbjScMjMMkvUJgQMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VaultFactoryImplementation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oracleManager",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rebalancer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								}
							],
							"name": "DefaultsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vaultProxy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "v3Pool",
									"type": "address"
								}
							],
							"name": "VaultCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allVaults",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "v3Pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "positionMgr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracleMgr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rebalancer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "createVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultLiquidator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOracleManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRebalancer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllVaults",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultLogic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracleManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rebalancer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidator",
									"type": "address"
								}
							],
							"name": "setDefaultReferences",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newVaultLogic",
									"type": "address"
								}
							],
							"name": "setVaultLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultLogic",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A UUPS-upgradeable factory for creating new vault proxies.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"DefaultsUpdated(address,address,address)": {
								"details": "Emitted when the factory's default references are updated."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							},
							"VaultCreated(address,address,address)": {
								"details": "Emitted when a new vault proxy is created."
							}
						},
						"kind": "dev",
						"methods": {
							"createVault(address,address,address,address,address,string,string)": {
								"params": {
									"liquidator": "Liquidator (or zero for default)",
									"name": "The ERC20 name for the vault shares",
									"oracleMgr": "OracleManager (or zero for default)",
									"positionMgr": "The NonfungiblePositionManager used by the vault",
									"rebalancer": "Rebalancer (or zero for default)",
									"symbol": "The ERC20 symbol for the vault shares",
									"v3Pool": "The Uniswap V3 pool address for the vault"
								},
								"returns": {
									"proxyAddr": "   The address of the newly deployed vault proxy"
								}
							},
							"initialize(address,address)": {
								"params": {
									"_owner": "The owner (often a DAO or deployer)",
									"_vaultLogic": "The deployed VaultImplementation logic contract"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setDefaultReferences(address,address,address)": {
								"params": {
									"_liquidator": "Address of the default Liquidator",
									"_oracleManager": "Address of the default OracleManager",
									"_rebalancer": "Address of the default Rebalancer"
								}
							},
							"setVaultLogic(address)": {
								"params": {
									"newVaultLogic": "The new VaultImplementation logic contract"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"allVaults": {
								"details": "Array of all vault proxies created by this factory."
							},
							"defaultOracleManager": {
								"details": "Default references for external contracts if the user doesn't specify them."
							},
							"vaultLogic": {
								"details": "The address of the deployed VaultImplementation (logic) contract."
							}
						},
						"title": "VaultFactoryImplementation",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/VaultFactoryImplementation.sol\":2375:8697  contract VaultFactoryImplementation is... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"Contracts/VaultFactoryImplementation.sol\":2375:8697  contract VaultFactoryImplementation is... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Contracts/VaultFactoryImplementation.sol\":2375:8697  contract VaultFactoryImplementation is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9403b634\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb078147a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc3638757\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xecedd5bc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x9403b634\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x97331bf9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa7c6a100\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xab31b6f3\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x52d1902d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x545851d7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9094a91e\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      dup1\n      0x3c46201d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4c39ad21\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"Contracts/VaultFactoryImplementation.sol\":2754:2786  address public defaultRebalancer */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      pop\n      sload(0x02)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":2754:2786  address public defaultRebalancer */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/VaultFactoryImplementation.sol\":3706:4107  function initialize(address _vaultLogic, address _owner) external initializer {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Contracts/VaultFactoryImplementation.sol\":2713:2748  address public defaultOracleManager */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      sload(0x01)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_5:\n      tag_29\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1966:1991   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1954:1956   */\n      0x20\n        /* \"#utility.yul\":1939:1957   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      tag_26\n        /* \"#utility.yul\":1820:1997   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":2792:2824  address public defaultLiquidator */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      sload(0x03)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n      pop\n      tag_29\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_24)\n        /* \"Contracts/VaultFactoryImplementation.sol\":2911:2937  address[] public allVaults */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_24\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":8285:8463  function getVault(uint256 index) external view returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_24\n      tag_65\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":8597:8695  function getAllVaults() external view returns (address[] memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":8094:8188  function vaultCount() external view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":8165:8174  allVaults */\n      0x04\n        /* \"Contracts/VaultFactoryImplementation.sol\":8165:8181  allVaults.length */\n      sload\n        /* \"Contracts/VaultFactoryImplementation.sol\":8094:8188  function vaultCount() external view returns (uint256) {... */\n      jump(tag_42)\n        /* \"Contracts/VaultFactoryImplementation.sol\":5090:5684  function setDefaultReferences(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_29\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_84:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":2577:2602  address public vaultLogic */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      sload(0x00)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":6355:8003  function createVault(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_24\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":4487:4672  function setVaultLogic(address newVaultLogic) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_29\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_29\n      tag_105\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"Contracts/VaultFactoryImplementation.sol\":3706:4107  function initialize(address _vaultLogic, address _owner) external initializer {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_111\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_114:\n        /* \"Contracts/VaultFactoryImplementation.sol\":3928:3950  __Ownable_init(_owner) */\n      tag_116\n        /* \"Contracts/VaultFactoryImplementation.sol\":3943:3949  _owner */\n      dup7\n        /* \"Contracts/VaultFactoryImplementation.sol\":3928:3942  __Ownable_init */\n      tag_117\n        /* \"Contracts/VaultFactoryImplementation.sol\":3928:3950  __Ownable_init(_owner) */\n      jump\t// in\n    tag_116:\n        /* \"Contracts/VaultFactoryImplementation.sol\":3961:3985  __UUPSUpgradeable_init() */\n      tag_118\n        /* \"Contracts/VaultFactoryImplementation.sol\":3961:3983  __UUPSUpgradeable_init */\n      tag_119\n        /* \"Contracts/VaultFactoryImplementation.sol\":3961:3985  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":4004:4029  _vaultLogic != address(0) */\n      dup8\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":3996:4066  require(_vaultLogic != address(0), \"VaultFactory: invalid vaultLogic\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5947:5949   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":3996:4066  require(_vaultLogic != address(0), \"VaultFactory: invalid vaultLogic\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5929:5950   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5966:5984   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5959:5989   */\n      mstore\n        /* \"#utility.yul\":6025:6059   */\n      0x5661756c74466163746f72793a20696e76616c6964207661756c744c6f676963\n        /* \"#utility.yul\":6005:6023   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5998:6060   */\n      mstore\n        /* \"#utility.yul\":6077:6095   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":3996:4066  require(_vaultLogic != address(0), \"VaultFactory: invalid vaultLogic\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"Contracts/VaultFactoryImplementation.sol\":4076:4086  vaultLogic */\n      0x00\n        /* \"Contracts/VaultFactoryImplementation.sol\":4076:4100  vaultLogic = _vaultLogic */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6259:6309   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":6247:6249   */\n      0x20\n        /* \"#utility.yul\":6232:6250   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":3706:4107  function initialize(address _vaultLogic, address _owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_135:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":2911:2937  address[] public allVaults */\n    tag_61:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":8285:8463  function getVault(uint256 index) external view returns (address) {... */\n    tag_66:\n        /* \"Contracts/VaultFactoryImplementation.sol\":8376:8385  allVaults */\n      0x04\n        /* \"Contracts/VaultFactoryImplementation.sol\":8376:8392  allVaults.length */\n      sload\n        /* \"Contracts/VaultFactoryImplementation.sol\":8341:8348  address */\n      0x00\n      swap1\n        /* \"Contracts/VaultFactoryImplementation.sol\":8368:8392  index < allVaults.length */\n      dup3\n      lt\n        /* \"Contracts/VaultFactoryImplementation.sol\":8360:8423  require(index < allVaults.length, \"VaultFactory: out of range\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6522:6524   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":8360:8423  require(index < allVaults.length, \"VaultFactory: out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6504:6525   */\n      mstore\n        /* \"#utility.yul\":6561:6563   */\n      0x1a\n        /* \"#utility.yul\":6541:6559   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6534:6564   */\n      mstore\n        /* \"#utility.yul\":6600:6628   */\n      0x5661756c74466163746f72793a206f7574206f662072616e6765000000000000\n        /* \"#utility.yul\":6580:6598   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6573:6629   */\n      mstore\n        /* \"#utility.yul\":6646:6664   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":8360:8423  require(index < allVaults.length, \"VaultFactory: out of range\") */\n      tag_121\n        /* \"#utility.yul\":6320:6670   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":8360:8423  require(index < allVaults.length, \"VaultFactory: out of range\") */\n    tag_150:\n        /* \"Contracts/VaultFactoryImplementation.sol\":8440:8449  allVaults */\n      0x04\n        /* \"Contracts/VaultFactoryImplementation.sol\":8450:8455  index */\n      dup3\n        /* \"Contracts/VaultFactoryImplementation.sol\":8440:8456  allVaults[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"Contracts/VaultFactoryImplementation.sol\":8285:8463  function getVault(uint256 index) external view returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":8597:8695  function getAllVaults() external view returns (address[] memory) {... */\n    tag_70:\n        /* \"Contracts/VaultFactoryImplementation.sol\":8644:8660  address[] memory */\n      0x60\n        /* \"Contracts/VaultFactoryImplementation.sol\":8679:8688  allVaults */\n      0x04\n        /* \"Contracts/VaultFactoryImplementation.sol\":8672:8688  return allVaults */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":8597:8695  function getAllVaults() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":5090:5684  function setDefaultReferences(... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":5253:5281  _oracleManager != address(0) */\n      dup4\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":5245:5314  require(_oracleManager != address(0), \"VaultFactory: invalid oracle\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7009:7011   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":5245:5314  require(_oracleManager != address(0), \"VaultFactory: invalid oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6991:7012   */\n      mstore\n        /* \"#utility.yul\":7048:7050   */\n      0x1c\n        /* \"#utility.yul\":7028:7046   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7021:7051   */\n      mstore\n        /* \"#utility.yul\":7087:7117   */\n      0x5661756c74466163746f72793a20696e76616c6964206f7261636c6500000000\n        /* \"#utility.yul\":7067:7085   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7060:7118   */\n      mstore\n        /* \"#utility.yul\":7135:7153   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":5245:5314  require(_oracleManager != address(0), \"VaultFactory: invalid oracle\") */\n      tag_121\n        /* \"#utility.yul\":6807:7159   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":5245:5314  require(_oracleManager != address(0), \"VaultFactory: invalid oracle\") */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":5332:5357  _rebalancer != address(0) */\n      dup3\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":5324:5394  require(_rebalancer != address(0), \"VaultFactory: invalid rebalancer\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7366:7368   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":5324:5394  require(_rebalancer != address(0), \"VaultFactory: invalid rebalancer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7348:7369   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7385:7403   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7378:7408   */\n      mstore\n        /* \"#utility.yul\":7444:7478   */\n      0x5661756c74466163746f72793a20696e76616c696420726562616c616e636572\n        /* \"#utility.yul\":7424:7442   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7417:7479   */\n      mstore\n        /* \"#utility.yul\":7496:7514   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":5324:5394  require(_rebalancer != address(0), \"VaultFactory: invalid rebalancer\") */\n      tag_121\n        /* \"#utility.yul\":7164:7520   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":5324:5394  require(_rebalancer != address(0), \"VaultFactory: invalid rebalancer\") */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":5412:5437  _liquidator != address(0) */\n      dup2\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":5404:5474  require(_liquidator != address(0), \"VaultFactory: invalid liquidator\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7727:7729   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":5404:5474  require(_liquidator != address(0), \"VaultFactory: invalid liquidator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7709:7730   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7746:7764   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7739:7769   */\n      mstore\n        /* \"#utility.yul\":7805:7839   */\n      0x5661756c74466163746f72793a20696e76616c6964206c697175696461746f72\n        /* \"#utility.yul\":7785:7803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7778:7840   */\n      mstore\n        /* \"#utility.yul\":7857:7875   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":5404:5474  require(_liquidator != address(0), \"VaultFactory: invalid liquidator\") */\n      tag_121\n        /* \"#utility.yul\":7525:7881   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":5404:5474  require(_liquidator != address(0), \"VaultFactory: invalid liquidator\") */\n    tag_170:\n        /* \"Contracts/VaultFactoryImplementation.sol\":5485:5505  defaultOracleManager */\n      0x01\n        /* \"Contracts/VaultFactoryImplementation.sol\":5485:5522  defaultOracleManager = _oracleManager */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Contracts/VaultFactoryImplementation.sol\":5532:5549  defaultRebalancer */\n      0x02\n        /* \"Contracts/VaultFactoryImplementation.sol\":5532:5563  defaultRebalancer = _rebalancer */\n      dup1\n      sload\n      dup7\n      dup4\n      and\n      swap1\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/VaultFactoryImplementation.sol\":5573:5590  defaultLiquidator */\n      0x03\n        /* \"Contracts/VaultFactoryImplementation.sol\":5573:5604  defaultLiquidator = _liquidator */\n      dup1\n      sload\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap4\n      and\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Contracts/VaultFactoryImplementation.sol\":5620:5677  DefaultsUpdated(_oracleManager, _rebalancer, _liquidator) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8088:8139   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8170:8172   */\n      0x20\n        /* \"#utility.yul\":8155:8173   */\n      dup5\n      add\n        /* \"#utility.yul\":8148:8208   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8224:8242   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8217:8277   */\n      mstore\n        /* \"Contracts/VaultFactoryImplementation.sol\":5620:5677  DefaultsUpdated(_oracleManager, _rebalancer, _liquidator) */\n      0x43d676ef005d9b31f20857ca4015e161d6c2337206dc3487aed30b7b4c1cefc3\n      swap1\n        /* \"#utility.yul\":8076:8078   */\n      0x60\n        /* \"#utility.yul\":8061:8079   */\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":5620:5677  DefaultsUpdated(_oracleManager, _rebalancer, _liquidator) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/VaultFactoryImplementation.sol\":5090:5684  function setDefaultReferences(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":6355:8003  function createVault(... */\n    tag_96:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6598:6615  address proxyAddr */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":6635:6655  v3Pool != address(0) */\n      dup11\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":6627:6688  require(v3Pool != address(0), \"VaultFactory: invalid v3Pool\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8490:8492   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":6627:6688  require(v3Pool != address(0), \"VaultFactory: invalid v3Pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8472:8493   */\n      mstore\n        /* \"#utility.yul\":8529:8531   */\n      0x1c\n        /* \"#utility.yul\":8509:8527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8502:8532   */\n      mstore\n        /* \"#utility.yul\":8568:8598   */\n      0x5661756c74466163746f72793a20696e76616c6964207633506f6f6c00000000\n        /* \"#utility.yul\":8548:8566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8541:8599   */\n      mstore\n        /* \"#utility.yul\":8616:8634   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":6627:6688  require(v3Pool != address(0), \"VaultFactory: invalid v3Pool\") */\n      tag_121\n        /* \"#utility.yul\":8288:8640   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":6627:6688  require(v3Pool != address(0), \"VaultFactory: invalid v3Pool\") */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":6706:6731  positionMgr != address(0) */\n      dup10\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":6698:6769  require(positionMgr != address(0), \"VaultFactory: invalid positionMgr\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8847:8849   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":6698:6769  require(positionMgr != address(0), \"VaultFactory: invalid positionMgr\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8829:8850   */\n      mstore\n        /* \"#utility.yul\":8886:8888   */\n      0x21\n        /* \"#utility.yul\":8866:8884   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8859:8889   */\n      mstore\n        /* \"#utility.yul\":8925:8959   */\n      0x5661756c74466163746f72793a20696e76616c696420706f736974696f6e4d67\n        /* \"#utility.yul\":8905:8923   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8898:8960   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":8976:8994   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8969:9000   */\n      mstore\n        /* \"#utility.yul\":9017:9036   */\n      0x84\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":6698:6769  require(positionMgr != address(0), \"VaultFactory: invalid positionMgr\") */\n      tag_121\n        /* \"#utility.yul\":8645:9042   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":6698:6769  require(positionMgr != address(0), \"VaultFactory: invalid positionMgr\") */\n    tag_179:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6831:6850  address finalOracle */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":6854:6877  oracleMgr == address(0) */\n      dup10\n      and\n      iszero\n        /* \"Contracts/VaultFactoryImplementation.sol\":6853:6913  (oracleMgr == address(0)) ? defaultOracleManager : oracleMgr */\n      tag_182\n      jumpi\n        /* \"Contracts/VaultFactoryImplementation.sol\":6904:6913  oracleMgr */\n      dup9\n        /* \"Contracts/VaultFactoryImplementation.sol\":6853:6913  (oracleMgr == address(0)) ? defaultOracleManager : oracleMgr */\n      jump(tag_183)\n    tag_182:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6881:6901  defaultOracleManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Contracts/VaultFactoryImplementation.sol\":6853:6913  (oracleMgr == address(0)) ? defaultOracleManager : oracleMgr */\n    tag_183:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6831:6913  address finalOracle = (oracleMgr == address(0)) ? defaultOracleManager : oracleMgr */\n      swap1\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":6923:6946  address finalRebalancer */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":6950:6974  rebalancer == address(0) */\n      dup10\n      and\n      iszero\n        /* \"Contracts/VaultFactoryImplementation.sol\":6949:7008  (rebalancer == address(0)) ? defaultRebalancer : rebalancer */\n      tag_184\n      jumpi\n        /* \"Contracts/VaultFactoryImplementation.sol\":6998:7008  rebalancer */\n      dup9\n        /* \"Contracts/VaultFactoryImplementation.sol\":6949:7008  (rebalancer == address(0)) ? defaultRebalancer : rebalancer */\n      jump(tag_185)\n    tag_184:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6978:6995  defaultRebalancer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"Contracts/VaultFactoryImplementation.sol\":6949:7008  (rebalancer == address(0)) ? defaultRebalancer : rebalancer */\n    tag_185:\n        /* \"Contracts/VaultFactoryImplementation.sol\":6923:7008  address finalRebalancer = (rebalancer == address(0)) ? defaultRebalancer : rebalancer */\n      swap1\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":7018:7041  address finalLiquidator */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7045:7069  liquidator == address(0) */\n      dup10\n      and\n      iszero\n        /* \"Contracts/VaultFactoryImplementation.sol\":7044:7103  (liquidator == address(0)) ? defaultLiquidator : liquidator */\n      tag_186\n      jumpi\n        /* \"Contracts/VaultFactoryImplementation.sol\":7093:7103  liquidator */\n      dup9\n        /* \"Contracts/VaultFactoryImplementation.sol\":7044:7103  (liquidator == address(0)) ? defaultLiquidator : liquidator */\n      jump(tag_187)\n    tag_186:\n        /* \"Contracts/VaultFactoryImplementation.sol\":7073:7090  defaultLiquidator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"Contracts/VaultFactoryImplementation.sol\":7044:7103  (liquidator == address(0)) ? defaultLiquidator : liquidator */\n    tag_187:\n        /* \"Contracts/VaultFactoryImplementation.sol\":7018:7103  address finalLiquidator = (liquidator == address(0)) ? defaultLiquidator : liquidator */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7122:7147  finalOracle != address(0) */\n      dup4\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":7114:7175  require(finalOracle != address(0), \"VaultFactory: no oracle\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9249:9251   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":7114:7175  require(finalOracle != address(0), \"VaultFactory: no oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9231:9252   */\n      mstore\n        /* \"#utility.yul\":9288:9290   */\n      0x17\n        /* \"#utility.yul\":9268:9286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9261:9291   */\n      mstore\n        /* \"#utility.yul\":9327:9352   */\n      0x5661756c74466163746f72793a206e6f206f7261636c65000000000000000000\n        /* \"#utility.yul\":9307:9325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9300:9353   */\n      mstore\n        /* \"#utility.yul\":9370:9388   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":7114:7175  require(finalOracle != address(0), \"VaultFactory: no oracle\") */\n      tag_121\n        /* \"#utility.yul\":9047:9394   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":7114:7175  require(finalOracle != address(0), \"VaultFactory: no oracle\") */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7193:7222  finalRebalancer != address(0) */\n      dup3\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":7185:7254  require(finalRebalancer != address(0), \"VaultFactory: no rebalancer\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9601:9603   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":7185:7254  require(finalRebalancer != address(0), \"VaultFactory: no rebalancer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9583:9604   */\n      mstore\n        /* \"#utility.yul\":9640:9642   */\n      0x1b\n        /* \"#utility.yul\":9620:9638   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9613:9643   */\n      mstore\n        /* \"#utility.yul\":9679:9708   */\n      0x5661756c74466163746f72793a206e6f20726562616c616e6365720000000000\n        /* \"#utility.yul\":9659:9677   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9652:9709   */\n      mstore\n        /* \"#utility.yul\":9726:9744   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":7185:7254  require(finalRebalancer != address(0), \"VaultFactory: no rebalancer\") */\n      tag_121\n        /* \"#utility.yul\":9399:9750   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":7185:7254  require(finalRebalancer != address(0), \"VaultFactory: no rebalancer\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7272:7301  finalLiquidator != address(0) */\n      dup2\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":7264:7333  require(finalLiquidator != address(0), \"VaultFactory: no liquidator\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9957:9959   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":7264:7333  require(finalLiquidator != address(0), \"VaultFactory: no liquidator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9939:9960   */\n      mstore\n        /* \"#utility.yul\":9996:9998   */\n      0x1b\n        /* \"#utility.yul\":9976:9994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9969:9999   */\n      mstore\n        /* \"#utility.yul\":10035:10064   */\n      0x5661756c74466163746f72793a206e6f206c697175696461746f720000000000\n        /* \"#utility.yul\":10015:10033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10008:10065   */\n      mstore\n        /* \"#utility.yul\":10082:10100   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":7264:7333  require(finalLiquidator != address(0), \"VaultFactory: no liquidator\") */\n      tag_121\n        /* \"#utility.yul\":9755:10106   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":7264:7333  require(finalLiquidator != address(0), \"VaultFactory: no liquidator\") */\n    tag_194:\n        /* \"Contracts/VaultFactoryImplementation.sol\":7394:7415  bytes memory initData */\n      0x00\n        /* \"Contracts/VaultFactoryImplementation.sol\":7454:7494  IVaultImplementation.initialize.selector */\n      shl(0xe0, 0xef090e4c)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7508:7514  v3Pool */\n      dup15\n        /* \"Contracts/VaultFactoryImplementation.sol\":7528:7539  positionMgr */\n      dup15\n        /* \"Contracts/VaultFactoryImplementation.sol\":7553:7564  finalOracle */\n      dup7\n        /* \"Contracts/VaultFactoryImplementation.sol\":7578:7593  finalRebalancer */\n      dup7\n        /* \"Contracts/VaultFactoryImplementation.sol\":7607:7622  finalLiquidator */\n      dup7\n        /* \"Contracts/VaultFactoryImplementation.sol\":7636:7646  msg.sender */\n      caller\n        /* \"Contracts/VaultFactoryImplementation.sol\":7679:7683  name */\n      dup16\n      dup16\n        /* \"Contracts/VaultFactoryImplementation.sol\":7697:7703  symbol */\n      dup16\n      dup16\n        /* \"Contracts/VaultFactoryImplementation.sol\":7418:7713  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_197\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n      0x00\n        /* \"Contracts/VaultFactoryImplementation.sol\":7824:7834  vaultLogic */\n      dup1\n      sload\n        /* \"Contracts/VaultFactoryImplementation.sol\":7807:7845  new ERC1967Proxy(vaultLogic, initData) */\n      swap3\n      mload\n        /* \"Contracts/VaultFactoryImplementation.sol\":7418:7713  abi.encodeWithSelector(... */\n      swap2\n      swap4\n      pop\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7824:7834  vaultLogic */\n      and\n      swap1\n        /* \"Contracts/VaultFactoryImplementation.sol\":7418:7713  abi.encodeWithSelector(... */\n      dup4\n      swap1\n        /* \"Contracts/VaultFactoryImplementation.sol\":7807:7845  new ERC1967Proxy(vaultLogic, initData) */\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      tag_201\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":7786:7845  ERC1967Proxy proxy = new ERC1967Proxy(vaultLogic, initData) */\n      swap1\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":7875:7880  proxy */\n      dup1\n        /* \"Contracts/VaultFactoryImplementation.sol\":7855:7881  proxyAddr = address(proxy) */\n      swap6\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":7912:7921  allVaults */\n      0x04\n        /* \"Contracts/VaultFactoryImplementation.sol\":7927:7936  proxyAddr */\n      dup7\n        /* \"Contracts/VaultFactoryImplementation.sol\":7912:7937  allVaults.push(proxyAddr) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":7989:7995  v3Pool */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7953:7996  VaultCreated(proxyAddr, msg.sender, v3Pool) */\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":7977:7987  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7953:7996  VaultCreated(proxyAddr, msg.sender, v3Pool) */\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":7966:7975  proxyAddr */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":7953:7996  VaultCreated(proxyAddr, msg.sender, v3Pool) */\n      and\n      0x897c133dfbfe1f6239e98b4ffd7e4f6c86a62350a131a7a37790419f58af02f9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Contracts/VaultFactoryImplementation.sol\":6617:8003  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/VaultFactoryImplementation.sol\":6355:8003  function createVault(... */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/VaultFactoryImplementation.sol\":4487:4672  function setVaultLogic(address newVaultLogic) external onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/VaultFactoryImplementation.sol\":4570:4597  newVaultLogic != address(0) */\n      dup2\n      and\n        /* \"Contracts/VaultFactoryImplementation.sol\":4562:4629  require(newVaultLogic != address(0), \"VaultFactory: invalid logic\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11935:11937   */\n      0x20\n        /* \"Contracts/VaultFactoryImplementation.sol\":4562:4629  require(newVaultLogic != address(0), \"VaultFactory: invalid logic\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11917:11938   */\n      mstore\n        /* \"#utility.yul\":11974:11976   */\n      0x1b\n        /* \"#utility.yul\":11954:11972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11947:11977   */\n      mstore\n        /* \"#utility.yul\":12013:12042   */\n      0x5661756c74466163746f72793a20696e76616c6964206c6f6769630000000000\n        /* \"#utility.yul\":11993:12011   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11986:12043   */\n      mstore\n        /* \"#utility.yul\":12060:12078   */\n      0x64\n      add\n        /* \"Contracts/VaultFactoryImplementation.sol\":4562:4629  require(newVaultLogic != address(0), \"VaultFactory: invalid logic\") */\n      tag_121\n        /* \"#utility.yul\":11733:12084   */\n      jump\n        /* \"Contracts/VaultFactoryImplementation.sol\":4562:4629  require(newVaultLogic != address(0), \"VaultFactory: invalid logic\") */\n    tag_208:\n        /* \"Contracts/VaultFactoryImplementation.sol\":4639:4649  vaultLogic */\n      0x00\n        /* \"Contracts/VaultFactoryImplementation.sol\":4639:4665  vaultLogic = newVaultLogic */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Contracts/VaultFactoryImplementation.sol\":4487:4672  function setVaultLogic(address newVaultLogic) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_121\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      tag_228\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_229\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contracts/VaultFactoryImplementation.sol\":4217:4301  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_237\n      swap2\n      dup2\n      add\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x01\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_121\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_239:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1966:1991   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1939:1957   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      tag_121\n        /* \"#utility.yul\":1820:1997   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_121\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_275\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_276\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_247\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_279\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_132\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_282\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_121\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_288:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_292\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_296\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_295)\n    tag_296:\n      0x60\n      swap2\n      pop\n    tag_295:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_305)\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_121\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_307:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":222:395   */\n    tag_312:\n        /* \"#utility.yul\":290:310   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":339:370   */\n      dup2\n      and\n        /* \"#utility.yul\":329:371   */\n      dup2\n      eq\n        /* \"#utility.yul\":319:389   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":385:386   */\n      0x00\n        /* \"#utility.yul\":382:383   */\n      0x00\n        /* \"#utility.yul\":375:387   */\n      revert\n        /* \"#utility.yul\":319:389   */\n    tag_321:\n        /* \"#utility.yul\":222:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":400:660   */\n    tag_31:\n        /* \"#utility.yul\":468:474   */\n      0x00\n        /* \"#utility.yul\":476:482   */\n      0x00\n        /* \"#utility.yul\":529:531   */\n      0x40\n        /* \"#utility.yul\":517:526   */\n      dup4\n        /* \"#utility.yul\":508:515   */\n      dup6\n        /* \"#utility.yul\":504:527   */\n      sub\n        /* \"#utility.yul\":500:532   */\n      slt\n        /* \"#utility.yul\":497:549   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":542:543   */\n      0x00\n        /* \"#utility.yul\":535:547   */\n      revert\n        /* \"#utility.yul\":497:549   */\n    tag_323:\n        /* \"#utility.yul\":568:597   */\n      tag_324\n        /* \"#utility.yul\":587:596   */\n      dup4\n        /* \"#utility.yul\":568:597   */\n      tag_312\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":558:597   */\n      swap2\n      pop\n        /* \"#utility.yul\":616:654   */\n      tag_325\n        /* \"#utility.yul\":650:652   */\n      0x20\n        /* \"#utility.yul\":639:648   */\n      dup5\n        /* \"#utility.yul\":635:653   */\n      add\n        /* \"#utility.yul\":616:654   */\n      tag_312\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":606:654   */\n      swap1\n      pop\n        /* \"#utility.yul\":400:660   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:792   */\n    tag_313:\n        /* \"#utility.yul\":726:736   */\n      0x4e487b71\n        /* \"#utility.yul\":721:724   */\n      0xe0\n        /* \"#utility.yul\":717:737   */\n      shl\n        /* \"#utility.yul\":714:715   */\n      0x00\n        /* \"#utility.yul\":707:738   */\n      mstore\n        /* \"#utility.yul\":757:761   */\n      0x41\n        /* \"#utility.yul\":754:755   */\n      0x04\n        /* \"#utility.yul\":747:762   */\n      mstore\n        /* \"#utility.yul\":781:785   */\n      0x24\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":771:786   */\n      revert\n        /* \"#utility.yul\":797:1815   */\n    tag_39:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      0x00\n        /* \"#utility.yul\":935:937   */\n      0x40\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":914:921   */\n      dup6\n        /* \"#utility.yul\":910:933   */\n      sub\n        /* \"#utility.yul\":906:938   */\n      slt\n        /* \"#utility.yul\":903:955   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":948:949   */\n      0x00\n        /* \"#utility.yul\":941:953   */\n      revert\n        /* \"#utility.yul\":903:955   */\n    tag_328:\n        /* \"#utility.yul\":974:1003   */\n      tag_329\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":974:1003   */\n      tag_312\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":964:1003   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1056   */\n      0x20\n        /* \"#utility.yul\":1043:1052   */\n      dup4\n        /* \"#utility.yul\":1039:1057   */\n      add\n        /* \"#utility.yul\":1026:1058   */\n      calldataload\n        /* \"#utility.yul\":1081:1099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1073:1079   */\n      dup2\n        /* \"#utility.yul\":1070:1100   */\n      gt\n        /* \"#utility.yul\":1067:1117   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1113:1114   */\n      0x00\n        /* \"#utility.yul\":1110:1111   */\n      0x00\n        /* \"#utility.yul\":1103:1115   */\n      revert\n        /* \"#utility.yul\":1067:1117   */\n    tag_330:\n        /* \"#utility.yul\":1136:1158   */\n      dup4\n      add\n        /* \"#utility.yul\":1189:1193   */\n      0x1f\n        /* \"#utility.yul\":1181:1194   */\n      dup2\n      add\n        /* \"#utility.yul\":1177:1204   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1167:1222   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1167:1222   */\n    tag_331:\n        /* \"#utility.yul\":1258:1260   */\n      dup1\n        /* \"#utility.yul\":1245:1261   */\n      calldataload\n        /* \"#utility.yul\":1284:1302   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1276:1282   */\n      dup2\n        /* \"#utility.yul\":1273:1303   */\n      gt\n        /* \"#utility.yul\":1270:1326   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":1306:1324   */\n      tag_333\n      tag_313\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1355:1357   */\n      0x40\n        /* \"#utility.yul\":1349:1358   */\n      mload\n        /* \"#utility.yul\":1447:1449   */\n      0x1f\n        /* \"#utility.yul\":1409:1426   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1405:1436   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1438:1440   */\n      0x3f\n        /* \"#utility.yul\":1401:1441   */\n      add\n        /* \"#utility.yul\":1397:1451   */\n      and\n        /* \"#utility.yul\":1385:1452   */\n      dup2\n      add\n        /* \"#utility.yul\":1482:1500   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1467:1501   */\n      dup2\n      gt\n        /* \"#utility.yul\":1503:1525   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1464:1526   */\n      or\n        /* \"#utility.yul\":1461:1549   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1529:1547   */\n      tag_335\n      tag_313\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1565:1567   */\n      0x40\n        /* \"#utility.yul\":1558:1580   */\n      mstore\n        /* \"#utility.yul\":1589:1611   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1630:1645   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1647:1649   */\n      0x20\n        /* \"#utility.yul\":1626:1650   */\n      add\n        /* \"#utility.yul\":1623:1660   */\n      dup8\n      lt\n        /* \"#utility.yul\":1620:1677   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1673:1674   */\n      0x00\n        /* \"#utility.yul\":1670:1671   */\n      0x00\n        /* \"#utility.yul\":1663:1675   */\n      revert\n        /* \"#utility.yul\":1620:1677   */\n    tag_336:\n        /* \"#utility.yul\":1729:1735   */\n      dup2\n        /* \"#utility.yul\":1724:1726   */\n      0x20\n        /* \"#utility.yul\":1720:1722   */\n      dup5\n        /* \"#utility.yul\":1716:1727   */\n      add\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"#utility.yul\":1703:1709   */\n      dup4\n        /* \"#utility.yul\":1699:1714   */\n      add\n        /* \"#utility.yul\":1686:1736   */\n      calldatacopy\n        /* \"#utility.yul\":1782:1783   */\n      0x00\n        /* \"#utility.yul\":1777:1779   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1760:1766   */\n      dup4\n        /* \"#utility.yul\":1756:1775   */\n      add\n        /* \"#utility.yul\":1752:1780   */\n      add\n        /* \"#utility.yul\":1745:1784   */\n      mstore\n        /* \"#utility.yul\":1803:1809   */\n      dup1\n        /* \"#utility.yul\":1793:1809   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":797:1815   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2002:2182   */\n    tag_60:\n        /* \"#utility.yul\":2061:2067   */\n      0x00\n        /* \"#utility.yul\":2114:2116   */\n      0x20\n        /* \"#utility.yul\":2102:2111   */\n      dup3\n        /* \"#utility.yul\":2093:2100   */\n      dup5\n        /* \"#utility.yul\":2089:2112   */\n      sub\n        /* \"#utility.yul\":2085:2117   */\n      slt\n        /* \"#utility.yul\":2082:2134   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2120:2132   */\n      revert\n        /* \"#utility.yul\":2082:2134   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":2153:2176   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2002:2182   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2824   */\n    tag_72:\n        /* \"#utility.yul\":2377:2379   */\n      0x20\n        /* \"#utility.yul\":2389:2410   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2459:2472   */\n      dup3\n      mload\n        /* \"#utility.yul\":2362:2380   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2481:2503   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2329:2333   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2560:2575   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2534:2536   */\n      0x40\n        /* \"#utility.yul\":2519:2537   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2329:2333   */\n      dup4\n        /* \"#utility.yul\":2603:2798   */\n    tag_341:\n        /* \"#utility.yul\":2617:2623   */\n      dup2\n        /* \"#utility.yul\":2614:2615   */\n      dup2\n        /* \"#utility.yul\":2611:2624   */\n      lt\n        /* \"#utility.yul\":2603:2798   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2682:2695   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2678:2717   */\n      and\n        /* \"#utility.yul\":2666:2718   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2747:2749   */\n      0x20\n        /* \"#utility.yul\":2773:2788   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2738:2750   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2714:2715   */\n      0x01\n        /* \"#utility.yul\":2632:2641   */\n      add\n        /* \"#utility.yul\":2603:2798   */\n      jump(tag_341)\n    tag_343:\n      pop\n        /* \"#utility.yul\":2815:2818   */\n      swap1\n      swap6\n        /* \"#utility.yul\":2187:2824   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3011:3345   */\n    tag_81:\n        /* \"#utility.yul\":3088:3094   */\n      0x00\n        /* \"#utility.yul\":3096:3102   */\n      0x00\n        /* \"#utility.yul\":3104:3110   */\n      0x00\n        /* \"#utility.yul\":3157:3159   */\n      0x60\n        /* \"#utility.yul\":3145:3154   */\n      dup5\n        /* \"#utility.yul\":3136:3143   */\n      dup7\n        /* \"#utility.yul\":3132:3155   */\n      sub\n        /* \"#utility.yul\":3128:3160   */\n      slt\n        /* \"#utility.yul\":3125:3177   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3173:3174   */\n      0x00\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3163:3175   */\n      revert\n        /* \"#utility.yul\":3125:3177   */\n    tag_346:\n        /* \"#utility.yul\":3196:3225   */\n      tag_347\n        /* \"#utility.yul\":3215:3224   */\n      dup5\n        /* \"#utility.yul\":3196:3225   */\n      tag_312\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3186:3225   */\n      swap3\n      pop\n        /* \"#utility.yul\":3244:3282   */\n      tag_348\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3267:3276   */\n      dup6\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"#utility.yul\":3244:3282   */\n      tag_312\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3234:3282   */\n      swap2\n      pop\n        /* \"#utility.yul\":3301:3339   */\n      tag_349\n        /* \"#utility.yul\":3335:3337   */\n      0x40\n        /* \"#utility.yul\":3324:3333   */\n      dup6\n        /* \"#utility.yul\":3320:3338   */\n      add\n        /* \"#utility.yul\":3301:3339   */\n      tag_312\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3291:3339   */\n      swap1\n      pop\n        /* \"#utility.yul\":3011:3345   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3350:3600   */\n    tag_314:\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3445:3558   */\n    tag_351:\n        /* \"#utility.yul\":3459:3465   */\n      dup4\n        /* \"#utility.yul\":3456:3457   */\n      dup2\n        /* \"#utility.yul\":3453:3466   */\n      lt\n        /* \"#utility.yul\":3445:3558   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3535:3546   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3529:3547   */\n      mload\n        /* \"#utility.yul\":3516:3527   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3509:3548   */\n      mstore\n        /* \"#utility.yul\":3481:3483   */\n      0x20\n        /* \"#utility.yul\":3474:3484   */\n      add\n        /* \"#utility.yul\":3445:3558   */\n      jump(tag_351)\n    tag_353:\n      pop\n      pop\n        /* \"#utility.yul\":3592:3593   */\n      0x00\n        /* \"#utility.yul\":3574:3590   */\n      swap2\n      add\n        /* \"#utility.yul\":3567:3594   */\n      mstore\n        /* \"#utility.yul\":3350:3600   */\n      jump\t// out\n        /* \"#utility.yul\":3605:3876   */\n    tag_315:\n        /* \"#utility.yul\":3647:3650   */\n      0x00\n        /* \"#utility.yul\":3685:3690   */\n      dup2\n        /* \"#utility.yul\":3679:3691   */\n      mload\n        /* \"#utility.yul\":3712:3718   */\n      dup1\n        /* \"#utility.yul\":3707:3710   */\n      dup5\n        /* \"#utility.yul\":3700:3719   */\n      mstore\n        /* \"#utility.yul\":3728:3804   */\n      tag_355\n        /* \"#utility.yul\":3797:3803   */\n      dup2\n        /* \"#utility.yul\":3790:3794   */\n      0x20\n        /* \"#utility.yul\":3785:3788   */\n      dup7\n        /* \"#utility.yul\":3781:3795   */\n      add\n        /* \"#utility.yul\":3774:3778   */\n      0x20\n        /* \"#utility.yul\":3767:3772   */\n      dup7\n        /* \"#utility.yul\":3763:3779   */\n      add\n        /* \"#utility.yul\":3728:3804   */\n      tag_314\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3858:3860   */\n      0x1f\n        /* \"#utility.yul\":3837:3852   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3833:3862   */\n      and\n        /* \"#utility.yul\":3824:3863   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3865:3869   */\n      0x20\n        /* \"#utility.yul\":3820:3870   */\n      add\n      swap3\n        /* \"#utility.yul\":3605:3876   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3881:4101   */\n    tag_87:\n        /* \"#utility.yul\":4030:4032   */\n      0x20\n        /* \"#utility.yul\":4019:4028   */\n      dup2\n        /* \"#utility.yul\":4012:4033   */\n      mstore\n        /* \"#utility.yul\":3993:3997   */\n      0x00\n        /* \"#utility.yul\":4050:4095   */\n      tag_305\n        /* \"#utility.yul\":4091:4093   */\n      0x20\n        /* \"#utility.yul\":4080:4089   */\n      dup4\n        /* \"#utility.yul\":4076:4094   */\n      add\n        /* \"#utility.yul\":4068:4074   */\n      dup5\n        /* \"#utility.yul\":4050:4095   */\n      tag_315\n      jump\t// in\n        /* \"#utility.yul\":4106:4454   */\n    tag_316:\n        /* \"#utility.yul\":4158:4166   */\n      0x00\n        /* \"#utility.yul\":4168:4174   */\n      0x00\n        /* \"#utility.yul\":4222:4225   */\n      dup4\n        /* \"#utility.yul\":4215:4219   */\n      0x1f\n        /* \"#utility.yul\":4207:4213   */\n      dup5\n        /* \"#utility.yul\":4203:4220   */\n      add\n        /* \"#utility.yul\":4199:4226   */\n      slt\n        /* \"#utility.yul\":4189:4244   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":4240:4241   */\n      0x00\n        /* \"#utility.yul\":4237:4238   */\n      0x00\n        /* \"#utility.yul\":4230:4242   */\n      revert\n        /* \"#utility.yul\":4189:4244   */\n    tag_359:\n      pop\n        /* \"#utility.yul\":4263:4283   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":4306:4324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4295:4325   */\n      dup2\n      gt\n        /* \"#utility.yul\":4292:4342   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":4338:4339   */\n      0x00\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4328:4340   */\n      revert\n        /* \"#utility.yul\":4292:4342   */\n    tag_360:\n        /* \"#utility.yul\":4375:4379   */\n      0x20\n        /* \"#utility.yul\":4367:4373   */\n      dup4\n        /* \"#utility.yul\":4363:4380   */\n      add\n        /* \"#utility.yul\":4351:4380   */\n      swap2\n      pop\n        /* \"#utility.yul\":4427:4430   */\n      dup4\n        /* \"#utility.yul\":4420:4424   */\n      0x20\n        /* \"#utility.yul\":4411:4417   */\n      dup3\n        /* \"#utility.yul\":4403:4409   */\n      dup6\n        /* \"#utility.yul\":4399:4418   */\n      add\n        /* \"#utility.yul\":4395:4425   */\n      add\n        /* \"#utility.yul\":4392:4431   */\n      gt\n        /* \"#utility.yul\":4389:4448   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4444:4445   */\n      0x00\n        /* \"#utility.yul\":4441:4442   */\n      0x00\n        /* \"#utility.yul\":4434:4446   */\n      revert\n        /* \"#utility.yul\":4389:4448   */\n    tag_361:\n        /* \"#utility.yul\":4106:4454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4459:5549   */\n    tag_95:\n        /* \"#utility.yul\":4596:4602   */\n      0x00\n        /* \"#utility.yul\":4604:4610   */\n      0x00\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      0x00\n        /* \"#utility.yul\":4628:4634   */\n      0x00\n        /* \"#utility.yul\":4636:4642   */\n      0x00\n        /* \"#utility.yul\":4644:4650   */\n      0x00\n        /* \"#utility.yul\":4652:4658   */\n      0x00\n        /* \"#utility.yul\":4660:4666   */\n      0x00\n        /* \"#utility.yul\":4713:4716   */\n      0xe0\n        /* \"#utility.yul\":4701:4710   */\n      dup11\n        /* \"#utility.yul\":4692:4699   */\n      dup13\n        /* \"#utility.yul\":4688:4711   */\n      sub\n        /* \"#utility.yul\":4684:4717   */\n      slt\n        /* \"#utility.yul\":4681:4734   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4727:4728   */\n      0x00\n        /* \"#utility.yul\":4720:4732   */\n      revert\n        /* \"#utility.yul\":4681:4734   */\n    tag_363:\n        /* \"#utility.yul\":4753:4782   */\n      tag_364\n        /* \"#utility.yul\":4772:4781   */\n      dup11\n        /* \"#utility.yul\":4753:4782   */\n      tag_312\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4743:4782   */\n      swap9\n      pop\n        /* \"#utility.yul\":4801:4839   */\n      tag_365\n        /* \"#utility.yul\":4835:4837   */\n      0x20\n        /* \"#utility.yul\":4824:4833   */\n      dup12\n        /* \"#utility.yul\":4820:4838   */\n      add\n        /* \"#utility.yul\":4801:4839   */\n      tag_312\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4791:4839   */\n      swap8\n      pop\n        /* \"#utility.yul\":4858:4896   */\n      tag_366\n        /* \"#utility.yul\":4892:4894   */\n      0x40\n        /* \"#utility.yul\":4881:4890   */\n      dup12\n        /* \"#utility.yul\":4877:4895   */\n      add\n        /* \"#utility.yul\":4858:4896   */\n      tag_312\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4848:4896   */\n      swap7\n      pop\n        /* \"#utility.yul\":4915:4953   */\n      tag_367\n        /* \"#utility.yul\":4949:4951   */\n      0x60\n        /* \"#utility.yul\":4938:4947   */\n      dup12\n        /* \"#utility.yul\":4934:4952   */\n      add\n        /* \"#utility.yul\":4915:4953   */\n      tag_312\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4905:4953   */\n      swap6\n      pop\n        /* \"#utility.yul\":4972:5011   */\n      tag_368\n        /* \"#utility.yul\":5006:5009   */\n      0x80\n        /* \"#utility.yul\":4995:5004   */\n      dup12\n        /* \"#utility.yul\":4991:5010   */\n      add\n        /* \"#utility.yul\":4972:5011   */\n      tag_312\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4962:5011   */\n      swap5\n      pop\n        /* \"#utility.yul\":5062:5065   */\n      0xa0\n        /* \"#utility.yul\":5051:5060   */\n      dup11\n        /* \"#utility.yul\":5047:5066   */\n      add\n        /* \"#utility.yul\":5034:5067   */\n      calldataload\n        /* \"#utility.yul\":5090:5108   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5082:5088   */\n      dup2\n        /* \"#utility.yul\":5079:5109   */\n      gt\n        /* \"#utility.yul\":5076:5126   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      0x00\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5076:5126   */\n    tag_369:\n        /* \"#utility.yul\":5161:5220   */\n      tag_370\n        /* \"#utility.yul\":5212:5219   */\n      dup13\n        /* \"#utility.yul\":5203:5209   */\n      dup3\n        /* \"#utility.yul\":5192:5201   */\n      dup14\n        /* \"#utility.yul\":5188:5210   */\n      add\n        /* \"#utility.yul\":5161:5220   */\n      tag_316\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5239:5247   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":5135:5220   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":5327:5330   */\n      0xc0\n        /* \"#utility.yul\":5312:5331   */\n      dup11\n      add\n        /* \"#utility.yul\":5299:5332   */\n      calldataload\n        /* \"#utility.yul\":5357:5375   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5344:5376   */\n      dup2\n      gt\n        /* \"#utility.yul\":5341:5393   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":5389:5390   */\n      0x00\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5379:5391   */\n      revert\n        /* \"#utility.yul\":5341:5393   */\n    tag_371:\n        /* \"#utility.yul\":5428:5489   */\n      tag_372\n        /* \"#utility.yul\":5481:5488   */\n      dup13\n        /* \"#utility.yul\":5470:5478   */\n      dup3\n        /* \"#utility.yul\":5459:5468   */\n      dup14\n        /* \"#utility.yul\":5455:5479   */\n      add\n        /* \"#utility.yul\":5428:5489   */\n      tag_316\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5402:5489   */\n      swap2\n      pop\n        /* \"#utility.yul\":5508:5516   */\n      dup1\n        /* \"#utility.yul\":5498:5516   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":5535:5543   */\n      dup1\n        /* \"#utility.yul\":5525:5543   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4459:5549   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      jump\t// out\n        /* \"#utility.yul\":5554:5740   */\n    tag_101:\n        /* \"#utility.yul\":5613:5619   */\n      0x00\n        /* \"#utility.yul\":5666:5668   */\n      0x20\n        /* \"#utility.yul\":5654:5663   */\n      dup3\n        /* \"#utility.yul\":5645:5652   */\n      dup5\n        /* \"#utility.yul\":5641:5664   */\n      sub\n        /* \"#utility.yul\":5637:5669   */\n      slt\n        /* \"#utility.yul\":5634:5686   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5682:5683   */\n      0x00\n        /* \"#utility.yul\":5679:5680   */\n      0x00\n        /* \"#utility.yul\":5672:5684   */\n      revert\n        /* \"#utility.yul\":5634:5686   */\n    tag_374:\n        /* \"#utility.yul\":5705:5734   */\n      tag_305\n        /* \"#utility.yul\":5724:5733   */\n      dup3\n        /* \"#utility.yul\":5705:5734   */\n      tag_312\n      jump\t// in\n        /* \"#utility.yul\":6675:6802   */\n    tag_155:\n        /* \"#utility.yul\":6736:6746   */\n      0x4e487b71\n        /* \"#utility.yul\":6731:6734   */\n      0xe0\n        /* \"#utility.yul\":6727:6747   */\n      shl\n        /* \"#utility.yul\":6724:6725   */\n      0x00\n        /* \"#utility.yul\":6717:6748   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x32\n        /* \"#utility.yul\":6764:6765   */\n      0x04\n        /* \"#utility.yul\":6757:6772   */\n      mstore\n        /* \"#utility.yul\":6791:6795   */\n      0x24\n        /* \"#utility.yul\":6788:6789   */\n      0x00\n        /* \"#utility.yul\":6781:6796   */\n      revert\n        /* \"#utility.yul\":10111:10378   */\n    tag_317:\n        /* \"#utility.yul\":10200:10206   */\n      dup2\n        /* \"#utility.yul\":10195:10198   */\n      dup4\n        /* \"#utility.yul\":10188:10207   */\n      mstore\n        /* \"#utility.yul\":10252:10258   */\n      dup2\n        /* \"#utility.yul\":10245:10250   */\n      dup2\n        /* \"#utility.yul\":10238:10242   */\n      0x20\n        /* \"#utility.yul\":10233:10236   */\n      dup6\n        /* \"#utility.yul\":10229:10243   */\n      add\n        /* \"#utility.yul\":10216:10259   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":10304:10305   */\n      0x00\n        /* \"#utility.yul\":10279:10295   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10297:10301   */\n      0x20\n        /* \"#utility.yul\":10275:10302   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10268:10306   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10360:10362   */\n      0x1f\n        /* \"#utility.yul\":10339:10354   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10335:10364   */\n      and\n        /* \"#utility.yul\":10326:10365   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10322:10372   */\n      add\n      swap1\n        /* \"#utility.yul\":10111:10378   */\n      jump\t// out\n        /* \"#utility.yul\":10383:11408   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10768:10800   */\n      dup12\n      dup2\n      and\n        /* \"#utility.yul\":10750:10801   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10837:10869   */\n      dup11\n      dup2\n      and\n        /* \"#utility.yul\":10832:10834   */\n      0x20\n        /* \"#utility.yul\":10817:10835   */\n      dup4\n      add\n        /* \"#utility.yul\":10810:10870   */\n      mstore\n        /* \"#utility.yul\":10906:10938   */\n      dup10\n      dup2\n      and\n        /* \"#utility.yul\":10901:10903   */\n      0x40\n        /* \"#utility.yul\":10886:10904   */\n      dup4\n      add\n        /* \"#utility.yul\":10879:10939   */\n      mstore\n        /* \"#utility.yul\":10975:11007   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":10970:10972   */\n      0x60\n        /* \"#utility.yul\":10955:10973   */\n      dup4\n      add\n        /* \"#utility.yul\":10948:11008   */\n      mstore\n        /* \"#utility.yul\":11045:11077   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":11039:11042   */\n      0x80\n        /* \"#utility.yul\":11024:11043   */\n      dup4\n      add\n        /* \"#utility.yul\":11017:11078   */\n      mstore\n        /* \"#utility.yul\":11115:11147   */\n      dup7\n      and\n        /* \"#utility.yul\":10788:10791   */\n      0xa0\n        /* \"#utility.yul\":11094:11113   */\n      dup3\n      add\n        /* \"#utility.yul\":11087:11148   */\n      mstore\n        /* \"#utility.yul\":11185:11188   */\n      0x0100\n        /* \"#utility.yul\":11179:11182   */\n      0xc0\n        /* \"#utility.yul\":11164:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11157:11189   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":11212:11275   */\n      tag_391\n      swap1\n        /* \"#utility.yul\":11255:11274   */\n      dup4\n      add\n        /* \"#utility.yul\":11247:11253   */\n      dup7\n        /* \"#utility.yul\":11239:11245   */\n      dup9\n        /* \"#utility.yul\":11212:11275   */\n      tag_317\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11324:11333   */\n      dup3\n        /* \"#utility.yul\":11316:11322   */\n      dup2\n        /* \"#utility.yul\":11312:11334   */\n      sub\n        /* \"#utility.yul\":11306:11309   */\n      0xe0\n        /* \"#utility.yul\":11295:11304   */\n      dup5\n        /* \"#utility.yul\":11291:11310   */\n      add\n        /* \"#utility.yul\":11284:11335   */\n      mstore\n        /* \"#utility.yul\":11352:11402   */\n      tag_392\n        /* \"#utility.yul\":11395:11401   */\n      dup2\n        /* \"#utility.yul\":11387:11393   */\n      dup6\n        /* \"#utility.yul\":11379:11385   */\n      dup8\n        /* \"#utility.yul\":11352:11402   */\n      tag_317\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11344:11402   */\n      swap14\n        /* \"#utility.yul\":10383:11408   */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11413:11728   */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11588:11620   */\n      dup4\n      and\n        /* \"#utility.yul\":11570:11621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11657:11659   */\n      0x40\n        /* \"#utility.yul\":11652:11654   */\n      0x20\n        /* \"#utility.yul\":11637:11655   */\n      dup3\n      add\n        /* \"#utility.yul\":11630:11660   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":11677:11722   */\n      tag_394\n      swap1\n        /* \"#utility.yul\":11703:11721   */\n      dup4\n      add\n        /* \"#utility.yul\":11695:11701   */\n      dup5\n        /* \"#utility.yul\":11677:11722   */\n      tag_315\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11669:11722   */\n      swap5\n        /* \"#utility.yul\":11413:11728   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12089:12273   */\n    tag_238:\n        /* \"#utility.yul\":12159:12165   */\n      0x00\n        /* \"#utility.yul\":12212:12214   */\n      0x20\n        /* \"#utility.yul\":12200:12209   */\n      dup3\n        /* \"#utility.yul\":12191:12198   */\n      dup5\n        /* \"#utility.yul\":12187:12210   */\n      sub\n        /* \"#utility.yul\":12183:12215   */\n      slt\n        /* \"#utility.yul\":12180:12232   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12228:12229   */\n      0x00\n        /* \"#utility.yul\":12225:12226   */\n      0x00\n        /* \"#utility.yul\":12218:12230   */\n      revert\n        /* \"#utility.yul\":12180:12232   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":12251:12267   */\n      mload\n      swap2\n        /* \"#utility.yul\":12089:12273   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12278:12565   */\n    tag_293:\n        /* \"#utility.yul\":12407:12410   */\n      0x00\n        /* \"#utility.yul\":12445:12451   */\n      dup3\n        /* \"#utility.yul\":12439:12452   */\n      mload\n        /* \"#utility.yul\":12461:12527   */\n      tag_399\n        /* \"#utility.yul\":12520:12526   */\n      dup2\n        /* \"#utility.yul\":12515:12518   */\n      dup5\n        /* \"#utility.yul\":12508:12512   */\n      0x20\n        /* \"#utility.yul\":12500:12506   */\n      dup8\n        /* \"#utility.yul\":12496:12513   */\n      add\n        /* \"#utility.yul\":12461:12527   */\n      tag_314\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12543:12559   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":12278:12565   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    sub_0: assembly {\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n          mstore(0x40, 0x80)\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          dup2\n          swap1\n          mstore\n          tag_1\n          swap2\n          tag_2\n          jump\t// in\n        tag_1:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n          tag_5\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1185:1199  implementation */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1201:1206  _data */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n          tag_6\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n          jump\t// in\n        tag_5:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n          pop\n          pop\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n          jump(tag_47)\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n        tag_6:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n          tag_9\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n          tag_10\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n          jump\t// in\n        tag_9:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup4\n          and\n          swap1\n          0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n          swap1\n          0x00\n          swap1\n          log2\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n          dup1\n          mload\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n          tag_11\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n          tag_12\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n          tag_13\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n          jump\t// in\n        tag_12:\n          pop\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n        tag_11:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n          tag_15\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n          tag_16\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n          jump\t// in\n        tag_15:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n        tag_10:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n          dup1\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n          and\n          extcodesize\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n          0x00\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n          sub\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n          tag_18\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n          mload(0x40)\n          shl(0xe0, 0x4c9c8ce3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":1652:1684   */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":1634:1685   */\n          mstore\n            /* \"#utility.yul\":1607:1625   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n        tag_19:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n        tag_18:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n          0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          and\n          sub(shl(0xa0, 0x01), 0x01)\n          swap3\n          swap1\n          swap3\n          and\n          swap2\n          swap1\n          swap2\n          or\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n        tag_13:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n          0x60\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n          dup5\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n          and\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n          dup5\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n          mload(0x40)\n          tag_24\n          swap2\n          swap1\n          tag_25\n          jump\t// in\n        tag_24:\n          0x00\n          mload(0x40)\n          dup1\n          dup4\n          sub\n          dup2\n          dup6\n          gas\n          delegatecall\n          swap2\n          pop\n          pop\n          returndatasize\n          dup1\n          0x00\n          dup2\n          eq\n          tag_28\n          jumpi\n          mload(0x40)\n          swap2\n          pop\n          and(add(returndatasize, 0x3f), not(0x1f))\n          dup3\n          add\n          0x40\n          mstore\n          returndatasize\n          dup3\n          mstore\n          returndatasize\n          0x00\n          0x20\n          dup5\n          add\n          returndatacopy\n          jump(tag_27)\n        tag_28:\n          0x60\n          swap2\n          pop\n        tag_27:\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n          swap1\n          swap3\n          pop\n          swap1\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n          tag_29\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n          dup6\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n          dup4\n          dup4\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n          tag_30\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n          jump\t// in\n        tag_29:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n          swap6\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n          swap5\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n        tag_16:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n          tag_32\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n          mload(0x40)\n          shl(0xe0, 0xb398979f)\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n        tag_32:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n        tag_30:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n          0x60\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n          tag_35\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n          tag_36\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n          tag_37\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n          jump\t// in\n        tag_36:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n          jump(tag_38)\n        tag_35:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n          dup2\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n          dup1\n          iszero\n          tag_39\n          jumpi\n          pop\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n          dup5\n          and\n          extcodesize\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n        tag_39:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n          iszero\n          tag_40\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n          mload(0x40)\n          shl(0xe0, 0x9996b315)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":1652:1684   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":1634:1685   */\n          mstore\n            /* \"#utility.yul\":1607:1625   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n          tag_19\n            /* \"#utility.yul\":1488:1691   */\n          jump\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n        tag_40:\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n        tag_38:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n          swap4\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n        tag_37:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n          dup1\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n          tag_43\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n          0x20\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n          add\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n          revert\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n        tag_43:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n          mload(0x40)\n          shl(0xe0, 0xd6bda275)\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"#utility.yul\":14:141   */\n        tag_45:\n            /* \"#utility.yul\":75:85   */\n          0x4e487b71\n            /* \"#utility.yul\":70:73   */\n          0xe0\n            /* \"#utility.yul\":66:86   */\n          shl\n            /* \"#utility.yul\":63:64   */\n          0x00\n            /* \"#utility.yul\":56:87   */\n          mstore\n            /* \"#utility.yul\":106:110   */\n          0x41\n            /* \"#utility.yul\":103:104   */\n          0x04\n            /* \"#utility.yul\":96:111   */\n          mstore\n            /* \"#utility.yul\":130:134   */\n          0x24\n            /* \"#utility.yul\":127:128   */\n          0x00\n            /* \"#utility.yul\":120:135   */\n          revert\n            /* \"#utility.yul\":146:396   */\n        tag_46:\n            /* \"#utility.yul\":231:232   */\n          0x00\n            /* \"#utility.yul\":241:354   */\n        tag_50:\n            /* \"#utility.yul\":255:261   */\n          dup4\n            /* \"#utility.yul\":252:253   */\n          dup2\n            /* \"#utility.yul\":249:262   */\n          lt\n            /* \"#utility.yul\":241:354   */\n          iszero\n          tag_52\n          jumpi\n            /* \"#utility.yul\":331:342   */\n          dup2\n          dup2\n          add\n            /* \"#utility.yul\":325:343   */\n          mload\n            /* \"#utility.yul\":312:323   */\n          dup4\n          dup3\n          add\n            /* \"#utility.yul\":305:344   */\n          mstore\n            /* \"#utility.yul\":277:279   */\n          0x20\n            /* \"#utility.yul\":270:280   */\n          add\n            /* \"#utility.yul\":241:354   */\n          jump(tag_50)\n        tag_52:\n          pop\n          pop\n            /* \"#utility.yul\":388:389   */\n          0x00\n            /* \"#utility.yul\":370:386   */\n          swap2\n          add\n            /* \"#utility.yul\":363:390   */\n          mstore\n            /* \"#utility.yul\":146:396   */\n          jump\t// out\n            /* \"#utility.yul\":401:1483   */\n        tag_2:\n            /* \"#utility.yul\":489:495   */\n          0x00\n            /* \"#utility.yul\":497:503   */\n          0x00\n            /* \"#utility.yul\":550:552   */\n          0x40\n            /* \"#utility.yul\":538:547   */\n          dup4\n            /* \"#utility.yul\":529:536   */\n          dup6\n            /* \"#utility.yul\":525:548   */\n          sub\n            /* \"#utility.yul\":521:553   */\n          slt\n            /* \"#utility.yul\":518:570   */\n          iszero\n          tag_54\n          jumpi\n            /* \"#utility.yul\":566:567   */\n          0x00\n            /* \"#utility.yul\":563:564   */\n          0x00\n            /* \"#utility.yul\":556:568   */\n          revert\n            /* \"#utility.yul\":518:570   */\n        tag_54:\n            /* \"#utility.yul\":592:608   */\n          dup3\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":637:668   */\n          dup2\n          and\n            /* \"#utility.yul\":627:669   */\n          dup2\n          eq\n            /* \"#utility.yul\":617:687   */\n          tag_55\n          jumpi\n            /* \"#utility.yul\":683:684   */\n          0x00\n            /* \"#utility.yul\":680:681   */\n          0x00\n            /* \"#utility.yul\":673:685   */\n          revert\n            /* \"#utility.yul\":617:687   */\n        tag_55:\n            /* \"#utility.yul\":755:757   */\n          0x20\n            /* \"#utility.yul\":740:758   */\n          dup5\n          add\n            /* \"#utility.yul\":734:759   */\n          mload\n            /* \"#utility.yul\":706:711   */\n          swap1\n          swap3\n          pop\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":771:801   */\n          dup2\n          gt\n            /* \"#utility.yul\":768:818   */\n          iszero\n          tag_56\n          jumpi\n            /* \"#utility.yul\":814:815   */\n          0x00\n            /* \"#utility.yul\":811:812   */\n          0x00\n            /* \"#utility.yul\":804:816   */\n          revert\n            /* \"#utility.yul\":768:818   */\n        tag_56:\n            /* \"#utility.yul\":837:859   */\n          dup4\n          add\n            /* \"#utility.yul\":890:894   */\n          0x1f\n            /* \"#utility.yul\":882:895   */\n          dup2\n          add\n            /* \"#utility.yul\":878:905   */\n          dup6\n          sgt\n            /* \"#utility.yul\":868:923   */\n          tag_57\n          jumpi\n            /* \"#utility.yul\":919:920   */\n          0x00\n            /* \"#utility.yul\":916:917   */\n          0x00\n            /* \"#utility.yul\":909:921   */\n          revert\n            /* \"#utility.yul\":868:923   */\n        tag_57:\n            /* \"#utility.yul\":946:955   */\n          dup1\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":967:997   */\n          dup2\n          gt\n            /* \"#utility.yul\":964:1020   */\n          iszero\n          tag_59\n          jumpi\n            /* \"#utility.yul\":1000:1018   */\n          tag_59\n          tag_45\n          jump\t// in\n        tag_59:\n            /* \"#utility.yul\":1049:1051   */\n          0x40\n            /* \"#utility.yul\":1043:1052   */\n          mload\n            /* \"#utility.yul\":1141:1143   */\n          0x1f\n            /* \"#utility.yul\":1103:1120   */\n          dup3\n          add\n          not(0x1f)\n            /* \"#utility.yul\":1099:1130   */\n          swap1\n          dup2\n          and\n            /* \"#utility.yul\":1132:1134   */\n          0x3f\n            /* \"#utility.yul\":1095:1135   */\n          add\n            /* \"#utility.yul\":1091:1145   */\n          and\n            /* \"#utility.yul\":1079:1146   */\n          dup2\n          add\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":1161:1195   */\n          dup2\n          gt\n            /* \"#utility.yul\":1197:1219   */\n          dup3\n          dup3\n          lt\n            /* \"#utility.yul\":1158:1220   */\n          or\n            /* \"#utility.yul\":1155:1243   */\n          iszero\n          tag_61\n          jumpi\n            /* \"#utility.yul\":1223:1241   */\n          tag_61\n          tag_45\n          jump\t// in\n        tag_61:\n            /* \"#utility.yul\":1259:1261   */\n          0x40\n            /* \"#utility.yul\":1252:1274   */\n          mstore\n            /* \"#utility.yul\":1283:1305   */\n          dup2\n          dup2\n          mstore\n            /* \"#utility.yul\":1324:1339   */\n          dup3\n          dup3\n          add\n            /* \"#utility.yul\":1341:1343   */\n          0x20\n            /* \"#utility.yul\":1320:1344   */\n          add\n            /* \"#utility.yul\":1317:1354   */\n          dup8\n          lt\n            /* \"#utility.yul\":1314:1371   */\n          iszero\n          tag_62\n          jumpi\n            /* \"#utility.yul\":1367:1368   */\n          0x00\n            /* \"#utility.yul\":1364:1365   */\n          0x00\n            /* \"#utility.yul\":1357:1369   */\n          revert\n            /* \"#utility.yul\":1314:1371   */\n        tag_62:\n            /* \"#utility.yul\":1380:1452   */\n          tag_63\n            /* \"#utility.yul\":1445:1451   */\n          dup3\n            /* \"#utility.yul\":1440:1442   */\n          0x20\n            /* \"#utility.yul\":1432:1438   */\n          dup4\n            /* \"#utility.yul\":1428:1443   */\n          add\n            /* \"#utility.yul\":1423:1425   */\n          0x20\n            /* \"#utility.yul\":1419:1421   */\n          dup7\n            /* \"#utility.yul\":1415:1426   */\n          add\n            /* \"#utility.yul\":1380:1452   */\n          tag_46\n          jump\t// in\n        tag_63:\n            /* \"#utility.yul\":1471:1477   */\n          dup1\n            /* \"#utility.yul\":1461:1477   */\n          swap4\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":401:1483   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1696:1983   */\n        tag_25:\n            /* \"#utility.yul\":1825:1828   */\n          0x00\n            /* \"#utility.yul\":1863:1869   */\n          dup3\n            /* \"#utility.yul\":1857:1870   */\n          mload\n            /* \"#utility.yul\":1879:1945   */\n          tag_66\n            /* \"#utility.yul\":1938:1944   */\n          dup2\n            /* \"#utility.yul\":1933:1936   */\n          dup5\n            /* \"#utility.yul\":1926:1930   */\n          0x20\n            /* \"#utility.yul\":1918:1924   */\n          dup8\n            /* \"#utility.yul\":1914:1931   */\n          add\n            /* \"#utility.yul\":1879:1945   */\n          tag_46\n          jump\t// in\n        tag_66:\n            /* \"#utility.yul\":1961:1977   */\n          swap2\n          swap1\n          swap2\n          add\n          swap3\n            /* \"#utility.yul\":1696:1983   */\n          swap2\n          pop\n          pop\n          jump\t// out\n        tag_47:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n              mstore(0x40, 0x80)\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n              tag_5\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n              tag_6\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n              jump\t// in\n            tag_5:\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n              stop\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n            tag_6:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n              tag_8\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n              tag_9\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n              tag_10\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n              jump\t// in\n            tag_9:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n              tag_11\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n              jump\t// in\n            tag_8:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n            tag_10:\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n              tag_13\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n              0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n              sload\n              sub(shl(0xa0, 0x01), 0x01)\n              and\n              swap1\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n              jump\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n            tag_13:\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n            tag_11:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n              calldatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n              calldatacopy\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n              calldatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n              dup5\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n              gas\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n              delegatecall\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n              dup1\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n              dup1\n              iszero\n              tag_17\n              jumpi\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n              return\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n            tag_17:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n              revert\n\n            auxdata: 0xa2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220a38eb14da0a2e82685da51f16bbb2460c01bb6d7a84ceecccdab5899cf78c48c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052306080523480156012575f5ffd5b506080516119726100395f395f8181610c3201528181610c5b0152610d9f01526119725ff3fe608060405260043610610105575f3560e01c80639403b63411610092578063ad3cb1cc11610062578063ad3cb1cc146102bb578063b078147a146102f8578063c363875714610316578063ecedd5bc14610335578063f2fde38b14610354575f5ffd5b80639403b6341461024857806397331bf914610267578063a7c6a10014610288578063ab31b6f31461029c575f5ffd5b806352d1902d116100d857806352d1902d14610198578063545851d7146101ba578063715018a6146101d95780638da5cb5b146101ed5780639094a91e14610229575f5ffd5b80633c46201d14610109578063485cc955146101455780634c39ad21146101665780634f1ef28614610185575b5f5ffd5b348015610114575f5ffd5b50600254610128906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610150575f5ffd5b5061016461015f3660046110f2565b610373565b005b348015610171575f5ffd5b50600154610128906001600160a01b031681565b610164610193366004611137565b6104ff565b3480156101a3575f5ffd5b506101ac61051e565b60405190815260200161013c565b3480156101c5575f5ffd5b50600354610128906001600160a01b031681565b3480156101e4575f5ffd5b50610164610539565b3480156101f8575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610128565b348015610234575f5ffd5b506101286102433660046111fb565b61054c565b348015610253575f5ffd5b506101286102623660046111fb565b610574565b348015610272575f5ffd5b5061027b6105f4565b60405161013c9190611212565b348015610293575f5ffd5b506004546101ac565b3480156102a7575f5ffd5b506101646102b636600461125d565b610654565b3480156102c6575f5ffd5b506102eb604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161013c91906112ea565b348015610303575f5ffd5b505f54610128906001600160a01b031681565b348015610321575f5ffd5b50610128610330366004611341565b6107e2565b348015610340575f5ffd5b5061016461034f366004611403565b610b52565b34801561035f575f5ffd5b5061016461036e366004611403565b610bd1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156103b85750825b90505f8267ffffffffffffffff1660011480156103d45750303b155b9050811580156103e2575080155b156104005760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561042a57845460ff60401b1916600160401b1785555b61043386610c0e565b61043b610c1f565b6001600160a01b0387166104965760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c6964207661756c744c6f67696360448201526064015b60405180910390fd5b5f80546001600160a01b0319166001600160a01b03891617905583156104f657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b610507610c27565b61051082610ccb565b61051a8282610cd3565b5050565b5f610527610d94565b505f51602061191d5f395f51905f5290565b610541610ddd565b61054a5f610e38565b565b6004818154811061055b575f80fd5b5f918252602090912001546001600160a01b0316905081565b6004545f9082106105c75760405162461bcd60e51b815260206004820152601a60248201527f5661756c74466163746f72793a206f7574206f662072616e6765000000000000604482015260640161048d565b600482815481106105da576105da61141c565b5f918252602090912001546001600160a01b031692915050565b6060600480548060200260200160405190810160405280929190818152602001828054801561064a57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161062c575b5050505050905090565b61065c610ddd565b6001600160a01b0383166106b25760405162461bcd60e51b815260206004820152601c60248201527f5661756c74466163746f72793a20696e76616c6964206f7261636c6500000000604482015260640161048d565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c696420726562616c616e636572604482015260640161048d565b6001600160a01b03811661075e5760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c6964206c697175696461746f72604482015260640161048d565b600180546001600160a01b038581166001600160a01b0319928316811790935560028054868316908416811790915560038054928616929093168217909255604080519384526020840192909252908201527f43d676ef005d9b31f20857ca4015e161d6c2337206dc3487aed30b7b4c1cefc39060600160405180910390a1505050565b5f6001600160a01b038a166108395760405162461bcd60e51b815260206004820152601c60248201527f5661756c74466163746f72793a20696e76616c6964207633506f6f6c00000000604482015260640161048d565b6001600160a01b0389166108995760405162461bcd60e51b815260206004820152602160248201527f5661756c74466163746f72793a20696e76616c696420706f736974696f6e4d676044820152603960f91b606482015260840161048d565b5f6001600160a01b038916156108af57886108bc565b6001546001600160a01b03165b90505f6001600160a01b038916156108d457886108e1565b6002546001600160a01b03165b90505f6001600160a01b038916156108f95788610906565b6003546001600160a01b03165b90506001600160a01b03831661095e5760405162461bcd60e51b815260206004820152601760248201527f5661756c74466163746f72793a206e6f206f7261636c65000000000000000000604482015260640161048d565b6001600160a01b0382166109b45760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a206e6f20726562616c616e6365720000000000604482015260640161048d565b6001600160a01b038116610a0a5760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a206e6f206c697175696461746f720000000000604482015260640161048d565b5f63ef090e4c60e01b8e8e868686338f8f8f8f604051602401610a369a99989796959493929190611458565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092525f80549251919350916001600160a01b0316908390610a86906110ca565b610a919291906114c9565b604051809103905ff080158015610aaa573d5f5f3e3d5ffd5b509050809550600486908060018154018082558091505060019003905f5260205f20015f9091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055508e6001600160a01b0316336001600160a01b0316876001600160a01b03167f897c133dfbfe1f6239e98b4ffd7e4f6c86a62350a131a7a37790419f58af02f960405160405180910390a450505050509998505050505050505050565b610b5a610ddd565b6001600160a01b038116610bb05760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a20696e76616c6964206c6f6769630000000000604482015260640161048d565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b610bd9610ddd565b6001600160a01b038116610c0257604051631e4fbdf760e01b81525f600482015260240161048d565b610c0b81610e38565b50565b610c16610ea8565b610c0b81610ef1565b61054a610ea8565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cad57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ca15f51602061191d5f395f51905f52546001600160a01b031690565b6001600160a01b031614155b1561054a5760405163703e46dd60e11b815260040160405180910390fd5b610c0b610ddd565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2d575060408051601f3d908101601f19168201909252610d2a918101906114f4565b60015b610d5557604051634c9c8ce360e01b81526001600160a01b038316600482015260240161048d565b5f51602061191d5f395f51905f528114610d8557604051632a87526960e21b81526004810182905260240161048d565b610d8f8383610ef9565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461054a5760405163703e46dd60e11b815260040160405180910390fd5b33610e0f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461054a5760405163118cdaa760e01b815233600482015260240161048d565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661054a57604051631afcd79f60e31b815260040160405180910390fd5b610bd9610ea8565b610f0282610f4e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610f4657610d8f8282610fb1565b61051a611023565b806001600160a01b03163b5f03610f8357604051634c9c8ce360e01b81526001600160a01b038216600482015260240161048d565b5f51602061191d5f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610fcd919061150b565b5f60405180830381855af49150503d805f8114611005576040519150601f19603f3d011682016040523d82523d5f602084013e61100a565b606091505b509150915061101a858383611042565b95945050505050565b341561054a5760405163b398979f60e01b815260040160405180910390fd5b60608261105757611052826110a1565b61109a565b815115801561106e57506001600160a01b0384163b155b1561109757604051639996b31560e01b81526001600160a01b038516600482015260240161048d565b50805b9392505050565b8051156110b15780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6103f68061152783390190565b80356001600160a01b03811681146110ed575f5ffd5b919050565b5f5f60408385031215611103575f5ffd5b61110c836110d7565b915061111a602084016110d7565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f60408385031215611148575f5ffd5b611151836110d7565b9150602083013567ffffffffffffffff81111561116c575f5ffd5b8301601f8101851361117c575f5ffd5b803567ffffffffffffffff81111561119657611196611123565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156111c5576111c5611123565b6040528181528282016020018710156111dc575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f6020828403121561120b575f5ffd5b5035919050565b602080825282518282018190525f918401906040840190835b818110156112525783516001600160a01b031683526020938401939092019160010161122b565b509095945050505050565b5f5f5f6060848603121561126f575f5ffd5b611278846110d7565b9250611286602085016110d7565b9150611294604085016110d7565b90509250925092565b5f5b838110156112b757818101518382015260200161129f565b50505f910152565b5f81518084526112d681602086016020860161129d565b601f01601f19169290920160200192915050565b602081525f61109a60208301846112bf565b5f5f83601f84011261130c575f5ffd5b50813567ffffffffffffffff811115611323575f5ffd5b60208301915083602082850101111561133a575f5ffd5b9250929050565b5f5f5f5f5f5f5f5f5f60e08a8c031215611359575f5ffd5b6113628a6110d7565b985061137060208b016110d7565b975061137e60408b016110d7565b965061138c60608b016110d7565b955061139a60808b016110d7565b945060a08a013567ffffffffffffffff8111156113b5575f5ffd5b6113c18c828d016112fc565b90955093505060c08a013567ffffffffffffffff8111156113e0575f5ffd5b6113ec8c828d016112fc565b915080935050809150509295985092959850929598565b5f60208284031215611413575f5ffd5b61109a826110d7565b634e487b7160e01b5f52603260045260245ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152898116604083015288811660608301528781166080830152861660a082015261010060c082018190525f906114a59083018688611430565b82810360e08401526114b8818587611430565b9d9c50505050505050505050505050565b6001600160a01b03831681526040602082018190525f906114ec908301846112bf565b949350505050565b5f60208284031215611504575f5ffd5b5051919050565b5f825161151c81846020870161129d565b919091019291505056fe60806040526040516103f63803806103f68339810160408190526100229161025e565b61002c8282610033565b5050610347565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610128919061032c565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f5f6040838503121561026f575f5ffd5b82516001600160a01b0381168114610285575f5ffd5b60208401519092506001600160401b038111156102a0575f5ffd5b8301601f810185136102b0575f5ffd5b80516001600160401b038111156102c9576102c9610228565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102f7576102f7610228565b60405281815282820160200187101561030e575f5ffd5b61031f82602083016020860161023c565b8093505050509250929050565b5f825161033d81846020870161023c565b9190910192915050565b60a3806103535f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f5f375f5f365f845af43d5f5f3e8080156069573d5ff35b3d5ffdfea2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220a38eb14da0a2e82685da51f16bbb2460c01bb6d7a84ceecccdab5899cf78c48c64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1972 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xC32 ADD MSTORE DUP2 DUP2 PUSH2 0xC5B ADD MSTORE PUSH2 0xD9F ADD MSTORE PUSH2 0x1972 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9403B634 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xB078147A EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xC3638757 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xECEDD5BC EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x9403B634 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x97331BF9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xA7C6A100 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xAB31B6F3 EQ PUSH2 0x29C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x545851D7 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x9094A91E EQ PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3C46201D EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4C39AD21 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3D4 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x42A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x433 DUP7 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x43B PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964207661756C744C6F676963 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x4F6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x510 DUP3 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x51A DUP3 DUP3 PUSH2 0xCD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x527 PUSH2 0xD94 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x541 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x54A PUSH0 PUSH2 0xE38 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 DUP3 LT PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206F7574206F662072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH2 0x141C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65C PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206F7261636C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C696420726562616C616E636572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206C697175696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP7 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0x43D676EF005D9B31F20857CA4015E161D6C2337206DC3487AED30B7B4C1CEFC3 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964207633506F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C696420706F736974696F6E4D67 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8AF JUMPI DUP9 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8D4 JUMPI DUP9 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8F9 JUMPI DUP9 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F206F7261636C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F20726562616C616E6365720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F206C697175696461746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 PUSH4 0xEF090E4C PUSH1 0xE0 SHL DUP15 DUP15 DUP7 DUP7 DUP7 CALLER DUP16 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA36 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE PUSH0 DUP1 SLOAD SWAP3 MLOAD SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 PUSH2 0xA86 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0xA91 SWAP3 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP1 POP DUP1 SWAP6 POP PUSH1 0x4 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x897C133DFBFE1F6239E98B4FFD7E4F6C86A62350A131A7A37790419F58AF02F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB5A PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206C6F6769630000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBD9 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xE38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC16 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x54A PUSH2 0xEA8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xCAD JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCA1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0B PUSH2 0xDDD JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD2D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD2A SWAP2 DUP2 ADD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0xD8F DUP4 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xE0F PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD9 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xF02 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xF46 JUMPI PUSH2 0xD8F DUP3 DUP3 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x51A PUSH2 0x1023 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x101A DUP6 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1057 JUMPI PUSH2 0x1052 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x109A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x106E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x10B1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F6 DUP1 PUSH2 0x1527 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1103 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x110C DUP4 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A PUSH1 0x20 DUP5 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1151 DUP4 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x117C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1196 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x11DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1252 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x122B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x126F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1278 DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1286 PUSH1 0x20 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1294 PUSH1 0x40 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x129F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x12D6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x129D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x109A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x130C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x133A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1362 DUP11 PUSH2 0x10D7 JUMP JUMPDEST SWAP9 POP PUSH2 0x1370 PUSH1 0x20 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x137E PUSH1 0x40 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP7 POP PUSH2 0x138C PUSH1 0x60 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP6 POP PUSH2 0x139A PUSH1 0x80 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13C1 DUP13 DUP3 DUP14 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13EC DUP13 DUP3 DUP14 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x109A DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE DUP7 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x14A5 SWAP1 DUP4 ADD DUP7 DUP9 PUSH2 0x1430 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x14B8 DUP2 DUP6 DUP8 PUSH2 0x1430 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x14EC SWAP1 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1504 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x151C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x129D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F6 CODESIZE SUB DUP1 PUSH2 0x3F6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x347 JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x85 JUMPI PUSH2 0x80 DUP3 DUP3 PUSH2 0x10C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D PUSH2 0x17F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x176 DUP6 DUP4 DUP4 PUSH2 0x1A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B0 DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F7 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x30E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x31F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x23C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x33D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x23C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH2 0x353 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 PUSH0 CALLDATACOPY PUSH0 PUSH0 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xA6 0xEF GASLIMIT 0xEA COINBASE 0xEC SELFDESTRUCT 0x26 0xAC 0xEA 0xE2 LOG1 EXTCODESIZE PUSH10 0x3304C712BE70F6CBCB48 SWAP8 0x2B PUSH11 0x8E00F80B64736F6C634300 ADDMOD SHR STOP CALLER CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220A3 DUP15 0xB1 0x4D LOG0 LOG2 0xE8 0x26 DUP6 0xDA MLOAD CALL PUSH12 0xBB2460C01BB6D7A84CEECCCD 0xAB PC SWAP10 0xCF PUSH25 0xC48C64736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "2375:6322:13:-:0;;;1171:4:2;1128:48;;2375:6322:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 3086,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 3825,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 3103,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1598": {
									"entryPoint": 3275,
									"id": 1598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 3752,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1038": {
									"entryPoint": 4131,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 3476,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3549,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 3111,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1343": {
									"entryPoint": 4257,
									"id": 1343,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_818": {
									"entryPoint": 3918,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3640,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 3283,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allVaults_1538": {
									"entryPoint": 1356,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createVault_1840": {
									"entryPoint": 2018,
									"id": 1840,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"@defaultLiquidator_1534": {
									"entryPoint": null,
									"id": 1534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@defaultOracleManager_1530": {
									"entryPoint": null,
									"id": 1530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@defaultRebalancer_1532": {
									"entryPoint": null,
									"id": 1532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1261": {
									"entryPoint": 4017,
									"id": 1261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAllVaults_1881": {
									"entryPoint": 1524,
									"id": 1881,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getImplementation_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVault_1871": {
									"entryPoint": 1396,
									"id": 1871,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1588": {
									"entryPoint": 883,
									"id": 1588,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 1310,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1337,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDefaultReferences_1682": {
									"entryPoint": 1620,
									"id": 1682,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setVaultLogic_1621": {
									"entryPoint": 2898,
									"id": 1621,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 3025,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 1279,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_854": {
									"entryPoint": 3833,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@vaultCount_1850": {
									"entryPoint": null,
									"id": 1850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@vaultLogic_1527": {
									"entryPoint": null,
									"id": 1527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1301": {
									"entryPoint": 4162,
									"id": 1301,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_calldata": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_calldata": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_address_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 11,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_029ff0a00ff545cf84b28f65fd6af9d2b714a0bfc138cf0f17241edbb4ed7564__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41a6f9dc9152b55c7b8cb18bd78f13184f1a7db49748e9df5e560db226f7b974__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4be469b26dae49936f4b600b35f03337062ed732c5551ea51a02555fb87c4c3a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51b258cab92da9dc466ea40695b4e7cda87910622eb01b523751dd8d47e4cf60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65a7e910ce23feeef510d14c70f42ac70596ef49593909b1a9f688d20f20f8e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_829de76cbdffe51e5a296468ec9026b601361c177d381cdd63bc5003db76a21e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a50593fac8818ab0d7ae050e30512c1ded1c9b376035840736ab1944b0aa02ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cced3f6d78f022c49a9ea04990f1be490d4ef2d1f2b62a9649756d665f2898a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdc079468a75dda5fbfe7875b630a69a7963d312b46d40a027a90b64f72211c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e641eda8809214632980d7cb918dcc7946e96140acdade8c28b30d9cbd55357f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dda28225c87e68010fc0531407a906d3c99eb59a439a163a44a7c75021a452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12567:14",
										"nodeType": "YulBlock",
										"src": "0:12567:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:14",
													"nodeType": "YulBlock",
													"src": "115:102:14",
													"statements": [
														{
															"nativeSrc": "125:26:14",
															"nodeType": "YulAssignment",
															"src": "125:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:14",
																		"nodeType": "YulLiteral",
																		"src": "148:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:14"
																},
																"nativeSrc": "133:18:14",
																"nodeType": "YulFunctionCall",
																"src": "133:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:14",
																								"nodeType": "YulLiteral",
																								"src": "198:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:14",
																								"nodeType": "YulLiteral",
																								"src": "203:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:14"
																						},
																						"nativeSrc": "194:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:14",
																						"nodeType": "YulLiteral",
																						"src": "207:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:14"
																				},
																				"nativeSrc": "190:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:14"
																		},
																		"nativeSrc": "178:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:14"
																},
																"nativeSrc": "160:51:14",
																"nodeType": "YulFunctionCall",
																"src": "160:51:14"
															},
															"nativeSrc": "160:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:14",
														"nodeType": "YulTypedName",
														"src": "84:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:14",
														"nodeType": "YulTypedName",
														"src": "95:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:14",
														"nodeType": "YulTypedName",
														"src": "106:4:14",
														"type": ""
													}
												],
												"src": "14:203:14"
											},
											{
												"body": {
													"nativeSrc": "271:124:14",
													"nodeType": "YulBlock",
													"src": "271:124:14",
													"statements": [
														{
															"nativeSrc": "281:29:14",
															"nodeType": "YulAssignment",
															"src": "281:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "303:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "290:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "290:12:14"
																},
																"nativeSrc": "290:20:14",
																"nodeType": "YulFunctionCall",
																"src": "290:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "281:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "373:16:14",
																"nodeType": "YulBlock",
																"src": "373:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "382:1:14",
																					"nodeType": "YulLiteral",
																					"src": "382:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "385:1:14",
																					"nodeType": "YulLiteral",
																					"src": "385:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "375:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:14"
																			},
																			"nativeSrc": "375:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "375:12:14"
																		},
																		"nativeSrc": "375:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "375:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "332:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "332:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "343:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "343:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "358:3:14",
																										"nodeType": "YulLiteral",
																										"src": "358:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "363:1:14",
																										"nodeType": "YulLiteral",
																										"src": "363:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "354:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "354:3:14"
																								},
																								"nativeSrc": "354:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "354:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "367:1:14",
																								"nodeType": "YulLiteral",
																								"src": "367:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "350:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "350:3:14"
																						},
																						"nativeSrc": "350:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "350:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "339:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "339:3:14"
																				},
																				"nativeSrc": "339:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "339:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "329:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "329:2:14"
																		},
																		"nativeSrc": "329:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "329:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:14"
																},
																"nativeSrc": "322:50:14",
																"nodeType": "YulFunctionCall",
																"src": "322:50:14"
															},
															"nativeSrc": "319:70:14",
															"nodeType": "YulIf",
															"src": "319:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "222:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "250:6:14",
														"nodeType": "YulTypedName",
														"src": "250:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "261:5:14",
														"nodeType": "YulTypedName",
														"src": "261:5:14",
														"type": ""
													}
												],
												"src": "222:173:14"
											},
											{
												"body": {
													"nativeSrc": "487:173:14",
													"nodeType": "YulBlock",
													"src": "487:173:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "533:16:14",
																"nodeType": "YulBlock",
																"src": "533:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "542:1:14",
																					"nodeType": "YulLiteral",
																					"src": "542:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "545:1:14",
																					"nodeType": "YulLiteral",
																					"src": "545:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "535:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "535:6:14"
																			},
																			"nativeSrc": "535:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "535:12:14"
																		},
																		"nativeSrc": "535:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "535:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "508:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "508:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "517:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "517:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "504:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:14"
																		},
																		"nativeSrc": "504:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "504:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "529:2:14",
																		"nodeType": "YulLiteral",
																		"src": "529:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "500:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:14"
																},
																"nativeSrc": "500:32:14",
																"nodeType": "YulFunctionCall",
																"src": "500:32:14"
															},
															"nativeSrc": "497:52:14",
															"nodeType": "YulIf",
															"src": "497:52:14"
														},
														{
															"nativeSrc": "558:39:14",
															"nodeType": "YulAssignment",
															"src": "558:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "587:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "587:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "568:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "568:18:14"
																},
																"nativeSrc": "568:29:14",
																"nodeType": "YulFunctionCall",
																"src": "568:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "558:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:14"
																}
															]
														},
														{
															"nativeSrc": "606:48:14",
															"nodeType": "YulAssignment",
															"src": "606:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "639:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "650:2:14",
																				"nodeType": "YulLiteral",
																				"src": "650:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "635:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:14"
																		},
																		"nativeSrc": "635:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "616:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "616:18:14"
																},
																"nativeSrc": "616:38:14",
																"nodeType": "YulFunctionCall",
																"src": "616:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "606:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "606:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "400:260:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "445:9:14",
														"nodeType": "YulTypedName",
														"src": "445:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "456:7:14",
														"nodeType": "YulTypedName",
														"src": "456:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "468:6:14",
														"nodeType": "YulTypedName",
														"src": "468:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "476:6:14",
														"nodeType": "YulTypedName",
														"src": "476:6:14",
														"type": ""
													}
												],
												"src": "400:260:14"
											},
											{
												"body": {
													"nativeSrc": "697:95:14",
													"nodeType": "YulBlock",
													"src": "697:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "714:1:14",
																		"nodeType": "YulLiteral",
																		"src": "714:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "721:3:14",
																				"nodeType": "YulLiteral",
																				"src": "721:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "726:10:14",
																				"nodeType": "YulLiteral",
																				"src": "726:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "717:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "717:3:14"
																		},
																		"nativeSrc": "717:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "717:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "707:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "707:6:14"
																},
																"nativeSrc": "707:31:14",
																"nodeType": "YulFunctionCall",
																"src": "707:31:14"
															},
															"nativeSrc": "707:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "707:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "754:1:14",
																		"nodeType": "YulLiteral",
																		"src": "754:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "757:4:14",
																		"nodeType": "YulLiteral",
																		"src": "757:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "747:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:14"
																},
																"nativeSrc": "747:15:14",
																"nodeType": "YulFunctionCall",
																"src": "747:15:14"
															},
															"nativeSrc": "747:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "747:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "778:1:14",
																		"nodeType": "YulLiteral",
																		"src": "778:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "781:4:14",
																		"nodeType": "YulLiteral",
																		"src": "781:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "771:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "771:6:14"
																},
																"nativeSrc": "771:15:14",
																"nodeType": "YulFunctionCall",
																"src": "771:15:14"
															},
															"nativeSrc": "771:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "771:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "665:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "665:127:14"
											},
											{
												"body": {
													"nativeSrc": "893:922:14",
													"nodeType": "YulBlock",
													"src": "893:922:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "939:16:14",
																"nodeType": "YulBlock",
																"src": "939:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:14",
																					"nodeType": "YulLiteral",
																					"src": "948:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:14",
																					"nodeType": "YulLiteral",
																					"src": "951:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "941:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:14"
																			},
																			"nativeSrc": "941:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:14"
																		},
																		"nativeSrc": "941:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "914:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "914:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "923:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "910:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:14"
																		},
																		"nativeSrc": "910:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "910:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:14",
																		"nodeType": "YulLiteral",
																		"src": "935:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "906:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:14"
																},
																"nativeSrc": "906:32:14",
																"nodeType": "YulFunctionCall",
																"src": "906:32:14"
															},
															"nativeSrc": "903:52:14",
															"nodeType": "YulIf",
															"src": "903:52:14"
														},
														{
															"nativeSrc": "964:39:14",
															"nodeType": "YulAssignment",
															"src": "964:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "974:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "974:18:14"
																},
																"nativeSrc": "974:29:14",
																"nodeType": "YulFunctionCall",
																"src": "974:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "964:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:14"
																}
															]
														},
														{
															"nativeSrc": "1012:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1012:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1043:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1043:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1054:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1054:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1039:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:14"
																		},
																		"nativeSrc": "1039:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1039:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1026:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1026:12:14"
																},
																"nativeSrc": "1026:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1026:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1016:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1016:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1101:16:14",
																"nodeType": "YulBlock",
																"src": "1101:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1110:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1110:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1113:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1103:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1103:6:14"
																			},
																			"nativeSrc": "1103:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1103:12:14"
																		},
																		"nativeSrc": "1103:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1103:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1073:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1073:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1081:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1081:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1070:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1070:2:14"
																},
																"nativeSrc": "1070:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1070:30:14"
															},
															"nativeSrc": "1067:50:14",
															"nodeType": "YulIf",
															"src": "1067:50:14"
														},
														{
															"nativeSrc": "1126:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1126:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1140:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1151:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1151:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1136:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:14"
																},
																"nativeSrc": "1136:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1136:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1130:2:14",
																	"nodeType": "YulTypedName",
																	"src": "1130:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1206:16:14",
																"nodeType": "YulBlock",
																"src": "1206:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1215:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1215:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1218:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1218:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1208:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1208:6:14"
																			},
																			"nativeSrc": "1208:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1208:12:14"
																		},
																		"nativeSrc": "1208:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1208:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1185:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "1185:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1189:4:14",
																						"nodeType": "YulLiteral",
																						"src": "1189:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:14"
																				},
																				"nativeSrc": "1181:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1196:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1196:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1177:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1177:3:14"
																		},
																		"nativeSrc": "1177:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1170:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:14"
																},
																"nativeSrc": "1170:35:14",
																"nodeType": "YulFunctionCall",
																"src": "1170:35:14"
															},
															"nativeSrc": "1167:55:14",
															"nodeType": "YulIf",
															"src": "1167:55:14"
														},
														{
															"nativeSrc": "1231:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1231:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1258:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "1258:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1245:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1245:12:14"
																},
																"nativeSrc": "1245:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1245:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1235:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1235:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1304:22:14",
																"nodeType": "YulBlock",
																"src": "1304:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1306:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1306:16:14"
																			},
																			"nativeSrc": "1306:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:18:14"
																		},
																		"nativeSrc": "1306:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1306:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1276:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1284:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1273:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1273:2:14"
																},
																"nativeSrc": "1273:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1273:30:14"
															},
															"nativeSrc": "1270:56:14",
															"nodeType": "YulIf",
															"src": "1270:56:14"
														},
														{
															"nativeSrc": "1335:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1335:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1349:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1349:5:14"
																},
																"nativeSrc": "1349:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1349:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1339:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1339:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1367:85:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1367:85:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1389:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1389:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "1413:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "1413:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1421:4:14",
																										"nodeType": "YulLiteral",
																										"src": "1421:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1409:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1409:3:14"
																								},
																								"nativeSrc": "1409:17:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1409:17:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1432:2:14",
																										"nodeType": "YulLiteral",
																										"src": "1432:2:14",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1428:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1428:3:14"
																								},
																								"nativeSrc": "1428:7:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1428:7:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1405:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1405:3:14"
																						},
																						"nativeSrc": "1405:31:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1405:31:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1438:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1438:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1401:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1401:3:14"
																				},
																				"nativeSrc": "1401:40:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1401:40:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1447:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1447:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1443:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1443:3:14"
																				},
																				"nativeSrc": "1443:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1443:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1397:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1397:3:14"
																		},
																		"nativeSrc": "1397:54:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1397:54:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1385:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1385:3:14"
																},
																"nativeSrc": "1385:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1385:67:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1371:10:14",
																	"nodeType": "YulTypedName",
																	"src": "1371:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1527:22:14",
																"nodeType": "YulBlock",
																"src": "1527:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1529:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1529:16:14"
																			},
																			"nativeSrc": "1529:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1529:18:14"
																		},
																		"nativeSrc": "1529:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1529:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1470:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1470:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1482:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1482:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1467:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1467:2:14"
																		},
																		"nativeSrc": "1467:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1506:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1506:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1518:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1518:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1503:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1503:2:14"
																		},
																		"nativeSrc": "1503:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1503:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1464:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1464:2:14"
																},
																"nativeSrc": "1464:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1464:62:14"
															},
															"nativeSrc": "1461:88:14",
															"nodeType": "YulIf",
															"src": "1461:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1565:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1569:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1569:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1558:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:14"
																},
																"nativeSrc": "1558:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1558:22:14"
															},
															"nativeSrc": "1558:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1558:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1596:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1604:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:14"
																},
																"nativeSrc": "1589:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1589:22:14"
															},
															"nativeSrc": "1589:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1589:22:14"
														},
														{
															"body": {
																"nativeSrc": "1661:16:14",
																"nodeType": "YulBlock",
																"src": "1661:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1670:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1670:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1673:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1663:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1663:6:14"
																			},
																			"nativeSrc": "1663:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1663:12:14"
																		},
																		"nativeSrc": "1663:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1634:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "1634:2:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1638:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1638:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1630:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1630:3:14"
																				},
																				"nativeSrc": "1630:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1630:15:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1647:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1647:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1626:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1626:3:14"
																		},
																		"nativeSrc": "1626:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1626:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1652:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1652:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1623:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1623:2:14"
																},
																"nativeSrc": "1623:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1623:37:14"
															},
															"nativeSrc": "1620:57:14",
															"nodeType": "YulIf",
															"src": "1620:57:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1703:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1711:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1711:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1699:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1699:3:14"
																		},
																		"nativeSrc": "1699:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1720:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "1720:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1724:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1724:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1716:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:14"
																		},
																		"nativeSrc": "1716:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:11:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1729:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1686:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1686:12:14"
																},
																"nativeSrc": "1686:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1686:50:14"
															},
															"nativeSrc": "1686:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "1686:50:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1760:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1760:6:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1768:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1768:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1756:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:14"
																				},
																				"nativeSrc": "1756:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1756:19:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1777:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1777:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1752:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1752:3:14"
																		},
																		"nativeSrc": "1752:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1752:28:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1782:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1745:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:14"
																},
																"nativeSrc": "1745:39:14",
																"nodeType": "YulFunctionCall",
																"src": "1745:39:14"
															},
															"nativeSrc": "1745:39:14",
															"nodeType": "YulExpressionStatement",
															"src": "1745:39:14"
														},
														{
															"nativeSrc": "1793:16:14",
															"nodeType": "YulAssignment",
															"src": "1793:16:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1803:6:14",
																"nodeType": "YulIdentifier",
																"src": "1803:6:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1793:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "797:1018:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:14",
														"nodeType": "YulTypedName",
														"src": "851:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "862:7:14",
														"nodeType": "YulTypedName",
														"src": "862:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "874:6:14",
														"nodeType": "YulTypedName",
														"src": "874:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "882:6:14",
														"nodeType": "YulTypedName",
														"src": "882:6:14",
														"type": ""
													}
												],
												"src": "797:1018:14"
											},
											{
												"body": {
													"nativeSrc": "1921:76:14",
													"nodeType": "YulBlock",
													"src": "1921:76:14",
													"statements": [
														{
															"nativeSrc": "1931:26:14",
															"nodeType": "YulAssignment",
															"src": "1931:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1943:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1943:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1954:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1954:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1939:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1939:3:14"
																},
																"nativeSrc": "1939:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1939:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1931:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1931:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1973:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1973:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1984:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:14"
																},
																"nativeSrc": "1966:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1966:25:14"
															},
															"nativeSrc": "1966:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "1966:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1820:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1890:9:14",
														"nodeType": "YulTypedName",
														"src": "1890:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1901:6:14",
														"nodeType": "YulTypedName",
														"src": "1901:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1912:4:14",
														"nodeType": "YulTypedName",
														"src": "1912:4:14",
														"type": ""
													}
												],
												"src": "1820:177:14"
											},
											{
												"body": {
													"nativeSrc": "2072:110:14",
													"nodeType": "YulBlock",
													"src": "2072:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2118:16:14",
																"nodeType": "YulBlock",
																"src": "2118:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2127:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2120:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2120:6:14"
																			},
																			"nativeSrc": "2120:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:12:14"
																		},
																		"nativeSrc": "2120:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2120:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2093:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2093:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2102:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2102:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2089:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2089:3:14"
																		},
																		"nativeSrc": "2089:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2089:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2114:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2085:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:14"
																},
																"nativeSrc": "2085:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2085:32:14"
															},
															"nativeSrc": "2082:52:14",
															"nodeType": "YulIf",
															"src": "2082:52:14"
														},
														{
															"nativeSrc": "2143:33:14",
															"nodeType": "YulAssignment",
															"src": "2143:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2166:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2166:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2153:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2153:12:14"
																},
																"nativeSrc": "2153:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2153:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2143:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2002:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2038:9:14",
														"nodeType": "YulTypedName",
														"src": "2038:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2049:7:14",
														"nodeType": "YulTypedName",
														"src": "2049:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2061:6:14",
														"nodeType": "YulTypedName",
														"src": "2061:6:14",
														"type": ""
													}
												],
												"src": "2002:180:14"
											},
											{
												"body": {
													"nativeSrc": "2338:486:14",
													"nodeType": "YulBlock",
													"src": "2338:486:14",
													"statements": [
														{
															"nativeSrc": "2348:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2348:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2366:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2366:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2377:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2377:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2362:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2362:3:14"
																},
																"nativeSrc": "2362:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2362:18:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2352:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2352:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2396:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2396:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2407:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2407:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:14"
																},
																"nativeSrc": "2389:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:14"
															},
															"nativeSrc": "2389:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:14"
														},
														{
															"nativeSrc": "2419:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2419:17:14",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2430:6:14",
																"nodeType": "YulIdentifier",
																"src": "2430:6:14"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2423:3:14",
																	"nodeType": "YulTypedName",
																	"src": "2423:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2445:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2445:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2465:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2465:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2459:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:14"
																},
																"nativeSrc": "2459:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2459:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2449:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2449:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2488:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2488:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2496:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2496:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2481:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:14"
																},
																"nativeSrc": "2481:22:14",
																"nodeType": "YulFunctionCall",
																"src": "2481:22:14"
															},
															"nativeSrc": "2481:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "2481:22:14"
														},
														{
															"nativeSrc": "2512:25:14",
															"nodeType": "YulAssignment",
															"src": "2512:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2523:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2523:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2534:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2534:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2519:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:14"
																},
																"nativeSrc": "2519:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2519:18:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2512:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2512:3:14"
																}
															]
														},
														{
															"nativeSrc": "2546:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2546:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2564:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2564:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2560:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:14"
																},
																"nativeSrc": "2560:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2560:15:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2550:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2550:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2584:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2584:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2593:1:14",
																"nodeType": "YulLiteral",
																"src": "2593:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2588:1:14",
																	"nodeType": "YulTypedName",
																	"src": "2588:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2652:146:14",
																"nodeType": "YulBlock",
																"src": "2652:146:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2673:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2673:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2688:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2688:6:14"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2682:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "2682:5:14"
																							},
																							"nativeSrc": "2682:13:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2682:13:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2705:3:14",
																											"nodeType": "YulLiteral",
																											"src": "2705:3:14",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2710:1:14",
																											"nodeType": "YulLiteral",
																											"src": "2710:1:14",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2701:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "2701:3:14"
																									},
																									"nativeSrc": "2701:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "2701:11:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2714:1:14",
																									"nodeType": "YulLiteral",
																									"src": "2714:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2697:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2697:3:14"
																							},
																							"nativeSrc": "2697:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2697:19:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2678:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2678:3:14"
																					},
																					"nativeSrc": "2678:39:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2678:39:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2666:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2666:6:14"
																			},
																			"nativeSrc": "2666:52:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2666:52:14"
																		},
																		"nativeSrc": "2666:52:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:52:14"
																	},
																	{
																		"nativeSrc": "2731:19:14",
																		"nodeType": "YulAssignment",
																		"src": "2731:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2742:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2742:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2747:2:14",
																					"nodeType": "YulLiteral",
																					"src": "2747:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2738:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2738:3:14"
																			},
																			"nativeSrc": "2738:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2731:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2731:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2763:25:14",
																		"nodeType": "YulAssignment",
																		"src": "2763:25:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2777:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2777:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2785:2:14",
																					"nodeType": "YulLiteral",
																					"src": "2785:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2773:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2773:3:14"
																			},
																			"nativeSrc": "2773:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2773:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2763:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2614:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2614:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2617:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2617:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2611:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2611:2:14"
																},
																"nativeSrc": "2611:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2611:13:14"
															},
															"nativeSrc": "2603:195:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2625:18:14",
																"nodeType": "YulBlock",
																"src": "2625:18:14",
																"statements": [
																	{
																		"nativeSrc": "2627:14:14",
																		"nodeType": "YulAssignment",
																		"src": "2627:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2636:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "2636:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2632:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2632:3:14"
																			},
																			"nativeSrc": "2632:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2627:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2607:3:14",
																"nodeType": "YulBlock",
																"src": "2607:3:14",
																"statements": []
															},
															"src": "2603:195:14"
														},
														{
															"nativeSrc": "2807:11:14",
															"nodeType": "YulAssignment",
															"src": "2807:11:14",
															"value": {
																"name": "pos",
																"nativeSrc": "2815:3:14",
																"nodeType": "YulIdentifier",
																"src": "2815:3:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2807:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2807:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2187:637:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2307:9:14",
														"nodeType": "YulTypedName",
														"src": "2307:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2318:6:14",
														"nodeType": "YulTypedName",
														"src": "2318:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2329:4:14",
														"nodeType": "YulTypedName",
														"src": "2329:4:14",
														"type": ""
													}
												],
												"src": "2187:637:14"
											},
											{
												"body": {
													"nativeSrc": "2930:76:14",
													"nodeType": "YulBlock",
													"src": "2930:76:14",
													"statements": [
														{
															"nativeSrc": "2940:26:14",
															"nodeType": "YulAssignment",
															"src": "2940:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2952:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2952:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2963:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2963:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2948:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2948:3:14"
																},
																"nativeSrc": "2948:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2948:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2940:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2940:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2982:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2982:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2993:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2993:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2975:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:14"
																},
																"nativeSrc": "2975:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2975:25:14"
															},
															"nativeSrc": "2975:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "2975:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2829:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2899:9:14",
														"nodeType": "YulTypedName",
														"src": "2899:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2910:6:14",
														"nodeType": "YulTypedName",
														"src": "2910:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2921:4:14",
														"nodeType": "YulTypedName",
														"src": "2921:4:14",
														"type": ""
													}
												],
												"src": "2829:177:14"
											},
											{
												"body": {
													"nativeSrc": "3115:230:14",
													"nodeType": "YulBlock",
													"src": "3115:230:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3161:16:14",
																"nodeType": "YulBlock",
																"src": "3161:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3170:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3170:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3173:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3163:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3163:6:14"
																			},
																			"nativeSrc": "3163:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3163:12:14"
																		},
																		"nativeSrc": "3163:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3163:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3136:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3136:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3145:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3132:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:14"
																		},
																		"nativeSrc": "3132:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3157:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3157:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3128:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:14"
																},
																"nativeSrc": "3128:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3128:32:14"
															},
															"nativeSrc": "3125:52:14",
															"nodeType": "YulIf",
															"src": "3125:52:14"
														},
														{
															"nativeSrc": "3186:39:14",
															"nodeType": "YulAssignment",
															"src": "3186:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3215:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3215:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3196:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3196:18:14"
																},
																"nativeSrc": "3196:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3196:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3186:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:14"
																}
															]
														},
														{
															"nativeSrc": "3234:48:14",
															"nodeType": "YulAssignment",
															"src": "3234:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3267:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3278:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3278:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3263:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:14"
																		},
																		"nativeSrc": "3263:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3263:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3244:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3244:18:14"
																},
																"nativeSrc": "3244:38:14",
																"nodeType": "YulFunctionCall",
																"src": "3244:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3234:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:14"
																}
															]
														},
														{
															"nativeSrc": "3291:48:14",
															"nodeType": "YulAssignment",
															"src": "3291:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3324:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3335:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3320:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:14"
																		},
																		"nativeSrc": "3320:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3301:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3301:18:14"
																},
																"nativeSrc": "3301:38:14",
																"nodeType": "YulFunctionCall",
																"src": "3301:38:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3291:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "3011:334:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3065:9:14",
														"nodeType": "YulTypedName",
														"src": "3065:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3076:7:14",
														"nodeType": "YulTypedName",
														"src": "3076:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3088:6:14",
														"nodeType": "YulTypedName",
														"src": "3088:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3096:6:14",
														"nodeType": "YulTypedName",
														"src": "3096:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3104:6:14",
														"nodeType": "YulTypedName",
														"src": "3104:6:14",
														"type": ""
													}
												],
												"src": "3011:334:14"
											},
											{
												"body": {
													"nativeSrc": "3416:184:14",
													"nodeType": "YulBlock",
													"src": "3416:184:14",
													"statements": [
														{
															"nativeSrc": "3426:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3426:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3435:1:14",
																"nodeType": "YulLiteral",
																"src": "3435:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3430:1:14",
																	"nodeType": "YulTypedName",
																	"src": "3430:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3495:63:14",
																"nodeType": "YulBlock",
																"src": "3495:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3520:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3520:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3525:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "3525:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3516:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3516:3:14"
																					},
																					"nativeSrc": "3516:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3516:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3539:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3539:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3544:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "3544:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3535:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3535:3:14"
																							},
																							"nativeSrc": "3535:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3535:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3529:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3529:5:14"
																					},
																					"nativeSrc": "3529:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3529:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3509:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:14"
																			},
																			"nativeSrc": "3509:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3509:39:14"
																		},
																		"nativeSrc": "3509:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3456:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3456:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3459:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3453:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3453:2:14"
																},
																"nativeSrc": "3453:13:14",
																"nodeType": "YulFunctionCall",
																"src": "3453:13:14"
															},
															"nativeSrc": "3445:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3467:19:14",
																"nodeType": "YulBlock",
																"src": "3467:19:14",
																"statements": [
																	{
																		"nativeSrc": "3469:15:14",
																		"nodeType": "YulAssignment",
																		"src": "3469:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3478:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "3478:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3481:2:14",
																					"nodeType": "YulLiteral",
																					"src": "3481:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3474:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3474:3:14"
																			},
																			"nativeSrc": "3474:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3469:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "3469:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3449:3:14",
																"nodeType": "YulBlock",
																"src": "3449:3:14",
																"statements": []
															},
															"src": "3445:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3578:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3578:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3583:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3583:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3574:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3574:3:14"
																		},
																		"nativeSrc": "3574:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3574:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3592:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3592:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3567:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:14"
																},
																"nativeSrc": "3567:27:14",
																"nodeType": "YulFunctionCall",
																"src": "3567:27:14"
															},
															"nativeSrc": "3567:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "3567:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3350:250:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3394:3:14",
														"nodeType": "YulTypedName",
														"src": "3394:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3399:3:14",
														"nodeType": "YulTypedName",
														"src": "3399:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3404:6:14",
														"nodeType": "YulTypedName",
														"src": "3404:6:14",
														"type": ""
													}
												],
												"src": "3350:250:14"
											},
											{
												"body": {
													"nativeSrc": "3655:221:14",
													"nodeType": "YulBlock",
													"src": "3655:221:14",
													"statements": [
														{
															"nativeSrc": "3665:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3665:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3685:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3685:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3679:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3679:5:14"
																},
																"nativeSrc": "3679:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3679:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3669:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3669:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3707:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3712:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3700:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:14"
																},
																"nativeSrc": "3700:19:14",
																"nodeType": "YulFunctionCall",
																"src": "3700:19:14"
															},
															"nativeSrc": "3700:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "3700:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3767:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3767:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3774:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3774:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3763:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3763:3:14"
																		},
																		"nativeSrc": "3763:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3763:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3785:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3785:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3790:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3790:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:14"
																		},
																		"nativeSrc": "3781:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3797:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3797:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3728:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "3728:34:14"
																},
																"nativeSrc": "3728:76:14",
																"nodeType": "YulFunctionCall",
																"src": "3728:76:14"
															},
															"nativeSrc": "3728:76:14",
															"nodeType": "YulExpressionStatement",
															"src": "3728:76:14"
														},
														{
															"nativeSrc": "3813:57:14",
															"nodeType": "YulAssignment",
															"src": "3813:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3828:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3828:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3841:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "3841:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3849:2:14",
																								"nodeType": "YulLiteral",
																								"src": "3849:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3837:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3837:3:14"
																						},
																						"nativeSrc": "3837:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3837:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3858:2:14",
																								"nodeType": "YulLiteral",
																								"src": "3858:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3854:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3854:3:14"
																						},
																						"nativeSrc": "3854:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3854:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3833:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:14"
																				},
																				"nativeSrc": "3833:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3833:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3824:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:14"
																		},
																		"nativeSrc": "3824:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3865:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3865:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:14"
																},
																"nativeSrc": "3820:50:14",
																"nodeType": "YulFunctionCall",
																"src": "3820:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3813:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "3605:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3632:5:14",
														"nodeType": "YulTypedName",
														"src": "3632:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3639:3:14",
														"nodeType": "YulTypedName",
														"src": "3639:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3647:3:14",
														"nodeType": "YulTypedName",
														"src": "3647:3:14",
														"type": ""
													}
												],
												"src": "3605:271:14"
											},
											{
												"body": {
													"nativeSrc": "4002:99:14",
													"nodeType": "YulBlock",
													"src": "4002:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4019:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4019:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4030:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4030:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4012:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:14"
																},
																"nativeSrc": "4012:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4012:21:14"
															},
															"nativeSrc": "4012:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4012:21:14"
														},
														{
															"nativeSrc": "4042:53:14",
															"nodeType": "YulAssignment",
															"src": "4042:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4068:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4068:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4080:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4091:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4091:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4076:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:14"
																		},
																		"nativeSrc": "4076:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "4050:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4050:17:14"
																},
																"nativeSrc": "4050:45:14",
																"nodeType": "YulFunctionCall",
																"src": "4050:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4042:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4042:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3881:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3971:9:14",
														"nodeType": "YulTypedName",
														"src": "3971:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3982:6:14",
														"nodeType": "YulTypedName",
														"src": "3982:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3993:4:14",
														"nodeType": "YulTypedName",
														"src": "3993:4:14",
														"type": ""
													}
												],
												"src": "3881:220:14"
											},
											{
												"body": {
													"nativeSrc": "4179:275:14",
													"nodeType": "YulBlock",
													"src": "4179:275:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4228:16:14",
																"nodeType": "YulBlock",
																"src": "4228:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4237:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4237:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4240:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4240:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4230:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4230:6:14"
																			},
																			"nativeSrc": "4230:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4230:12:14"
																		},
																		"nativeSrc": "4230:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4230:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4207:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4207:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:14",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4203:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4203:3:14"
																				},
																				"nativeSrc": "4203:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4203:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4222:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4222:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4199:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:14"
																		},
																		"nativeSrc": "4199:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4199:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4192:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:14"
																},
																"nativeSrc": "4192:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4192:35:14"
															},
															"nativeSrc": "4189:55:14",
															"nodeType": "YulIf",
															"src": "4189:55:14"
														},
														{
															"nativeSrc": "4253:30:14",
															"nodeType": "YulAssignment",
															"src": "4253:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4276:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4263:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4263:12:14"
																},
																"nativeSrc": "4263:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4263:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4253:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4326:16:14",
																"nodeType": "YulBlock",
																"src": "4326:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4335:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4335:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4338:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4338:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4328:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4328:6:14"
																			},
																			"nativeSrc": "4328:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:12:14"
																		},
																		"nativeSrc": "4328:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4298:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4306:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4306:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4295:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4295:2:14"
																},
																"nativeSrc": "4295:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4295:30:14"
															},
															"nativeSrc": "4292:50:14",
															"nodeType": "YulIf",
															"src": "4292:50:14"
														},
														{
															"nativeSrc": "4351:29:14",
															"nodeType": "YulAssignment",
															"src": "4351:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4367:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4367:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4375:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4375:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4363:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4363:3:14"
																},
																"nativeSrc": "4363:17:14",
																"nodeType": "YulFunctionCall",
																"src": "4363:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "4351:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "4351:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4432:16:14",
																"nodeType": "YulBlock",
																"src": "4432:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4441:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4441:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4444:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4444:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4434:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4434:6:14"
																			},
																			"nativeSrc": "4434:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:12:14"
																		},
																		"nativeSrc": "4434:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4403:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4403:6:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4411:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4411:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4399:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4399:3:14"
																				},
																				"nativeSrc": "4399:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4399:19:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4420:4:14",
																				"nodeType": "YulLiteral",
																				"src": "4420:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4395:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:14"
																		},
																		"nativeSrc": "4395:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4395:30:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4427:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4427:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4392:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4392:2:14"
																},
																"nativeSrc": "4392:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4392:39:14"
															},
															"nativeSrc": "4389:59:14",
															"nodeType": "YulIf",
															"src": "4389:59:14"
														}
													]
												},
												"name": "abi_decode_string_calldata",
												"nativeSrc": "4106:348:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4142:6:14",
														"nodeType": "YulTypedName",
														"src": "4142:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4150:3:14",
														"nodeType": "YulTypedName",
														"src": "4150:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4158:8:14",
														"nodeType": "YulTypedName",
														"src": "4158:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4168:6:14",
														"nodeType": "YulTypedName",
														"src": "4168:6:14",
														"type": ""
													}
												],
												"src": "4106:348:14"
											},
											{
												"body": {
													"nativeSrc": "4671:878:14",
													"nodeType": "YulBlock",
													"src": "4671:878:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4718:16:14",
																"nodeType": "YulBlock",
																"src": "4718:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4727:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4727:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4730:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4730:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4720:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4720:6:14"
																			},
																			"nativeSrc": "4720:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4720:12:14"
																		},
																		"nativeSrc": "4720:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4720:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4692:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4692:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4701:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4688:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:14"
																		},
																		"nativeSrc": "4688:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:3:14",
																		"nodeType": "YulLiteral",
																		"src": "4713:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4684:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4684:3:14"
																},
																"nativeSrc": "4684:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4684:33:14"
															},
															"nativeSrc": "4681:53:14",
															"nodeType": "YulIf",
															"src": "4681:53:14"
														},
														{
															"nativeSrc": "4743:39:14",
															"nodeType": "YulAssignment",
															"src": "4743:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4772:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4772:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4753:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4753:18:14"
																},
																"nativeSrc": "4753:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4753:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4743:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4743:6:14"
																}
															]
														},
														{
															"nativeSrc": "4791:48:14",
															"nodeType": "YulAssignment",
															"src": "4791:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4824:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4824:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4835:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4835:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4820:3:14"
																		},
																		"nativeSrc": "4820:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4820:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4801:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4801:18:14"
																},
																"nativeSrc": "4801:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4801:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4791:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4791:6:14"
																}
															]
														},
														{
															"nativeSrc": "4848:48:14",
															"nodeType": "YulAssignment",
															"src": "4848:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4881:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4881:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4892:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4892:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4877:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:14"
																		},
																		"nativeSrc": "4877:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4877:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4858:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4858:18:14"
																},
																"nativeSrc": "4858:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4858:38:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4848:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:14"
																}
															]
														},
														{
															"nativeSrc": "4905:48:14",
															"nodeType": "YulAssignment",
															"src": "4905:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4938:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4938:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4949:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4949:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:14"
																		},
																		"nativeSrc": "4934:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4915:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4915:18:14"
																},
																"nativeSrc": "4915:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4915:38:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4905:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:14"
																}
															]
														},
														{
															"nativeSrc": "4962:49:14",
															"nodeType": "YulAssignment",
															"src": "4962:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4995:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5006:3:14",
																				"nodeType": "YulLiteral",
																				"src": "5006:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4991:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:14"
																		},
																		"nativeSrc": "4991:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4991:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4972:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4972:18:14"
																},
																"nativeSrc": "4972:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4972:39:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4962:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:14"
																}
															]
														},
														{
															"nativeSrc": "5020:47:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5020:47:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5051:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5051:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5062:3:14",
																				"nodeType": "YulLiteral",
																				"src": "5062:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5047:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5047:3:14"
																		},
																		"nativeSrc": "5047:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5047:19:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5034:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5034:12:14"
																},
																"nativeSrc": "5034:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5034:33:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5024:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5024:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5110:16:14",
																"nodeType": "YulBlock",
																"src": "5110:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5119:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5119:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5122:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5122:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5112:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5112:6:14"
																			},
																			"nativeSrc": "5112:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5112:12:14"
																		},
																		"nativeSrc": "5112:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5112:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5082:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5082:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5090:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5090:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5079:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5079:2:14"
																},
																"nativeSrc": "5079:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5079:30:14"
															},
															"nativeSrc": "5076:50:14",
															"nodeType": "YulIf",
															"src": "5076:50:14"
														},
														{
															"nativeSrc": "5135:85:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5135:85:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5192:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5192:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5203:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5203:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5188:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5188:3:14"
																		},
																		"nativeSrc": "5188:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5188:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5212:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5212:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nativeSrc": "5161:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5161:26:14"
																},
																"nativeSrc": "5161:59:14",
																"nodeType": "YulFunctionCall",
																"src": "5161:59:14"
															},
															"variables": [
																{
																	"name": "value5_1",
																	"nativeSrc": "5139:8:14",
																	"nodeType": "YulTypedName",
																	"src": "5139:8:14",
																	"type": ""
																},
																{
																	"name": "value6_1",
																	"nativeSrc": "5149:8:14",
																	"nodeType": "YulTypedName",
																	"src": "5149:8:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5229:18:14",
															"nodeType": "YulAssignment",
															"src": "5229:18:14",
															"value": {
																"name": "value5_1",
																"nativeSrc": "5239:8:14",
																"nodeType": "YulIdentifier",
																"src": "5239:8:14"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "5229:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:14"
																}
															]
														},
														{
															"nativeSrc": "5256:18:14",
															"nodeType": "YulAssignment",
															"src": "5256:18:14",
															"value": {
																"name": "value6_1",
																"nativeSrc": "5266:8:14",
																"nodeType": "YulIdentifier",
																"src": "5266:8:14"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "5256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:14"
																}
															]
														},
														{
															"nativeSrc": "5283:49:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5283:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5316:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5316:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5327:3:14",
																				"nodeType": "YulLiteral",
																				"src": "5327:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5312:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:14"
																		},
																		"nativeSrc": "5312:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5312:19:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5299:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5299:12:14"
																},
																"nativeSrc": "5299:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5299:33:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5287:8:14",
																	"nodeType": "YulTypedName",
																	"src": "5287:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5377:16:14",
																"nodeType": "YulBlock",
																"src": "5377:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5386:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5386:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5389:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5389:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5379:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5379:6:14"
																			},
																			"nativeSrc": "5379:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5379:12:14"
																		},
																		"nativeSrc": "5379:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5379:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5347:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "5347:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5357:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5357:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5344:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5344:2:14"
																},
																"nativeSrc": "5344:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5344:32:14"
															},
															"nativeSrc": "5341:52:14",
															"nodeType": "YulIf",
															"src": "5341:52:14"
														},
														{
															"nativeSrc": "5402:87:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5402:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5459:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5470:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "5470:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:14"
																		},
																		"nativeSrc": "5455:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5455:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5481:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5481:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nativeSrc": "5428:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5428:26:14"
																},
																"nativeSrc": "5428:61:14",
																"nodeType": "YulFunctionCall",
																"src": "5428:61:14"
															},
															"variables": [
																{
																	"name": "value7_1",
																	"nativeSrc": "5406:8:14",
																	"nodeType": "YulTypedName",
																	"src": "5406:8:14",
																	"type": ""
																},
																{
																	"name": "value8_1",
																	"nativeSrc": "5416:8:14",
																	"nodeType": "YulTypedName",
																	"src": "5416:8:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5498:18:14",
															"nodeType": "YulAssignment",
															"src": "5498:18:14",
															"value": {
																"name": "value7_1",
																"nativeSrc": "5508:8:14",
																"nodeType": "YulIdentifier",
																"src": "5508:8:14"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "5498:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:14"
																}
															]
														},
														{
															"nativeSrc": "5525:18:14",
															"nodeType": "YulAssignment",
															"src": "5525:18:14",
															"value": {
																"name": "value8_1",
																"nativeSrc": "5535:8:14",
																"nodeType": "YulIdentifier",
																"src": "5535:8:14"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "5525:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5525:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr",
												"nativeSrc": "4459:1090:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4573:9:14",
														"nodeType": "YulTypedName",
														"src": "4573:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4584:7:14",
														"nodeType": "YulTypedName",
														"src": "4584:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4596:6:14",
														"nodeType": "YulTypedName",
														"src": "4596:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4604:6:14",
														"nodeType": "YulTypedName",
														"src": "4604:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4612:6:14",
														"nodeType": "YulTypedName",
														"src": "4612:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4620:6:14",
														"nodeType": "YulTypedName",
														"src": "4620:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4628:6:14",
														"nodeType": "YulTypedName",
														"src": "4628:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4636:6:14",
														"nodeType": "YulTypedName",
														"src": "4636:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4644:6:14",
														"nodeType": "YulTypedName",
														"src": "4644:6:14",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4652:6:14",
														"nodeType": "YulTypedName",
														"src": "4652:6:14",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "4660:6:14",
														"nodeType": "YulTypedName",
														"src": "4660:6:14",
														"type": ""
													}
												],
												"src": "4459:1090:14"
											},
											{
												"body": {
													"nativeSrc": "5624:116:14",
													"nodeType": "YulBlock",
													"src": "5624:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5670:16:14",
																"nodeType": "YulBlock",
																"src": "5670:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5679:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5679:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5682:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5682:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5672:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5672:6:14"
																			},
																			"nativeSrc": "5672:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5672:12:14"
																		},
																		"nativeSrc": "5672:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5672:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5645:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5645:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5654:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5654:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5641:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:14"
																		},
																		"nativeSrc": "5641:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5641:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5666:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5637:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5637:3:14"
																},
																"nativeSrc": "5637:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5637:32:14"
															},
															"nativeSrc": "5634:52:14",
															"nodeType": "YulIf",
															"src": "5634:52:14"
														},
														{
															"nativeSrc": "5695:39:14",
															"nodeType": "YulAssignment",
															"src": "5695:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5724:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5724:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5705:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5705:18:14"
																},
																"nativeSrc": "5705:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5705:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5695:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5554:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5590:9:14",
														"nodeType": "YulTypedName",
														"src": "5590:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5601:7:14",
														"nodeType": "YulTypedName",
														"src": "5601:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5613:6:14",
														"nodeType": "YulTypedName",
														"src": "5613:6:14",
														"type": ""
													}
												],
												"src": "5554:186:14"
											},
											{
												"body": {
													"nativeSrc": "5919:182:14",
													"nodeType": "YulBlock",
													"src": "5919:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5936:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5936:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5947:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5947:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5929:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5929:6:14"
																},
																"nativeSrc": "5929:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5929:21:14"
															},
															"nativeSrc": "5929:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5929:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5970:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5981:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5981:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5966:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5966:3:14"
																		},
																		"nativeSrc": "5966:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5966:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5986:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5986:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5959:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5959:6:14"
																},
																"nativeSrc": "5959:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5959:30:14"
															},
															"nativeSrc": "5959:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5959:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6009:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6009:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6020:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6020:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6005:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6005:3:14"
																		},
																		"nativeSrc": "6005:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6005:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c6964207661756c744c6f676963",
																		"kind": "string",
																		"nativeSrc": "6025:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6025:34:14",
																		"type": "",
																		"value": "VaultFactory: invalid vaultLogic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5998:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5998:6:14"
																},
																"nativeSrc": "5998:62:14",
																"nodeType": "YulFunctionCall",
																"src": "5998:62:14"
															},
															"nativeSrc": "5998:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "5998:62:14"
														},
														{
															"nativeSrc": "6069:26:14",
															"nodeType": "YulAssignment",
															"src": "6069:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6081:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6081:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6092:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6092:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6077:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:14"
																},
																"nativeSrc": "6077:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6077:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6069:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6069:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dda28225c87e68010fc0531407a906d3c99eb59a439a163a44a7c75021a452__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5745:356:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5896:9:14",
														"nodeType": "YulTypedName",
														"src": "5896:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5910:4:14",
														"nodeType": "YulTypedName",
														"src": "5910:4:14",
														"type": ""
													}
												],
												"src": "5745:356:14"
											},
											{
												"body": {
													"nativeSrc": "6214:101:14",
													"nodeType": "YulBlock",
													"src": "6214:101:14",
													"statements": [
														{
															"nativeSrc": "6224:26:14",
															"nodeType": "YulAssignment",
															"src": "6224:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6236:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6236:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6247:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6232:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:14"
																},
																"nativeSrc": "6232:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6232:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6224:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6224:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6266:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6266:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6281:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6281:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6289:18:14",
																				"nodeType": "YulLiteral",
																				"src": "6289:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6277:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:14"
																		},
																		"nativeSrc": "6277:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6277:31:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6259:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:14"
																},
																"nativeSrc": "6259:50:14",
																"nodeType": "YulFunctionCall",
																"src": "6259:50:14"
															},
															"nativeSrc": "6259:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "6259:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "6106:209:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6183:9:14",
														"nodeType": "YulTypedName",
														"src": "6183:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6194:6:14",
														"nodeType": "YulTypedName",
														"src": "6194:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6205:4:14",
														"nodeType": "YulTypedName",
														"src": "6205:4:14",
														"type": ""
													}
												],
												"src": "6106:209:14"
											},
											{
												"body": {
													"nativeSrc": "6494:176:14",
													"nodeType": "YulBlock",
													"src": "6494:176:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6511:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6511:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6522:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6522:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:14"
																},
																"nativeSrc": "6504:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6504:21:14"
															},
															"nativeSrc": "6504:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6504:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6545:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6556:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6556:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6541:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:14"
																		},
																		"nativeSrc": "6541:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6561:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6561:2:14",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6534:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:14"
																},
																"nativeSrc": "6534:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6534:30:14"
															},
															"nativeSrc": "6534:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6534:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6595:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:14"
																		},
																		"nativeSrc": "6580:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a206f7574206f662072616e6765",
																		"kind": "string",
																		"nativeSrc": "6600:28:14",
																		"nodeType": "YulLiteral",
																		"src": "6600:28:14",
																		"type": "",
																		"value": "VaultFactory: out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:14"
																},
																"nativeSrc": "6573:56:14",
																"nodeType": "YulFunctionCall",
																"src": "6573:56:14"
															},
															"nativeSrc": "6573:56:14",
															"nodeType": "YulExpressionStatement",
															"src": "6573:56:14"
														},
														{
															"nativeSrc": "6638:26:14",
															"nodeType": "YulAssignment",
															"src": "6638:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6650:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6650:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6661:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6646:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:14"
																},
																"nativeSrc": "6646:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6646:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6638:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6638:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65a7e910ce23feeef510d14c70f42ac70596ef49593909b1a9f688d20f20f8e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6320:350:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6471:9:14",
														"nodeType": "YulTypedName",
														"src": "6471:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6485:4:14",
														"nodeType": "YulTypedName",
														"src": "6485:4:14",
														"type": ""
													}
												],
												"src": "6320:350:14"
											},
											{
												"body": {
													"nativeSrc": "6707:95:14",
													"nodeType": "YulBlock",
													"src": "6707:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6724:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6724:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6731:3:14",
																				"nodeType": "YulLiteral",
																				"src": "6731:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6736:10:14",
																				"nodeType": "YulLiteral",
																				"src": "6736:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:14"
																		},
																		"nativeSrc": "6727:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6717:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:14"
																},
																"nativeSrc": "6717:31:14",
																"nodeType": "YulFunctionCall",
																"src": "6717:31:14"
															},
															"nativeSrc": "6717:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "6717:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6764:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6764:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6767:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6767:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6757:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6757:6:14"
																},
																"nativeSrc": "6757:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6757:15:14"
															},
															"nativeSrc": "6757:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6757:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6788:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6788:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6791:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6791:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6781:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6781:6:14"
																},
																"nativeSrc": "6781:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6781:15:14"
															},
															"nativeSrc": "6781:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6781:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6675:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6675:127:14"
											},
											{
												"body": {
													"nativeSrc": "6981:178:14",
													"nodeType": "YulBlock",
													"src": "6981:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6998:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6998:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7009:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7009:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6991:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:14"
																},
																"nativeSrc": "6991:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6991:21:14"
															},
															"nativeSrc": "6991:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6991:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7032:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7043:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7043:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7028:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:14"
																		},
																		"nativeSrc": "7028:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7028:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7048:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7048:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7021:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:14"
																},
																"nativeSrc": "7021:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7021:30:14"
															},
															"nativeSrc": "7021:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7021:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7071:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7071:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7082:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7082:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7067:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:14"
																		},
																		"nativeSrc": "7067:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c6964206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "7087:30:14",
																		"nodeType": "YulLiteral",
																		"src": "7087:30:14",
																		"type": "",
																		"value": "VaultFactory: invalid oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7060:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7060:6:14"
																},
																"nativeSrc": "7060:58:14",
																"nodeType": "YulFunctionCall",
																"src": "7060:58:14"
															},
															"nativeSrc": "7060:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "7060:58:14"
														},
														{
															"nativeSrc": "7127:26:14",
															"nodeType": "YulAssignment",
															"src": "7127:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7139:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7139:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7135:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7135:3:14"
																},
																"nativeSrc": "7135:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7135:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7127:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7127:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51b258cab92da9dc466ea40695b4e7cda87910622eb01b523751dd8d47e4cf60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6807:352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6958:9:14",
														"nodeType": "YulTypedName",
														"src": "6958:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6972:4:14",
														"nodeType": "YulTypedName",
														"src": "6972:4:14",
														"type": ""
													}
												],
												"src": "6807:352:14"
											},
											{
												"body": {
													"nativeSrc": "7338:182:14",
													"nodeType": "YulBlock",
													"src": "7338:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7355:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7355:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7366:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7366:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7348:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:14"
																},
																"nativeSrc": "7348:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7348:21:14"
															},
															"nativeSrc": "7348:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7348:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7389:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7400:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7400:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7385:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:14"
																		},
																		"nativeSrc": "7385:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7385:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7405:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7405:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7378:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7378:6:14"
																},
																"nativeSrc": "7378:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7378:30:14"
															},
															"nativeSrc": "7378:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7378:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7428:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7424:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:14"
																		},
																		"nativeSrc": "7424:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c696420726562616c616e636572",
																		"kind": "string",
																		"nativeSrc": "7444:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7444:34:14",
																		"type": "",
																		"value": "VaultFactory: invalid rebalancer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7417:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:14"
																},
																"nativeSrc": "7417:62:14",
																"nodeType": "YulFunctionCall",
																"src": "7417:62:14"
															},
															"nativeSrc": "7417:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "7417:62:14"
														},
														{
															"nativeSrc": "7488:26:14",
															"nodeType": "YulAssignment",
															"src": "7488:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7500:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7500:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7511:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7511:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7496:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7496:3:14"
																},
																"nativeSrc": "7496:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7496:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7488:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7488:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e641eda8809214632980d7cb918dcc7946e96140acdade8c28b30d9cbd55357f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7164:356:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7315:9:14",
														"nodeType": "YulTypedName",
														"src": "7315:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7329:4:14",
														"nodeType": "YulTypedName",
														"src": "7329:4:14",
														"type": ""
													}
												],
												"src": "7164:356:14"
											},
											{
												"body": {
													"nativeSrc": "7699:182:14",
													"nodeType": "YulBlock",
													"src": "7699:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7716:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7716:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7727:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7727:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7709:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:14"
																},
																"nativeSrc": "7709:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7709:21:14"
															},
															"nativeSrc": "7709:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7709:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7750:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7750:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7761:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7761:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7746:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7746:3:14"
																		},
																		"nativeSrc": "7746:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7746:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7766:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7739:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:14"
																},
																"nativeSrc": "7739:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7739:30:14"
															},
															"nativeSrc": "7739:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7739:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7789:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7800:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7800:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7785:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:14"
																		},
																		"nativeSrc": "7785:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7785:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c6964206c697175696461746f72",
																		"kind": "string",
																		"nativeSrc": "7805:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7805:34:14",
																		"type": "",
																		"value": "VaultFactory: invalid liquidator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7778:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:14"
																},
																"nativeSrc": "7778:62:14",
																"nodeType": "YulFunctionCall",
																"src": "7778:62:14"
															},
															"nativeSrc": "7778:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "7778:62:14"
														},
														{
															"nativeSrc": "7849:26:14",
															"nodeType": "YulAssignment",
															"src": "7849:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7861:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7872:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7872:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7857:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7857:3:14"
																},
																"nativeSrc": "7857:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7857:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7849:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7849:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a50593fac8818ab0d7ae050e30512c1ded1c9b376035840736ab1944b0aa02ed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7525:356:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7676:9:14",
														"nodeType": "YulTypedName",
														"src": "7676:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7690:4:14",
														"nodeType": "YulTypedName",
														"src": "7690:4:14",
														"type": ""
													}
												],
												"src": "7525:356:14"
											},
											{
												"body": {
													"nativeSrc": "8043:240:14",
													"nodeType": "YulBlock",
													"src": "8043:240:14",
													"statements": [
														{
															"nativeSrc": "8053:26:14",
															"nodeType": "YulAssignment",
															"src": "8053:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8065:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8065:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8076:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8076:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8061:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8061:3:14"
																},
																"nativeSrc": "8061:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8061:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8053:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8053:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8095:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8095:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8110:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8110:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8126:3:14",
																								"nodeType": "YulLiteral",
																								"src": "8126:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8131:1:14",
																								"nodeType": "YulLiteral",
																								"src": "8131:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8122:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "8122:3:14"
																						},
																						"nativeSrc": "8122:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "8122:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8135:1:14",
																						"nodeType": "YulLiteral",
																						"src": "8135:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8118:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8118:3:14"
																				},
																				"nativeSrc": "8118:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8118:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8106:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8106:3:14"
																		},
																		"nativeSrc": "8106:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8106:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8088:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:14"
																},
																"nativeSrc": "8088:51:14",
																"nodeType": "YulFunctionCall",
																"src": "8088:51:14"
															},
															"nativeSrc": "8088:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "8088:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8159:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8170:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8170:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8155:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:14"
																		},
																		"nativeSrc": "8155:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8155:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8179:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8179:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8195:3:14",
																								"nodeType": "YulLiteral",
																								"src": "8195:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8200:1:14",
																								"nodeType": "YulLiteral",
																								"src": "8200:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8191:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "8191:3:14"
																						},
																						"nativeSrc": "8191:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "8191:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8204:1:14",
																						"nodeType": "YulLiteral",
																						"src": "8204:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8187:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8187:3:14"
																				},
																				"nativeSrc": "8187:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8187:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8175:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:14"
																		},
																		"nativeSrc": "8175:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8175:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8148:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:14"
																},
																"nativeSrc": "8148:60:14",
																"nodeType": "YulFunctionCall",
																"src": "8148:60:14"
															},
															"nativeSrc": "8148:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "8148:60:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8228:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8228:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8239:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8239:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:14"
																		},
																		"nativeSrc": "8224:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8248:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8248:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8264:3:14",
																								"nodeType": "YulLiteral",
																								"src": "8264:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8269:1:14",
																								"nodeType": "YulLiteral",
																								"src": "8269:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8260:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "8260:3:14"
																						},
																						"nativeSrc": "8260:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "8260:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8273:1:14",
																						"nodeType": "YulLiteral",
																						"src": "8273:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8256:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8256:3:14"
																				},
																				"nativeSrc": "8256:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8256:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8244:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8244:3:14"
																		},
																		"nativeSrc": "8244:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8244:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:14"
																},
																"nativeSrc": "8217:60:14",
																"nodeType": "YulFunctionCall",
																"src": "8217:60:14"
															},
															"nativeSrc": "8217:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "8217:60:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nativeSrc": "7886:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7996:9:14",
														"nodeType": "YulTypedName",
														"src": "7996:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8007:6:14",
														"nodeType": "YulTypedName",
														"src": "8007:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8015:6:14",
														"nodeType": "YulTypedName",
														"src": "8015:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8023:6:14",
														"nodeType": "YulTypedName",
														"src": "8023:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8034:4:14",
														"nodeType": "YulTypedName",
														"src": "8034:4:14",
														"type": ""
													}
												],
												"src": "7886:397:14"
											},
											{
												"body": {
													"nativeSrc": "8462:178:14",
													"nodeType": "YulBlock",
													"src": "8462:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8479:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8479:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8490:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8490:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8472:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8472:6:14"
																},
																"nativeSrc": "8472:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8472:21:14"
															},
															"nativeSrc": "8472:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8472:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8513:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8513:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8524:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8524:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8509:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:14"
																		},
																		"nativeSrc": "8509:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8509:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8529:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8529:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8502:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:14"
																},
																"nativeSrc": "8502:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8502:30:14"
															},
															"nativeSrc": "8502:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8502:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8552:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8552:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8563:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8563:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8548:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8548:3:14"
																		},
																		"nativeSrc": "8548:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8548:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c6964207633506f6f6c",
																		"kind": "string",
																		"nativeSrc": "8568:30:14",
																		"nodeType": "YulLiteral",
																		"src": "8568:30:14",
																		"type": "",
																		"value": "VaultFactory: invalid v3Pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8541:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8541:6:14"
																},
																"nativeSrc": "8541:58:14",
																"nodeType": "YulFunctionCall",
																"src": "8541:58:14"
															},
															"nativeSrc": "8541:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "8541:58:14"
														},
														{
															"nativeSrc": "8608:26:14",
															"nodeType": "YulAssignment",
															"src": "8608:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8620:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8620:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8631:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8631:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8616:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8616:3:14"
																},
																"nativeSrc": "8616:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8616:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8608:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8608:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41a6f9dc9152b55c7b8cb18bd78f13184f1a7db49748e9df5e560db226f7b974__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8288:352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8439:9:14",
														"nodeType": "YulTypedName",
														"src": "8439:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8453:4:14",
														"nodeType": "YulTypedName",
														"src": "8453:4:14",
														"type": ""
													}
												],
												"src": "8288:352:14"
											},
											{
												"body": {
													"nativeSrc": "8819:223:14",
													"nodeType": "YulBlock",
													"src": "8819:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8836:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8836:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8847:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8829:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8829:6:14"
																},
																"nativeSrc": "8829:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8829:21:14"
															},
															"nativeSrc": "8829:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8829:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8870:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8870:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8881:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8881:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8866:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:14"
																		},
																		"nativeSrc": "8866:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8866:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8886:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8886:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8859:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8859:6:14"
																},
																"nativeSrc": "8859:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8859:30:14"
															},
															"nativeSrc": "8859:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8859:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8909:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8909:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8920:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8920:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8905:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8905:3:14"
																		},
																		"nativeSrc": "8905:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8905:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c696420706f736974696f6e4d67",
																		"kind": "string",
																		"nativeSrc": "8925:34:14",
																		"nodeType": "YulLiteral",
																		"src": "8925:34:14",
																		"type": "",
																		"value": "VaultFactory: invalid positionMg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8898:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8898:6:14"
																},
																"nativeSrc": "8898:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8898:62:14"
															},
															"nativeSrc": "8898:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "8898:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8980:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8991:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8991:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8976:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:14"
																		},
																		"nativeSrc": "8976:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8976:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "8996:3:14",
																		"nodeType": "YulLiteral",
																		"src": "8996:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8969:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:14"
																},
																"nativeSrc": "8969:31:14",
																"nodeType": "YulFunctionCall",
																"src": "8969:31:14"
															},
															"nativeSrc": "8969:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "8969:31:14"
														},
														{
															"nativeSrc": "9009:27:14",
															"nodeType": "YulAssignment",
															"src": "9009:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9021:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9021:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9032:3:14",
																		"nodeType": "YulLiteral",
																		"src": "9032:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9017:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:14"
																},
																"nativeSrc": "9017:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9017:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9009:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9009:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cced3f6d78f022c49a9ea04990f1be490d4ef2d1f2b62a9649756d665f2898a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8645:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8796:9:14",
														"nodeType": "YulTypedName",
														"src": "8796:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8810:4:14",
														"nodeType": "YulTypedName",
														"src": "8810:4:14",
														"type": ""
													}
												],
												"src": "8645:397:14"
											},
											{
												"body": {
													"nativeSrc": "9221:173:14",
													"nodeType": "YulBlock",
													"src": "9221:173:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9238:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9238:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9249:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9249:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9231:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:14"
																},
																"nativeSrc": "9231:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9231:21:14"
															},
															"nativeSrc": "9231:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9231:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9272:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9283:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9283:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9268:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:14"
																		},
																		"nativeSrc": "9268:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9268:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9288:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9288:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:14"
																},
																"nativeSrc": "9261:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9261:30:14"
															},
															"nativeSrc": "9261:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9261:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9311:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9322:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9322:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9307:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:14"
																		},
																		"nativeSrc": "9307:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a206e6f206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "9327:25:14",
																		"nodeType": "YulLiteral",
																		"src": "9327:25:14",
																		"type": "",
																		"value": "VaultFactory: no oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9300:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:14"
																},
																"nativeSrc": "9300:53:14",
																"nodeType": "YulFunctionCall",
																"src": "9300:53:14"
															},
															"nativeSrc": "9300:53:14",
															"nodeType": "YulExpressionStatement",
															"src": "9300:53:14"
														},
														{
															"nativeSrc": "9362:26:14",
															"nodeType": "YulAssignment",
															"src": "9362:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9374:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9374:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9385:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9385:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9370:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:14"
																},
																"nativeSrc": "9370:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9370:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9362:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9362:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdc079468a75dda5fbfe7875b630a69a7963d312b46d40a027a90b64f72211c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9047:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9198:9:14",
														"nodeType": "YulTypedName",
														"src": "9198:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9212:4:14",
														"nodeType": "YulTypedName",
														"src": "9212:4:14",
														"type": ""
													}
												],
												"src": "9047:347:14"
											},
											{
												"body": {
													"nativeSrc": "9573:177:14",
													"nodeType": "YulBlock",
													"src": "9573:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9590:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9590:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9601:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9601:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9583:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9583:6:14"
																},
																"nativeSrc": "9583:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9583:21:14"
															},
															"nativeSrc": "9583:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9583:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9624:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9624:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9635:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9635:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9620:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:14"
																		},
																		"nativeSrc": "9620:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9620:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9640:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9613:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:14"
																},
																"nativeSrc": "9613:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9613:30:14"
															},
															"nativeSrc": "9613:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9613:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9663:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9663:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9674:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9659:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9659:3:14"
																		},
																		"nativeSrc": "9659:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9659:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a206e6f20726562616c616e636572",
																		"kind": "string",
																		"nativeSrc": "9679:29:14",
																		"nodeType": "YulLiteral",
																		"src": "9679:29:14",
																		"type": "",
																		"value": "VaultFactory: no rebalancer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:14"
																},
																"nativeSrc": "9652:57:14",
																"nodeType": "YulFunctionCall",
																"src": "9652:57:14"
															},
															"nativeSrc": "9652:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "9652:57:14"
														},
														{
															"nativeSrc": "9718:26:14",
															"nodeType": "YulAssignment",
															"src": "9718:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9730:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9730:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9741:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9741:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9726:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:14"
																},
																"nativeSrc": "9726:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9726:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9718:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9718:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_029ff0a00ff545cf84b28f65fd6af9d2b714a0bfc138cf0f17241edbb4ed7564__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9399:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9550:9:14",
														"nodeType": "YulTypedName",
														"src": "9550:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9564:4:14",
														"nodeType": "YulTypedName",
														"src": "9564:4:14",
														"type": ""
													}
												],
												"src": "9399:351:14"
											},
											{
												"body": {
													"nativeSrc": "9929:177:14",
													"nodeType": "YulBlock",
													"src": "9929:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9946:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9946:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9957:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9957:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9939:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:14"
																},
																"nativeSrc": "9939:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9939:21:14"
															},
															"nativeSrc": "9939:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9939:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9980:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9991:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9991:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9976:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:14"
																		},
																		"nativeSrc": "9976:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9976:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9996:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9969:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9969:6:14"
																},
																"nativeSrc": "9969:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9969:30:14"
															},
															"nativeSrc": "9969:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9969:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10019:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10019:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10030:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10030:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10015:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10015:3:14"
																		},
																		"nativeSrc": "10015:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10015:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a206e6f206c697175696461746f72",
																		"kind": "string",
																		"nativeSrc": "10035:29:14",
																		"nodeType": "YulLiteral",
																		"src": "10035:29:14",
																		"type": "",
																		"value": "VaultFactory: no liquidator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10008:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:14"
																},
																"nativeSrc": "10008:57:14",
																"nodeType": "YulFunctionCall",
																"src": "10008:57:14"
															},
															"nativeSrc": "10008:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "10008:57:14"
														},
														{
															"nativeSrc": "10074:26:14",
															"nodeType": "YulAssignment",
															"src": "10074:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10086:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10086:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10097:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10097:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10082:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10082:3:14"
																},
																"nativeSrc": "10082:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10082:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10074:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10074:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4be469b26dae49936f4b600b35f03337062ed732c5551ea51a02555fb87c4c3a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9755:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9906:9:14",
														"nodeType": "YulTypedName",
														"src": "9906:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9920:4:14",
														"nodeType": "YulTypedName",
														"src": "9920:4:14",
														"type": ""
													}
												],
												"src": "9755:351:14"
											},
											{
												"body": {
													"nativeSrc": "10178:200:14",
													"nodeType": "YulBlock",
													"src": "10178:200:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10195:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10195:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10200:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10200:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10188:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10188:6:14"
																},
																"nativeSrc": "10188:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10188:19:14"
															},
															"nativeSrc": "10188:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "10188:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "10233:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10233:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10238:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10238:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10229:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10229:3:14"
																		},
																		"nativeSrc": "10229:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10229:14:14"
																	},
																	{
																		"name": "start",
																		"nativeSrc": "10245:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10245:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10252:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10252:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10216:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "10216:12:14"
																},
																"nativeSrc": "10216:43:14",
																"nodeType": "YulFunctionCall",
																"src": "10216:43:14"
															},
															"nativeSrc": "10216:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "10216:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10283:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10283:3:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "10288:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10288:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10279:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10279:3:14"
																				},
																				"nativeSrc": "10279:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10279:16:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10297:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10297:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10275:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10275:3:14"
																		},
																		"nativeSrc": "10275:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10275:27:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10304:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10304:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10268:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:14"
																},
																"nativeSrc": "10268:38:14",
																"nodeType": "YulFunctionCall",
																"src": "10268:38:14"
															},
															"nativeSrc": "10268:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "10268:38:14"
														},
														{
															"nativeSrc": "10315:57:14",
															"nodeType": "YulAssignment",
															"src": "10315:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "10330:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10330:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "10343:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "10343:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10351:2:14",
																								"nodeType": "YulLiteral",
																								"src": "10351:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10339:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10339:3:14"
																						},
																						"nativeSrc": "10339:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10339:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10360:2:14",
																								"nodeType": "YulLiteral",
																								"src": "10360:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10356:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10356:3:14"
																						},
																						"nativeSrc": "10356:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10356:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "10335:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10335:3:14"
																				},
																				"nativeSrc": "10335:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10335:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10326:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10326:3:14"
																		},
																		"nativeSrc": "10326:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10326:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10367:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10367:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10322:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10322:3:14"
																},
																"nativeSrc": "10322:50:14",
																"nodeType": "YulFunctionCall",
																"src": "10322:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10315:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10315:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_calldata",
												"nativeSrc": "10111:267:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "10147:5:14",
														"nodeType": "YulTypedName",
														"src": "10147:5:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10154:6:14",
														"nodeType": "YulTypedName",
														"src": "10154:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10162:3:14",
														"nodeType": "YulTypedName",
														"src": "10162:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10170:3:14",
														"nodeType": "YulTypedName",
														"src": "10170:3:14",
														"type": ""
													}
												],
												"src": "10111:267:14"
											},
											{
												"body": {
													"nativeSrc": "10740:668:14",
													"nodeType": "YulBlock",
													"src": "10740:668:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10757:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10757:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10772:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10772:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10788:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10788:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10793:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10793:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10784:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10784:3:14"
																						},
																						"nativeSrc": "10784:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10784:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10797:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10797:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10780:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10780:3:14"
																				},
																				"nativeSrc": "10780:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10780:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10768:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10768:3:14"
																		},
																		"nativeSrc": "10768:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10768:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10750:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10750:6:14"
																},
																"nativeSrc": "10750:51:14",
																"nodeType": "YulFunctionCall",
																"src": "10750:51:14"
															},
															"nativeSrc": "10750:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "10750:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10821:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10821:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10832:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10832:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10817:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:14"
																		},
																		"nativeSrc": "10817:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10817:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10841:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10841:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10857:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10857:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10862:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10862:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10853:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10853:3:14"
																						},
																						"nativeSrc": "10853:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10853:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10866:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10866:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10849:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10849:3:14"
																				},
																				"nativeSrc": "10849:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10849:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10837:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10837:3:14"
																		},
																		"nativeSrc": "10837:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10837:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10810:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:14"
																},
																"nativeSrc": "10810:60:14",
																"nodeType": "YulFunctionCall",
																"src": "10810:60:14"
															},
															"nativeSrc": "10810:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "10810:60:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10890:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10890:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10901:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10901:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10886:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10886:3:14"
																		},
																		"nativeSrc": "10886:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10886:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10910:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10910:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10926:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10926:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10931:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10931:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10922:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10922:3:14"
																						},
																						"nativeSrc": "10922:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10922:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10935:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10935:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10918:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10918:3:14"
																				},
																				"nativeSrc": "10918:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10918:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10906:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:14"
																		},
																		"nativeSrc": "10906:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10906:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10879:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10879:6:14"
																},
																"nativeSrc": "10879:60:14",
																"nodeType": "YulFunctionCall",
																"src": "10879:60:14"
															},
															"nativeSrc": "10879:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "10879:60:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10970:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:14"
																		},
																		"nativeSrc": "10955:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "10979:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10979:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10995:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10995:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11000:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11000:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10991:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10991:3:14"
																						},
																						"nativeSrc": "10991:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10991:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11004:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11004:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10987:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10987:3:14"
																				},
																				"nativeSrc": "10987:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10987:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10975:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10975:3:14"
																		},
																		"nativeSrc": "10975:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10975:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10948:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:14"
																},
																"nativeSrc": "10948:60:14",
																"nodeType": "YulFunctionCall",
																"src": "10948:60:14"
															},
															"nativeSrc": "10948:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "10948:60:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11028:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11028:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11039:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11039:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11024:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:14"
																		},
																		"nativeSrc": "11024:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11024:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "11049:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11049:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11065:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11065:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11070:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11070:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11061:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11061:3:14"
																						},
																						"nativeSrc": "11061:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11061:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11074:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11074:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11057:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11057:3:14"
																				},
																				"nativeSrc": "11057:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11057:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11045:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11045:3:14"
																		},
																		"nativeSrc": "11045:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11045:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11017:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11017:6:14"
																},
																"nativeSrc": "11017:61:14",
																"nodeType": "YulFunctionCall",
																"src": "11017:61:14"
															},
															"nativeSrc": "11017:61:14",
															"nodeType": "YulExpressionStatement",
															"src": "11017:61:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11098:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11098:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11109:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11109:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11094:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11094:3:14"
																		},
																		"nativeSrc": "11094:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11094:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "11119:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11119:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11135:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11135:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11140:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11140:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11131:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11131:3:14"
																						},
																						"nativeSrc": "11131:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11131:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11144:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11144:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11127:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11127:3:14"
																				},
																				"nativeSrc": "11127:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11127:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11115:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11115:3:14"
																		},
																		"nativeSrc": "11115:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11115:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11087:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11087:6:14"
																},
																"nativeSrc": "11087:61:14",
																"nodeType": "YulFunctionCall",
																"src": "11087:61:14"
															},
															"nativeSrc": "11087:61:14",
															"nodeType": "YulExpressionStatement",
															"src": "11087:61:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11168:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11179:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11179:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11164:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:14"
																		},
																		"nativeSrc": "11164:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11164:19:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11185:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11185:3:14",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11157:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:14"
																},
																"nativeSrc": "11157:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11157:32:14"
															},
															"nativeSrc": "11157:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "11157:32:14"
														},
														{
															"nativeSrc": "11198:77:14",
															"nodeType": "YulVariableDeclaration",
															"src": "11198:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "11239:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11239:6:14"
																	},
																	{
																		"name": "value7",
																		"nativeSrc": "11247:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11247:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11259:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11259:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11270:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11270:3:14",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11255:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:14"
																		},
																		"nativeSrc": "11255:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nativeSrc": "11212:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "11212:26:14"
																},
																"nativeSrc": "11212:63:14",
																"nodeType": "YulFunctionCall",
																"src": "11212:63:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "11202:6:14",
																	"nodeType": "YulTypedName",
																	"src": "11202:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11295:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11295:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11306:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11306:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11291:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11291:3:14"
																		},
																		"nativeSrc": "11291:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11291:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "11316:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11324:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11312:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:14"
																		},
																		"nativeSrc": "11312:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11312:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11284:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11284:6:14"
																},
																"nativeSrc": "11284:51:14",
																"nodeType": "YulFunctionCall",
																"src": "11284:51:14"
															},
															"nativeSrc": "11284:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "11284:51:14"
														},
														{
															"nativeSrc": "11344:58:14",
															"nodeType": "YulAssignment",
															"src": "11344:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "11379:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11379:6:14"
																	},
																	{
																		"name": "value9",
																		"nativeSrc": "11387:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11387:6:14"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "11395:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11395:6:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nativeSrc": "11352:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "11352:26:14"
																},
																"nativeSrc": "11352:50:14",
																"nodeType": "YulFunctionCall",
																"src": "11352:50:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11344:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_address_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10383:1025:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10637:9:14",
														"nodeType": "YulTypedName",
														"src": "10637:9:14",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "10648:6:14",
														"nodeType": "YulTypedName",
														"src": "10648:6:14",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "10656:6:14",
														"nodeType": "YulTypedName",
														"src": "10656:6:14",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "10664:6:14",
														"nodeType": "YulTypedName",
														"src": "10664:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10672:6:14",
														"nodeType": "YulTypedName",
														"src": "10672:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10680:6:14",
														"nodeType": "YulTypedName",
														"src": "10680:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10688:6:14",
														"nodeType": "YulTypedName",
														"src": "10688:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10696:6:14",
														"nodeType": "YulTypedName",
														"src": "10696:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10704:6:14",
														"nodeType": "YulTypedName",
														"src": "10704:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10712:6:14",
														"nodeType": "YulTypedName",
														"src": "10712:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10720:6:14",
														"nodeType": "YulTypedName",
														"src": "10720:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10731:4:14",
														"nodeType": "YulTypedName",
														"src": "10731:4:14",
														"type": ""
													}
												],
												"src": "10383:1025:14"
											},
											{
												"body": {
													"nativeSrc": "11560:168:14",
													"nodeType": "YulBlock",
													"src": "11560:168:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11577:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11577:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11592:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11592:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11608:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11608:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11613:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11613:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11604:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11604:3:14"
																						},
																						"nativeSrc": "11604:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11604:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11617:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11617:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11600:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11600:3:14"
																				},
																				"nativeSrc": "11600:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11600:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11588:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11588:3:14"
																		},
																		"nativeSrc": "11588:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11588:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11570:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11570:6:14"
																},
																"nativeSrc": "11570:51:14",
																"nodeType": "YulFunctionCall",
																"src": "11570:51:14"
															},
															"nativeSrc": "11570:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "11570:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11641:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11641:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11652:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11652:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11637:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11637:3:14"
																		},
																		"nativeSrc": "11637:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11637:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11657:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11657:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11630:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11630:6:14"
																},
																"nativeSrc": "11630:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11630:30:14"
															},
															"nativeSrc": "11630:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "11630:30:14"
														},
														{
															"nativeSrc": "11669:53:14",
															"nodeType": "YulAssignment",
															"src": "11669:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11695:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11695:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11707:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11707:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11718:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11718:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11703:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:14"
																		},
																		"nativeSrc": "11703:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11703:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11677:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11677:17:14"
																},
																"nativeSrc": "11677:45:14",
																"nodeType": "YulFunctionCall",
																"src": "11677:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11669:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11669:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11413:315:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11521:9:14",
														"nodeType": "YulTypedName",
														"src": "11521:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11532:6:14",
														"nodeType": "YulTypedName",
														"src": "11532:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11540:6:14",
														"nodeType": "YulTypedName",
														"src": "11540:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11551:4:14",
														"nodeType": "YulTypedName",
														"src": "11551:4:14",
														"type": ""
													}
												],
												"src": "11413:315:14"
											},
											{
												"body": {
													"nativeSrc": "11907:177:14",
													"nodeType": "YulBlock",
													"src": "11907:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11924:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11924:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11935:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11935:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11917:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11917:6:14"
																},
																"nativeSrc": "11917:21:14",
																"nodeType": "YulFunctionCall",
																"src": "11917:21:14"
															},
															"nativeSrc": "11917:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "11917:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11958:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11958:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11969:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11969:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11954:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11954:3:14"
																		},
																		"nativeSrc": "11954:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11954:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11974:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11974:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11947:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11947:6:14"
																},
																"nativeSrc": "11947:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11947:30:14"
															},
															"nativeSrc": "11947:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "11947:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11997:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11997:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12008:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12008:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11993:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11993:3:14"
																		},
																		"nativeSrc": "11993:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11993:18:14"
																	},
																	{
																		"hexValue": "5661756c74466163746f72793a20696e76616c6964206c6f676963",
																		"kind": "string",
																		"nativeSrc": "12013:29:14",
																		"nodeType": "YulLiteral",
																		"src": "12013:29:14",
																		"type": "",
																		"value": "VaultFactory: invalid logic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11986:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:14"
																},
																"nativeSrc": "11986:57:14",
																"nodeType": "YulFunctionCall",
																"src": "11986:57:14"
															},
															"nativeSrc": "11986:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "11986:57:14"
														},
														{
															"nativeSrc": "12052:26:14",
															"nodeType": "YulAssignment",
															"src": "12052:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12064:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12064:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12075:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12075:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12060:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12060:3:14"
																},
																"nativeSrc": "12060:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12060:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12052:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12052:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_829de76cbdffe51e5a296468ec9026b601361c177d381cdd63bc5003db76a21e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11733:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11884:9:14",
														"nodeType": "YulTypedName",
														"src": "11884:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11898:4:14",
														"nodeType": "YulTypedName",
														"src": "11898:4:14",
														"type": ""
													}
												],
												"src": "11733:351:14"
											},
											{
												"body": {
													"nativeSrc": "12170:103:14",
													"nodeType": "YulBlock",
													"src": "12170:103:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12216:16:14",
																"nodeType": "YulBlock",
																"src": "12216:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12225:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12225:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12228:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12228:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12218:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12218:6:14"
																			},
																			"nativeSrc": "12218:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12218:12:14"
																		},
																		"nativeSrc": "12218:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12218:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12191:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12191:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12200:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12200:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12187:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12187:3:14"
																		},
																		"nativeSrc": "12187:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12187:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12212:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12212:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12183:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12183:3:14"
																},
																"nativeSrc": "12183:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12183:32:14"
															},
															"nativeSrc": "12180:52:14",
															"nodeType": "YulIf",
															"src": "12180:52:14"
														},
														{
															"nativeSrc": "12241:26:14",
															"nodeType": "YulAssignment",
															"src": "12241:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12257:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12257:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12251:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12251:5:14"
																},
																"nativeSrc": "12251:16:14",
																"nodeType": "YulFunctionCall",
																"src": "12251:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12241:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12241:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "12089:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12136:9:14",
														"nodeType": "YulTypedName",
														"src": "12136:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12147:7:14",
														"nodeType": "YulTypedName",
														"src": "12147:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12159:6:14",
														"nodeType": "YulTypedName",
														"src": "12159:6:14",
														"type": ""
													}
												],
												"src": "12089:184:14"
											},
											{
												"body": {
													"nativeSrc": "12415:150:14",
													"nodeType": "YulBlock",
													"src": "12415:150:14",
													"statements": [
														{
															"nativeSrc": "12425:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12425:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12445:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12445:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12439:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12439:5:14"
																},
																"nativeSrc": "12439:13:14",
																"nodeType": "YulFunctionCall",
																"src": "12439:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12429:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12429:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12500:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12500:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12508:4:14",
																				"nodeType": "YulLiteral",
																				"src": "12508:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12496:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:14"
																		},
																		"nativeSrc": "12496:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12496:17:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12515:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12515:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12520:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12520:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12461:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "12461:34:14"
																},
																"nativeSrc": "12461:66:14",
																"nodeType": "YulFunctionCall",
																"src": "12461:66:14"
															},
															"nativeSrc": "12461:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "12461:66:14"
														},
														{
															"nativeSrc": "12536:23:14",
															"nodeType": "YulAssignment",
															"src": "12536:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12547:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12547:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12552:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12552:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12543:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12543:3:14"
																},
																"nativeSrc": "12543:16:14",
																"nodeType": "YulFunctionCall",
																"src": "12543:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12536:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12536:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12278:287:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12391:3:14",
														"nodeType": "YulTypedName",
														"src": "12391:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12396:6:14",
														"nodeType": "YulTypedName",
														"src": "12396:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12407:3:14",
														"nodeType": "YulTypedName",
														"src": "12407:3:14",
														"type": ""
													}
												],
												"src": "12278:287:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e6dda28225c87e68010fc0531407a906d3c99eb59a439a163a44a7c75021a452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"VaultFactory: invalid vaultLogic\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_65a7e910ce23feeef510d14c70f42ac70596ef49593909b1a9f688d20f20f8e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"VaultFactory: out of range\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_51b258cab92da9dc466ea40695b4e7cda87910622eb01b523751dd8d47e4cf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"VaultFactory: invalid oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e641eda8809214632980d7cb918dcc7946e96140acdade8c28b30d9cbd55357f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"VaultFactory: invalid rebalancer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a50593fac8818ab0d7ae050e30512c1ded1c9b376035840736ab1944b0aa02ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"VaultFactory: invalid liquidator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_41a6f9dc9152b55c7b8cb18bd78f13184f1a7db49748e9df5e560db226f7b974__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"VaultFactory: invalid v3Pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cced3f6d78f022c49a9ea04990f1be490d4ef2d1f2b62a9649756d665f2898a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"VaultFactory: invalid positionMg\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdc079468a75dda5fbfe7875b630a69a7963d312b46d40a027a90b64f72211c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"VaultFactory: no oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_029ff0a00ff545cf84b28f65fd6af9d2b714a0bfc138cf0f17241edbb4ed7564__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"VaultFactory: no rebalancer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4be469b26dae49936f4b600b35f03337062ed732c5551ea51a02555fb87c4c3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"VaultFactory: no liquidator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_address_t_address_t_address_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 192), 256)\n        let tail_1 := abi_encode_string_calldata(value6, value7, add(headStart, 256))\n        mstore(add(headStart, 224), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value8, value9, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_829de76cbdffe51e5a296468ec9026b601361c177d381cdd63bc5003db76a21e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"VaultFactory: invalid logic\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 3122
									},
									{
										"length": 32,
										"start": 3163
									},
									{
										"length": 32,
										"start": 3487
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610105575f3560e01c80639403b63411610092578063ad3cb1cc11610062578063ad3cb1cc146102bb578063b078147a146102f8578063c363875714610316578063ecedd5bc14610335578063f2fde38b14610354575f5ffd5b80639403b6341461024857806397331bf914610267578063a7c6a10014610288578063ab31b6f31461029c575f5ffd5b806352d1902d116100d857806352d1902d14610198578063545851d7146101ba578063715018a6146101d95780638da5cb5b146101ed5780639094a91e14610229575f5ffd5b80633c46201d14610109578063485cc955146101455780634c39ad21146101665780634f1ef28614610185575b5f5ffd5b348015610114575f5ffd5b50600254610128906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610150575f5ffd5b5061016461015f3660046110f2565b610373565b005b348015610171575f5ffd5b50600154610128906001600160a01b031681565b610164610193366004611137565b6104ff565b3480156101a3575f5ffd5b506101ac61051e565b60405190815260200161013c565b3480156101c5575f5ffd5b50600354610128906001600160a01b031681565b3480156101e4575f5ffd5b50610164610539565b3480156101f8575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610128565b348015610234575f5ffd5b506101286102433660046111fb565b61054c565b348015610253575f5ffd5b506101286102623660046111fb565b610574565b348015610272575f5ffd5b5061027b6105f4565b60405161013c9190611212565b348015610293575f5ffd5b506004546101ac565b3480156102a7575f5ffd5b506101646102b636600461125d565b610654565b3480156102c6575f5ffd5b506102eb604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161013c91906112ea565b348015610303575f5ffd5b505f54610128906001600160a01b031681565b348015610321575f5ffd5b50610128610330366004611341565b6107e2565b348015610340575f5ffd5b5061016461034f366004611403565b610b52565b34801561035f575f5ffd5b5061016461036e366004611403565b610bd1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156103b85750825b90505f8267ffffffffffffffff1660011480156103d45750303b155b9050811580156103e2575080155b156104005760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561042a57845460ff60401b1916600160401b1785555b61043386610c0e565b61043b610c1f565b6001600160a01b0387166104965760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c6964207661756c744c6f67696360448201526064015b60405180910390fd5b5f80546001600160a01b0319166001600160a01b03891617905583156104f657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b610507610c27565b61051082610ccb565b61051a8282610cd3565b5050565b5f610527610d94565b505f51602061191d5f395f51905f5290565b610541610ddd565b61054a5f610e38565b565b6004818154811061055b575f80fd5b5f918252602090912001546001600160a01b0316905081565b6004545f9082106105c75760405162461bcd60e51b815260206004820152601a60248201527f5661756c74466163746f72793a206f7574206f662072616e6765000000000000604482015260640161048d565b600482815481106105da576105da61141c565b5f918252602090912001546001600160a01b031692915050565b6060600480548060200260200160405190810160405280929190818152602001828054801561064a57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161062c575b5050505050905090565b61065c610ddd565b6001600160a01b0383166106b25760405162461bcd60e51b815260206004820152601c60248201527f5661756c74466163746f72793a20696e76616c6964206f7261636c6500000000604482015260640161048d565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c696420726562616c616e636572604482015260640161048d565b6001600160a01b03811661075e5760405162461bcd60e51b815260206004820181905260248201527f5661756c74466163746f72793a20696e76616c6964206c697175696461746f72604482015260640161048d565b600180546001600160a01b038581166001600160a01b0319928316811790935560028054868316908416811790915560038054928616929093168217909255604080519384526020840192909252908201527f43d676ef005d9b31f20857ca4015e161d6c2337206dc3487aed30b7b4c1cefc39060600160405180910390a1505050565b5f6001600160a01b038a166108395760405162461bcd60e51b815260206004820152601c60248201527f5661756c74466163746f72793a20696e76616c6964207633506f6f6c00000000604482015260640161048d565b6001600160a01b0389166108995760405162461bcd60e51b815260206004820152602160248201527f5661756c74466163746f72793a20696e76616c696420706f736974696f6e4d676044820152603960f91b606482015260840161048d565b5f6001600160a01b038916156108af57886108bc565b6001546001600160a01b03165b90505f6001600160a01b038916156108d457886108e1565b6002546001600160a01b03165b90505f6001600160a01b038916156108f95788610906565b6003546001600160a01b03165b90506001600160a01b03831661095e5760405162461bcd60e51b815260206004820152601760248201527f5661756c74466163746f72793a206e6f206f7261636c65000000000000000000604482015260640161048d565b6001600160a01b0382166109b45760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a206e6f20726562616c616e6365720000000000604482015260640161048d565b6001600160a01b038116610a0a5760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a206e6f206c697175696461746f720000000000604482015260640161048d565b5f63ef090e4c60e01b8e8e868686338f8f8f8f604051602401610a369a99989796959493929190611458565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092525f80549251919350916001600160a01b0316908390610a86906110ca565b610a919291906114c9565b604051809103905ff080158015610aaa573d5f5f3e3d5ffd5b509050809550600486908060018154018082558091505060019003905f5260205f20015f9091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055508e6001600160a01b0316336001600160a01b0316876001600160a01b03167f897c133dfbfe1f6239e98b4ffd7e4f6c86a62350a131a7a37790419f58af02f960405160405180910390a450505050509998505050505050505050565b610b5a610ddd565b6001600160a01b038116610bb05760405162461bcd60e51b815260206004820152601b60248201527f5661756c74466163746f72793a20696e76616c6964206c6f6769630000000000604482015260640161048d565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b610bd9610ddd565b6001600160a01b038116610c0257604051631e4fbdf760e01b81525f600482015260240161048d565b610c0b81610e38565b50565b610c16610ea8565b610c0b81610ef1565b61054a610ea8565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cad57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ca15f51602061191d5f395f51905f52546001600160a01b031690565b6001600160a01b031614155b1561054a5760405163703e46dd60e11b815260040160405180910390fd5b610c0b610ddd565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2d575060408051601f3d908101601f19168201909252610d2a918101906114f4565b60015b610d5557604051634c9c8ce360e01b81526001600160a01b038316600482015260240161048d565b5f51602061191d5f395f51905f528114610d8557604051632a87526960e21b81526004810182905260240161048d565b610d8f8383610ef9565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461054a5760405163703e46dd60e11b815260040160405180910390fd5b33610e0f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461054a5760405163118cdaa760e01b815233600482015260240161048d565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661054a57604051631afcd79f60e31b815260040160405180910390fd5b610bd9610ea8565b610f0282610f4e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610f4657610d8f8282610fb1565b61051a611023565b806001600160a01b03163b5f03610f8357604051634c9c8ce360e01b81526001600160a01b038216600482015260240161048d565b5f51602061191d5f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610fcd919061150b565b5f60405180830381855af49150503d805f8114611005576040519150601f19603f3d011682016040523d82523d5f602084013e61100a565b606091505b509150915061101a858383611042565b95945050505050565b341561054a5760405163b398979f60e01b815260040160405180910390fd5b60608261105757611052826110a1565b61109a565b815115801561106e57506001600160a01b0384163b155b1561109757604051639996b31560e01b81526001600160a01b038516600482015260240161048d565b50805b9392505050565b8051156110b15780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6103f68061152783390190565b80356001600160a01b03811681146110ed575f5ffd5b919050565b5f5f60408385031215611103575f5ffd5b61110c836110d7565b915061111a602084016110d7565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f60408385031215611148575f5ffd5b611151836110d7565b9150602083013567ffffffffffffffff81111561116c575f5ffd5b8301601f8101851361117c575f5ffd5b803567ffffffffffffffff81111561119657611196611123565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156111c5576111c5611123565b6040528181528282016020018710156111dc575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f6020828403121561120b575f5ffd5b5035919050565b602080825282518282018190525f918401906040840190835b818110156112525783516001600160a01b031683526020938401939092019160010161122b565b509095945050505050565b5f5f5f6060848603121561126f575f5ffd5b611278846110d7565b9250611286602085016110d7565b9150611294604085016110d7565b90509250925092565b5f5b838110156112b757818101518382015260200161129f565b50505f910152565b5f81518084526112d681602086016020860161129d565b601f01601f19169290920160200192915050565b602081525f61109a60208301846112bf565b5f5f83601f84011261130c575f5ffd5b50813567ffffffffffffffff811115611323575f5ffd5b60208301915083602082850101111561133a575f5ffd5b9250929050565b5f5f5f5f5f5f5f5f5f60e08a8c031215611359575f5ffd5b6113628a6110d7565b985061137060208b016110d7565b975061137e60408b016110d7565b965061138c60608b016110d7565b955061139a60808b016110d7565b945060a08a013567ffffffffffffffff8111156113b5575f5ffd5b6113c18c828d016112fc565b90955093505060c08a013567ffffffffffffffff8111156113e0575f5ffd5b6113ec8c828d016112fc565b915080935050809150509295985092959850929598565b5f60208284031215611413575f5ffd5b61109a826110d7565b634e487b7160e01b5f52603260045260245ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152898116604083015288811660608301528781166080830152861660a082015261010060c082018190525f906114a59083018688611430565b82810360e08401526114b8818587611430565b9d9c50505050505050505050505050565b6001600160a01b03831681526040602082018190525f906114ec908301846112bf565b949350505050565b5f60208284031215611504575f5ffd5b5051919050565b5f825161151c81846020870161129d565b919091019291505056fe60806040526040516103f63803806103f68339810160408190526100229161025e565b61002c8282610033565b5050610347565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610128919061032c565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f5f6040838503121561026f575f5ffd5b82516001600160a01b0381168114610285575f5ffd5b60208401519092506001600160401b038111156102a0575f5ffd5b8301601f810185136102b0575f5ffd5b80516001600160401b038111156102c9576102c9610228565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102f7576102f7610228565b60405281815282820160200187101561030e575f5ffd5b61031f82602083016020860161023c565b8093505050509250929050565b5f825161033d81846020870161023c565b9190910192915050565b60a3806103535f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f5f375f5f365f845af43d5f5f3e8080156069573d5ff35b3d5ffdfea2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220a38eb14da0a2e82685da51f16bbb2460c01bb6d7a84ceecccdab5899cf78c48c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9403B634 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xB078147A EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xC3638757 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xECEDD5BC EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x9403B634 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x97331BF9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xA7C6A100 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xAB31B6F3 EQ PUSH2 0x29C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x545851D7 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x9094A91E EQ PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3C46201D EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4C39AD21 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3D4 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x42A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x433 DUP7 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x43B PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964207661756C744C6F676963 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x4F6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x510 DUP3 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x51A DUP3 DUP3 PUSH2 0xCD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x527 PUSH2 0xD94 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x541 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x54A PUSH0 PUSH2 0xE38 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 DUP3 LT PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206F7574206F662072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH2 0x141C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65C PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206F7261636C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C696420726562616C616E636572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206C697175696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP7 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0x43D676EF005D9B31F20857CA4015E161D6C2337206DC3487AED30B7B4C1CEFC3 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964207633506F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C696420706F736974696F6E4D67 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8AF JUMPI DUP9 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8D4 JUMPI DUP9 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8F9 JUMPI DUP9 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F206F7261636C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F20726562616C616E6365720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A206E6F206C697175696461746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 PUSH4 0xEF090E4C PUSH1 0xE0 SHL DUP15 DUP15 DUP7 DUP7 DUP7 CALLER DUP16 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA36 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE PUSH0 DUP1 SLOAD SWAP3 MLOAD SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 PUSH2 0xA86 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0xA91 SWAP3 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP1 POP DUP1 SWAP6 POP PUSH1 0x4 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x897C133DFBFE1F6239E98B4FFD7E4F6C86A62350A131A7A37790419F58AF02F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB5A PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74466163746F72793A20696E76616C6964206C6F6769630000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBD9 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xE38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC16 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x54A PUSH2 0xEA8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xCAD JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCA1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0B PUSH2 0xDDD JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD2D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD2A SWAP2 DUP2 ADD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0xD8F DUP4 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xE0F PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD9 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xF02 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xF46 JUMPI PUSH2 0xD8F DUP3 DUP3 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x51A PUSH2 0x1023 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x191D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x101A DUP6 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1057 JUMPI PUSH2 0x1052 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x109A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x106E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48D JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x10B1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F6 DUP1 PUSH2 0x1527 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1103 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x110C DUP4 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A PUSH1 0x20 DUP5 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1151 DUP4 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x117C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1196 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x11DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1252 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x122B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x126F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1278 DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1286 PUSH1 0x20 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1294 PUSH1 0x40 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x129F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x12D6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x129D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x109A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x130C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x133A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1362 DUP11 PUSH2 0x10D7 JUMP JUMPDEST SWAP9 POP PUSH2 0x1370 PUSH1 0x20 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x137E PUSH1 0x40 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP7 POP PUSH2 0x138C PUSH1 0x60 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP6 POP PUSH2 0x139A PUSH1 0x80 DUP12 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13C1 DUP13 DUP3 DUP14 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13EC DUP13 DUP3 DUP14 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x109A DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE DUP7 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x14A5 SWAP1 DUP4 ADD DUP7 DUP9 PUSH2 0x1430 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x14B8 DUP2 DUP6 DUP8 PUSH2 0x1430 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x14EC SWAP1 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1504 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x151C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x129D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F6 CODESIZE SUB DUP1 PUSH2 0x3F6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x347 JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x85 JUMPI PUSH2 0x80 DUP3 DUP3 PUSH2 0x10C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D PUSH2 0x17F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x176 DUP6 DUP4 DUP4 PUSH2 0x1A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B0 DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F7 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x30E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x31F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x23C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x33D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x23C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH2 0x353 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 PUSH0 CALLDATACOPY PUSH0 PUSH0 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xA6 0xEF GASLIMIT 0xEA COINBASE 0xEC SELFDESTRUCT 0x26 0xAC 0xEA 0xE2 LOG1 EXTCODESIZE PUSH10 0x3304C712BE70F6CBCB48 SWAP8 0x2B PUSH11 0x8E00F80B64736F6C634300 ADDMOD SHR STOP CALLER CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220A3 DUP15 0xB1 0x4D LOG0 LOG2 0xE8 0x26 DUP6 0xDA MLOAD CALL PUSH12 0xBB2460C01BB6D7A84CEECCCD 0xAB PC SWAP10 0xCF PUSH25 0xC48C64736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "2375:6322:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:32;;;;;;;;;;-1:-1:-1;2754:32:13;;;;-1:-1:-1;;;;;2754:32:13;;;;;;-1:-1:-1;;;;;178:32:14;;;160:51;;148:2;133:18;2754:32:13;;;;;;;;3706:401;;;;;;;;;;-1:-1:-1;3706:401:13;;;;;:::i;:::-;;:::i;:::-;;2713:35;;;;;;;;;;-1:-1:-1;2713:35:13;;;;-1:-1:-1;;;;;2713:35:13;;;4161:214:2;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;:::-;;;1966:25:14;;;1954:2;1939:18;3708:134:2;1820:177:14;2792:32:13;;;;;;;;;;-1:-1:-1;2792:32:13;;;;-1:-1:-1;;;;;2792:32:13;;;3155:101:0;;;;;;;;;;;;;:::i;2441:144::-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2911:26:13;;;;;;;;;;-1:-1:-1;2911:26:13;;;;;:::i;:::-;;:::i;8285:178::-;;;;;;;;;;-1:-1:-1;8285:178:13;;;;;:::i;:::-;;:::i;8597:98::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8094:94::-;;;;;;;;;;-1:-1:-1;8165:9:13;:16;8094:94;;5090:594;;;;;;;;;;-1:-1:-1;5090:594:13;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;2577:25:13:-;;;;;;;;;;-1:-1:-1;2577:25:13;;;;-1:-1:-1;;;;;2577:25:13;;;6355:1648;;;;;;;;;;-1:-1:-1;6355:1648:13;;;;;:::i;:::-;;:::i;4487:185::-;;;;;;;;;;-1:-1:-1;4487:185:13;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;3706:401:13:-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;3928:22:13::1;3943:6;3928:14;:22::i;:::-;3961:24;:22;:24::i;:::-;-1:-1:-1::0;;;;;4004:25:13;::::1;3996:70;;;::::0;-1:-1:-1;;;3996:70:13;;5947:2:14;3996:70:13::1;::::0;::::1;5929:21:14::0;;;5966:18;;;5959:30;6025:34;6005:18;;;5998:62;6077:18;;3996:70:13::1;;;;;;;;;4076:10;:24:::0;;-1:-1:-1;;;;;;4076:24:13::1;-1:-1:-1::0;;;;;4076:24:13;::::1;;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;6259:50:14;;5142:14:1;;6247:2:14;6232:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;3706:401:13;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2911:26:13:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2911:26:13;;-1:-1:-1;2911:26:13;:::o;8285:178::-;8376:9;:16;8341:7;;8368:24;;8360:63;;;;-1:-1:-1;;;8360:63:13;;6522:2:14;8360:63:13;;;6504:21:14;6561:2;6541:18;;;6534:30;6600:28;6580:18;;;6573:56;6646:18;;8360:63:13;6320:350:14;8360:63:13;8440:9;8450:5;8440:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8440:16:13;;8285:178;-1:-1:-1;;8285:178:13:o;8597:98::-;8644:16;8679:9;8672:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8672:16:13;;;;;;;;;;;;;;;;;;;;;;;8597:98;:::o;5090:594::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5253:28:13;::::1;5245:69;;;::::0;-1:-1:-1;;;5245:69:13;;7009:2:14;5245:69:13::1;::::0;::::1;6991:21:14::0;7048:2;7028:18;;;7021:30;7087;7067:18;;;7060:58;7135:18;;5245:69:13::1;6807:352:14::0;5245:69:13::1;-1:-1:-1::0;;;;;5332:25:13;::::1;5324:70;;;::::0;-1:-1:-1;;;5324:70:13;;7366:2:14;5324:70:13::1;::::0;::::1;7348:21:14::0;;;7385:18;;;7378:30;7444:34;7424:18;;;7417:62;7496:18;;5324:70:13::1;7164:356:14::0;5324:70:13::1;-1:-1:-1::0;;;;;5412:25:13;::::1;5404:70;;;::::0;-1:-1:-1;;;5404:70:13;;7727:2:14;5404:70:13::1;::::0;::::1;7709:21:14::0;;;7746:18;;;7739:30;7805:34;7785:18;;;7778:62;7857:18;;5404:70:13::1;7525:356:14::0;5404:70:13::1;5485:20;:37:::0;;-1:-1:-1;;;;;5485:37:13;;::::1;-1:-1:-1::0;;;;;;5485:37:13;;::::1;::::0;::::1;::::0;;;5532:17:::1;:31:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;5573:17:::1;:31:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;5620:57:::1;::::0;;8088:51:14;;;8170:2;8155:18;;8148:60;;;;8224:18;;;8217:60;5620:57:13::1;::::0;8076:2:14;8061:18;5620:57:13::1;;;;;;;5090:594:::0;;;:::o;6355:1648::-;6598:17;-1:-1:-1;;;;;6635:20:13;;6627:61;;;;-1:-1:-1;;;6627:61:13;;8490:2:14;6627:61:13;;;8472:21:14;8529:2;8509:18;;;8502:30;8568;8548:18;;;8541:58;8616:18;;6627:61:13;8288:352:14;6627:61:13;-1:-1:-1;;;;;6706:25:13;;6698:71;;;;-1:-1:-1;;;6698:71:13;;8847:2:14;6698:71:13;;;8829:21:14;8886:2;8866:18;;;8859:30;8925:34;8905:18;;;8898:62;-1:-1:-1;;;8976:18:14;;;8969:31;9017:19;;6698:71:13;8645:397:14;6698:71:13;6831:19;-1:-1:-1;;;;;6854:23:13;;;6853:60;;6904:9;6853:60;;;6881:20;;-1:-1:-1;;;;;6881:20:13;6853:60;6831:82;-1:-1:-1;6923:23:13;-1:-1:-1;;;;;6950:24:13;;;6949:59;;6998:10;6949:59;;;6978:17;;-1:-1:-1;;;;;6978:17:13;6949:59;6923:85;-1:-1:-1;7018:23:13;-1:-1:-1;;;;;7045:24:13;;;7044:59;;7093:10;7044:59;;;7073:17;;-1:-1:-1;;;;;7073:17:13;7044:59;7018:85;-1:-1:-1;;;;;;7122:25:13;;7114:61;;;;-1:-1:-1;;;7114:61:13;;9249:2:14;7114:61:13;;;9231:21:14;9288:2;9268:18;;;9261:30;9327:25;9307:18;;;9300:53;9370:18;;7114:61:13;9047:347:14;7114:61:13;-1:-1:-1;;;;;7193:29:13;;7185:69;;;;-1:-1:-1;;;7185:69:13;;9601:2:14;7185:69:13;;;9583:21:14;9640:2;9620:18;;;9613:30;9679:29;9659:18;;;9652:57;9726:18;;7185:69:13;9399:351:14;7185:69:13;-1:-1:-1;;;;;7272:29:13;;7264:69;;;;-1:-1:-1;;;7264:69:13;;9957:2:14;7264:69:13;;;9939:21:14;9996:2;9976:18;;;9969:30;10035:29;10015:18;;;10008:57;10082:18;;7264:69:13;9755:351:14;7264:69:13;7394:21;7454:40;;;7508:6;7528:11;7553;7578:15;7607;7636:10;7679:4;;7697:6;;7418:295;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7418:295:13;;;;;;;;;;;;;;-1:-1:-1;;;;;7418:295:13;-1:-1:-1;;;;;;7418:295:13;;;;;;;;;;-1:-1:-1;7824:10:13;;7807:38;;7418:295;;-1:-1:-1;;;;;;;7824:10:13;;7418:295;;7807:38;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7786:59;;7875:5;7855:26;;7912:9;7927;7912:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7912:25:13;;;;;-1:-1:-1;;;;;7912:25:13;;;;;;7989:6;-1:-1:-1;;;;;7953:43:13;7977:10;-1:-1:-1;;;;;7953:43:13;7966:9;-1:-1:-1;;;;;7953:43:13;;;;;;;;;;;6617:1386;;;;;6355:1648;;;;;;;;;;;:::o;4487:185::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4570:27:13;::::1;4562:67;;;::::0;-1:-1:-1;;;4562:67:13;;11935:2:14;4562:67:13::1;::::0;::::1;11917:21:14::0;11974:2;11954:18;;;11947:30;12013:29;11993:18;;;11986:57;12060:18;;4562:67:13::1;11733:351:14::0;4562:67:13::1;4639:10;:26:::0;;-1:-1:-1;;;;;;4639:26:13::1;-1:-1:-1::0;;;;;4639:26:13;;;::::1;::::0;;;::::1;::::0;;4487:185::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;160:51:14::0;133:18;;3534:31:0::1;14:203:14::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1847:127::-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2970:67:2:-:0;6931:20:1;:18;:20::i;4603:312:2:-;4683:4;-1:-1:-1;;;;;4692:6:2;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:7;-1:-1:-1;;;;;1519:53:7;;1441:138;4753:32:2;-1:-1:-1;;;;;4753:42:2;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:2;;;;;;;;;;;4217:84:13;2334:13:0;:11;:13::i;6057:538:2:-;6174:17;-1:-1:-1;;;;;6156:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:2;;;;;;;;-1:-1:-1;;6156:52:2;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:2;;-1:-1:-1;;;;;178:32:14;;6518:60:2;;;160:51:14;133:18;;6518:60:2;14:203:14;6152:437:2;-1:-1:-1;;;;;;;;;;;6250:40:2;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:2;;;;;1966:25:14;;;1939:18;;6317:34:2;1820:177:14;6246:120:2;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:2;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:2;;;;;;;;;;;2658:162:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;160:51:14;133:18;;2763:40:0;14:203:14;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2264:344:7:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:7;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:7;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:7;;-1:-1:-1;;;;;178:32:14;;1805:47:7;;;160:51:14;133:18;;1805:47:7;14:203:14;1744:119:7;-1:-1:-1;;;;;;;;;;;1872:73:7;;-1:-1:-1;;;;;;1872:73:7;-1:-1:-1;;;;;1872:73:7;;;;;;;;;;1671:281::o;3900:253:10:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:10;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:10:o;6113:122:7:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:7;;;;;;;;;;;4421:582:10;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:10;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:10;;-1:-1:-1;;;;;178:32:14;;4917:24:10;;;160:51:14;133:18;;4917:24:10;14:203:14;4837:119:10;-1:-1:-1;4976:10:10;4589:408;4421:582;;;;;:::o;5543:487::-;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:10;;;;;;;;;;;-1:-1:-1;;;;;;;;:::o;222:173:14:-;290:20;;-1:-1:-1;;;;;339:31:14;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:260::-;468:6;476;529:2;517:9;508:7;504:23;500:32;497:52;;;545:1;542;535:12;497:52;568:29;587:9;568:29;:::i;:::-;558:39;;616:38;650:2;639:9;635:18;616:38;:::i;:::-;606:48;;400:260;;;;;:::o;665:127::-;726:10;721:3;717:20;714:1;707:31;757:4;754:1;747:15;781:4;778:1;771:15;797:1018;874:6;882;935:2;923:9;914:7;910:23;906:32;903:52;;;951:1;948;941:12;903:52;974:29;993:9;974:29;:::i;:::-;964:39;;1054:2;1043:9;1039:18;1026:32;1081:18;1073:6;1070:30;1067:50;;;1113:1;1110;1103:12;1067:50;1136:22;;1189:4;1181:13;;1177:27;-1:-1:-1;1167:55:14;;1218:1;1215;1208:12;1167:55;1258:2;1245:16;1284:18;1276:6;1273:30;1270:56;;;1306:18;;:::i;:::-;1355:2;1349:9;1447:2;1409:17;;-1:-1:-1;;1405:31:14;;;1438:2;1401:40;1397:54;1385:67;;1482:18;1467:34;;1503:22;;;1464:62;1461:88;;;1529:18;;:::i;:::-;1565:2;1558:22;1589;;;1630:15;;;1647:2;1626:24;1623:37;-1:-1:-1;1620:57:14;;;1673:1;1670;1663:12;1620:57;1729:6;1724:2;1720;1716:11;1711:2;1703:6;1699:15;1686:50;1782:1;1777:2;1768:6;1760;1756:19;1752:28;1745:39;1803:6;1793:16;;;;;797:1018;;;;;:::o;2002:180::-;2061:6;2114:2;2102:9;2093:7;2089:23;2085:32;2082:52;;;2130:1;2127;2120:12;2082:52;-1:-1:-1;2153:23:14;;2002:180;-1:-1:-1;2002:180:14:o;2187:637::-;2377:2;2389:21;;;2459:13;;2362:18;;;2481:22;;;2329:4;;2560:15;;;2534:2;2519:18;;;2329:4;2603:195;2617:6;2614:1;2611:13;2603:195;;;2682:13;;-1:-1:-1;;;;;2678:39:14;2666:52;;2747:2;2773:15;;;;2738:12;;;;2714:1;2632:9;2603:195;;;-1:-1:-1;2815:3:14;;2187:637;-1:-1:-1;;;;;2187:637:14:o;3011:334::-;3088:6;3096;3104;3157:2;3145:9;3136:7;3132:23;3128:32;3125:52;;;3173:1;3170;3163:12;3125:52;3196:29;3215:9;3196:29;:::i;:::-;3186:39;;3244:38;3278:2;3267:9;3263:18;3244:38;:::i;:::-;3234:48;;3301:38;3335:2;3324:9;3320:18;3301:38;:::i;:::-;3291:48;;3011:334;;;;;:::o;3350:250::-;3435:1;3445:113;3459:6;3456:1;3453:13;3445:113;;;3535:11;;;3529:18;3516:11;;;3509:39;3481:2;3474:10;3445:113;;;-1:-1:-1;;3592:1:14;3574:16;;3567:27;3350:250::o;3605:271::-;3647:3;3685:5;3679:12;3712:6;3707:3;3700:19;3728:76;3797:6;3790:4;3785:3;3781:14;3774:4;3767:5;3763:16;3728:76;:::i;:::-;3858:2;3837:15;-1:-1:-1;;3833:29:14;3824:39;;;;3865:4;3820:50;;3605:271;-1:-1:-1;;3605:271:14:o;3881:220::-;4030:2;4019:9;4012:21;3993:4;4050:45;4091:2;4080:9;4076:18;4068:6;4050:45;:::i;4106:348::-;4158:8;4168:6;4222:3;4215:4;4207:6;4203:17;4199:27;4189:55;;4240:1;4237;4230:12;4189:55;-1:-1:-1;4263:20:14;;4306:18;4295:30;;4292:50;;;4338:1;4335;4328:12;4292:50;4375:4;4367:6;4363:17;4351:29;;4427:3;4420:4;4411:6;4403;4399:19;4395:30;4392:39;4389:59;;;4444:1;4441;4434:12;4389:59;4106:348;;;;;:::o;4459:1090::-;4596:6;4604;4612;4620;4628;4636;4644;4652;4660;4713:3;4701:9;4692:7;4688:23;4684:33;4681:53;;;4730:1;4727;4720:12;4681:53;4753:29;4772:9;4753:29;:::i;:::-;4743:39;;4801:38;4835:2;4824:9;4820:18;4801:38;:::i;:::-;4791:48;;4858:38;4892:2;4881:9;4877:18;4858:38;:::i;:::-;4848:48;;4915:38;4949:2;4938:9;4934:18;4915:38;:::i;:::-;4905:48;;4972:39;5006:3;4995:9;4991:19;4972:39;:::i;:::-;4962:49;;5062:3;5051:9;5047:19;5034:33;5090:18;5082:6;5079:30;5076:50;;;5122:1;5119;5112:12;5076:50;5161:59;5212:7;5203:6;5192:9;5188:22;5161:59;:::i;:::-;5239:8;;-1:-1:-1;5135:85:14;-1:-1:-1;;5327:3:14;5312:19;;5299:33;5357:18;5344:32;;5341:52;;;5389:1;5386;5379:12;5341:52;5428:61;5481:7;5470:8;5459:9;5455:24;5428:61;:::i;:::-;5402:87;;5508:8;5498:18;;;5535:8;5525:18;;;4459:1090;;;;;;;;;;;:::o;5554:186::-;5613:6;5666:2;5654:9;5645:7;5641:23;5637:32;5634:52;;;5682:1;5679;5672:12;5634:52;5705:29;5724:9;5705:29;:::i;6675:127::-;6736:10;6731:3;6727:20;6724:1;6717:31;6767:4;6764:1;6757:15;6791:4;6788:1;6781:15;10111:267;10200:6;10195:3;10188:19;10252:6;10245:5;10238:4;10233:3;10229:14;10216:43;-1:-1:-1;10304:1:14;10279:16;;;10297:4;10275:27;;;10268:38;;;;10360:2;10339:15;;;-1:-1:-1;;10335:29:14;10326:39;;;10322:50;;10111:267::o;10383:1025::-;-1:-1:-1;;;;;10768:32:14;;;10750:51;;10837:32;;;10832:2;10817:18;;10810:60;10906:32;;;10901:2;10886:18;;10879:60;10975:32;;;10970:2;10955:18;;10948:60;11045:32;;;11039:3;11024:19;;11017:61;11115:32;;10788:3;11094:19;;11087:61;11185:3;11179;11164:19;;11157:32;;;-1:-1:-1;;11212:63:14;;11255:19;;11247:6;11239;11212:63;:::i;:::-;11324:9;11316:6;11312:22;11306:3;11295:9;11291:19;11284:51;11352:50;11395:6;11387;11379;11352:50;:::i;:::-;11344:58;10383:1025;-1:-1:-1;;;;;;;;;;;;;10383:1025:14:o;11413:315::-;-1:-1:-1;;;;;11588:32:14;;11570:51;;11657:2;11652;11637:18;;11630:30;;;-1:-1:-1;;11677:45:14;;11703:18;;11695:6;11677:45;:::i;:::-;11669:53;11413:315;-1:-1:-1;;;;11413:315:14:o;12089:184::-;12159:6;12212:2;12200:9;12191:7;12187:23;12183:32;12180:52;;;12228:1;12225;12218:12;12180:52;-1:-1:-1;12251:16:14;;12089:184;-1:-1:-1;12089:184:14:o;12278:287::-;12407:3;12445:6;12439:13;12461:66;12520:6;12515:3;12508:4;12500:6;12496:17;12461:66;:::i;:::-;12543:16;;;;;12278:287;-1:-1:-1;;12278:287:14:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1302800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allVaults(uint256)": "4711",
								"createVault(address,address,address,address,address,string,string)": "infinite",
								"defaultLiquidator()": "2370",
								"defaultOracleManager()": "2393",
								"defaultRebalancer()": "2349",
								"getAllVaults()": "infinite",
								"getVault(uint256)": "6753",
								"initialize(address,address)": "infinite",
								"owner()": "2408",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setDefaultReferences(address,address,address)": "infinite",
								"setVaultLogic(address)": "26888",
								"transferOwnership(address)": "28475",
								"upgradeToAndCall(address,bytes)": "infinite",
								"vaultCount()": "2358",
								"vaultLogic()": "2368"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "468"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 8697,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a38eb14da0a2e82685da51f16bbb2460c01bb6d7a84ceecccdab5899cf78c48c64736f6c634300081c0033",
									".code": [
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "9403B634"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "B078147A"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "C3638757"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "ECEDD5BC"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "9403B634"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "97331BF9"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "A7C6A100"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "AB31B6F3"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "545851D7"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "9094A91E"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "3C46201D"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "4C39AD21"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "4F1EF286"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 8697,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 3706,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3706,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2748,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1820,
											"end": 1997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2911,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2911,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8285,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 8285,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 8597,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 8597,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 8094,
											"end": 8188,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 5090,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5090,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2602,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 6355,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 6355,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 4487,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 4487,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3943,
											"end": 3949,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 3950,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3928,
											"end": 3950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3961,
											"end": 3983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 3961,
											"end": 3985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4029,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4066,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3996,
											"end": 4066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3996,
											"end": 4066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5950,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5929,
											"end": 5950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5929,
											"end": 5950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5966,
											"end": 5984,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5966,
											"end": 5984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5966,
											"end": 5984,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5959,
											"end": 5989,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6025,
											"end": 6059,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C6964207661756C744C6F676963"
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5998,
											"end": 6060,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3996,
											"end": 4066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4100,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6259,
											"end": 6309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6259,
											"end": 6309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8376,
											"end": 8385,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8376,
											"end": 8392,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8341,
											"end": 8348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6525,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "PUSH",
											"source": 14,
											"value": "1A"
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6628,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A206F7574206F662072616E6765000000000000"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6573,
											"end": 6629,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6320,
											"end": 6670,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8449,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8450,
											"end": 8455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 8440,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8660,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8679,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5253,
											"end": 5281,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5253,
											"end": 5281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5314,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5245,
											"end": 5314,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5314,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5245,
											"end": 5314,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7012,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 7028,
											"end": 7046,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7028,
											"end": 7046,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7028,
											"end": 7046,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7021,
											"end": 7051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7087,
											"end": 7117,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C6964206F7261636C6500000000"
										},
										{
											"begin": 7067,
											"end": 7085,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7067,
											"end": 7085,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7085,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7118,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6807,
											"end": 7159,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 5245,
											"end": 5314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5357,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5394,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5324,
											"end": 5394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5394,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7368,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 5394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7408,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7444,
											"end": 7478,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C696420726562616C616E636572"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7417,
											"end": 7479,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 7164,
											"end": 7520,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 5324,
											"end": 5394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5412,
											"end": 5437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5474,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5474,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7729,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7709,
											"end": 7730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7709,
											"end": 7730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7709,
											"end": 7730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7739,
											"end": 7769,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7805,
											"end": 7839,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C6964206C697175696461746F72"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7778,
											"end": 7840,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 7525,
											"end": 7881,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5404,
											"end": 5474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5522,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5563,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5677,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8139,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8139,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8170,
											"end": 8172,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8148,
											"end": 8208,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8148,
											"end": 8208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8148,
											"end": 8208,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8148,
											"end": 8208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "43D676EF005D9B31F20857CA4015E161D6C2337206DC3487AED30B7B4C1CEFC3"
										},
										{
											"begin": 5620,
											"end": 5677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8078,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5677,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6655,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6655,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8472,
											"end": 8493,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8531,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8568,
											"end": 8598,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C6964207633506F6F6C00000000"
										},
										{
											"begin": 8548,
											"end": 8566,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8548,
											"end": 8566,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8548,
											"end": 8566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8541,
											"end": 8599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 8288,
											"end": 8640,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 6627,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6706,
											"end": 6731,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8847,
											"end": 8849,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8829,
											"end": 8850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8886,
											"end": 8888,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 8866,
											"end": 8884,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8866,
											"end": 8884,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8866,
											"end": 8884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8859,
											"end": 8889,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8925,
											"end": 8959,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C696420706F736974696F6E4D67"
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8898,
											"end": 8960,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8969,
											"end": 9000,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 8645,
											"end": 9042,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 6698,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6831,
											"end": 6850,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 6877,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6854,
											"end": 6877,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6854,
											"end": 6877,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6904,
											"end": 6913,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 6853,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6831,
											"end": 6913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6923,
											"end": 6946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6950,
											"end": 6974,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7008,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 6949,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7008,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7018,
											"end": 7041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7069,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7045,
											"end": 7069,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7045,
											"end": 7069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7090,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7073,
											"end": 7090,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7073,
											"end": 7090,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 7044,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7122,
											"end": 7147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7122,
											"end": 7147,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9231,
											"end": 9252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9288,
											"end": 9290,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9261,
											"end": 9291,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9352,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A206E6F206F7261636C65000000000000000000"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9300,
											"end": 9353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9047,
											"end": 9394,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7114,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7193,
											"end": 7222,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9601,
											"end": 9603,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9583,
											"end": 9604,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9613,
											"end": 9643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A206E6F20726562616C616E6365720000000000"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9709,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9399,
											"end": 9750,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 7185,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7272,
											"end": 7301,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7301,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 9959,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9939,
											"end": 9960,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9969,
											"end": 9999,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10064,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A206E6F206C697175696461746F720000000000"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10065,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10100,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10082,
											"end": 10100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9755,
											"end": 10106,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 7264,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7494,
											"name": "PUSH",
											"source": 13,
											"value": "EF090E4C"
										},
										{
											"begin": 7454,
											"end": 7494,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 7454,
											"end": 7494,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 7528,
											"end": 7539,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 7553,
											"end": 7564,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7593,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7607,
											"end": 7622,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7646,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 7418,
											"end": 7713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 7807,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 7807,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "CREATE",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7875,
											"end": 7880,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7881,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7921,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7927,
											"end": 7936,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7977,
											"end": 7987,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7975,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "PUSH",
											"source": 13,
											"value": "897C133DFBFE1F6239E98B4FFD7E4F6C86A62350A131A7A37790419F58AF02F9"
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7996,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 8003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 4487,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11935,
											"end": 11937,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11938,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 11954,
											"end": 11972,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11954,
											"end": 11972,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11954,
											"end": 11972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11947,
											"end": 11977,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12013,
											"end": 12042,
											"name": "PUSH",
											"source": 14,
											"value": "5661756C74466163746F72793A20696E76616C6964206C6F6769630000000000"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11986,
											"end": 12043,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12060,
											"end": 12078,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12060,
											"end": 12078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 11733,
											"end": 12084,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4562,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4639,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4665,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4301,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4217,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1939,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1820,
											"end": 1997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 7,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 290,
											"end": 310,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 339,
											"end": 370,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 329,
											"end": 371,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 329,
											"end": 371,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 385,
											"end": 386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 387,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 400,
											"end": 660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 468,
											"end": 474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 508,
											"end": 515,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 504,
											"end": 527,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 500,
											"end": 532,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 497,
											"end": 549,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 497,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 497,
											"end": 549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 543,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 497,
											"end": 549,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 497,
											"end": 549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 568,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 568,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 597,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 568,
											"end": 597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 597,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 558,
											"end": 597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 616,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 650,
											"end": 652,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 648,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 635,
											"end": 653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 616,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 616,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 616,
											"end": 654,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 616,
											"end": 654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 606,
											"end": 654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 400,
											"end": 660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 665,
											"end": 792,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 665,
											"end": 792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 726,
											"end": 736,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 717,
											"end": 737,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 738,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 762,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 781,
											"end": 785,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 786,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 910,
											"end": 933,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 903,
											"end": 955,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 903,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 953,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 903,
											"end": 955,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 974,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1052,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1058,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1070,
											"end": 1100,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1115,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1189,
											"end": 1193,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1177,
											"end": 1204,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1261,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1284,
											"end": 1302,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1282,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1273,
											"end": 1303,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1326,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1270,
											"end": 1326,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 1306,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1447,
											"end": 1449,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1409,
											"end": 1426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1409,
											"end": 1426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1401,
											"end": 1441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1451,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1385,
											"end": 1452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1385,
											"end": 1452,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1501,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1467,
											"end": 1501,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1503,
											"end": 1525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1503,
											"end": 1525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1503,
											"end": 1525,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1464,
											"end": 1526,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1549,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1461,
											"end": 1549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1529,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 1529,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1547,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1529,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1580,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1611,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1611,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1611,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1660,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1677,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1620,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1620,
											"end": 1677,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1675,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1620,
											"end": 1677,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1620,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1714,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1686,
											"end": 1736,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1779,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 1775,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 797,
											"end": 1815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2093,
											"end": 2100,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2089,
											"end": 2112,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2132,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2824,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2187,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2377,
											"end": 2379,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2410,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2389,
											"end": 2410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2389,
											"end": 2410,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 2472,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 2472,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2362,
											"end": 2380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2362,
											"end": 2380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2362,
											"end": 2380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2503,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2333,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2624,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2682,
											"end": 2695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2682,
											"end": 2695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2717,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2718,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2788,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2788,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2788,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2714,
											"end": 2715,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2603,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2824,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3159,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3143,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3155,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3125,
											"end": 3177,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3125,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3125,
											"end": 3177,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3125,
											"end": 3177,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3125,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 3196,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3225,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 3244,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3282,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 3244,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3282,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3301,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 3335,
											"end": 3337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3333,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3301,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 3301,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3301,
											"end": 3339,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 3301,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3291,
											"end": 3339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3291,
											"end": 3339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3466,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3516,
											"end": 3527,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3516,
											"end": 3527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3516,
											"end": 3527,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3509,
											"end": 3548,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3481,
											"end": 3483,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3445,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3567,
											"end": 3594,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3350,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3876,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 3605,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 3650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3691,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3728,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3788,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3781,
											"end": 3795,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3763,
											"end": 3779,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3728,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3728,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3728,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3728,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3837,
											"end": 3852,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3862,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3863,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3863,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3820,
											"end": 3870,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3881,
											"end": 4101,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 3881,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4032,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4012,
											"end": 4033,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 3997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4050,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4050,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4225,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4215,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4189,
											"end": 4244,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4240,
											"end": 4241,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4242,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4244,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4189,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4340,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4379,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4430,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4399,
											"end": 4418,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4395,
											"end": 4425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4392,
											"end": 4431,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4389,
											"end": 4448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4389,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 4389,
											"end": 4448,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4389,
											"end": 4448,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 4389,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4716,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4717,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4734,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4681,
											"end": 4734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4734,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4681,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4753,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4772,
											"end": 4781,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4753,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4753,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4753,
											"end": 4782,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4753,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4743,
											"end": 4782,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 4743,
											"end": 4782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4835,
											"end": 4837,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4801,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4839,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4801,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4839,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4858,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4896,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 4858,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4848,
											"end": 4896,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4848,
											"end": 4896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4915,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4938,
											"end": 4947,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4915,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4915,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4915,
											"end": 4953,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4915,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4905,
											"end": 4953,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4905,
											"end": 4953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 4991,
											"end": 5010,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4972,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5011,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 4972,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4962,
											"end": 5011,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4962,
											"end": 5011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 5047,
											"end": 5066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5034,
											"end": 5067,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5082,
											"end": 5088,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5079,
											"end": 5109,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5076,
											"end": 5126,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5076,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 5076,
											"end": 5126,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5076,
											"end": 5126,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 5076,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5161,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP14",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5210,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5161,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 5161,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5161,
											"end": 5220,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 5161,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5220,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5327,
											"end": 5330,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5299,
											"end": 5332,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5391,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5428,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5481,
											"end": 5488,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 5470,
											"end": 5478,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP14",
											"source": 14
										},
										{
											"begin": 5455,
											"end": 5479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5428,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 5428,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5428,
											"end": 5489,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5428,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5402,
											"end": 5489,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5402,
											"end": 5489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5508,
											"end": 5516,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5535,
											"end": 5543,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5740,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 5554,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5663,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5645,
											"end": 5652,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5641,
											"end": 5664,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5637,
											"end": 5669,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5634,
											"end": 5686,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5634,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 5634,
											"end": 5686,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5634,
											"end": 5686,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 5634,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 5724,
											"end": 5733,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 5705,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6675,
											"end": 6802,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 6675,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 6731,
											"end": 6734,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6757,
											"end": 6772,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6795,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6796,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10378,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 10111,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10195,
											"end": 10198,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10188,
											"end": 10207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10252,
											"end": 10258,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10245,
											"end": 10250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10238,
											"end": 10242,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10236,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10229,
											"end": 10243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10216,
											"end": 10259,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10295,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10295,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10295,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10297,
											"end": 10301,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10275,
											"end": 10302,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10275,
											"end": 10302,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10306,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10362,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10339,
											"end": 10354,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10339,
											"end": 10354,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10339,
											"end": 10354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10335,
											"end": 10364,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10326,
											"end": 10365,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10326,
											"end": 10365,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10326,
											"end": 10365,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10322,
											"end": 10372,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10322,
											"end": 10372,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10383,
											"end": 11408,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 10383,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10768,
											"end": 10800,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 10768,
											"end": 10800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10768,
											"end": 10800,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10750,
											"end": 10801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10750,
											"end": 10801,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10869,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10869,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10810,
											"end": 10870,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10938,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10938,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10939,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10975,
											"end": 11007,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10975,
											"end": 11007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10975,
											"end": 11007,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 10972,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10948,
											"end": 11008,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11077,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11077,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11077,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11039,
											"end": 11042,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11024,
											"end": 11043,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11017,
											"end": 11078,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11115,
											"end": 11147,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11115,
											"end": 11147,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10788,
											"end": 10791,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11087,
											"end": 11148,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11185,
											"end": 11188,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 11179,
											"end": 11182,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 11164,
											"end": 11183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11164,
											"end": 11183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11157,
											"end": 11189,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11157,
											"end": 11189,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11157,
											"end": 11189,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11212,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 11212,
											"end": 11275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11255,
											"end": 11274,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11255,
											"end": 11274,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11247,
											"end": 11253,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11239,
											"end": 11245,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 11212,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11275,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 11212,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11324,
											"end": 11333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11312,
											"end": 11334,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11291,
											"end": 11310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 11395,
											"end": 11401,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11379,
											"end": 11385,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 11352,
											"end": 11402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11344,
											"end": 11402,
											"name": "SWAP14",
											"source": 14
										},
										{
											"begin": 10383,
											"end": 11408,
											"name": "SWAP13",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10383,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11413,
											"end": 11728,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 11413,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11570,
											"end": 11621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11570,
											"end": 11621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11654,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11660,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11660,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11677,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 11677,
											"end": 11722,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11701,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11677,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 11677,
											"end": 11722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11677,
											"end": 11722,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 11677,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11669,
											"end": 11722,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11413,
											"end": 11728,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11413,
											"end": 11728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12089,
											"end": 12273,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 12089,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12212,
											"end": 12214,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12200,
											"end": 12209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12191,
											"end": 12198,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12187,
											"end": 12210,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12183,
											"end": 12215,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12180,
											"end": 12232,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12180,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12180,
											"end": 12232,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12230,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12180,
											"end": 12232,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12180,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12251,
											"end": 12267,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12251,
											"end": 12267,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12089,
											"end": 12273,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12089,
											"end": 12273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12278,
											"end": 12565,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 12278,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12410,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12451,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12439,
											"end": 12452,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12520,
											"end": 12526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12515,
											"end": 12518,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12512,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12496,
											"end": 12513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 12461,
											"end": 12527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12527,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12461,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12278,
											"end": 12565,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12278,
											"end": 12565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSHSIZE",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "CODESIZE",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSHSIZE",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "CODECOPY",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 1081,
													"end": 1214,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "tag",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 1185,
													"end": 1199,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1201,
													"end": 1206,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1155,
													"end": 1184,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 1155,
													"end": 1207,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "tag",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "47"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "tag",
													"source": 7,
													"value": "6"
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "9"
												},
												{
													"begin": 2374,
													"end": 2391,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2355,
													"end": 2373,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "10"
												},
												{
													"begin": 2355,
													"end": 2392,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "tag",
													"source": 7,
													"value": "9"
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 7,
													"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "LOG2",
													"source": 7
												},
												{
													"begin": 2458,
													"end": 2469,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 2458,
													"end": 2469,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 2458,
													"end": 2473,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "11"
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "12"
												},
												{
													"begin": 2518,
													"end": 2535,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2537,
													"end": 2541,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2489,
													"end": 2517,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "13"
												},
												{
													"begin": 2489,
													"end": 2542,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "tag",
													"source": 7,
													"value": "12"
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "tag",
													"source": 7,
													"value": "11"
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "15"
												},
												{
													"begin": 2573,
													"end": 2589,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "16"
												},
												{
													"begin": 2573,
													"end": 2591,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "tag",
													"source": 7,
													"value": "15"
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2264,
													"end": 2608,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1671,
													"end": 1952,
													"name": "tag",
													"source": 7,
													"value": "10"
												},
												{
													"begin": 1671,
													"end": 1952,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1748,
													"end": 1765,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1748,
													"end": 1777,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 1748,
													"end": 1777,
													"name": "EXTCODESIZE",
													"source": 7
												},
												{
													"begin": 1781,
													"end": 1782,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1748,
													"end": 1782,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "18"
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4C9C8CE3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "AND",
													"source": 14
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1634,
													"end": 1685,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "PUSH",
													"source": 14,
													"value": "24"
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "tag",
													"source": 7,
													"value": "19"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "tag",
													"source": 7,
													"value": "18"
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 811,
													"end": 877,
													"name": "PUSH",
													"source": 7,
													"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "AND",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "OR",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SSTORE",
													"source": 7
												},
												{
													"begin": 1671,
													"end": 1952,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 3900,
													"end": 4153,
													"name": "tag",
													"source": 10,
													"value": "13"
												},
												{
													"begin": 3900,
													"end": 4153,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3983,
													"end": 3995,
													"name": "PUSH",
													"source": 10,
													"value": "60"
												},
												{
													"begin": 4008,
													"end": 4020,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4022,
													"end": 4045,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4049,
													"end": 4055,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4049,
													"end": 4068,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4069,
													"end": 4073,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "25"
												},
												{
													"begin": 4049,
													"end": 4074,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "tag",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "GAS",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DELEGATECALL",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "RETURNDATASIZE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "28"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "3F"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "RETURNDATASIZE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "RETURNDATASIZE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "RETURNDATASIZE",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "RETURNDATACOPY",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "27"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "tag",
													"source": 10,
													"value": "28"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "PUSH",
													"source": 10,
													"value": "60"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "tag",
													"source": 10,
													"value": "27"
												},
												{
													"begin": 4049,
													"end": 4074,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4007,
													"end": 4074,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4007,
													"end": 4074,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4007,
													"end": 4074,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4091,
													"end": 4146,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "29"
												},
												{
													"begin": 4118,
													"end": 4124,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4007,
													"end": 4074,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4007,
													"end": 4074,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4091,
													"end": 4117,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "30"
												},
												{
													"begin": 4091,
													"end": 4146,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4091,
													"end": 4146,
													"name": "tag",
													"source": 10,
													"value": "29"
												},
												{
													"begin": 4091,
													"end": 4146,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4084,
													"end": 4146,
													"name": "SWAP6",
													"source": 10
												},
												{
													"begin": 3900,
													"end": 4153,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3900,
													"end": 4153,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6113,
													"end": 6235,
													"name": "tag",
													"source": 7,
													"value": "16"
												},
												{
													"begin": 6113,
													"end": 6235,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 6163,
													"end": 6172,
													"name": "CALLVALUE",
													"source": 7
												},
												{
													"begin": 6163,
													"end": 6176,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "32"
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "B398979F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "tag",
													"source": 7,
													"value": "32"
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 6113,
													"end": 6235,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "tag",
													"source": 10,
													"value": "30"
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4565,
													"end": 4577,
													"name": "PUSH",
													"source": 10,
													"value": "60"
												},
												{
													"begin": 4594,
													"end": 4601,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "35"
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4617,
													"end": 4636,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "36"
												},
												{
													"begin": 4625,
													"end": 4635,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4617,
													"end": 4624,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "37"
												},
												{
													"begin": 4617,
													"end": 4636,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4617,
													"end": 4636,
													"name": "tag",
													"source": 10,
													"value": "36"
												},
												{
													"begin": 4617,
													"end": 4636,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "38"
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "tag",
													"source": 10,
													"value": "35"
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4858,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4858,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4863,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "39"
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4867,
													"end": 4885,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 4867,
													"end": 4885,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4867,
													"end": 4885,
													"name": "EXTCODESIZE",
													"source": 10
												},
												{
													"begin": 4867,
													"end": 4890,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "tag",
													"source": 10,
													"value": "39"
												},
												{
													"begin": 4841,
													"end": 4890,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4837,
													"end": 4956,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4837,
													"end": 4956,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4837,
													"end": 4956,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "9996B315"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "DUP6",
													"source": 14
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "AND",
													"source": 14
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1634,
													"end": 1685,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "PUSH",
													"source": 14,
													"value": "24"
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 4917,
													"end": 4941,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "19"
												},
												{
													"begin": 1488,
													"end": 1691,
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 4837,
													"end": 4956,
													"name": "tag",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4837,
													"end": 4956,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4976,
													"end": 4986,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "tag",
													"source": 10,
													"value": "38"
												},
												{
													"begin": 4589,
													"end": 4997,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4421,
													"end": 5003,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5543,
													"end": 6030,
													"name": "tag",
													"source": 10,
													"value": "37"
												},
												{
													"begin": 5543,
													"end": 6030,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5674,
													"end": 5691,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5674,
													"end": 5691,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 5674,
													"end": 5695,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5670,
													"end": 6024,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "43"
												},
												{
													"begin": 5670,
													"end": 6024,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5871,
													"end": 5881,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5865,
													"end": 5882,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 5927,
													"end": 5942,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5914,
													"end": 5924,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5910,
													"end": 5912,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 5906,
													"end": 5925,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5899,
													"end": 5943,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 5670,
													"end": 6024,
													"name": "tag",
													"source": 10,
													"value": "43"
												},
												{
													"begin": 5670,
													"end": 6024,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "D6BDA275"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5994,
													"end": 6013,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 14,
													"end": 141,
													"name": "tag",
													"source": 14,
													"value": "45"
												},
												{
													"begin": 14,
													"end": 141,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 75,
													"end": 85,
													"name": "PUSH",
													"source": 14,
													"value": "4E487B71"
												},
												{
													"begin": 70,
													"end": 73,
													"name": "PUSH",
													"source": 14,
													"value": "E0"
												},
												{
													"begin": 66,
													"end": 86,
													"name": "SHL",
													"source": 14
												},
												{
													"begin": 63,
													"end": 64,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 56,
													"end": 87,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 106,
													"end": 110,
													"name": "PUSH",
													"source": 14,
													"value": "41"
												},
												{
													"begin": 103,
													"end": 104,
													"name": "PUSH",
													"source": 14,
													"value": "4"
												},
												{
													"begin": 96,
													"end": 111,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 130,
													"end": 134,
													"name": "PUSH",
													"source": 14,
													"value": "24"
												},
												{
													"begin": 127,
													"end": 128,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 120,
													"end": 135,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 146,
													"end": 396,
													"name": "tag",
													"source": 14,
													"value": "46"
												},
												{
													"begin": 146,
													"end": 396,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 231,
													"end": 232,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "tag",
													"source": 14,
													"value": "50"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 255,
													"end": 261,
													"name": "DUP4",
													"source": 14
												},
												{
													"begin": 252,
													"end": 253,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 249,
													"end": 262,
													"name": "LT",
													"source": 14
												},
												{
													"begin": 241,
													"end": 354,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 241,
													"end": 354,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "52"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 331,
													"end": 342,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 331,
													"end": 342,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 331,
													"end": 342,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 325,
													"end": 343,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": 312,
													"end": 323,
													"name": "DUP4",
													"source": 14
												},
												{
													"begin": 312,
													"end": 323,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 312,
													"end": 323,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 305,
													"end": 344,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 277,
													"end": 279,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 270,
													"end": 280,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 241,
													"end": 354,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "50"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 241,
													"end": 354,
													"name": "tag",
													"source": 14,
													"value": "52"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 388,
													"end": 389,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 370,
													"end": 386,
													"name": "SWAP2",
													"source": 14
												},
												{
													"begin": 370,
													"end": 386,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 363,
													"end": 390,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 146,
													"end": 396,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "tag",
													"source": 14,
													"value": "2"
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 489,
													"end": 495,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 497,
													"end": 503,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 550,
													"end": 552,
													"name": "PUSH",
													"source": 14,
													"value": "40"
												},
												{
													"begin": 538,
													"end": 547,
													"name": "DUP4",
													"source": 14
												},
												{
													"begin": 529,
													"end": 536,
													"name": "DUP6",
													"source": 14
												},
												{
													"begin": 525,
													"end": 548,
													"name": "SUB",
													"source": 14
												},
												{
													"begin": 521,
													"end": 553,
													"name": "SLT",
													"source": 14
												},
												{
													"begin": 518,
													"end": 570,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 518,
													"end": 570,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "54"
												},
												{
													"begin": 518,
													"end": 570,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 566,
													"end": 567,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 563,
													"end": 564,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 556,
													"end": 568,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 518,
													"end": 570,
													"name": "tag",
													"source": 14,
													"value": "54"
												},
												{
													"begin": 518,
													"end": 570,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 592,
													"end": 608,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 592,
													"end": 608,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 637,
													"end": 668,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 637,
													"end": 668,
													"name": "AND",
													"source": 14
												},
												{
													"begin": 627,
													"end": 669,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 627,
													"end": 669,
													"name": "EQ",
													"source": 14
												},
												{
													"begin": 617,
													"end": 687,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "55"
												},
												{
													"begin": 617,
													"end": 687,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 683,
													"end": 684,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 680,
													"end": 681,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 673,
													"end": 685,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 617,
													"end": 687,
													"name": "tag",
													"source": 14,
													"value": "55"
												},
												{
													"begin": 617,
													"end": 687,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 755,
													"end": 757,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 740,
													"end": 758,
													"name": "DUP5",
													"source": 14
												},
												{
													"begin": 740,
													"end": 758,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 734,
													"end": 759,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": 706,
													"end": 711,
													"name": "SWAP1",
													"source": 14
												},
												{
													"begin": 706,
													"end": 711,
													"name": "SWAP3",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 771,
													"end": 801,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 771,
													"end": 801,
													"name": "GT",
													"source": 14
												},
												{
													"begin": 768,
													"end": 818,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 768,
													"end": 818,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "56"
												},
												{
													"begin": 768,
													"end": 818,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 814,
													"end": 815,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 811,
													"end": 812,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 804,
													"end": 816,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 768,
													"end": 818,
													"name": "tag",
													"source": 14,
													"value": "56"
												},
												{
													"begin": 768,
													"end": 818,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 837,
													"end": 859,
													"name": "DUP4",
													"source": 14
												},
												{
													"begin": 837,
													"end": 859,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 890,
													"end": 894,
													"name": "PUSH",
													"source": 14,
													"value": "1F"
												},
												{
													"begin": 882,
													"end": 895,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 882,
													"end": 895,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 878,
													"end": 905,
													"name": "DUP6",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SGT",
													"source": -1
												},
												{
													"begin": 868,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "57"
												},
												{
													"begin": 868,
													"end": 923,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 919,
													"end": 920,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 916,
													"end": 917,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 909,
													"end": 921,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 868,
													"end": 923,
													"name": "tag",
													"source": 14,
													"value": "57"
												},
												{
													"begin": 868,
													"end": 923,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 946,
													"end": 955,
													"name": "DUP1",
													"source": 14
												},
												{
													"begin": 946,
													"end": 955,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 967,
													"end": 997,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 967,
													"end": 997,
													"name": "GT",
													"source": 14
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "59"
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "59"
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "45"
												},
												{
													"begin": 1000,
													"end": 1018,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "tag",
													"source": 14,
													"value": "59"
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1049,
													"end": 1051,
													"name": "PUSH",
													"source": 14,
													"value": "40"
												},
												{
													"begin": 1043,
													"end": 1052,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": 1141,
													"end": 1143,
													"name": "PUSH",
													"source": 14,
													"value": "1F"
												},
												{
													"begin": 1103,
													"end": 1120,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1103,
													"end": 1120,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "SWAP1",
													"source": 14
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "AND",
													"source": 14
												},
												{
													"begin": 1132,
													"end": 1134,
													"name": "PUSH",
													"source": 14,
													"value": "3F"
												},
												{
													"begin": 1095,
													"end": 1135,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1091,
													"end": 1145,
													"name": "AND",
													"source": 14
												},
												{
													"begin": 1079,
													"end": 1146,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1079,
													"end": 1146,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1161,
													"end": 1195,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1161,
													"end": 1195,
													"name": "GT",
													"source": 14
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "LT",
													"source": 14
												},
												{
													"begin": 1158,
													"end": 1220,
													"name": "OR",
													"source": 14
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "61"
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "61"
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "45"
												},
												{
													"begin": 1223,
													"end": 1241,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "tag",
													"source": 14,
													"value": "61"
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1259,
													"end": 1261,
													"name": "PUSH",
													"source": 14,
													"value": "40"
												},
												{
													"begin": 1252,
													"end": 1274,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "MSTORE",
													"source": 14
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1341,
													"end": 1343,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 1320,
													"end": 1344,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1317,
													"end": 1354,
													"name": "DUP8",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "LT",
													"source": -1
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "ISZERO",
													"source": 14
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "62"
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "JUMPI",
													"source": 14
												},
												{
													"begin": 1367,
													"end": 1368,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 1364,
													"end": 1365,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 1357,
													"end": 1369,
													"name": "REVERT",
													"source": 14
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "tag",
													"source": 14,
													"value": "62"
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "63"
												},
												{
													"begin": 1445,
													"end": 1451,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1440,
													"end": 1442,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 1432,
													"end": 1438,
													"name": "DUP4",
													"source": 14
												},
												{
													"begin": 1428,
													"end": 1443,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1423,
													"end": 1425,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 1419,
													"end": 1421,
													"name": "DUP7",
													"source": 14
												},
												{
													"begin": 1415,
													"end": 1426,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "46"
												},
												{
													"begin": 1380,
													"end": 1452,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "tag",
													"source": 14,
													"value": "63"
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1471,
													"end": 1477,
													"name": "DUP1",
													"source": 14
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "SWAP4",
													"source": 14
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP3",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP3",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP1",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "POP",
													"source": 14
												},
												{
													"begin": 401,
													"end": 1483,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "tag",
													"source": 14,
													"value": "25"
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1825,
													"end": 1828,
													"name": "PUSH",
													"source": 14,
													"value": "0"
												},
												{
													"begin": 1863,
													"end": 1869,
													"name": "DUP3",
													"source": 14
												},
												{
													"begin": 1857,
													"end": 1870,
													"name": "MLOAD",
													"source": 14
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "66"
												},
												{
													"begin": 1938,
													"end": 1944,
													"name": "DUP2",
													"source": 14
												},
												{
													"begin": 1933,
													"end": 1936,
													"name": "DUP5",
													"source": 14
												},
												{
													"begin": 1926,
													"end": 1930,
													"name": "PUSH",
													"source": 14,
													"value": "20"
												},
												{
													"begin": 1918,
													"end": 1924,
													"name": "DUP8",
													"source": 14
												},
												{
													"begin": 1914,
													"end": 1931,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "PUSH [tag]",
													"source": 14,
													"value": "46"
												},
												{
													"begin": 1879,
													"end": 1945,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "tag",
													"source": 14,
													"value": "66"
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP2",
													"source": 14
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP1",
													"source": 14
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP2",
													"source": 14
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "ADD",
													"source": 14
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP3",
													"source": 14
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "SWAP2",
													"source": 14
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1696,
													"end": 1983,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 14
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "tag",
													"source": 14,
													"value": "47"
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "JUMPDEST",
													"source": 14
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH #[$]",
													"source": 6,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH [$]",
													"source": 6,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "CODECOPY",
													"source": 6
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 600,
													"end": 1717,
													"name": "RETURN",
													"source": 6
												}
											],
											".data": {
												"0": {
													".auxdata": "a2646970667358221220b0a6ef45ea41ecff26aceae2a13b693304c712be70f6cbcb48972b6a8e00f80b64736f6c634300081c0033",
													".code": [
														{
															"begin": 600,
															"end": 1717,
															"name": "PUSH",
															"source": 6,
															"value": "80"
														},
														{
															"begin": 600,
															"end": 1717,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 600,
															"end": 1717,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "5"
														},
														{
															"begin": 2649,
															"end": 2658,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "6"
														},
														{
															"begin": 2649,
															"end": 2660,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "tag",
															"source": 8,
															"value": "5"
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 600,
															"end": 1717,
															"name": "STOP",
															"source": 6
														},
														{
															"begin": 2323,
															"end": 2406,
															"name": "tag",
															"source": 8,
															"value": "6"
														},
														{
															"begin": 2323,
															"end": 2406,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "8"
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "9"
														},
														{
															"begin": 2381,
															"end": 2396,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "10"
														},
														{
															"begin": 2381,
															"end": 2398,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "tag",
															"source": 8,
															"value": "9"
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 2371,
															"end": 2380,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "11"
														},
														{
															"begin": 2371,
															"end": 2399,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "tag",
															"source": 8,
															"value": "8"
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 2323,
															"end": 2406,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "tag",
															"source": 6,
															"value": "10"
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1650,
															"end": 1657,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "13"
														},
														{
															"begin": 811,
															"end": 877,
															"name": "PUSH",
															"source": 7,
															"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "SLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "AND",
															"source": 7
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 1441,
															"end": 1579,
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "tag",
															"source": 6,
															"value": "13"
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1669,
															"end": 1708,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1669,
															"end": 1708,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1583,
															"end": 1715,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 949,
															"end": 1844,
															"name": "tag",
															"source": 8,
															"value": "11"
														},
														{
															"begin": 949,
															"end": 1844,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 1287,
															"end": 1301,
															"name": "CALLDATASIZE",
															"source": 8
														},
														{
															"begin": 1284,
															"end": 1285,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1281,
															"end": 1282,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1268,
															"end": 1302,
															"name": "CALLDATACOPY",
															"source": 8
														},
														{
															"begin": 1501,
															"end": 1502,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1498,
															"end": 1499,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1482,
															"end": 1496,
															"name": "CALLDATASIZE",
															"source": 8
														},
														{
															"begin": 1479,
															"end": 1480,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1463,
															"end": 1477,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 1456,
															"end": 1461,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 1443,
															"end": 1503,
															"name": "DELEGATECALL",
															"source": 8
														},
														{
															"begin": 1577,
															"end": 1593,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 1574,
															"end": 1575,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1571,
															"end": 1572,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1556,
															"end": 1594,
															"name": "RETURNDATACOPY",
															"source": 8
														},
														{
															"begin": 1615,
															"end": 1621,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "17"
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 1797,
															"end": 1813,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 1794,
															"end": 1795,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1787,
															"end": 1814,
															"name": "RETURN",
															"source": 8
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "tag",
															"source": 8,
															"value": "17"
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 1717,
															"end": 1733,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 1714,
															"end": 1715,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1707,
															"end": 1734,
															"name": "REVERT",
															"source": 8
														}
													]
												}
											}
										},
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"Contracts/VaultFactoryImplementation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allVaults(uint256)": "9094a91e",
							"createVault(address,address,address,address,address,string,string)": "c3638757",
							"defaultLiquidator()": "545851d7",
							"defaultOracleManager()": "4c39ad21",
							"defaultRebalancer()": "3c46201d",
							"getAllVaults()": "97331bf9",
							"getVault(uint256)": "9403b634",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setDefaultReferences(address,address,address)": "ab31b6f3",
							"setVaultLogic(address)": "ecedd5bc",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"vaultCount()": "a7c6a100",
							"vaultLogic()": "b078147a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"DefaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"v3Pool\",\"type\":\"address\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"v3Pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"positionMgr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleMgr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiquidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOracleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultLogic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"}],\"name\":\"setDefaultReferences\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVaultLogic\",\"type\":\"address\"}],\"name\":\"setVaultLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A UUPS-upgradeable factory for creating new vault proxies.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"DefaultsUpdated(address,address,address)\":{\"details\":\"Emitted when the factory's default references are updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"VaultCreated(address,address,address)\":{\"details\":\"Emitted when a new vault proxy is created.\"}},\"kind\":\"dev\",\"methods\":{\"createVault(address,address,address,address,address,string,string)\":{\"params\":{\"liquidator\":\"Liquidator (or zero for default)\",\"name\":\"The ERC20 name for the vault shares\",\"oracleMgr\":\"OracleManager (or zero for default)\",\"positionMgr\":\"The NonfungiblePositionManager used by the vault\",\"rebalancer\":\"Rebalancer (or zero for default)\",\"symbol\":\"The ERC20 symbol for the vault shares\",\"v3Pool\":\"The Uniswap V3 pool address for the vault\"},\"returns\":{\"proxyAddr\":\"   The address of the newly deployed vault proxy\"}},\"initialize(address,address)\":{\"params\":{\"_owner\":\"The owner (often a DAO or deployer)\",\"_vaultLogic\":\"The deployed VaultImplementation logic contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultReferences(address,address,address)\":{\"params\":{\"_liquidator\":\"Address of the default Liquidator\",\"_oracleManager\":\"Address of the default OracleManager\",\"_rebalancer\":\"Address of the default Rebalancer\"}},\"setVaultLogic(address)\":{\"params\":{\"newVaultLogic\":\"The new VaultImplementation logic contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"allVaults\":{\"details\":\"Array of all vault proxies created by this factory.\"},\"defaultOracleManager\":{\"details\":\"Default references for external contracts if the user doesn't specify them.\"},\"vaultLogic\":{\"details\":\"The address of the deployed VaultImplementation (logic) contract.\"}},\"title\":\"VaultFactoryImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createVault(address,address,address,address,address,string,string)\":{\"notice\":\"Deploys a new vault proxy pointing to `vaultLogic`. The caller becomes the vault's owner.\"},\"getAllVaults()\":{\"notice\":\"Returns the entire list of vault addresses.          Use with care if the array is large.\"},\"getVault(uint256)\":{\"notice\":\"Retrieve a vault address by index in the `allVaults` array.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the factory. Called once at deployment behind its own proxy.         If your OwnableUpgradeable requires an argument for __Ownable_init, provide it here.\"},\"setDefaultReferences(address,address,address)\":{\"notice\":\"Sets the default OracleManager, Rebalancer, and Liquidator addresses for the factory.         Users can override these when creating a new vault by passing non-zero addresses.\"},\"setVaultLogic(address)\":{\"notice\":\"Sets a new logic contract address for future vaults (if you want to upgrade).\"},\"vaultCount()\":{\"notice\":\"Returns the number of vaults created by this factory.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/VaultFactoryImplementation.sol\":\"VaultFactoryImplementation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d\",\"dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"Contracts/VaultFactoryImplementation.sol\":{\"keccak256\":\"0x89ee2007060f0790def8cf12f793d077d4c56830c4e3105db648b87a9fbcbbcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14a88ef4d72a87eb55e9db8eba363b9f39723e36c73191e6faeb91133e212440\",\"dweb:/ipfs/QmdPitaoCp41LYaxL9XoZip8Ud8e1jbjScMjMMkvUJgQMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1527,
								"contract": "Contracts/VaultFactoryImplementation.sol:VaultFactoryImplementation",
								"label": "vaultLogic",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1530,
								"contract": "Contracts/VaultFactoryImplementation.sol:VaultFactoryImplementation",
								"label": "defaultOracleManager",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1532,
								"contract": "Contracts/VaultFactoryImplementation.sol:VaultFactoryImplementation",
								"label": "defaultRebalancer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1534,
								"contract": "Contracts/VaultFactoryImplementation.sol:VaultFactoryImplementation",
								"label": "defaultLiquidator",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1538,
								"contract": "Contracts/VaultFactoryImplementation.sol:VaultFactoryImplementation",
								"label": "allVaults",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createVault(address,address,address,address,address,string,string)": {
								"notice": "Deploys a new vault proxy pointing to `vaultLogic`. The caller becomes the vault's owner."
							},
							"getAllVaults()": {
								"notice": "Returns the entire list of vault addresses.          Use with care if the array is large."
							},
							"getVault(uint256)": {
								"notice": "Retrieve a vault address by index in the `allVaults` array."
							},
							"initialize(address,address)": {
								"notice": "Initializes the factory. Called once at deployment behind its own proxy.         If your OwnableUpgradeable requires an argument for __Ownable_init, provide it here."
							},
							"setDefaultReferences(address,address,address)": {
								"notice": "Sets the default OracleManager, Rebalancer, and Liquidator addresses for the factory.         Users can override these when creating a new vault by passing non-zero addresses."
							},
							"setVaultLogic(address)": {
								"notice": "Sets a new logic contract address for future vaults (if you want to upgrade)."
							},
							"vaultCount()": {
								"notice": "Returns the number of vaults created by this factory."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 677,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								676,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1039
						],
						"IERC1822Proxiable": [
							707
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 708,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 707,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1040,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1039,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								707,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 760,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 760,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 854,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 765,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$707_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$707",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								765,
								778,
								1095,
								1357
							],
							"usedEvents": [
								219,
								684
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 635,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 676,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 676,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 654,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 656,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 676,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 663,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 662,
												"id": 665,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 676,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 676,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 684,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 691,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 696,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 698,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								684,
								691,
								696
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							707
						]
					},
					"id": 708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 707,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 708,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							745
						],
						"ERC1967Utils": [
							1039
						],
						"Proxy": [
							1075
						]
					},
					"id": 746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 1076,
							"src": "140:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 710,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1075,
										"src": "148:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 1040,
							"src": "176:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 712,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1039,
										"src": "184:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 715,
										"name": "Proxy",
										"nameLocations": [
											"625:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1075,
										"src": "625:5:6"
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "625:5:6"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "226:373:6",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								1075
							],
							"name": "ERC1967Proxy",
							"nameLocation": "609:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "1145:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "1185:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "1201:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 724,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1155:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:16:6",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "1155:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "1155:52:6"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "637:439:6",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 732,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1101:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1093:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1130:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1117:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1117:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:44:6"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:6"
									},
									"scope": 745,
									"src": "1081:133:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "1659:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 739,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1676:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1039_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1689:17:6",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "1676:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 738,
												"id": 742,
												"nodeType": "Return",
												"src": "1669:39:6"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "1220:358:6",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1592:15:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 735,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:6"
									},
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:6"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1650:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:6"
									},
									"scope": 745,
									"src": "1583:132:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 746,
							"src": "600:1117:6",
							"usedErrors": [
								765,
								778,
								1095,
								1357
							],
							"usedEvents": [
								684
							]
						}
					],
					"src": "114:1604:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1344
						],
						"ERC1967Utils": [
							1039
						],
						"IBeacon": [
							1085
						],
						"IERC1967": [
							697
						],
						"StorageSlot": [
							1490
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1086,
							"src": "140:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 748,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1085,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 698,
							"src": "187:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 697,
										"src": "195:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1345,
							"src": "243:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1344,
										"src": "251:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1491,
							"src": "292:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1490,
										"src": "300:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:7",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:7",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 760,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "763:114:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 758,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:7",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 765,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "993:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:7"
									},
									"src": "958:59:7"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:7",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 770,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1114:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:7"
									},
									"src": "1088:41:7"
								},
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:7",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 775,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "1228:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:7"
									},
									"src": "1201:43:7"
								},
								{
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:7",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 778,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:7"
									},
									"src": "1337:26:7"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1502:77:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 786,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "1546:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 784,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "1519:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "1519:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1371,
													"src": "1519:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 783,
												"id": 789,
												"nodeType": "Return",
												"src": "1512:60:7"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:7",
										"text": " @dev Returns the current implementation address."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:7"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1493:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:7"
									},
									"scope": 1039,
									"src": "1441:138:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "1734:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 797,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1748:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 807,
												"nodeType": "IfStatement",
												"src": "1744:119:7",
												"trueBody": {
													"id": 806,
													"nodeType": "Block",
													"src": "1784:79:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 803,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "1834:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 802,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "1805:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 805,
															"nodeType": "RevertStatement",
															"src": "1798:54:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "1899:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 808,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "1872:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1401,
																"src": "1872:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1371,
														"src": "1872:53:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1928:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:7"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:7",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1699:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:7"
									},
									"scope": 1039,
									"src": "1671:281:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2345:263:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2374:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 826,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2355:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 833,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2425:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 830,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "2407:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$697_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:7",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 684,
														"src": "2407:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "2402:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 836,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2458:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "2559:43:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 848,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "2573:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:7"
														}
													]
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "2454:148:7",
												"trueBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "2475:78:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 843,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "2518:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 844,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "2537:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 840,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "2489:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1344_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:7",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1261,
																	"src": "2489:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 846,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:7",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2290:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2317:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:7"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:7"
									},
									"scope": 1039,
									"src": "2264:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:7",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 858,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "2829:105:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 856,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 857,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "3339:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 866,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3383:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 864,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "3356:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "3356:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1371,
													"src": "3356:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 863,
												"id": 869,
												"nodeType": "Return",
												"src": "3349:51:7"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:7",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:7"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3330:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:7"
									},
									"scope": 1039,
									"src": "3287:120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3535:172:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3549:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 878,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 891,
												"nodeType": "IfStatement",
												"src": "3545:91:7",
												"trueBody": {
													"id": 890,
													"nodeType": "Block",
													"src": "3573:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 884,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 883,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3594:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 889,
															"nodeType": "RevertStatement",
															"src": "3587:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 895,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3672:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 892,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "3645:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1401,
																"src": "3645:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1371,
														"src": "3645:44:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 898,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3692:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:7"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:7",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3509:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:7"
									},
									"scope": 1039,
									"src": "3490:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "3875:94:7",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "3912:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3924:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 908,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "3890:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$697_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:7",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 691,
														"src": "3890:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "EmitStatement",
												"src": "3885:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3953:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 916,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "3943:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:7"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:7",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "3848:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:7"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:7"
									},
									"scope": 1039,
									"src": "3827:142:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:7",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 925,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "4246:106:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 923,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "4468:69:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 933,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "4512:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 931,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "4485:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "4485:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1371,
													"src": "4485:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 930,
												"id": 936,
												"nodeType": "Return",
												"src": "4478:52:7"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:7",
										"text": " @dev Returns the current beacon."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:7"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "4459:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:7"
									},
									"scope": 1039,
									"src": "4415:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "4667:390:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 944,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4681:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "4677:95:7",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "4709:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "4751:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 949,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "4730:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 952,
															"nodeType": "RevertStatement",
															"src": "4723:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 958,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "4809:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 955,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "4782:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1490_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1401,
																"src": "4782:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1372_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1371,
														"src": "4782:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 961,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "4830:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:7"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "4850:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 964,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "4889:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 966,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "4881:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1085_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1085",
																"typeString": "contract IBeacon"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:7",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1084,
														"src": "4881:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 972,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "4930:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "4926:125:7",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "4969:82:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 978,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5019:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 977,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "4990:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "4983:57:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:7",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "4640:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:7"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:7"
									},
									"scope": 1039,
									"src": "4620:437:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "5661:263:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "5682:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 992,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "5671:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 999,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "5731:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 996,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "5707:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$697_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:7",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "5707:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "EmitStatement",
												"src": "5702:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1002,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "5756:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "5875:43:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "5889:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:7"
														}
													]
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "5752:166:7",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "5773:96:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1010,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 987,
																						"src": "5824:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1009,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "5816:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1085_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1085",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:7",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "5816:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "5853:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1006,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "5787:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1344_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:7",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1261,
																	"src": "5787:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:7",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "5614:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "5633:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:7"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:7"
									},
									"scope": 1039,
									"src": "5582:342:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "6149:86:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1028,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "6159:70:7",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "6178:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1032,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "6199:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1034,
															"nodeType": "RevertStatement",
															"src": "6192:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:7",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:7"
									},
									"scope": 1039,
									"src": "6113:122:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1040,
							"src": "496:5741:7",
							"usedErrors": [
								765,
								770,
								775,
								778
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							1075
						]
					},
					"id": 1076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:8",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 1075,
							"linearizedBaseContracts": [
								1075
							],
							"name": "Proxy",
							"nameLocation": "742:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1009:835:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:8",
													"nodeType": "YulBlock",
													"src": "1028:810:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:8"
																		},
																		"nativeSrc": "1287:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:8"
																},
																"nativeSrc": "1268:34:8",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:8"
															},
															"nativeSrc": "1268:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:8"
														},
														{
															"nativeSrc": "1429:74:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:8"
																		},
																		"nativeSrc": "1456:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:8"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:8",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:8"
																		},
																		"nativeSrc": "1482:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:8"
																},
																"nativeSrc": "1443:60:8",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:8"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:8"
																		},
																		"nativeSrc": "1577:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:8"
																},
																"nativeSrc": "1556:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:8"
															},
															"nativeSrc": "1556:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:8",
																		"nodeType": "YulBlock",
																		"src": "1689:59:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:8",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:8"
																							},
																							"nativeSrc": "1717:16:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:8"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:8"
																					},
																					"nativeSrc": "1707:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:8"
																				},
																				"nativeSrc": "1707:27:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:8"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:8",
																	"nodeType": "YulCase",
																	"src": "1682:66:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:8",
																		"nodeType": "YulBlock",
																		"src": "1769:59:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:8",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:8"
																							},
																							"nativeSrc": "1797:16:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:8"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:8"
																					},
																					"nativeSrc": "1787:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:8"
																				},
																				"nativeSrc": "1787:27:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:8"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:8",
																	"nodeType": "YulCase",
																	"src": "1761:67:8",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:8",
																"nodeType": "YulIdentifier",
																"src": "1615:6:8"
															},
															"nativeSrc": "1608:220:8",
															"nodeType": "YulSwitch",
															"src": "1608:220:8"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:8",
														"valueSize": 1
													}
												],
												"id": 1048,
												"nodeType": "InlineAssembly",
												"src": "1019:819:8"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:8",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "968:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:8"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:8"
									},
									"scope": 1075,
									"src": "949:895:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:8",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:8"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "2086:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:8"
									},
									"scope": 1075,
									"src": "2028:67:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2361:45:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1061,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2381:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2371:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:8"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:8",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:8"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:8"
									},
									"scope": 1075,
									"src": "2323:83:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2639:28:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1070,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "2649:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:8"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:8",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 1074,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:8"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:8"
									},
									"scope": 1075,
									"src": "2603:64:8",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1076,
							"src": "724:1945:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1085
						]
					},
					"id": 1086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1078,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1085,
							"linearizedBaseContracts": [
								1085
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1085,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1086,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1344
						],
						"Errors": [
							1366
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 1367,
							"src": "127:36:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1088,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "135:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1090,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1344,
							"linearizedBaseContracts": [
								1344
							],
							"name": "Address",
							"nameLocation": "241:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1095,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "358:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:10"
									},
									"src": "335:39:10"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1361:278:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1105,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1344",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1344",
																		"typeString": "library Address"
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1103,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1108,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "1399:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "IfStatement",
												"src": "1371:125:10",
												"trueBody": {
													"id": 1121,
													"nodeType": "Block",
													"src": "1407:89:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1115,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1344",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1344",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1113,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1118,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "1478:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1110,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "1428:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1366_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1354,
																	"src": "1428:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1120,
															"nodeType": "RevertStatement",
															"src": "1421:64:10"
														}
													]
												}
											},
											{
												"assignments": [
													1124,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "1507:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1123,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1131,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1125,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "1525:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1127,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "1547:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:10"
											},
											{
												"condition": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:10",
													"subExpression": {
														"id": 1132,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "1573:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "1568:65:10",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "1582:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1134,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "1603:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1366_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1357,
																	"src": "1603:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1138,
															"nodeType": "RevertStatement",
															"src": "1596:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1309:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:10"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:10"
									},
									"scope": 1344,
									"src": "1290:349:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2573:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "2612:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "2620:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1152,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "2590:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1157,
												"nodeType": "Return",
												"src": "2583:45:10"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2506:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2522:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:10"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2559:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:10"
									},
									"scope": 1344,
									"src": "2484:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "3072:294:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1344",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1344",
																		"typeString": "library Address"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1176,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "3110:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "3082:123:10",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "3117:88:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1183,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1344",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1344",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1181,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1186,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "3188:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1178,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "3138:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1366_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1354,
																	"src": "3138:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1188,
															"nodeType": "RevertStatement",
															"src": "3131:63:10"
														}
													]
												}
											},
											{
												"assignments": [
													1192,
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "3215:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1191,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "3229:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1193,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "3282:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1195,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3256:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "3275:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3331:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "3339:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "3348:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1202,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "3304:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1207,
												"nodeType": "Return",
												"src": "3297:62:10"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2990:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3006:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3025:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:10"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3058:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:10"
									},
									"scope": 1344,
									"src": "2959:407:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3605:154:10",
										"statements": [
											{
												"assignments": [
													1220,
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3616:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3630:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1221,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"arguments": [
														{
															"id": 1225,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "3675:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3657:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1229,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3724:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "3732:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1231,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "3741:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1228,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "3697:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1233,
												"nodeType": "Return",
												"src": "3690:62:10"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3533:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3549:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:10"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3591:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:10"
									},
									"scope": 1344,
									"src": "3505:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "3997:156:10",
										"statements": [
											{
												"assignments": [
													1246,
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "4008:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "4022:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"id": 1251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4069:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4049:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4118:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "4126:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4135:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1254,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "4091:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1259,
												"nodeType": "Return",
												"src": "4084:62:10"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3930:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3946:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:10"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3983:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:10"
									},
									"scope": 1344,
									"src": "3900:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "4579:424:10",
										"statements": [
											{
												"condition": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:10",
													"subExpression": {
														"id": 1273,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "4594:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "4653:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1280,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1268,
																			"src": "4841:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1284,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1264,
																				"src": "4867:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1295,
															"nodeType": "IfStatement",
															"src": "4837:119:10",
															"trueBody": {
																"id": 1294,
																"nodeType": "Block",
																"src": "4892:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1291,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "4934:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1290,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1095,
																				"src": "4917:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1293,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1296,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "4976:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1272,
															"id": 1297,
															"nodeType": "Return",
															"src": "4969:17:10"
														}
													]
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "4589:408:10",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "4603:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1276,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "4625:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1275,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "4617:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1278,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4466:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4490:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4512:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:10"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4565:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:10"
									},
									"scope": 1344,
									"src": "4421:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "5307:122:10",
										"statements": [
											{
												"condition": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:10",
													"subExpression": {
														"id": 1311,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "5322:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1320,
													"nodeType": "Block",
													"src": "5381:42:10",
													"statements": [
														{
															"expression": {
																"id": 1318,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "5402:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1310,
															"id": 1319,
															"nodeType": "Return",
															"src": "5395:17:10"
														}
													]
												},
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "5317:106:10",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "5331:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1314,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "5353:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1313,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "5345:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5231:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5245:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:10"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5293:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:10"
									},
									"scope": 1344,
									"src": "5205:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "5598:432:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1329,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "5674:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "5973:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1335,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "5994:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1366_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1357,
																	"src": "5994:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "5987:26:10"
														}
													]
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "5670:354:10",
												"trueBody": {
													"id": 1334,
													"nodeType": "Block",
													"src": "5697:270:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:10",
																"nodeType": "YulBlock",
																"src": "5824:133:10",
																"statements": [
																	{
																		"nativeSrc": "5842:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:10"
																			},
																			"nativeSrc": "5865:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:10",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:10",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:10"
																					},
																					"nativeSrc": "5906:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:10"
																			},
																			"nativeSrc": "5899:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:10"
																		},
																		"nativeSrc": "5899:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:10"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1326,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1326,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:10",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1333,
															"nodeType": "InlineAssembly",
															"src": "5799:158:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "5560:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:10"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:10"
									},
									"scope": 1344,
									"src": "5543:487:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1345,
							"src": "233:5799:10",
							"usedErrors": [
								1095
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1347,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1354,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1357,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1360,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1365,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1367,
							"src": "411:484:11",
							"usedErrors": [
								1354,
								1357,
								1360,
								1365
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1490
						]
					},
					"id": 1491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1369,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1490,
							"linearizedBaseContracts": [
								1490
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1372,
									"members": [
										{
											"constant": false,
											"id": 1371,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1372,
											"src": "1462:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1370,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1433:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1375,
									"members": [
										{
											"constant": false,
											"id": 1374,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1375,
											"src": "1517:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1373,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1488:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1378,
									"members": [
										{
											"constant": false,
											"id": 1377,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1378,
											"src": "1569:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1376,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1540:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1381,
									"members": [
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1381,
											"src": "1624:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1379,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1595:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1384,
									"members": [
										{
											"constant": false,
											"id": 1383,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1384,
											"src": "1678:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1382,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1650:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1387,
									"members": [
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "1731:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1385,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1703:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1390,
									"members": [
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1390,
											"src": "1783:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1388,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:12",
									"nodeType": "StructDefinition",
									"scope": 1490,
									"src": "1756:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "1983:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:12",
													"nodeType": "YulBlock",
													"src": "2018:38:12",
													"statements": [
														{
															"nativeSrc": "2032:14:12",
															"nodeType": "YulAssignment",
															"src": "2032:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:12",
																"nodeType": "YulIdentifier",
																"src": "2042:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1399,
												"nodeType": "InlineAssembly",
												"src": "1993:63:12"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1923:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:12"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1960:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "1960:11:12"
													},
													"referencedDeclaration": 1372,
													"src": "1960:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1372_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:12"
									},
									"scope": 1490,
									"src": "1899:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "2243:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:12",
													"nodeType": "YulBlock",
													"src": "2278:38:12",
													"statements": [
														{
															"nativeSrc": "2292:14:12",
															"nodeType": "YulAssignment",
															"src": "2292:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:12",
																"nodeType": "YulIdentifier",
																"src": "2302:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1410,
												"nodeType": "InlineAssembly",
												"src": "2253:63:12"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:12",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "2183:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:12"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "2220:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1375_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1406,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1375,
														"src": "2220:11:12"
													},
													"referencedDeclaration": 1375,
													"src": "2220:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1375_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:12"
									},
									"scope": 1490,
									"src": "2159:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "2503:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:12",
													"nodeType": "YulBlock",
													"src": "2538:38:12",
													"statements": [
														{
															"nativeSrc": "2552:14:12",
															"nodeType": "YulAssignment",
															"src": "2552:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:12",
																"nodeType": "YulIdentifier",
																"src": "2562:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1419,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1421,
												"nodeType": "InlineAssembly",
												"src": "2513:63:12"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:12",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "2443:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:12"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "2480:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1378_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1378,
														"src": "2480:11:12"
													},
													"referencedDeclaration": 1378,
													"src": "2480:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1378_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:12"
									},
									"scope": 1490,
									"src": "2419:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "2763:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:12",
													"nodeType": "YulBlock",
													"src": "2798:38:12",
													"statements": [
														{
															"nativeSrc": "2812:14:12",
															"nodeType": "YulAssignment",
															"src": "2812:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:12",
																"nodeType": "YulIdentifier",
																"src": "2822:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1430,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1432,
												"nodeType": "InlineAssembly",
												"src": "2773:63:12"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:12",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2703:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:12"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2740:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1381_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1428,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1381,
														"src": "2740:11:12"
													},
													"referencedDeclaration": 1381,
													"src": "2740:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1381_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:12"
									},
									"scope": 1490,
									"src": "2679:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3020:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:12",
													"nodeType": "YulBlock",
													"src": "3055:38:12",
													"statements": [
														{
															"nativeSrc": "3069:14:12",
															"nodeType": "YulAssignment",
															"src": "3069:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:12",
																"nodeType": "YulIdentifier",
																"src": "3079:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1441,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1437,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1443,
												"nodeType": "InlineAssembly",
												"src": "3030:63:12"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:12",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2961:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:12"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2998:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1384_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1439,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1384,
														"src": "2998:10:12"
													},
													"referencedDeclaration": 1384,
													"src": "2998:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1384_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:12"
									},
									"scope": 1490,
									"src": "2938:161:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "3277:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:12",
													"nodeType": "YulBlock",
													"src": "3312:38:12",
													"statements": [
														{
															"nativeSrc": "3326:14:12",
															"nodeType": "YulAssignment",
															"src": "3326:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:12",
																"nodeType": "YulIdentifier",
																"src": "3336:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1454,
												"nodeType": "InlineAssembly",
												"src": "3287:63:12"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:12",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3218:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:12"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3255:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1387_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1450,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1387,
														"src": "3255:10:12"
													},
													"referencedDeclaration": 1387,
													"src": "3255:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1387_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:12"
									},
									"scope": 1490,
									"src": "3195:161:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "3558:85:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:12",
													"nodeType": "YulBlock",
													"src": "3593:44:12",
													"statements": [
														{
															"nativeSrc": "3607:20:12",
															"nodeType": "YulAssignment",
															"src": "3607:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:12",
																"nodeType": "YulIdentifier",
																"src": "3617:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1459,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1465,
												"nodeType": "InlineAssembly",
												"src": "3568:69:12"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:12",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3491:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:12"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3536:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1387_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1461,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1387,
														"src": "3536:10:12"
													},
													"referencedDeclaration": 1387,
													"src": "3536:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1387_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:12"
									},
									"scope": 1490,
									"src": "3468:175:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "3818:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:12",
													"nodeType": "YulBlock",
													"src": "3853:38:12",
													"statements": [
														{
															"nativeSrc": "3867:14:12",
															"nodeType": "YulAssignment",
															"src": "3867:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:12",
																"nodeType": "YulIdentifier",
																"src": "3877:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1470,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "3828:63:12"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:12",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3760:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:12"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3797:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1390_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1472,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1390,
														"src": "3797:9:12"
													},
													"referencedDeclaration": 1390,
													"src": "3797:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1390_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:12"
									},
									"scope": 1490,
									"src": "3738:159:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "4094:85:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:12",
													"nodeType": "YulBlock",
													"src": "4129:44:12",
													"statements": [
														{
															"nativeSrc": "4143:20:12",
															"nodeType": "YulAssignment",
															"src": "4143:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:12",
																"nodeType": "YulIdentifier",
																"src": "4153:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1485,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1481,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1487,
												"nodeType": "InlineAssembly",
												"src": "4104:69:12"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:12",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "4029:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "4073:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1390_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1483,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1390,
														"src": "4073:9:12"
													},
													"referencedDeclaration": 1390,
													"src": "4073:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1390_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:12"
									},
									"scope": 1490,
									"src": "4007:172:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1491,
							"src": "1407:2774:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:12"
				},
				"id": 12
			},
			"Contracts/VaultFactoryImplementation.sol": {
				"ast": {
					"absolutePath": "Contracts/VaultFactoryImplementation.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"ERC1967Proxy": [
							745
						],
						"ERC1967Utils": [
							1039
						],
						"IERC1822Proxiable": [
							707
						],
						"IVaultImplementation": [
							1517
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"Proxy": [
							1075
						],
						"UUPSUpgradeable": [
							630
						],
						"VaultFactoryImplementation": [
							1882
						]
					},
					"id": 1883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 449,
							"src": "1507:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 195,
							"src": "1583:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 631,
							"src": "1659:77:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"id": 1496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 746,
							"src": "1737:64:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultImplementation",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1497,
								"nodeType": "StructuredDocumentation",
								"src": "1803:154:13",
								"text": " @dev Minimal interface for the logic contract (VaultImplementation).\n      Used by the factory to call `initialize(...)` upon proxy creation."
							},
							"fullyImplemented": false,
							"id": 1517,
							"linearizedBaseContracts": [
								1517
							],
							"name": "IVaultImplementation",
							"nameLocation": "1968:20:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ef090e4c",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2004:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "_v3Pool",
												"nameLocation": "2032:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2024:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_positionManager",
												"nameLocation": "2057:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2049:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_oracleMgr",
												"nameLocation": "2091:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2083:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "_rebalancer",
												"nameLocation": "2119:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2111:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "_liquidator",
												"nameLocation": "2148:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2140:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2177:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2169:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2207:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2193:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1510,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2193:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2236:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2222:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2222:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:235:13"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:0:13"
									},
									"scope": 1517,
									"src": "1995:264:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "1958:303:13",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1519,
										"name": "Initializable",
										"nameLocations": [
											"2418:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "2418:13:13"
									},
									"id": 1520,
									"nodeType": "InheritanceSpecifier",
									"src": "2418:13:13"
								},
								{
									"baseName": {
										"id": 1521,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"2437:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "2437:18:13"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "2437:18:13"
								},
								{
									"baseName": {
										"id": 1523,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"2461:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "2461:15:13"
									},
									"id": 1524,
									"nodeType": "InheritanceSpecifier",
									"src": "2461:15:13"
								}
							],
							"canonicalName": "VaultFactoryImplementation",
							"contractDependencies": [
								745
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1518,
								"nodeType": "StructuredDocumentation",
								"src": "2263:111:13",
								"text": " @title VaultFactoryImplementation\n @dev A UUPS-upgradeable factory for creating new vault proxies."
							},
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								630,
								707,
								194,
								676,
								448
							],
							"name": "VaultFactoryImplementation",
							"nameLocation": "2384:26:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "2483:89:13",
										"text": " @dev The address of the deployed VaultImplementation (logic) contract."
									},
									"functionSelector": "b078147a",
									"id": 1527,
									"mutability": "mutable",
									"name": "vaultLogic",
									"nameLocation": "2592:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "2577:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1526,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2577:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "2609:99:13",
										"text": " @dev Default references for external contracts if the user doesn't specify them."
									},
									"functionSelector": "4c39ad21",
									"id": 1530,
									"mutability": "mutable",
									"name": "defaultOracleManager",
									"nameLocation": "2728:20:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "2713:35:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1529,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2713:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c46201d",
									"id": 1532,
									"mutability": "mutable",
									"name": "defaultRebalancer",
									"nameLocation": "2769:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "2754:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1531,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2754:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "545851d7",
									"id": 1534,
									"mutability": "mutable",
									"name": "defaultLiquidator",
									"nameLocation": "2807:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "2792:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1533,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2792:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "2831:75:13",
										"text": " @dev Array of all vault proxies created by this factory."
									},
									"functionSelector": "9094a91e",
									"id": 1538,
									"mutability": "mutable",
									"name": "allVaults",
									"nameLocation": "2928:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "2911:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1536,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2911:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1537,
										"nodeType": "ArrayTypeName",
										"src": "2911:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "2944:66:13",
										"text": " @dev Emitted when a new vault proxy is created."
									},
									"eventSelector": "897c133dfbfe1f6239e98b4ffd7e4f6c86a62350a131a7a37790419f58af02f9",
									"id": 1547,
									"name": "VaultCreated",
									"nameLocation": "3021:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"indexed": true,
												"mutability": "mutable",
												"name": "vaultProxy",
												"nameLocation": "3059:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3043:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3095:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3079:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3079:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"indexed": true,
												"mutability": "mutable",
												"name": "v3Pool",
												"nameLocation": "3128:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3112:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:107:13"
									},
									"src": "3015:126:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "3147:82:13",
										"text": " @dev Emitted when the factory's default references are updated."
									},
									"eventSelector": "43d676ef005d9b31f20857ca4015e161d6c2337206dc3487aed30b7b4c1cefc3",
									"id": 1556,
									"name": "DefaultsUpdated",
									"nameLocation": "3240:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"indexed": false,
												"mutability": "mutable",
												"name": "oracleManager",
												"nameLocation": "3273:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3265:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebalancer",
												"nameLocation": "3304:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3296:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "3332:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3324:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3324:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:93:13"
									},
									"src": "3234:115:13"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "3784:323:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "3943:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1566,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3928:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3928:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "3928:22:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1570,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "3961:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3961:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "3961:24:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1574,
																"name": "_vaultLogic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "4004:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4027:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4019:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1575,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4019:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4019:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4004:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c6964207661756c744c6f676963",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4031:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dda28225c87e68010fc0531407a906d3c99eb59a439a163a44a7c75021a452",
																"typeString": "literal_string \"VaultFactory: invalid vaultLogic\""
															},
															"value": "VaultFactory: invalid vaultLogic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dda28225c87e68010fc0531407a906d3c99eb59a439a163a44a7c75021a452",
																"typeString": "literal_string \"VaultFactory: invalid vaultLogic\""
															}
														],
														"id": 1573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3996:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3996:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "3996:70:13"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1583,
														"name": "vaultLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "4076:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1584,
														"name": "_vaultLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "4089:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4076:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "4076:24:13"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "3355:346:13",
										"text": " @notice Initializes the factory. Called once at deployment behind its own proxy.\n         If your OwnableUpgradeable requires an argument for __Ownable_init, provide it here.\n @param _vaultLogic   The deployed VaultImplementation logic contract\n @param _owner        The owner (often a DAO or deployer)"
									},
									"functionSelector": "485cc955",
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1563,
												"name": "initializer",
												"nameLocations": [
													"3772:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "3772:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3772:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "3715:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "_vaultLogic",
												"nameLocation": "3734:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3726:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3755:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3747:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:37:13"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3784:0:13"
									},
									"scope": 1882,
									"src": "3706:401:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "4299:2:13",
										"statements": []
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "4113:99:13",
										"text": " @dev Required by UUPS pattern. Only the contract owner can authorize an upgrade."
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1595,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1594,
												"name": "onlyOwner",
												"nameLocations": [
													"4289:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4289:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4289:9:13"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4226:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1593,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4280:8:13"
									},
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4252:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4244:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:27:13"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:0:13"
									},
									"scope": 1882,
									"src": "4217:84:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "4552:120:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1607,
																"name": "newVaultLogic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "4570:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4595:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4587:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1608,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4587:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4587:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4570:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c6964206c6f676963",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4599:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_829de76cbdffe51e5a296468ec9026b601361c177d381cdd63bc5003db76a21e",
																"typeString": "literal_string \"VaultFactory: invalid logic\""
															},
															"value": "VaultFactory: invalid logic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_829de76cbdffe51e5a296468ec9026b601361c177d381cdd63bc5003db76a21e",
																"typeString": "literal_string \"VaultFactory: invalid logic\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4562:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "4562:67:13"
											},
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1616,
														"name": "vaultLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "4639:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1617,
														"name": "newVaultLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "4652:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4639:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "4639:26:13"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "4307:175:13",
										"text": " @notice Sets a new logic contract address for future vaults (if you want to upgrade).\n @param newVaultLogic The new VaultImplementation logic contract"
									},
									"functionSelector": "ecedd5bc",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1603,
												"name": "onlyOwner",
												"nameLocations": [
													"4542:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4542:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4542:9:13"
										}
									],
									"name": "setVaultLogic",
									"nameLocation": "4496:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "newVaultLogic",
												"nameLocation": "4518:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "4510:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:23:13"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4552:0:13"
									},
									"scope": 1882,
									"src": "4487:185:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "5235:449:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1634,
																"name": "_oracleManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "5253:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5279:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5271:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1635,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5271:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5271:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5253:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c6964206f7261636c65",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5283:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51b258cab92da9dc466ea40695b4e7cda87910622eb01b523751dd8d47e4cf60",
																"typeString": "literal_string \"VaultFactory: invalid oracle\""
															},
															"value": "VaultFactory: invalid oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51b258cab92da9dc466ea40695b4e7cda87910622eb01b523751dd8d47e4cf60",
																"typeString": "literal_string \"VaultFactory: invalid oracle\""
															}
														],
														"id": 1633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5245:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5245:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "5245:69:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "_rebalancer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "5332:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5355:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5347:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5347:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5347:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5332:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c696420726562616c616e636572",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5359:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e641eda8809214632980d7cb918dcc7946e96140acdade8c28b30d9cbd55357f",
																"typeString": "literal_string \"VaultFactory: invalid rebalancer\""
															},
															"value": "VaultFactory: invalid rebalancer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e641eda8809214632980d7cb918dcc7946e96140acdade8c28b30d9cbd55357f",
																"typeString": "literal_string \"VaultFactory: invalid rebalancer\""
															}
														],
														"id": 1643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5324:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "5324:70:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "_liquidator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "5412:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5435:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5427:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1655,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5427:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5427:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5412:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c6964206c697175696461746f72",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5439:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a50593fac8818ab0d7ae050e30512c1ded1c9b376035840736ab1944b0aa02ed",
																"typeString": "literal_string \"VaultFactory: invalid liquidator\""
															},
															"value": "VaultFactory: invalid liquidator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a50593fac8818ab0d7ae050e30512c1ded1c9b376035840736ab1944b0aa02ed",
																"typeString": "literal_string \"VaultFactory: invalid liquidator\""
															}
														],
														"id": 1653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5404:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "5404:70:13"
											},
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1663,
														"name": "defaultOracleManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "5485:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1664,
														"name": "_oracleManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "5508:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5485:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "5485:37:13"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "defaultRebalancer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "5532:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1668,
														"name": "_rebalancer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "5552:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5532:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "5532:31:13"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "defaultLiquidator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "5573:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "_liquidator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "5593:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5573:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "5573:31:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1676,
															"name": "_oracleManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "5636:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "_rebalancer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "5652:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1678,
															"name": "_liquidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "5665:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1675,
														"name": "DefaultsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "5620:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5620:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "EmitStatement",
												"src": "5615:62:13"
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "4678:407:13",
										"text": " @notice Sets the default OracleManager, Rebalancer, and Liquidator addresses for the factory.\n         Users can override these when creating a new vault by passing non-zero addresses.\n @param _oracleManager   Address of the default OracleManager\n @param _rebalancer      Address of the default Rebalancer\n @param _liquidator      Address of the default Liquidator"
									},
									"functionSelector": "ab31b6f3",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1630,
												"name": "onlyOwner",
												"nameLocations": [
													"5225:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5225:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5225:9:13"
										}
									],
									"name": "setDefaultReferences",
									"nameLocation": "5099:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "_oracleManager",
												"nameLocation": "5137:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5129:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_rebalancer",
												"nameLocation": "5169:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5161:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "_liquidator",
												"nameLocation": "5198:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5190:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:96:13"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5235:0:13"
									},
									"scope": 1882,
									"src": "5090:594:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "6617:1386:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1703,
																"name": "v3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "6635:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6653:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6645:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1704,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6645:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6645:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6635:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c6964207633506f6f6c",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6657:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41a6f9dc9152b55c7b8cb18bd78f13184f1a7db49748e9df5e560db226f7b974",
																"typeString": "literal_string \"VaultFactory: invalid v3Pool\""
															},
															"value": "VaultFactory: invalid v3Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41a6f9dc9152b55c7b8cb18bd78f13184f1a7db49748e9df5e560db226f7b974",
																"typeString": "literal_string \"VaultFactory: invalid v3Pool\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6627:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "6627:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1713,
																"name": "positionMgr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "6706:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6729:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6721:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1714,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6721:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6721:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6706:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a20696e76616c696420706f736974696f6e4d6772",
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6733:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cced3f6d78f022c49a9ea04990f1be490d4ef2d1f2b62a9649756d665f2898a9",
																"typeString": "literal_string \"VaultFactory: invalid positionMgr\""
															},
															"value": "VaultFactory: invalid positionMgr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cced3f6d78f022c49a9ea04990f1be490d4ef2d1f2b62a9649756d665f2898a9",
																"typeString": "literal_string \"VaultFactory: invalid positionMgr\""
															}
														],
														"id": 1712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6698:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "6698:71:13"
											},
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "finalOracle",
														"nameLocation": "6839:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "6831:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1722,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6831:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1724,
																	"name": "oracleMgr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "6854:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6875:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6867:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6867:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6867:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6854:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1730,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6853:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1732,
														"name": "oracleMgr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "6904:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6853:60:13",
													"trueExpression": {
														"id": 1731,
														"name": "defaultOracleManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "6881:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6831:82:13"
											},
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "finalRebalancer",
														"nameLocation": "6931:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "6923:23:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1735,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6923:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1737,
																	"name": "rebalancer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "6950:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6972:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6964:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1738,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6964:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6964:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6950:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1743,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6949:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1745,
														"name": "rebalancer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "6998:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6949:59:13",
													"trueExpression": {
														"id": 1744,
														"name": "defaultRebalancer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "6978:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6923:85:13"
											},
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "finalLiquidator",
														"nameLocation": "7026:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "7018:23:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7018:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1750,
																	"name": "liquidator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "7045:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7067:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7059:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1751,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7059:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7059:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7045:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1756,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7044:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1758,
														"name": "liquidator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "7093:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7044:59:13",
													"trueExpression": {
														"id": 1757,
														"name": "defaultLiquidator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "7073:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:85:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "finalOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "7122:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7145:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7137:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1763,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7137:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7137:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7122:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a206e6f206f7261636c65",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7149:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdc079468a75dda5fbfe7875b630a69a7963d312b46d40a027a90b64f72211c2",
																"typeString": "literal_string \"VaultFactory: no oracle\""
															},
															"value": "VaultFactory: no oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdc079468a75dda5fbfe7875b630a69a7963d312b46d40a027a90b64f72211c2",
																"typeString": "literal_string \"VaultFactory: no oracle\""
															}
														],
														"id": 1761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7114:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7114:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "7114:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1772,
																"name": "finalRebalancer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "7193:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7220:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7212:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1773,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7212:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7212:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7193:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a206e6f20726562616c616e636572",
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7224:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_029ff0a00ff545cf84b28f65fd6af9d2b714a0bfc138cf0f17241edbb4ed7564",
																"typeString": "literal_string \"VaultFactory: no rebalancer\""
															},
															"value": "VaultFactory: no rebalancer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_029ff0a00ff545cf84b28f65fd6af9d2b714a0bfc138cf0f17241edbb4ed7564",
																"typeString": "literal_string \"VaultFactory: no rebalancer\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7185:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7185:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "7185:69:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "finalLiquidator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "7272:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7299:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7291:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7291:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7291:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7272:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a206e6f206c697175696461746f72",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7303:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4be469b26dae49936f4b600b35f03337062ed732c5551ea51a02555fb87c4c3a",
																"typeString": "literal_string \"VaultFactory: no liquidator\""
															},
															"value": "VaultFactory: no liquidator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4be469b26dae49936f4b600b35f03337062ed732c5551ea51a02555fb87c4c3a",
																"typeString": "literal_string \"VaultFactory: no liquidator\""
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7264:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7264:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "7264:69:13"
											},
											{
												"assignments": [
													1792
												],
												"declarations": [
													{
														"constant": false,
														"id": 1792,
														"mutability": "mutable",
														"name": "initData",
														"nameLocation": "7407:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "7394:21:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1791,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7394:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1808,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1795,
																	"name": "IVaultImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "7454:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IVaultImplementation_$1517_$",
																		"typeString": "type(contract IVaultImplementation)"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7475:10:13",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1516,
																"src": "7454:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function IVaultImplementation.initialize(address,address,address,address,address,address,string memory,string memory)"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7486:8:13",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "7454:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1798,
															"name": "v3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "7508:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "positionMgr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "7528:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1800,
															"name": "finalOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "7553:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "finalRebalancer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "7578:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1802,
															"name": "finalLiquidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "7607:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1803,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7636:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7640:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7636:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1805,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "7679:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1806,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "7697:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"expression": {
															"id": 1793,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "7418:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7422:18:13",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "7418:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7418:295:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7394:319:13"
											},
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "proxy",
														"nameLocation": "7799:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "7786:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
															"typeString": "contract ERC1967Proxy"
														},
														"typeName": {
															"id": 1810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1809,
																"name": "ERC1967Proxy",
																"nameLocations": [
																	"7786:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 745,
																"src": "7786:12:13"
															},
															"referencedDeclaration": 745,
															"src": "7786:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
																"typeString": "contract ERC1967Proxy"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"arguments": [
														{
															"id": 1815,
															"name": "vaultLogic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "7824:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1816,
															"name": "initData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "7836:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7807:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$745_$",
															"typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
														},
														"typeName": {
															"id": 1813,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1812,
																"name": "ERC1967Proxy",
																"nameLocations": [
																	"7811:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 745,
																"src": "7811:12:13"
															},
															"referencedDeclaration": 745,
															"src": "7811:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
																"typeString": "contract ERC1967Proxy"
															}
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7807:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
														"typeString": "contract ERC1967Proxy"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7786:59:13"
											},
											{
												"expression": {
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "proxyAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "7855:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1822,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "7875:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
																	"typeString": "contract ERC1967Proxy"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC1967Proxy_$745",
																	"typeString": "contract ERC1967Proxy"
																}
															],
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7867:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1820,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7867:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7855:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "7855:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1829,
															"name": "proxyAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "7927:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1826,
															"name": "allVaults",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "7912:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7922:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7912:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7912:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "7912:25:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1833,
															"name": "proxyAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "7966:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7977:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7981:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7977:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "v3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "7989:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1832,
														"name": "VaultCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "7953:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7953:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "EmitStatement",
												"src": "7948:48:13"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "5690:660:13",
										"text": " @notice Deploys a new vault proxy pointing to `vaultLogic`. The caller becomes the vault's owner.\n @param v3Pool        The Uniswap V3 pool address for the vault\n @param positionMgr   The NonfungiblePositionManager used by the vault\n @param oracleMgr     OracleManager (or zero for default)\n @param rebalancer    Rebalancer (or zero for default)\n @param liquidator    Liquidator (or zero for default)\n @param name          The ERC20 name for the vault shares\n @param symbol        The ERC20 symbol for the vault shares\n @return proxyAddr    The address of the newly deployed vault proxy"
									},
									"functionSelector": "c3638757",
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createVault",
									"nameLocation": "6364:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "v3Pool",
												"nameLocation": "6393:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6385:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "positionMgr",
												"nameLocation": "6417:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6409:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "oracleMgr",
												"nameLocation": "6446:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6438:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6438:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "rebalancer",
												"nameLocation": "6473:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6465:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "6501:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6493:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "6537:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6521:20:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6521:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "6567:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6551:22:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6551:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6375:204:13"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "6606:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6598:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6597:19:13"
									},
									"scope": 1882,
									"src": "6355:1648:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "8148:40:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1846,
														"name": "allVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "8165:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8175:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8165:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1848,
												"nodeType": "Return",
												"src": "8158:23:13"
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "8009:80:13",
										"text": " @notice Returns the number of vaults created by this factory."
									},
									"functionSelector": "a7c6a100",
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vaultCount",
									"nameLocation": "8103:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8113:2:13"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "8139:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8138:9:13"
									},
									"scope": 1882,
									"src": "8094:94:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "8350:113:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1859,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "8368:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1860,
																	"name": "allVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "8376:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8386:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8376:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8368:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c74466163746f72793a206f7574206f662072616e6765",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8394:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65a7e910ce23feeef510d14c70f42ac70596ef49593909b1a9f688d20f20f8e2",
																"typeString": "literal_string \"VaultFactory: out of range\""
															},
															"value": "VaultFactory: out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65a7e910ce23feeef510d14c70f42ac70596ef49593909b1a9f688d20f20f8e2",
																"typeString": "literal_string \"VaultFactory: out of range\""
															}
														],
														"id": 1858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8360:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8360:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "8360:63:13"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1866,
														"name": "allVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "8440:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1868,
													"indexExpression": {
														"id": 1867,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "8450:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8440:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1857,
												"id": 1869,
												"nodeType": "Return",
												"src": "8433:23:13"
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "8194:86:13",
										"text": " @notice Retrieve a vault address by index in the `allVaults` array."
									},
									"functionSelector": "9403b634",
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVault",
									"nameLocation": "8294:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8311:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8303:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:15:13"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8341:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:9:13"
									},
									"scope": 1882,
									"src": "8285:178:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "8662:33:13",
										"statements": [
											{
												"expression": {
													"id": 1878,
													"name": "allVaults",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1538,
													"src": "8679:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1879,
												"nodeType": "Return",
												"src": "8672:16:13"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "8469:123:13",
										"text": " @notice Returns the entire list of vault addresses. \n         Use with care if the array is large."
									},
									"functionSelector": "97331bf9",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllVaults",
									"nameLocation": "8606:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8618:2:13"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "8644:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1874,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8644:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1875,
													"nodeType": "ArrayTypeName",
													"src": "8644:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8643:18:13"
									},
									"scope": 1882,
									"src": "8597:98:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "2375:6322:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								765,
								778,
								1095,
								1357
							],
							"usedEvents": [
								41,
								219,
								684,
								1547,
								1556
							]
						}
					],
					"src": "32:8666:13"
				},
				"id": 13
			}
		}
	}
}